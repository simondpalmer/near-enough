{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31","program":"C:\\Users\\Simon Palmer\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","regalloc","--edition=2018","C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","-C","metadata=db05cb15fe6bc327","-C","extra-filename=-db05cb15fe6bc327","--out-dir","c:\\Users\\Simon Palmer\\Documents\\Programming\\near_enough\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\Simon Palmer\\Documents\\Programming\\near_enough\\target\\rls\\debug\\deps","--extern","log=c:\\Users\\Simon Palmer\\Documents\\Programming\\near_enough\\target\\rls\\debug\\deps\\liblog-c4a52490826b07e9.rmeta","--extern","rustc_hash=c:\\Users\\Simon Palmer\\Documents\\Programming\\near_enough\\target\\rls\\debug\\deps\\librustc_hash-2c7f4a1bb4750f6f.rmeta","--extern","smallvec=c:\\Users\\Simon Palmer\\Documents\\Programming\\near_enough\\target\\rls\\debug\\deps\\libsmallvec-452ea521d93babb4.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\Simon Palmer\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\Simon Palmer\\Documents\\Programming\\near_enough\\target\\rls\\debug\\deps\\libregalloc-db05cb15fe6bc327.rmeta"},"prelude":{"crate_id":{"name":"regalloc","disambiguator":[1662346960885145530,8821119470815406245]},"crate_root":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src","external_crates":[{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[2134305066550747688,1377703208702874155]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\sparse_set.rs","num":2,"id":{"name":"core","disambiguator":[1322159461575500717,8297198428669169011]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[2376346800744392852,12342541482992122530]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[14946502858004023242,6637215598610016319]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[5305136910335682758,6890491777619641650]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[8079093424489733033,9678018066858265018]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[8191054904896780843,65190916132359678]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[17454577518104061478,8473922882117178851]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[14702801963282246562,3385633331338644346]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[4483555191844012602,617965746000623535]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[6496369475756502088,8603909216288097824]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","num":12,"id":{"name":"panic_unwind","disambiguator":[8790568169648576788,8899032378407077408]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\analysis_main.rs","num":13,"id":{"name":"log","disambiguator":[962470621801898396,17699645428444335091]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\analysis_main.rs","num":14,"id":{"name":"cfg_if","disambiguator":[12397753863589609571,14658349722023367951]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\analysis_control_flow.rs","num":15,"id":{"name":"smallvec","disambiguator":[586103597685265026,17635821128416778049]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\checker.rs","num":16,"id":{"name":"rustc_hash","disambiguator":[16119220747719338746,1082273402729766943]}}],"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":0,"byte_end":27078,"line_start":1,"line_end":637,"column_start":1,"column_end":37}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":1178,"byte_end":1179,"line_start":42,"line_end":42,"column_start":30,"column_end":31},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":711},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":1383,"byte_end":1386,"line_start":48,"line_end":48,"column_start":33,"column_end":36},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2052},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":1420,"byte_end":1423,"line_start":49,"line_end":49,"column_start":33,"column_end":36},"alias_span":null,"name":"Set","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2287},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":1479,"byte_end":1487,"line_start":53,"line_end":53,"column_start":33,"column_end":41},"alias_span":null,"name":"RegClass","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2317},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":1584,"byte_end":1587,"line_start":57,"line_end":57,"column_start":33,"column_end":36},"alias_span":null,"name":"Reg","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2340},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":1622,"byte_end":1629,"line_start":59,"line_end":59,"column_start":33,"column_end":40},"alias_span":null,"name":"RealReg","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2363},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":1663,"byte_end":1673,"line_start":60,"line_end":60,"column_start":33,"column_end":43},"alias_span":null,"name":"VirtualReg","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2386},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":1708,"byte_end":1716,"line_start":62,"line_end":62,"column_start":33,"column_end":41},"alias_span":null,"name":"Writable","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":826},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":1751,"byte_end":1766,"line_start":64,"line_end":64,"column_start":33,"column_end":48},"alias_span":null,"name":"NUM_REG_CLASSES","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2422},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":1817,"byte_end":1826,"line_start":68,"line_end":68,"column_start":33,"column_end":42},"alias_span":null,"name":"SpillSlot","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2471},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":6414,"byte_end":6429,"line_start":150,"line_end":150,"column_start":33,"column_end":48},"alias_span":null,"name":"RealRegUniverse","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2480},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":6463,"byte_end":6475,"line_start":151,"line_end":151,"column_start":33,"column_end":45},"alias_span":null,"name":"RegClassInfo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":909},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":6601,"byte_end":6618,"line_start":156,"line_end":156,"column_start":33,"column_end":50},"alias_span":null,"name":"RegUsageCollector","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":782},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":7659,"byte_end":7669,"line_start":180,"line_end":180,"column_start":33,"column_end":43},"alias_span":null,"name":"TypedIxVec","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2130},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":7704,"byte_end":7711,"line_start":181,"line_end":181,"column_start":34,"column_end":41},"alias_span":null,"name":"BlockIx","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2086},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":7713,"byte_end":7719,"line_start":181,"line_end":181,"column_start":43,"column_end":49},"alias_span":null,"name":"InstIx","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2058},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":7721,"byte_end":7726,"line_start":181,"line_end":181,"column_start":51,"column_end":56},"alias_span":null,"name":"Range","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1819},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":18210,"byte_end":18223,"line_start":416,"line_end":416,"column_start":31,"column_end":44},"alias_span":null,"name":"AnalysisError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1949},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":18250,"byte_end":18262,"line_start":417,"line_end":417,"column_start":26,"column_end":38},"alias_span":null,"name":"CheckerError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1943},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":18264,"byte_end":18277,"line_start":417,"line_end":417,"column_start":40,"column_end":53},"alias_span":null,"name":"CheckerErrors","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1899},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":18688,"byte_end":18707,"line_start":435,"line_end":435,"column_start":25,"column_end":44},"alias_span":null,"name":"BacktrackingOptions","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2875},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":18737,"byte_end":18754,"line_start":436,"line_end":436,"column_start":29,"column_end":46},"alias_span":null,"name":"LinearScanOptions","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3003},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":27067,"byte_end":27077,"line_start":637,"line_end":637,"column_start":26,"column_end":36},"alias_span":null,"name":"IRSnapshot","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":0,"byte_end":27078,"line_start":1,"line_end":637,"column_start":1,"column_end":37},"name":"","qualname":"::","value":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":59},{"krate":0,"index":124},{"krate":0,"index":225},{"krate":0,"index":253},{"krate":0,"index":323},{"krate":0,"index":389},{"krate":0,"index":425},{"krate":0,"index":544},{"krate":0,"index":592},{"krate":0,"index":622},{"krate":0,"index":692},{"krate":0,"index":1049},{"krate":0,"index":1096},{"krate":0,"index":1504},{"krate":0,"index":1522},{"krate":0,"index":1566},{"krate":0,"index":1604},{"krate":0,"index":1670},{"krate":0,"index":1730},{"krate":0,"index":1731},{"krate":0,"index":1732},{"krate":0,"index":1733},{"krate":0,"index":1734},{"krate":0,"index":1735},{"krate":0,"index":1736},{"krate":0,"index":1737},{"krate":0,"index":1738},{"krate":0,"index":1739},{"krate":0,"index":1740},{"krate":0,"index":1741},{"krate":0,"index":1742},{"krate":0,"index":1743},{"krate":0,"index":1744},{"krate":0,"index":1745},{"krate":0,"index":1746},{"krate":0,"index":1747},{"krate":0,"index":1748},{"krate":0,"index":1749},{"krate":0,"index":1750},{"krate":0,"index":1751},{"krate":0,"index":1755},{"krate":0,"index":1756},{"krate":0,"index":1757},{"krate":0,"index":1758},{"krate":0,"index":1759},{"krate":0,"index":1760},{"krate":0,"index":1786},{"krate":0,"index":3108},{"krate":0,"index":3122},{"krate":0,"index":3121},{"krate":0,"index":3119},{"krate":0,"index":3116},{"krate":0,"index":3117},{"krate":0,"index":3113},{"krate":0,"index":3114},{"krate":0,"index":1796},{"krate":0,"index":1797},{"krate":0,"index":1798},{"krate":0,"index":1799},{"krate":0,"index":3124},{"krate":0,"index":3142},{"krate":0,"index":3140},{"krate":0,"index":1800},{"krate":0,"index":1802},{"krate":0,"index":1803},{"krate":0,"index":3144},{"krate":0,"index":3151},{"krate":0,"index":1804},{"krate":0,"index":3153},{"krate":0,"index":3156},{"krate":0,"index":1806},{"krate":0,"index":1808},{"krate":0,"index":1810},{"krate":0,"index":1814},{"krate":0,"index":1816},{"krate":0,"index":1818}],"decl_id":null,"docs":" Main file / top-level module for regalloc library.","sig":null,"attributes":[{"value":"/ Main file / top-level module for regalloc library.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":0,"byte_end":54,"line_start":1,"line_end":1,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":55,"byte_end":58,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ We have tried hard to make the library's interface as simple as possible,","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":59,"byte_end":136,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"/ yet flexible enough that the allocators it implements can provide good","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":137,"byte_end":211,"line_start":4,"line_end":4,"column_start":1,"column_end":75}},{"value":"/ quality allocations in reasonable time.  Nevertheless, there is still","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":212,"byte_end":285,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/ significant semantic complexity in parts of the interface.  If you intend","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":286,"byte_end":363,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/ to use this library in your own code, you would be well advised to read","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":364,"byte_end":439,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ the comments in this file very carefully.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":440,"byte_end":485,"line_start":8,"line_end":8,"column_start":1,"column_end":46}}]},{"kind":"StructVariant","id":{"krate":0,"index":1820},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\analysis_main.rs","byte_start":28280,"byte_end":28292,"line_start":29,"line_end":29,"column_start":5,"column_end":17},"name":"CriticalEdge","qualname":"::analysis_main::AnalysisError::CriticalEdge","value":"AnalysisError::CriticalEdge { from, to }","parent":{"krate":0,"index":1819},"children":[],"decl_id":null,"docs":" A critical edge from \"from\" to \"to\" has been found, and should have been\n removed by the caller in the first place.\n","sig":null,"attributes":[{"value":"/ A critical edge from \"from\" to \"to\" has been found, and should have been","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\analysis_main.rs","byte_start":28149,"byte_end":28225,"line_start":27,"line_end":27,"column_start":5,"column_end":81}},{"value":"/ removed by the caller in the first place.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\analysis_main.rs","byte_start":28230,"byte_end":28275,"line_start":28,"line_end":28,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1823},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\analysis_main.rs","byte_start":28436,"byte_end":28453,"line_start":33,"line_end":33,"column_start":5,"column_end":22},"name":"EntryLiveinValues","qualname":"::analysis_main::AnalysisError::EntryLiveinValues","value":"AnalysisError::EntryLiveinValues(Vec<Reg>)","parent":{"krate":0,"index":1819},"children":[],"decl_id":null,"docs":" Some values in the entry block are live in to the function, but are not\n declared as such.\n","sig":null,"attributes":[{"value":"/ Some values in the entry block are live in to the function, but are not","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\analysis_main.rs","byte_start":28330,"byte_end":28405,"line_start":31,"line_end":31,"column_start":5,"column_end":80}},{"value":"/ declared as such.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\analysis_main.rs","byte_start":28410,"byte_end":28431,"line_start":32,"line_end":32,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1826},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\analysis_main.rs","byte_start":29047,"byte_end":29061,"line_start":43,"line_end":43,"column_start":5,"column_end":19},"name":"IllegalRealReg","qualname":"::analysis_main::AnalysisError::IllegalRealReg","value":"AnalysisError::IllegalRealReg(RealReg)","parent":{"krate":0,"index":1819},"children":[],"decl_id":null,"docs":" The incoming code has an explicit or implicit mention (use, def or mod)\n of a real register, which either (1) isn't listed in the universe at\n all, or (2) is one of the `suggested_scratch` registers in the universe.\n (1) isn't allowed because the client must mention *all* real registers\n in the universe.  (2) isn't allowed because the client promises to us\n that the `suggested_scratch` registers really are completely unused in\n the incoming code, so that the allocator can use them at literally any\n point it wants.\n","sig":null,"attributes":[{"value":"/ The incoming code has an explicit or implicit mention (use, def or mod)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\analysis_main.rs","byte_start":28470,"byte_end":28545,"line_start":35,"line_end":35,"column_start":5,"column_end":80}},{"value":"/ of a real register, which either (1) isn't listed in the universe at","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\analysis_main.rs","byte_start":28550,"byte_end":28622,"line_start":36,"line_end":36,"column_start":5,"column_end":77}},{"value":"/ all, or (2) is one of the `suggested_scratch` registers in the universe.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\analysis_main.rs","byte_start":28627,"byte_end":28703,"line_start":37,"line_end":37,"column_start":5,"column_end":81}},{"value":"/ (1) isn't allowed because the client must mention *all* real registers","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\analysis_main.rs","byte_start":28708,"byte_end":28782,"line_start":38,"line_end":38,"column_start":5,"column_end":79}},{"value":"/ in the universe.  (2) isn't allowed because the client promises to us","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\analysis_main.rs","byte_start":28787,"byte_end":28860,"line_start":39,"line_end":39,"column_start":5,"column_end":78}},{"value":"/ that the `suggested_scratch` registers really are completely unused in","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\analysis_main.rs","byte_start":28865,"byte_end":28939,"line_start":40,"line_end":40,"column_start":5,"column_end":79}},{"value":"/ the incoming code, so that the allocator can use them at literally any","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\analysis_main.rs","byte_start":28944,"byte_end":29018,"line_start":41,"line_end":41,"column_start":5,"column_end":79}},{"value":"/ point it wants.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\analysis_main.rs","byte_start":29023,"byte_end":29042,"line_start":42,"line_end":42,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1829},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\analysis_main.rs","byte_start":29113,"byte_end":29130,"line_start":46,"line_end":46,"column_start":5,"column_end":22},"name":"UnreachableBlocks","qualname":"::analysis_main::AnalysisError::UnreachableBlocks","value":"AnalysisError::UnreachableBlocks","parent":{"krate":0,"index":1819},"children":[],"decl_id":null,"docs":" At least one block is dead.\n","sig":null,"attributes":[{"value":"/ At least one block is dead.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\analysis_main.rs","byte_start":29077,"byte_end":29108,"line_start":45,"line_end":45,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1831},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\analysis_main.rs","byte_start":29296,"byte_end":29324,"line_start":50,"line_end":50,"column_start":5,"column_end":33},"name":"ImplementationLimitsExceeded","qualname":"::analysis_main::AnalysisError::ImplementationLimitsExceeded","value":"AnalysisError::ImplementationLimitsExceeded","parent":{"krate":0,"index":1819},"children":[],"decl_id":null,"docs":" Implementation limits exceeded.  The incoming function is too big.  It\n may contain at most 1 million basic blocks and 16 million instructions.\n","sig":null,"attributes":[{"value":"/ Implementation limits exceeded.  The incoming function is too big.  It","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\analysis_main.rs","byte_start":29137,"byte_end":29211,"line_start":48,"line_end":48,"column_start":5,"column_end":79}},{"value":"/ may contain at most 1 million basic blocks and 16 million instructions.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\analysis_main.rs","byte_start":29216,"byte_end":29291,"line_start":49,"line_end":49,"column_start":5,"column_end":80}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1833},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\analysis_main.rs","byte_start":29439,"byte_end":29458,"line_start":54,"line_end":54,"column_start":5,"column_end":24},"name":"LSRACantDoStackmaps","qualname":"::analysis_main::AnalysisError::LSRACantDoStackmaps","value":"AnalysisError::LSRACantDoStackmaps","parent":{"krate":0,"index":1819},"children":[],"decl_id":null,"docs":" Currently LSRA can't generate stackmaps, but the client has requested LSRA *and*\n stackmaps.\n","sig":null,"attributes":[{"value":"/ Currently LSRA can't generate stackmaps, but the client has requested LSRA *and*","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\analysis_main.rs","byte_start":29331,"byte_end":29415,"line_start":52,"line_end":52,"column_start":5,"column_end":89}},{"value":"/ stackmaps.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\analysis_main.rs","byte_start":29420,"byte_end":29434,"line_start":53,"line_end":53,"column_start":5,"column_end":19}}]},{"kind":"Enum","id":{"krate":0,"index":1819},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\analysis_main.rs","byte_start":28129,"byte_end":28142,"line_start":26,"line_end":26,"column_start":10,"column_end":23},"name":"AnalysisError","qualname":"::analysis_main::AnalysisError","value":"pub enum AnalysisError {\n\n    /// A critical edge from \"from\" to \"to\" has been found, and should have been\n    /// removed by the caller in the first place.\n    CriticalEdge {\n        from: BlockIx,\n        to: BlockIx,\n    },\n\n    /// Some values in the entry block are live in to the function, but are not\n    /// declared as such.\n    EntryLiveinValues(Vec<Reg>),\n\n    /// The incoming code has an explicit or implicit mention (use, def or mod)\n    /// of a real register, which either (1) isn't listed in the universe at\n    /// all, or (2) is one of the `suggested_scratch` registers in the universe.\n    /// (1) isn't allowed because the client must mention *all* real registers\n    /// in the universe.  (2) isn't allowed because the client promises to us\n    /// that the `suggested_scratch` registers really are completely unused in\n    /// the incoming code, so that the allocator can use them at literally any\n    /// point it wants.\n    IllegalRealReg(RealReg),\n\n    /// At least one block is dead.\n    UnreachableBlocks,\n\n    /// Implementation limits exceeded.  The incoming function is too big.  It\n    /// may contain at most 1 million basic blocks and 16 million instructions.\n    ImplementationLimitsExceeded,\n\n    /// Currently LSRA can't generate stackmaps, but the client has requested LSRA *and*\n    /// stackmaps.\n    LSRACantDoStackmaps,\n}","parent":null,"children":[{"krate":0,"index":1820},{"krate":0,"index":1823},{"krate":0,"index":1826},{"krate":0,"index":1829},{"krate":0,"index":1831},{"krate":0,"index":1833}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1899},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\bt_main.rs","byte_start":243112,"byte_end":243131,"line_start":32,"line_end":32,"column_start":12,"column_end":31},"name":"BacktrackingOptions","qualname":"::bt_main::BacktrackingOptions","value":"BacktrackingOptions { request_block_annotations }","parent":null,"children":[{"krate":0,"index":1900}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1900},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\bt_main.rs","byte_start":243208,"byte_end":243233,"line_start":34,"line_end":34,"column_start":9,"column_end":34},"name":"request_block_annotations","qualname":"::bt_main::BacktrackingOptions::request_block_annotations","value":"bool","parent":{"krate":0,"index":1899},"children":[],"decl_id":null,"docs":" Should the register allocator generate block annotations?\n","sig":null,"attributes":[{"value":"/ Should the register allocator generate block annotations?","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\bt_main.rs","byte_start":243138,"byte_end":243199,"line_start":33,"line_end":33,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":1943},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\checker.rs","byte_start":356096,"byte_end":356109,"line_start":75,"line_end":75,"column_start":12,"column_end":25},"name":"CheckerErrors","qualname":"::checker::CheckerErrors","value":"CheckerErrors {  }","parent":null,"children":[{"krate":0,"index":1944}],"decl_id":null,"docs":" A set of errors detected by the regalloc checker.\n","sig":null,"attributes":[{"value":"/ A set of errors detected by the regalloc checker.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\checker.rs","byte_start":356007,"byte_end":356060,"line_start":73,"line_end":73,"column_start":1,"column_end":54}}]},{"kind":"StructVariant","id":{"krate":0,"index":1950},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\checker.rs","byte_start":356251,"byte_end":356274,"line_start":82,"line_end":82,"column_start":5,"column_end":28},"name":"MissingAllocationForReg","qualname":"::checker::CheckerError::MissingAllocationForReg","value":"CheckerError::MissingAllocationForReg { reg, inst }","parent":{"krate":0,"index":1949},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1953},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\checker.rs","byte_start":356335,"byte_end":356352,"line_start":86,"line_end":86,"column_start":5,"column_end":22},"name":"UnknownValueInReg","qualname":"::checker::CheckerError::UnknownValueInReg","value":"CheckerError::UnknownValueInReg { real_reg, inst }","parent":{"krate":0,"index":1949},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1956},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\checker.rs","byte_start":356415,"byte_end":356434,"line_start":90,"line_end":90,"column_start":5,"column_end":24},"name":"IncorrectValueInReg","qualname":"::checker::CheckerError::IncorrectValueInReg","value":"CheckerError::IncorrectValueInReg { actual, expected, real_reg, inst }","parent":{"krate":0,"index":1949},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1961},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\checker.rs","byte_start":356541,"byte_end":356559,"line_start":96,"line_end":96,"column_start":5,"column_end":23},"name":"UnknownValueInSlot","qualname":"::checker::CheckerError::UnknownValueInSlot","value":"CheckerError::UnknownValueInSlot { slot, expected, inst }","parent":{"krate":0,"index":1949},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1965},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\checker.rs","byte_start":356643,"byte_end":356663,"line_start":101,"line_end":101,"column_start":5,"column_end":25},"name":"IncorrectValueInSlot","qualname":"::checker::CheckerError::IncorrectValueInSlot","value":"CheckerError::IncorrectValueInSlot { slot, expected, actual, inst }","parent":{"krate":0,"index":1949},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1970},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\checker.rs","byte_start":356768,"byte_end":356795,"line_start":107,"line_end":107,"column_start":5,"column_end":32},"name":"StackMapSpecifiesNonRefSlot","qualname":"::checker::CheckerError::StackMapSpecifiesNonRefSlot","value":"CheckerError::StackMapSpecifiesNonRefSlot { inst, slot }","parent":{"krate":0,"index":1949},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1973},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\checker.rs","byte_start":356856,"byte_end":356886,"line_start":111,"line_end":111,"column_start":5,"column_end":35},"name":"StackMapSpecifiesUndefinedSlot","qualname":"::checker::CheckerError::StackMapSpecifiesUndefinedSlot","value":"CheckerError::StackMapSpecifiesUndefinedSlot { inst, slot }","parent":{"krate":0,"index":1949},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1949},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\checker.rs","byte_start":356232,"byte_end":356244,"line_start":81,"line_end":81,"column_start":10,"column_end":22},"name":"CheckerError","qualname":"::checker::CheckerError","value":"pub enum CheckerError {\n    MissingAllocationForReg {\n        reg: VirtualReg,\n        inst: InstIx,\n    },\n    UnknownValueInReg {\n        real_reg: RealReg,\n        inst: InstIx,\n    },\n    IncorrectValueInReg {\n        actual: Reg,\n        expected: Reg,\n        real_reg: RealReg,\n        inst: InstIx,\n    },\n    UnknownValueInSlot {\n        slot: SpillSlot,\n        expected: Reg,\n        inst: InstIx,\n    },\n    IncorrectValueInSlot {\n        slot: SpillSlot,\n        expected: Reg,\n        actual: Reg,\n        inst: InstIx,\n    },\n    StackMapSpecifiesNonRefSlot {\n        inst: InstIx,\n        slot: SpillSlot,\n    },\n    StackMapSpecifiesUndefinedSlot {\n        inst: InstIx,\n        slot: SpillSlot,\n    },\n}","parent":null,"children":[{"krate":0,"index":1950},{"krate":0,"index":1953},{"krate":0,"index":1956},{"krate":0,"index":1961},{"krate":0,"index":1965},{"krate":0,"index":1970},{"krate":0,"index":1973}],"decl_id":null,"docs":" A single error detected by the regalloc checker.\n","sig":null,"attributes":[{"value":"/ A single error detected by the regalloc checker.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\checker.rs","byte_start":356146,"byte_end":356198,"line_start":79,"line_end":79,"column_start":1,"column_end":53}}]},{"kind":"Type","id":{"krate":0,"index":711},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":379249,"byte_end":379252,"line_start":33,"line_end":33,"column_start":10,"column_end":13},"name":"Map","qualname":"::data_structures::Map","value":"FxHashMap<K, V>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2052},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":379516,"byte_end":379519,"line_start":41,"line_end":41,"column_start":12,"column_end":15},"name":"Set","qualname":"::data_structures::Set","value":"Set {  }","parent":null,"children":[{"krate":0,"index":2054}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":716},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":379648,"byte_end":379653,"line_start":47,"line_end":47,"column_start":12,"column_end":17},"name":"empty","qualname":"<Set<T>>::empty","value":"pub fn empty() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(never)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":379620,"byte_end":379636,"line_start":46,"line_end":46,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":717},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":379774,"byte_end":379778,"line_start":54,"line_end":54,"column_start":12,"column_end":16},"name":"unit","qualname":"<Set<T>>::unit","value":"pub fn unit(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(never)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":379746,"byte_end":379762,"line_start":53,"line_end":53,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":718},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":379906,"byte_end":379909,"line_start":61,"line_end":61,"column_start":12,"column_end":15},"name":"two","qualname":"<Set<T>>::two","value":"pub fn two(T, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(never)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":379878,"byte_end":379894,"line_start":60,"line_end":60,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":719},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":380074,"byte_end":380078,"line_start":69,"line_end":69,"column_start":12,"column_end":16},"name":"card","qualname":"<Set<T>>::card","value":"pub fn card(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(never)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":380046,"byte_end":380062,"line_start":68,"line_end":68,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":720},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":380159,"byte_end":380165,"line_start":74,"line_end":74,"column_start":12,"column_end":18},"name":"insert","qualname":"<Set<T>>::insert","value":"pub fn insert(&mut Self, T)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(never)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":380131,"byte_end":380147,"line_start":73,"line_end":73,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":721},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":380258,"byte_end":380264,"line_start":79,"line_end":79,"column_start":12,"column_end":18},"name":"delete","qualname":"<Set<T>>::delete","value":"pub fn delete(&mut Self, T)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(never)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":380230,"byte_end":380246,"line_start":78,"line_end":78,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":722},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":380358,"byte_end":380366,"line_start":84,"line_end":84,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Set<T>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(never)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":380330,"byte_end":380346,"line_start":83,"line_end":83,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":723},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":380451,"byte_end":380459,"line_start":89,"line_end":89,"column_start":12,"column_end":20},"name":"contains","qualname":"<Set<T>>::contains","value":"pub fn contains(&Self, T) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(never)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":380423,"byte_end":380439,"line_start":88,"line_end":88,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":724},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":380558,"byte_end":380567,"line_start":94,"line_end":94,"column_start":12,"column_end":21},"name":"intersect","qualname":"<Set<T>>::intersect","value":"pub fn intersect(&mut Self, &Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(never)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":380530,"byte_end":380546,"line_start":93,"line_end":93,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":725},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":380846,"byte_end":380851,"line_start":105,"line_end":105,"column_start":12,"column_end":17},"name":"union","qualname":"<Set<T>>::union","value":"pub fn union(&mut Self, &Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(never)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":380818,"byte_end":380834,"line_start":104,"line_end":104,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":726},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":381003,"byte_end":381009,"line_start":112,"line_end":112,"column_start":12,"column_end":18},"name":"remove","qualname":"<Set<T>>::remove","value":"pub fn remove(&mut Self, &Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(never)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":380975,"byte_end":380991,"line_start":111,"line_end":111,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":727},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":381160,"byte_end":381170,"line_start":119,"line_end":119,"column_start":12,"column_end":22},"name":"intersects","qualname":"<Set<T>>::intersects","value":"pub fn intersects(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(never)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":381132,"byte_end":381148,"line_start":118,"line_end":118,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":728},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":381283,"byte_end":381295,"line_start":124,"line_end":124,"column_start":12,"column_end":24},"name":"is_subset_of","qualname":"<Set<T>>::is_subset_of","value":"pub fn is_subset_of(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(never)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":381255,"byte_end":381271,"line_start":123,"line_end":123,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":729},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":381405,"byte_end":381411,"line_start":129,"line_end":129,"column_start":12,"column_end":18},"name":"to_vec","qualname":"<Set<T>>::to_vec","value":"pub fn to_vec(&Self) -> Vec<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(never)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":381377,"byte_end":381393,"line_start":128,"line_end":128,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":730},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":381674,"byte_end":381682,"line_start":140,"line_end":140,"column_start":12,"column_end":20},"name":"from_vec","qualname":"<Set<T>>::from_vec","value":"pub fn from_vec(Vec<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(never)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":381646,"byte_end":381662,"line_start":139,"line_end":139,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":731},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":381858,"byte_end":381864,"line_start":149,"line_end":149,"column_start":12,"column_end":18},"name":"equals","qualname":"<Set<T>>::equals","value":"pub fn equals(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(never)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":381830,"byte_end":381846,"line_start":148,"line_end":148,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":732},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":381965,"byte_end":381971,"line_start":154,"line_end":154,"column_start":12,"column_end":18},"name":"retain","qualname":"<Set<T>>::retain","value":"pub fn retain<F>(&mut Self, F) where F: FnMut(&T) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(never)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":381937,"byte_end":381953,"line_start":153,"line_end":153,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":734},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":382104,"byte_end":382107,"line_start":162,"line_end":162,"column_start":12,"column_end":15},"name":"map","qualname":"<Set<T>>::map","value":"pub fn map<F, U>(&Self, F) -> Set<U> where F: Fn(&T) -> U, U: Eq + Ord +\nHash + Copy + fmt::Debug","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(never)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":382076,"byte_end":382092,"line_start":161,"line_end":161,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":737},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":382339,"byte_end":382349,"line_start":173,"line_end":173,"column_start":12,"column_end":22},"name":"filter_map","qualname":"<Set<T>>::filter_map","value":"pub fn filter_map<F, U>(&Self, F) -> Set<U> where F: Fn(&T) -> Option<U>,\nU: Eq + Ord + Hash + Copy + fmt::Debug","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(never)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":382311,"byte_end":382327,"line_start":172,"line_end":172,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":740},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":382575,"byte_end":382580,"line_start":183,"line_end":183,"column_start":12,"column_end":17},"name":"clear","qualname":"<Set<T>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":744},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":383418,"byte_end":383425,"line_start":208,"line_end":208,"column_start":12,"column_end":19},"name":"SetIter","qualname":"::data_structures::SetIter","value":"SetIter {  }","parent":null,"children":[{"krate":0,"index":747}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":750},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":383531,"byte_end":383535,"line_start":212,"line_end":212,"column_start":12,"column_end":16},"name":"iter","qualname":"<Set<T>>::iter","value":"pub fn iter(&Self) -> SetIter<, T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":756},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":384287,"byte_end":384291,"line_start":239,"line_end":239,"column_start":11,"column_end":15},"name":"Zero","qualname":"::data_structures::Zero","value":"Zero","parent":null,"children":[{"krate":0,"index":757}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":757},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":384301,"byte_end":384305,"line_start":240,"line_end":240,"column_start":8,"column_end":12},"name":"zero","qualname":"::data_structures::Zero::zero","value":"pub fn zero() -> Self","parent":{"krate":0,"index":756},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":758},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":384330,"byte_end":384335,"line_start":243,"line_end":243,"column_start":11,"column_end":16},"name":"PlusN","qualname":"::data_structures::PlusN","value":"PlusN","parent":null,"children":[{"krate":0,"index":759}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":759},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":384345,"byte_end":384351,"line_start":244,"line_end":244,"column_start":8,"column_end":14},"name":"plus_n","qualname":"::data_structures::PlusN::plus_n","value":"pub fn plus_n(&Self, usize) -> Self","parent":{"krate":0,"index":758},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2058},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":384485,"byte_end":384490,"line_start":249,"line_end":249,"column_start":12,"column_end":17},"name":"Range","qualname":"::data_structures::Range","value":"Range {  }","parent":null,"children":[{"krate":0,"index":2060},{"krate":0,"index":2061}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":767},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":384874,"byte_end":384877,"line_start":267,"line_end":267,"column_start":12,"column_end":15},"name":"new","qualname":"<Range<T>>::new","value":"pub fn new(T, usize) -> Range<T>","parent":null,"children":[],"decl_id":null,"docs":" Create a new range object.\n","sig":null,"attributes":[{"value":"/ Create a new range object.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":384832,"byte_end":384862,"line_start":266,"line_end":266,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":768},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":384966,"byte_end":384971,"line_start":271,"line_end":271,"column_start":12,"column_end":17},"name":"start","qualname":"<Range<T>>::start","value":"pub fn start(&Self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":769},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":385023,"byte_end":385028,"line_start":275,"line_end":275,"column_start":12,"column_end":17},"name":"first","qualname":"<Range<T>>::first","value":"pub fn first(&Self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":770},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":385115,"byte_end":385119,"line_start":280,"line_end":280,"column_start":12,"column_end":16},"name":"last","qualname":"<Range<T>>::last","value":"pub fn last(&Self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":771},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":385229,"byte_end":385239,"line_start":285,"line_end":285,"column_start":12,"column_end":22},"name":"last_plus1","qualname":"<Range<T>>::last_plus1","value":"pub fn last_plus1(&Self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":772},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":385312,"byte_end":385315,"line_start":289,"line_end":289,"column_start":12,"column_end":15},"name":"len","qualname":"<Range<T>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":773},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":385369,"byte_end":385377,"line_start":293,"line_end":293,"column_start":12,"column_end":20},"name":"contains","qualname":"<Range<T>>::contains","value":"pub fn contains(&Self, T) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":774},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":385480,"byte_end":385490,"line_start":298,"line_end":298,"column_start":12,"column_end":22},"name":"MyIterator","qualname":"::data_structures::MyIterator","value":"MyIterator {  }","parent":null,"children":[{"krate":0,"index":776},{"krate":0,"index":777}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":782},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":386110,"byte_end":386120,"line_start":319,"line_end":319,"column_start":12,"column_end":22},"name":"TypedIxVec","qualname":"::data_structures::TypedIxVec","value":"TypedIxVec {  }","parent":null,"children":[{"krate":0,"index":785},{"krate":0,"index":786}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":790},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":386308,"byte_end":386311,"line_start":329,"line_end":329,"column_start":12,"column_end":15},"name":"new","qualname":"<TypedIxVec<TyIx, Ty>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":791},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":386435,"byte_end":386443,"line_start":335,"line_end":335,"column_start":12,"column_end":20},"name":"from_vec","qualname":"<TypedIxVec<TyIx, Ty>>::from_vec","value":"pub fn from_vec(Vec<Ty>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":792},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":386567,"byte_end":386573,"line_start":341,"line_end":341,"column_start":12,"column_end":18},"name":"append","qualname":"<TypedIxVec<TyIx, Ty>>::append","value":"pub fn append(&mut Self, &mut TypedIxVec<TyIx, Ty>)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":793},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":386720,"byte_end":386724,"line_start":345,"line_end":345,"column_start":12,"column_end":16},"name":"iter","qualname":"<TypedIxVec<TyIx, Ty>>::iter","value":"pub fn iter(&Self) -> Iter<, Ty>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":794},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":386787,"byte_end":386795,"line_start":348,"line_end":348,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<TypedIxVec<TyIx, Ty>>::iter_mut","value":"pub fn iter_mut(&mut Self) -> IterMut<, Ty>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":795},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":386869,"byte_end":386872,"line_start":351,"line_end":351,"column_start":12,"column_end":15},"name":"len","qualname":"<TypedIxVec<TyIx, Ty>>::len","value":"pub fn len(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":796},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":386977,"byte_end":386981,"line_start":355,"line_end":355,"column_start":12,"column_end":16},"name":"push","qualname":"<TypedIxVec<TyIx, Ty>>::push","value":"pub fn push(&mut Self, Ty)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":797},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":387092,"byte_end":387098,"line_start":359,"line_end":359,"column_start":12,"column_end":18},"name":"resize","qualname":"<TypedIxVec<TyIx, Ty>>::resize","value":"pub fn resize(&mut Self, u32, Ty)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":798},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":387204,"byte_end":387211,"line_start":362,"line_end":362,"column_start":12,"column_end":19},"name":"reserve","qualname":"<TypedIxVec<TyIx, Ty>>::reserve","value":"pub fn reserve(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":799},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":387299,"byte_end":387304,"line_start":365,"line_end":365,"column_start":12,"column_end":17},"name":"elems","qualname":"<TypedIxVec<TyIx, Ty>>::elems","value":"pub fn elems(&Self) -> &[Ty]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":800},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":387362,"byte_end":387371,"line_start":368,"line_end":368,"column_start":12,"column_end":21},"name":"elems_mut","qualname":"<TypedIxVec<TyIx, Ty>>::elems_mut","value":"pub fn elems_mut(&mut Self) -> &mut [Ty]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":801},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":387441,"byte_end":387446,"line_start":371,"line_end":371,"column_start":12,"column_end":17},"name":"range","qualname":"<TypedIxVec<TyIx, Ty>>::range","value":"pub fn range(&Self) -> Range<TyIx>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":802},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":387542,"byte_end":387548,"line_start":374,"line_end":374,"column_start":12,"column_end":18},"name":"remove","qualname":"<TypedIxVec<TyIx, Ty>>::remove","value":"pub fn remove(&mut Self, TyIx) -> Ty","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":803},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":387641,"byte_end":387648,"line_start":377,"line_end":377,"column_start":12,"column_end":19},"name":"sort_by","qualname":"<TypedIxVec<TyIx, Ty>>::sort_by","value":"pub fn sort_by<F: FnMut(&Ty, &Ty) -> Ordering>(&mut Self, F)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":805},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":387757,"byte_end":387773,"line_start":380,"line_end":380,"column_start":12,"column_end":28},"name":"sort_unstable_by","qualname":"<TypedIxVec<TyIx, Ty>>::sort_unstable_by","value":"pub fn sort_unstable_by<F: FnMut(&Ty, &Ty) -> Ordering>(&mut Self, F)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":807},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":387891,"byte_end":387896,"line_start":383,"line_end":383,"column_start":12,"column_end":17},"name":"clear","qualname":"<TypedIxVec<TyIx, Ty>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2087},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":392043,"byte_end":392049,"line_start":521,"line_end":521,"column_start":23,"column_end":29},"name":"InstIx","qualname":"::data_structures::InstIx::InstIx","value":"InstIx::InstIx(u32)","parent":{"krate":0,"index":2086},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2086},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":392043,"byte_end":392049,"line_start":521,"line_end":521,"column_start":23,"column_end":29},"name":"InstIx","qualname":"::data_structures::InstIx","value":"pub enum InstIx { InstIx(u32), }","parent":null,"children":[{"krate":0,"index":2087}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2131},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":392086,"byte_end":392093,"line_start":523,"line_end":523,"column_start":23,"column_end":30},"name":"BlockIx","qualname":"::data_structures::BlockIx::BlockIx","value":"BlockIx::BlockIx(u32)","parent":{"krate":0,"index":2130},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2130},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":392086,"byte_end":392093,"line_start":523,"line_end":523,"column_start":23,"column_end":30},"name":"BlockIx","qualname":"::data_structures::BlockIx","value":"pub enum BlockIx { BlockIx(u32), }","parent":null,"children":[{"krate":0,"index":2131}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2288},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":393125,"byte_end":393128,"line_start":549,"line_end":549,"column_start":5,"column_end":8},"name":"I32","qualname":"::data_structures::RegClass::I32","value":"RegClass::I32","parent":{"krate":0,"index":2287},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2291},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":393138,"byte_end":393141,"line_start":550,"line_end":550,"column_start":5,"column_end":8},"name":"F32","qualname":"::data_structures::RegClass::F32","value":"RegClass::F32","parent":{"krate":0,"index":2287},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2294},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":393151,"byte_end":393154,"line_start":551,"line_end":551,"column_start":5,"column_end":8},"name":"I64","qualname":"::data_structures::RegClass::I64","value":"RegClass::I64","parent":{"krate":0,"index":2287},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2297},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":393164,"byte_end":393167,"line_start":552,"line_end":552,"column_start":5,"column_end":8},"name":"F64","qualname":"::data_structures::RegClass::F64","value":"RegClass::F64","parent":{"krate":0,"index":2287},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2300},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":393177,"byte_end":393181,"line_start":553,"line_end":553,"column_start":5,"column_end":9},"name":"V128","qualname":"::data_structures::RegClass::V128","value":"RegClass::V128","parent":{"krate":0,"index":2287},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2303},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":393191,"byte_end":393198,"line_start":554,"line_end":554,"column_start":5,"column_end":12},"name":"INVALID","qualname":"::data_structures::RegClass::INVALID","value":"RegClass::INVALID","parent":{"krate":0,"index":2287},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2287},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":393110,"byte_end":393118,"line_start":548,"line_end":548,"column_start":10,"column_end":18},"name":"RegClass","qualname":"::data_structures::RegClass","value":"pub enum RegClass { I32 = , F32 = , I64 = , F64 = , V128 = , INVALID = , }","parent":null,"children":[{"krate":0,"index":2288},{"krate":0,"index":2291},{"krate":0,"index":2294},{"krate":0,"index":2297},{"krate":0,"index":2300},{"krate":0,"index":2303}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":826},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":393341,"byte_end":393356,"line_start":559,"line_end":559,"column_start":11,"column_end":26},"name":"NUM_REG_CLASSES","qualname":"::data_structures::NUM_REG_CLASSES","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The number of register classes that exist.\n N.B.: must be <= 7 (fit into 3 bits) for 32-bit VReg/RReg packed format!\n","sig":null,"attributes":[{"value":"/ The number of register classes that exist.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":393207,"byte_end":393253,"line_start":557,"line_end":557,"column_start":1,"column_end":47}},{"value":"/ N.B.: must be <= 7 (fit into 3 bits) for 32-bit VReg/RReg packed format!","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":393254,"byte_end":393330,"line_start":558,"line_end":558,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":828},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":393468,"byte_end":393477,"line_start":564,"line_end":564,"column_start":12,"column_end":21},"name":"rc_to_u32","qualname":"<RegClass>::rc_to_u32","value":"pub fn rc_to_u32(Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Convert a register class to a u32 index.\n","sig":null,"attributes":[{"value":"/ Convert a register class to a u32 index.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":393390,"byte_end":393434,"line_start":562,"line_end":562,"column_start":5,"column_end":49}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":393439,"byte_end":393456,"line_start":563,"line_end":563,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":829},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":393603,"byte_end":393614,"line_start":569,"line_end":569,"column_start":12,"column_end":23},"name":"rc_to_usize","qualname":"<RegClass>::rc_to_usize","value":"pub fn rc_to_usize(Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Convert a register class to a usize index.\n","sig":null,"attributes":[{"value":"/ Convert a register class to a usize index.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":393523,"byte_end":393569,"line_start":567,"line_end":567,"column_start":5,"column_end":51}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":393574,"byte_end":393591,"line_start":568,"line_end":568,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":830},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":393740,"byte_end":393751,"line_start":574,"line_end":574,"column_start":12,"column_end":23},"name":"rc_from_u32","qualname":"<RegClass>::rc_from_u32","value":"pub fn rc_from_u32(u32) -> RegClass","parent":null,"children":[],"decl_id":null,"docs":" Construct a register class from a u32.\n","sig":null,"attributes":[{"value":"/ Construct a register class from a u32.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":393664,"byte_end":393706,"line_start":572,"line_end":572,"column_start":5,"column_end":47}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":393711,"byte_end":393728,"line_start":573,"line_end":573,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":831},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":394033,"byte_end":394043,"line_start":585,"line_end":585,"column_start":12,"column_end":22},"name":"short_name","qualname":"<RegClass>::short_name","value":"pub fn short_name(Self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":832},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":394353,"byte_end":394362,"line_start":596,"line_end":596,"column_start":12,"column_end":21},"name":"long_name","qualname":"<RegClass>::long_name","value":"pub fn long_name(Self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2317},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":396192,"byte_end":396195,"line_start":641,"line_end":641,"column_start":12,"column_end":15},"name":"Reg","qualname":"::data_structures::Reg","value":"Reg {  }","parent":null,"children":[{"krate":0,"index":2318}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":835},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":396299,"byte_end":396309,"line_start":649,"line_end":649,"column_start":12,"column_end":22},"name":"is_virtual","qualname":"<Reg>::is_virtual","value":"pub fn is_virtual(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":396270,"byte_end":396287,"line_start":648,"line_end":648,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":836},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":396423,"byte_end":396430,"line_start":653,"line_end":653,"column_start":12,"column_end":19},"name":"is_real","qualname":"<Reg>::is_real","value":"pub fn is_real(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":396394,"byte_end":396411,"line_start":652,"line_end":652,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":837},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":396522,"byte_end":396530,"line_start":656,"line_end":656,"column_start":12,"column_end":20},"name":"new_real","qualname":"<Reg>::new_real","value":"pub fn new_real(RegClass, u8, u8) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":838},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":396714,"byte_end":396725,"line_start":660,"line_end":660,"column_start":12,"column_end":23},"name":"new_virtual","qualname":"<Reg>::new_virtual","value":"pub fn new_virtual(RegClass, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":839},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":396966,"byte_end":396973,"line_start":667,"line_end":667,"column_start":12,"column_end":19},"name":"invalid","qualname":"<Reg>::invalid","value":"pub fn invalid() -> Reg","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":840},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":397058,"byte_end":397068,"line_start":671,"line_end":671,"column_start":12,"column_end":22},"name":"is_invalid","qualname":"<Reg>::is_invalid","value":"pub fn is_invalid(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":397029,"byte_end":397046,"line_start":670,"line_end":670,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":841},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":397157,"byte_end":397165,"line_start":675,"line_end":675,"column_start":12,"column_end":20},"name":"is_valid","qualname":"<Reg>::is_valid","value":"pub fn is_valid(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":397128,"byte_end":397145,"line_start":674,"line_end":674,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":842},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":397226,"byte_end":397247,"line_start":678,"line_end":678,"column_start":12,"column_end":33},"name":"is_virtual_or_invalid","qualname":"<Reg>::is_virtual_or_invalid","value":"pub fn is_virtual_or_invalid(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":843},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":397328,"byte_end":397346,"line_start":681,"line_end":681,"column_start":12,"column_end":30},"name":"is_real_or_invalid","qualname":"<Reg>::is_real_or_invalid","value":"pub fn is_real_or_invalid(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":844},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":397446,"byte_end":397455,"line_start":685,"line_end":685,"column_start":12,"column_end":21},"name":"get_class","qualname":"<Reg>::get_class","value":"pub fn get_class(Self) -> RegClass","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":397417,"byte_end":397434,"line_start":684,"line_end":684,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":845},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":397610,"byte_end":397619,"line_start":690,"line_end":690,"column_start":12,"column_end":21},"name":"get_index","qualname":"<Reg>::get_index","value":"pub fn get_index(Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":397581,"byte_end":397598,"line_start":689,"line_end":689,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":846},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":397991,"byte_end":398004,"line_start":701,"line_end":701,"column_start":12,"column_end":25},"name":"get_index_u32","qualname":"<Reg>::get_index_u32","value":"pub fn get_index_u32(Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":397962,"byte_end":397979,"line_start":700,"line_end":700,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":847},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":398214,"byte_end":398229,"line_start":709,"line_end":709,"column_start":12,"column_end":27},"name":"get_hw_encoding","qualname":"<Reg>::get_hw_encoding","value":"pub fn get_hw_encoding(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":848},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":398486,"byte_end":398500,"line_start":717,"line_end":717,"column_start":12,"column_end":26},"name":"as_virtual_reg","qualname":"<Reg>::as_virtual_reg","value":"pub fn as_virtual_reg(Self) -> Option<VirtualReg>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":849},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":398724,"byte_end":398735,"line_start":725,"line_end":725,"column_start":12,"column_end":23},"name":"as_real_reg","qualname":"<Reg>::as_real_reg","value":"pub fn as_real_reg(Self) -> Option<RealReg>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":850},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":398947,"byte_end":398960,"line_start":733,"line_end":733,"column_start":12,"column_end":25},"name":"show_with_rru","qualname":"<Reg>::show_with_rru","value":"pub fn show_with_rru(Self, &RealRegUniverse) -> String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2340},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":399971,"byte_end":399978,"line_start":766,"line_end":766,"column_start":12,"column_end":19},"name":"RealReg","qualname":"::data_structures::RealReg","value":"RealReg {  }","parent":null,"children":[{"krate":0,"index":2341}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":854},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":400041,"byte_end":400052,"line_start":770,"line_end":770,"column_start":12,"column_end":23},"name":"to_real_reg","qualname":"<Reg>::to_real_reg","value":"pub fn to_real_reg(Self) -> RealReg","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":856},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":400265,"byte_end":400274,"line_start":779,"line_end":779,"column_start":12,"column_end":21},"name":"get_class","qualname":"<RealReg>::get_class","value":"pub fn get_class(Self) -> RegClass","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":857},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":400363,"byte_end":400372,"line_start":783,"line_end":783,"column_start":12,"column_end":21},"name":"get_index","qualname":"<RealReg>::get_index","value":"pub fn get_index(Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":400334,"byte_end":400351,"line_start":782,"line_end":782,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":858},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":400436,"byte_end":400451,"line_start":786,"line_end":786,"column_start":12,"column_end":27},"name":"get_hw_encoding","qualname":"<RealReg>::get_hw_encoding","value":"pub fn get_hw_encoding(Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":859},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":400552,"byte_end":400558,"line_start":790,"line_end":790,"column_start":12,"column_end":18},"name":"to_reg","qualname":"<RealReg>::to_reg","value":"pub fn to_reg(Self) -> Reg","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":400523,"byte_end":400540,"line_start":789,"line_end":789,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":860},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":400608,"byte_end":400615,"line_start":793,"line_end":793,"column_start":12,"column_end":19},"name":"invalid","qualname":"<RealReg>::invalid","value":"pub fn invalid() -> RealReg","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":861},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":400709,"byte_end":400717,"line_start":798,"line_end":798,"column_start":12,"column_end":20},"name":"is_valid","qualname":"<RealReg>::is_valid","value":"pub fn is_valid(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":862},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":400779,"byte_end":400789,"line_start":801,"line_end":801,"column_start":12,"column_end":22},"name":"is_invalid","qualname":"<RealReg>::is_invalid","value":"pub fn is_invalid(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":863},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":400853,"byte_end":400864,"line_start":804,"line_end":804,"column_start":12,"column_end":23},"name":"maybe_valid","qualname":"<RealReg>::maybe_valid","value":"pub fn maybe_valid(Self) -> Option<RealReg>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2363},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":401287,"byte_end":401297,"line_start":820,"line_end":820,"column_start":12,"column_end":22},"name":"VirtualReg","qualname":"::data_structures::VirtualReg","value":"VirtualReg {  }","parent":null,"children":[{"krate":0,"index":2364}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":867},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":401385,"byte_end":401399,"line_start":825,"line_end":825,"column_start":12,"column_end":26},"name":"to_virtual_reg","qualname":"<Reg>::to_virtual_reg","value":"pub fn to_virtual_reg(Self) -> VirtualReg","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":401356,"byte_end":401373,"line_start":824,"line_end":824,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":869},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":401621,"byte_end":401630,"line_start":834,"line_end":834,"column_start":12,"column_end":21},"name":"get_class","qualname":"<VirtualReg>::get_class","value":"pub fn get_class(Self) -> RegClass","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":870},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":401719,"byte_end":401728,"line_start":838,"line_end":838,"column_start":12,"column_end":21},"name":"get_index","qualname":"<VirtualReg>::get_index","value":"pub fn get_index(Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":401690,"byte_end":401707,"line_start":837,"line_end":837,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":871},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":401814,"byte_end":401820,"line_start":842,"line_end":842,"column_start":12,"column_end":18},"name":"to_reg","qualname":"<VirtualReg>::to_reg","value":"pub fn to_reg(Self) -> Reg","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":401785,"byte_end":401802,"line_start":841,"line_end":841,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":872},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":401870,"byte_end":401877,"line_start":845,"line_end":845,"column_start":12,"column_end":19},"name":"invalid","qualname":"<VirtualReg>::invalid","value":"pub fn invalid() -> VirtualReg","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":873},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":401977,"byte_end":401985,"line_start":850,"line_end":850,"column_start":12,"column_end":20},"name":"is_valid","qualname":"<VirtualReg>::is_valid","value":"pub fn is_valid(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":874},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":402047,"byte_end":402057,"line_start":853,"line_end":853,"column_start":12,"column_end":22},"name":"is_invalid","qualname":"<VirtualReg>::is_invalid","value":"pub fn is_invalid(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":875},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":402121,"byte_end":402132,"line_start":856,"line_end":856,"column_start":12,"column_end":23},"name":"maybe_valid","qualname":"<VirtualReg>::maybe_valid","value":"pub fn maybe_valid(Self) -> Option<VirtualReg>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":879},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":402545,"byte_end":402555,"line_start":873,"line_end":873,"column_start":12,"column_end":22},"name":"apply_uses","qualname":"<Reg>::apply_uses","value":"pub fn apply_uses<RUM: RegUsageMapper>(&mut Self, &RUM)","parent":null,"children":[],"decl_id":null,"docs":" Apply a vreg-rreg mapping to a Reg.  This is used for registers used in\n a read-role.\n","sig":null,"attributes":[{"value":"/ Apply a vreg-rreg mapping to a Reg.  This is used for registers used in","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":402437,"byte_end":402512,"line_start":871,"line_end":871,"column_start":5,"column_end":80}},{"value":"/ a read-role.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":402517,"byte_end":402533,"line_start":872,"line_end":872,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":882},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":402773,"byte_end":402783,"line_start":879,"line_end":879,"column_start":12,"column_end":22},"name":"apply_defs","qualname":"<Reg>::apply_defs","value":"pub fn apply_defs<RUM: RegUsageMapper>(&mut Self, &RUM)","parent":null,"children":[],"decl_id":null,"docs":" Apply a vreg-rreg mapping to a Reg.  This is used for registers used in\n a write-role.\n","sig":null,"attributes":[{"value":"/ Apply a vreg-rreg mapping to a Reg.  This is used for registers used in","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":402664,"byte_end":402739,"line_start":877,"line_end":877,"column_start":5,"column_end":80}},{"value":"/ a write-role.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":402744,"byte_end":402761,"line_start":878,"line_end":878,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":885},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":403002,"byte_end":403012,"line_start":885,"line_end":885,"column_start":12,"column_end":22},"name":"apply_mods","qualname":"<Reg>::apply_mods","value":"pub fn apply_mods<RUM: RegUsageMapper>(&mut Self, &RUM)","parent":null,"children":[],"decl_id":null,"docs":" Apply a vreg-rreg mapping to a Reg.  This is used for registers used in\n a modify-role.\n","sig":null,"attributes":[{"value":"/ Apply a vreg-rreg mapping to a Reg.  This is used for registers used in","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":402892,"byte_end":402967,"line_start":883,"line_end":883,"column_start":5,"column_end":80}},{"value":"/ a modify-role.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":402972,"byte_end":402990,"line_start":884,"line_end":884,"column_start":5,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":2386},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":404745,"byte_end":404753,"line_start":921,"line_end":921,"column_start":12,"column_end":20},"name":"Writable","qualname":"::data_structures::Writable","value":"Writable {  }","parent":null,"children":[{"krate":0,"index":2388}],"decl_id":null,"docs":" A \"writable register\". This is a zero-cost wrapper that can be used to\n create a distinction, at the Rust type level, between a plain \"register\"\n and a \"writable register\".","sig":null,"attributes":[{"value":"/ A \"writable register\". This is a zero-cost wrapper that can be used to","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":403508,"byte_end":403582,"line_start":901,"line_end":901,"column_start":1,"column_end":75}},{"value":"/ create a distinction, at the Rust type level, between a plain \"register\"","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":403583,"byte_end":403659,"line_start":902,"line_end":902,"column_start":1,"column_end":77}},{"value":"/ and a \"writable register\".","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":403660,"byte_end":403690,"line_start":903,"line_end":903,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":403691,"byte_end":403694,"line_start":904,"line_end":904,"column_start":1,"column_end":4}},{"value":"/ Only structs that implement the `WritableBase` trait can be wrapped with","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":403695,"byte_end":403771,"line_start":905,"line_end":905,"column_start":1,"column_end":77}},{"value":"/ `Writable`. These are the Reg, RealReg and VirtualReg data structures only,","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":403772,"byte_end":403851,"line_start":906,"line_end":906,"column_start":1,"column_end":80}},{"value":"/ since `WritableBase` is not exposed to end users.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":403852,"byte_end":403905,"line_start":907,"line_end":907,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":403906,"byte_end":403909,"line_start":908,"line_end":908,"column_start":1,"column_end":4}},{"value":"/ Writable<..> can be used by the client to ensure that, internally, it only","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":403910,"byte_end":403988,"line_start":909,"line_end":909,"column_start":1,"column_end":79}},{"value":"/ generates instructions that write to registers that should be written. The","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":403989,"byte_end":404067,"line_start":910,"line_end":910,"column_start":1,"column_end":79}},{"value":"/ `InstRegUses` below, which must be implemented for every instruction,","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":404068,"byte_end":404141,"line_start":911,"line_end":911,"column_start":1,"column_end":74}},{"value":"/ requires a `Writable<Reg>` (not just `Reg`) in its `defined` and","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":404142,"byte_end":404210,"line_start":912,"line_end":912,"column_start":1,"column_end":69}},{"value":"/ `modified` sets. While we cannot hide the constructor for `Writable<..>`","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":404211,"byte_end":404287,"line_start":913,"line_end":913,"column_start":1,"column_end":77}},{"value":"/ from certain parts of the client while exposing it to others, the client","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":404288,"byte_end":404364,"line_start":914,"line_end":914,"column_start":1,"column_end":77}},{"value":"/ *can* adopt conventions to e.g. only ever call the Writable<..>","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":404365,"byte_end":404432,"line_start":915,"line_end":915,"column_start":1,"column_end":68}},{"value":"/ constructor from its central vreg-management logic, and decide that any","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":404433,"byte_end":404508,"line_start":916,"line_end":916,"column_start":1,"column_end":76}},{"value":"/ invocation of this constructor in a machine backend (for example) is an","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":404509,"byte_end":404584,"line_start":917,"line_end":917,"column_start":1,"column_end":76}},{"value":"/ error.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":404585,"byte_end":404595,"line_start":918,"line_end":918,"column_start":1,"column_end":11}}]},{"kind":"Trait","id":{"krate":0,"index":890},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":404865,"byte_end":404877,"line_start":926,"line_end":926,"column_start":11,"column_end":23},"name":"WritableBase","qualname":"::data_structures::WritableBase","value":"WritableBase: Copy + Clone + PartialEq + Eq + Hash + PartialOrd + Ord + fmt::Debug","parent":null,"children":[],"decl_id":null,"docs":" Set of requirements for types that can be wrapped in Writable.\n","sig":null,"attributes":[{"value":"/ Set of requirements for types that can be wrapped in Writable.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":404788,"byte_end":404854,"line_start":925,"line_end":925,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":896},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":405312,"byte_end":405320,"line_start":940,"line_end":940,"column_start":12,"column_end":20},"name":"from_reg","qualname":"<Writable<R>>::from_reg","value":"pub fn from_reg(R) -> Writable<R>","parent":null,"children":[],"decl_id":null,"docs":" Create a Writable<R> from an R. The client should carefully audit where\n it calls this constructor to ensure correctness (see `Writable<..>`\n struct documentation).\n","sig":null,"attributes":[{"value":"/ Create a Writable<R> from an R. The client should carefully audit where","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":405096,"byte_end":405171,"line_start":936,"line_end":936,"column_start":5,"column_end":80}},{"value":"/ it calls this constructor to ensure correctness (see `Writable<..>`","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":405176,"byte_end":405247,"line_start":937,"line_end":937,"column_start":5,"column_end":76}},{"value":"/ struct documentation).","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":405252,"byte_end":405278,"line_start":938,"line_end":938,"column_start":5,"column_end":31}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":405283,"byte_end":405300,"line_start":939,"line_end":939,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":897},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":405416,"byte_end":405422,"line_start":945,"line_end":945,"column_start":12,"column_end":18},"name":"to_reg","qualname":"<Writable<R>>::to_reg","value":"pub fn to_reg(&Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Get the inner Reg.\n","sig":null,"attributes":[{"value":"/ Get the inner Reg.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":405382,"byte_end":405404,"line_start":944,"line_end":944,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":898},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":405472,"byte_end":405475,"line_start":949,"line_end":949,"column_start":12,"column_end":15},"name":"map","qualname":"<Writable<R>>::map","value":"pub fn map<F, U>(&Self, F) -> Writable<U> where F: Fn(R) -> U, U: WritableBase","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2422},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":405693,"byte_end":405702,"line_start":959,"line_end":959,"column_start":12,"column_end":21},"name":"SpillSlot","qualname":"::data_structures::SpillSlot","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":902},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":405760,"byte_end":405763,"line_start":963,"line_end":963,"column_start":12,"column_end":15},"name":"new","qualname":"<SpillSlot>::new","value":"pub fn new(u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":405731,"byte_end":405748,"line_start":962,"line_end":962,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":903},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":405837,"byte_end":405840,"line_start":967,"line_end":967,"column_start":12,"column_end":15},"name":"get","qualname":"<SpillSlot>::get","value":"pub fn get(Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":405808,"byte_end":405825,"line_start":966,"line_end":966,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":904},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":405910,"byte_end":405919,"line_start":971,"line_end":971,"column_start":12,"column_end":21},"name":"get_usize","qualname":"<SpillSlot>::get_usize","value":"pub fn get_usize(Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":405881,"byte_end":405898,"line_start":970,"line_end":970,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":905},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":405982,"byte_end":405990,"line_start":974,"line_end":974,"column_start":12,"column_end":20},"name":"round_up","qualname":"<SpillSlot>::round_up","value":"pub fn round_up(Self, u32) -> SpillSlot","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":906},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":406154,"byte_end":406157,"line_start":978,"line_end":978,"column_start":12,"column_end":15},"name":"inc","qualname":"<SpillSlot>::inc","value":"pub fn inc(Self, u32) -> SpillSlot","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":909},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":406766,"byte_end":406783,"line_start":996,"line_end":996,"column_start":12,"column_end":29},"name":"RegUsageCollector","qualname":"::data_structures::RegUsageCollector","value":"RegUsageCollector { reg_vecs }","parent":null,"children":[{"krate":0,"index":911}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":911},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":406798,"byte_end":406806,"line_start":997,"line_end":997,"column_start":9,"column_end":17},"name":"reg_vecs","qualname":"::data_structures::RegUsageCollector::reg_vecs","value":"&'a mut data_structures::RegVecs","parent":{"krate":0,"index":909},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":914},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":406872,"byte_end":406875,"line_start":1001,"line_end":1001,"column_start":12,"column_end":15},"name":"new","qualname":"<RegUsageCollector>::new","value":"pub fn new(&'a mut RegVecs) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":915},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":406956,"byte_end":406963,"line_start":1004,"line_end":1004,"column_start":12,"column_end":19},"name":"add_use","qualname":"<RegUsageCollector>::add_use","value":"pub fn add_use(&mut Self, Reg)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":916},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":407038,"byte_end":407046,"line_start":1007,"line_end":1007,"column_start":12,"column_end":20},"name":"add_uses","qualname":"<RegUsageCollector>::add_uses","value":"pub fn add_uses(&mut Self, &[Reg])","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":917},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":407139,"byte_end":407146,"line_start":1010,"line_end":1010,"column_start":12,"column_end":19},"name":"add_def","qualname":"<RegUsageCollector>::add_def","value":"pub fn add_def(&mut Self, Writable<Reg>)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":918},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":407240,"byte_end":407248,"line_start":1013,"line_end":1013,"column_start":12,"column_end":20},"name":"add_defs","qualname":"<RegUsageCollector>::add_defs","value":"pub fn add_defs(&mut Self, &[Writable<Reg>])","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":919},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":407434,"byte_end":407441,"line_start":1019,"line_end":1019,"column_start":12,"column_end":19},"name":"add_mod","qualname":"<RegUsageCollector>::add_mod","value":"pub fn add_mod(&mut Self, Writable<Reg>)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":920},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":407535,"byte_end":407543,"line_start":1022,"line_end":1022,"column_start":12,"column_end":20},"name":"add_mods","qualname":"<RegUsageCollector>::add_mods","value":"pub fn add_mods(&mut Self, &[Writable<Reg>])","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":921},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":407874,"byte_end":407914,"line_start":1031,"line_end":1031,"column_start":12,"column_end":52},"name":"get_use_def_mod_vecs_test_framework_only","qualname":"<RegUsageCollector>::get_use_def_mod_vecs_test_framework_only","value":"pub fn get_use_def_mod_vecs_test_framework_only(&Self)\n-> (Vec<Reg>, Vec<Reg>, Vec<Reg>)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":922},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":408116,"byte_end":408154,"line_start":1039,"line_end":1039,"column_start":12,"column_end":50},"name":"get_empty_reg_vecs_test_framework_only","qualname":"<RegUsageCollector>::get_empty_reg_vecs_test_framework_only","value":"pub fn get_empty_reg_vecs_test_framework_only(bool) -> RegVecs","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2446},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":408644,"byte_end":408651,"line_start":1052,"line_end":1052,"column_start":12,"column_end":19},"name":"RegVecs","qualname":"::data_structures::RegVecs","value":"RegVecs { uses, defs, mods }","parent":null,"children":[{"krate":0,"index":2447},{"krate":0,"index":2448},{"krate":0,"index":2449},{"krate":0,"index":2450}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2447},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":408662,"byte_end":408666,"line_start":1053,"line_end":1053,"column_start":9,"column_end":13},"name":"uses","qualname":"::data_structures::RegVecs::uses","value":"std::vec::Vec<data_structures::Reg>","parent":{"krate":0,"index":2446},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2448},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":408686,"byte_end":408690,"line_start":1054,"line_end":1054,"column_start":9,"column_end":13},"name":"defs","qualname":"::data_structures::RegVecs::defs","value":"std::vec::Vec<data_structures::Reg>","parent":{"krate":0,"index":2446},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2449},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":408710,"byte_end":408714,"line_start":1055,"line_end":1055,"column_start":9,"column_end":13},"name":"mods","qualname":"::data_structures::RegVecs::mods","value":"std::vec::Vec<data_structures::Reg>","parent":{"krate":0,"index":2446},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":924},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":408776,"byte_end":408779,"line_start":1060,"line_end":1060,"column_start":12,"column_end":15},"name":"new","qualname":"<RegVecs>::new","value":"pub fn new(bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":925},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":408950,"byte_end":408962,"line_start":1068,"line_end":1068,"column_start":12,"column_end":24},"name":"is_sanitized","qualname":"<RegVecs>::is_sanitized","value":"pub fn is_sanitized(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":926},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":409020,"byte_end":409033,"line_start":1071,"line_end":1071,"column_start":12,"column_end":25},"name":"set_sanitized","qualname":"<RegVecs>::set_sanitized","value":"pub fn set_sanitized(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":927},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":409117,"byte_end":409122,"line_start":1074,"line_end":1074,"column_start":12,"column_end":17},"name":"clear","qualname":"<RegVecs>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2471},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":413306,"byte_end":413321,"line_start":1203,"line_end":1203,"column_start":12,"column_end":27},"name":"RealRegUniverse","qualname":"::data_structures::RealRegUniverse","value":"RealRegUniverse { regs, allocable, allocable_by_class }","parent":null,"children":[{"krate":0,"index":2472},{"krate":0,"index":2473},{"krate":0,"index":2474}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2472},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":413575,"byte_end":413579,"line_start":1208,"line_end":1208,"column_start":9,"column_end":13},"name":"regs","qualname":"::data_structures::RealRegUniverse::regs","value":"std::vec::Vec<(data_structures::RealReg, std::string::String)>","parent":{"krate":0,"index":2471},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2473},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":413743,"byte_end":413752,"line_start":1212,"line_end":1212,"column_start":9,"column_end":18},"name":"allocable","qualname":"::data_structures::RealRegUniverse::allocable","value":"usize","parent":{"krate":0,"index":2471},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2474},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":414230,"byte_end":414248,"line_start":1220,"line_end":1220,"column_start":9,"column_end":27},"name":"allocable_by_class","qualname":"::data_structures::RealRegUniverse::allocable_by_class","value":"[std::option::Option<data_structures::RegClassInfo>; _]","parent":{"krate":0,"index":2471},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2480},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":414477,"byte_end":414489,"line_start":1226,"line_end":1226,"column_start":12,"column_end":24},"name":"RegClassInfo","qualname":"::data_structures::RegClassInfo","value":"RegClassInfo { first, last, suggested_scratch }","parent":null,"children":[{"krate":0,"index":2481},{"krate":0,"index":2482},{"krate":0,"index":2483}],"decl_id":null,"docs":" Information about a single register class in the `RealRegUniverse`.\n","sig":null,"attributes":[{"value":"/ Information about a single register class in the `RealRegUniverse`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":414294,"byte_end":414365,"line_start":1223,"line_end":1223,"column_start":1,"column_end":72}}]},{"kind":"Field","id":{"krate":0,"index":2481},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":415402,"byte_end":415407,"line_start":1246,"line_end":1246,"column_start":9,"column_end":14},"name":"first","qualname":"::data_structures::RegClassInfo::first","value":"usize","parent":{"krate":0,"index":2480},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2482},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":415424,"byte_end":415428,"line_start":1247,"line_end":1247,"column_start":9,"column_end":13},"name":"last","qualname":"::data_structures::RegClassInfo::last","value":"usize","parent":{"krate":0,"index":2480},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2483},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":415806,"byte_end":415823,"line_start":1254,"line_end":1254,"column_start":9,"column_end":26},"name":"suggested_scratch","qualname":"::data_structures::RegClassInfo::suggested_scratch","value":"std::option::Option<usize>","parent":{"krate":0,"index":2480},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":943},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":415910,"byte_end":415914,"line_start":1259,"line_end":1259,"column_start":12,"column_end":16},"name":"show","qualname":"<RealRegUniverse>::show","value":"pub fn show(&Self) -> Vec<String>","parent":null,"children":[],"decl_id":null,"docs":" Show it in a pretty way.\n","sig":null,"attributes":[{"value":"/ Show it in a pretty way.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":415870,"byte_end":415898,"line_start":1258,"line_end":1258,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":944},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":417630,"byte_end":417643,"line_start":1302,"line_end":1302,"column_start":12,"column_end":25},"name":"check_is_sane","qualname":"<RealRegUniverse>::check_is_sane","value":"pub fn check_is_sane(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Check that the given universe satisfies various invariants, and panic\n if not.  All the invariants are important.\n","sig":null,"attributes":[{"value":"/ Check that the given universe satisfies various invariants, and panic","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":417494,"byte_end":417567,"line_start":1300,"line_end":1300,"column_start":5,"column_end":78}},{"value":"/ if not.  All the invariants are important.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":417572,"byte_end":417618,"line_start":1301,"line_end":1301,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":2875},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\linear_scan\\mod.rs","byte_start":485271,"byte_end":485288,"line_start":80,"line_end":80,"column_start":12,"column_end":29},"name":"LinearScanOptions","qualname":"::linear_scan::LinearScanOptions","value":"LinearScanOptions {  }","parent":null,"children":[{"krate":0,"index":2876},{"krate":0,"index":2877},{"krate":0,"index":2878},{"krate":0,"index":2879},{"krate":0,"index":2880}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1510},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\pretty_print.rs","byte_start":613088,"byte_end":613099,"line_start":8,"line_end":8,"column_start":11,"column_end":22},"name":"PrettyPrint","qualname":"::pretty_print::PrettyPrint","value":"PrettyPrint","parent":null,"children":[{"krate":0,"index":1511}],"decl_id":null,"docs":" A trait for printing instruction bits and pieces, with the the ability to take a\n contextualising `RealRegUniverse` that is used to give proper names to registers.\n","sig":null,"attributes":[{"value":"/ A trait for printing instruction bits and pieces, with the the ability to take a","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\pretty_print.rs","byte_start":612907,"byte_end":612991,"line_start":6,"line_end":6,"column_start":1,"column_end":85}},{"value":"/ contextualising `RealRegUniverse` that is used to give proper names to registers.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\pretty_print.rs","byte_start":612992,"byte_end":613077,"line_start":7,"line_end":7,"column_start":1,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":1511},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\pretty_print.rs","byte_start":613232,"byte_end":613240,"line_start":11,"line_end":11,"column_start":8,"column_end":16},"name":"show_rru","qualname":"::pretty_print::PrettyPrint::show_rru","value":"pub fn show_rru(&Self, Option<&RealRegUniverse>) -> String","parent":{"krate":0,"index":1510},"children":[],"decl_id":null,"docs":" Return a string that shows the implementing object in context of the given\n `RealRegUniverse`, if provided.\n","sig":null,"attributes":[{"value":"/ Return a string that shows the implementing object in context of the given","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\pretty_print.rs","byte_start":613106,"byte_end":613184,"line_start":9,"line_end":9,"column_start":5,"column_end":83}},{"value":"/ `RealRegUniverse`, if provided.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\pretty_print.rs","byte_start":613189,"byte_end":613224,"line_start":10,"line_end":10,"column_start":5,"column_end":40}}]},{"kind":"Trait","id":{"krate":0,"index":1512},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\pretty_print.rs","byte_start":613428,"byte_end":613444,"line_start":16,"line_end":16,"column_start":11,"column_end":27},"name":"PrettyPrintSized","qualname":"::pretty_print::PrettyPrintSized","value":"PrettyPrintSized: PrettyPrint","parent":null,"children":[{"krate":0,"index":1513}],"decl_id":null,"docs":" Same as `PrettyPrint`, but can also take a size hint into account to specialize the displayed\n string.\n","sig":null,"attributes":[{"value":"/ Same as `PrettyPrint`, but can also take a size hint into account to specialize the displayed","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\pretty_print.rs","byte_start":613308,"byte_end":613405,"line_start":14,"line_end":14,"column_start":1,"column_end":98}},{"value":"/ string.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\pretty_print.rs","byte_start":613406,"byte_end":613417,"line_start":15,"line_end":15,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1513},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\pretty_print.rs","byte_start":613853,"byte_end":613867,"line_start":23,"line_end":23,"column_start":8,"column_end":22},"name":"show_rru_sized","qualname":"::pretty_print::PrettyPrintSized::show_rru_sized","value":"pub fn show_rru_sized(&Self, Option<&RealRegUniverse>, u8) -> String","parent":{"krate":0,"index":1512},"children":[],"decl_id":null,"docs":" The same as |show_rru|, but with an optional hint giving a size in bytes. Its\n interpretation is object-dependent, and it is intended to pass around enough information to\n facilitate printing sub-parts of real registers correctly. Objects may ignore size hints\n that are irrelevant to them.","sig":null,"attributes":[{"value":"/ The same as |show_rru|, but with an optional hint giving a size in bytes. Its","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\pretty_print.rs","byte_start":613464,"byte_end":613545,"line_start":17,"line_end":17,"column_start":5,"column_end":86}},{"value":"/ interpretation is object-dependent, and it is intended to pass around enough information to","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\pretty_print.rs","byte_start":613550,"byte_end":613645,"line_start":18,"line_end":18,"column_start":5,"column_end":100}},{"value":"/ facilitate printing sub-parts of real registers correctly. Objects may ignore size hints","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\pretty_print.rs","byte_start":613650,"byte_end":613742,"line_start":19,"line_end":19,"column_start":5,"column_end":97}},{"value":"/ that are irrelevant to them.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\pretty_print.rs","byte_start":613747,"byte_end":613779,"line_start":20,"line_end":20,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\pretty_print.rs","byte_start":613784,"byte_end":613787,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ The default implementation ignores the size hint.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\pretty_print.rs","byte_start":613792,"byte_end":613845,"line_start":22,"line_end":22,"column_start":5,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":2983},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\snapshot.rs","byte_start":629359,"byte_end":629365,"line_start":31,"line_end":31,"column_start":12,"column_end":18},"name":"IRInst","qualname":"::snapshot::IRInst","value":"IRInst {  }","parent":null,"children":[{"krate":0,"index":2984},{"krate":0,"index":2985},{"krate":0,"index":2986},{"krate":0,"index":2987}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2992},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\snapshot.rs","byte_start":629583,"byte_end":629593,"line_start":40,"line_end":40,"column_start":12,"column_end":22},"name":"IRFunction","qualname":"::snapshot::IRFunction","value":"IRFunction {  }","parent":null,"children":[{"krate":0,"index":2993},{"krate":0,"index":2994},{"krate":0,"index":2995},{"krate":0,"index":2996},{"krate":0,"index":2997},{"krate":0,"index":2998},{"krate":0,"index":2999},{"krate":0,"index":3000}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3003},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\snapshot.rs","byte_start":629962,"byte_end":629972,"line_start":53,"line_end":53,"column_start":12,"column_end":22},"name":"IRSnapshot","qualname":"::snapshot::IRSnapshot","value":"IRSnapshot {  }","parent":null,"children":[{"krate":0,"index":3004},{"krate":0,"index":3005}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1575},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\snapshot.rs","byte_start":630968,"byte_end":630981,"line_start":89,"line_end":89,"column_start":12,"column_end":25},"name":"from_function","qualname":"<IRSnapshot>::from_function","value":"pub fn from_function<F: Function>(&F, &RealRegUniverse) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1579},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\snapshot.rs","byte_start":633392,"byte_end":633400,"line_start":160,"line_end":160,"column_start":12,"column_end":20},"name":"allocate","qualname":"<IRSnapshot>::allocate","value":"pub fn allocate(&mut Self, Options)\n-> Result<RegAllocResult<IRFunction>, RegAllocError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1616},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\sparse_set.rs","byte_start":639025,"byte_end":639029,"line_start":27,"line_end":27,"column_start":10,"column_end":14},"name":"Item","qualname":"::sparse_set::Array::Item","value":"type Item;","parent":{"krate":0,"index":1615},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1751},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":6967,"byte_end":6981,"line_start":163,"line_end":163,"column_start":11,"column_end":25},"name":"RegUsageMapper","qualname":"::RegUsageMapper","value":"RegUsageMapper: fmt::Debug","parent":null,"children":[{"krate":0,"index":1752},{"krate":0,"index":1753},{"krate":0,"index":1754}],"decl_id":null,"docs":" A trait for providing mapping results for a given instruction.","sig":null,"attributes":[{"value":"/ A trait for providing mapping results for a given instruction.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":6621,"byte_end":6687,"line_start":158,"line_end":158,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":6688,"byte_end":6691,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ This provides virtual to real register mappings for every mention in an instruction: use, mod","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":6692,"byte_end":6789,"line_start":160,"line_end":160,"column_start":1,"column_end":98}},{"value":"/ or def. The main purpose of this trait is to be used when re-writing the instruction stream","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":6790,"byte_end":6885,"line_start":161,"line_end":161,"column_start":1,"column_end":96}},{"value":"/ after register allocation happened; see also `Function::map_regs`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":6886,"byte_end":6956,"line_start":162,"line_end":162,"column_start":1,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1752},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":7119,"byte_end":7126,"line_start":166,"line_end":166,"column_start":8,"column_end":15},"name":"get_use","qualname":"::RegUsageMapper::get_use","value":"pub fn get_use(&Self, VirtualReg) -> Option<RealReg>","parent":{"krate":0,"index":1751},"children":[],"decl_id":null,"docs":" Return the `RealReg` if mapped, or `None`, for `vreg` occuring as a use\n on the current instruction.\n","sig":null,"attributes":[{"value":"/ Return the `RealReg` if mapped, or `None`, for `vreg` occuring as a use","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":7000,"byte_end":7075,"line_start":164,"line_end":164,"column_start":5,"column_end":80}},{"value":"/ on the current instruction.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":7080,"byte_end":7111,"line_start":165,"line_end":165,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1753},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":7296,"byte_end":7303,"line_start":170,"line_end":170,"column_start":8,"column_end":15},"name":"get_def","qualname":"::RegUsageMapper::get_def","value":"pub fn get_def(&Self, VirtualReg) -> Option<RealReg>","parent":{"krate":0,"index":1751},"children":[],"decl_id":null,"docs":" Return the `RealReg` if mapped, or `None`, for `vreg` occuring as a def\n on the current instruction.\n","sig":null,"attributes":[{"value":"/ Return the `RealReg` if mapped, or `None`, for `vreg` occuring as a def","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":7177,"byte_end":7252,"line_start":168,"line_end":168,"column_start":5,"column_end":80}},{"value":"/ on the current instruction.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":7257,"byte_end":7288,"line_start":169,"line_end":169,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1754},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":7475,"byte_end":7482,"line_start":174,"line_end":174,"column_start":8,"column_end":15},"name":"get_mod","qualname":"::RegUsageMapper::get_mod","value":"pub fn get_mod(&Self, VirtualReg) -> Option<RealReg>","parent":{"krate":0,"index":1751},"children":[],"decl_id":null,"docs":" Return the `RealReg` if mapped, or `None`, for a `vreg` occuring as a\n mod on the current instruction.\n","sig":null,"attributes":[{"value":"/ Return the `RealReg` if mapped, or `None`, for a `vreg` occuring as a","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":7354,"byte_end":7427,"line_start":172,"line_end":172,"column_start":5,"column_end":78}},{"value":"/ mod on the current instruction.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":7432,"byte_end":7467,"line_start":173,"line_end":173,"column_start":5,"column_end":40}}]},{"kind":"Trait","id":{"krate":0,"index":1760},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":7854,"byte_end":7862,"line_start":185,"line_end":185,"column_start":11,"column_end":19},"name":"Function","qualname":"::Function","value":"Function","parent":null,"children":[{"krate":0,"index":1761},{"krate":0,"index":1762},{"krate":0,"index":1763},{"krate":0,"index":1764},{"krate":0,"index":1765},{"krate":0,"index":1766},{"krate":0,"index":1767},{"krate":0,"index":1768},{"krate":0,"index":1769},{"krate":0,"index":1770},{"krate":0,"index":1771},{"krate":0,"index":1772},{"krate":0,"index":1773},{"krate":0,"index":1774},{"krate":0,"index":1776},{"krate":0,"index":1777},{"krate":0,"index":1778},{"krate":0,"index":1779},{"krate":0,"index":1780},{"krate":0,"index":1781},{"krate":0,"index":1782},{"krate":0,"index":1783},{"krate":0,"index":1784},{"krate":0,"index":1785}],"decl_id":null,"docs":" A trait defined by the regalloc client to provide access to its\n machine-instruction / CFG representation.\n","sig":null,"attributes":[{"value":"/ A trait defined by the regalloc client to provide access to its","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":7730,"byte_end":7797,"line_start":183,"line_end":183,"column_start":1,"column_end":68}},{"value":"/ machine-instruction / CFG representation.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":7798,"byte_end":7843,"line_start":184,"line_end":184,"column_start":1,"column_end":46}}]},{"kind":"Type","id":{"krate":0,"index":1761},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":7974,"byte_end":7978,"line_start":188,"line_end":188,"column_start":10,"column_end":14},"name":"Inst","qualname":"::Function::Inst","value":"type Inst: Clone + fmt::Debug;","parent":{"krate":0,"index":1760},"children":[],"decl_id":null,"docs":" Regalloc is parameterized on F: Function and so can use the projected\n type F::Inst.\n","sig":null,"attributes":[{"value":"/ Regalloc is parameterized on F: Function and so can use the projected","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":7869,"byte_end":7942,"line_start":186,"line_end":186,"column_start":5,"column_end":78}},{"value":"/ type F::Inst.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":7947,"byte_end":7964,"line_start":187,"line_end":187,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1762},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":8135,"byte_end":8140,"line_start":195,"line_end":195,"column_start":8,"column_end":13},"name":"insns","qualname":"::Function::insns","value":"pub fn insns(&Self) -> &[Self::Inst]","parent":{"krate":0,"index":1760},"children":[],"decl_id":null,"docs":" Allow access to the underlying vector of instructions.\n","sig":null,"attributes":[{"value":"/ Allow access to the underlying vector of instructions.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":8069,"byte_end":8127,"line_start":194,"line_end":194,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1763},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":8232,"byte_end":8244,"line_start":198,"line_end":198,"column_start":8,"column_end":20},"name":"insn_indices","qualname":"::Function::insn_indices","value":"pub fn insn_indices(&Self) -> Range<InstIx>","parent":{"krate":0,"index":1760},"children":[],"decl_id":null,"docs":" Get all instruction indices as an iterable range.\n","sig":null,"attributes":[{"value":"/ Get all instruction indices as an iterable range.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":8171,"byte_end":8224,"line_start":197,"line_end":197,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1764},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":8411,"byte_end":8420,"line_start":203,"line_end":203,"column_start":8,"column_end":17},"name":"insns_mut","qualname":"::Function::insns_mut","value":"pub fn insns_mut(&mut Self) -> &mut [Self::Inst]","parent":{"krate":0,"index":1760},"children":[],"decl_id":null,"docs":" Allow mutable access to the underlying vector of instructions.\n","sig":null,"attributes":[{"value":"/ Allow mutable access to the underlying vector of instructions.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":8337,"byte_end":8403,"line_start":202,"line_end":202,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1765},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":8520,"byte_end":8528,"line_start":206,"line_end":206,"column_start":8,"column_end":16},"name":"get_insn","qualname":"::Function::get_insn","value":"pub fn get_insn(&Self, InstIx) -> &Self::Inst","parent":{"krate":0,"index":1760},"children":[],"decl_id":null,"docs":" Get an instruction with a type-safe InstIx index.\n","sig":null,"attributes":[{"value":"/ Get an instruction with a type-safe InstIx index.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":8459,"byte_end":8512,"line_start":205,"line_end":205,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1766},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":8668,"byte_end":8680,"line_start":210,"line_end":210,"column_start":8,"column_end":20},"name":"get_insn_mut","qualname":"::Function::get_insn_mut","value":"pub fn get_insn_mut(&mut Self, InstIx) -> &mut Self::Inst","parent":{"krate":0,"index":1760},"children":[],"decl_id":null,"docs":" Get a mutable borrow of an instruction with the given type-safe InstIx\n index.\n","sig":null,"attributes":[{"value":"/ Get a mutable borrow of an instruction with the given type-safe InstIx","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":8571,"byte_end":8645,"line_start":208,"line_end":208,"column_start":5,"column_end":79}},{"value":"/ index.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":8650,"byte_end":8660,"line_start":209,"line_end":209,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":1767},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":8800,"byte_end":8806,"line_start":213,"line_end":213,"column_start":8,"column_end":14},"name":"blocks","qualname":"::Function::blocks","value":"pub fn blocks(&Self) -> Range<BlockIx>","parent":{"krate":0,"index":1760},"children":[],"decl_id":null,"docs":" Allow iteration over basic blocks (in instruction order).\n","sig":null,"attributes":[{"value":"/ Allow iteration over basic blocks (in instruction order).","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":8731,"byte_end":8792,"line_start":212,"line_end":212,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1768},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":8883,"byte_end":8894,"line_start":216,"line_end":216,"column_start":8,"column_end":19},"name":"entry_block","qualname":"::Function::entry_block","value":"pub fn entry_block(&Self) -> BlockIx","parent":{"krate":0,"index":1760},"children":[],"decl_id":null,"docs":" Get the index of the entry block.\n","sig":null,"attributes":[{"value":"/ Get the index of the entry block.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":8838,"byte_end":8875,"line_start":215,"line_end":215,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1769},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":8996,"byte_end":9007,"line_start":219,"line_end":219,"column_start":8,"column_end":19},"name":"block_insns","qualname":"::Function::block_insns","value":"pub fn block_insns(&Self, BlockIx) -> Range<InstIx>","parent":{"krate":0,"index":1760},"children":[],"decl_id":null,"docs":" Provide the range of instruction indices contained in each block.\n","sig":null,"attributes":[{"value":"/ Provide the range of instruction indices contained in each block.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":8919,"byte_end":8988,"line_start":218,"line_end":218,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1770},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":9103,"byte_end":9114,"line_start":222,"line_end":222,"column_start":8,"column_end":19},"name":"block_succs","qualname":"::Function::block_succs","value":"pub fn block_succs(&Self, BlockIx) -> Cow<, [BlockIx]>","parent":{"krate":0,"index":1760},"children":[],"decl_id":null,"docs":" Get CFG successors for a given block.\n","sig":null,"attributes":[{"value":"/ Get CFG successors for a given block.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":9054,"byte_end":9095,"line_start":221,"line_end":221,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1771},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":9231,"byte_end":9237,"line_start":225,"line_end":225,"column_start":8,"column_end":14},"name":"is_ret","qualname":"::Function::is_ret","value":"pub fn is_ret(&Self, InstIx) -> bool","parent":{"krate":0,"index":1760},"children":[],"decl_id":null,"docs":" Determine whether an instruction is a return instruction.\n","sig":null,"attributes":[{"value":"/ Determine whether an instruction is a return instruction.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":9162,"byte_end":9223,"line_start":224,"line_end":224,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1772},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":10157,"byte_end":10180,"line_start":241,"line_end":241,"column_start":8,"column_end":31},"name":"is_included_in_clobbers","qualname":"::Function::is_included_in_clobbers","value":"pub fn is_included_in_clobbers(&Self, &Self::Inst) -> bool","parent":{"krate":0,"index":1760},"children":[],"decl_id":null,"docs":" Determine whether an instruction should be considered while computing\n the set of registers that need to be saved/restored in the function's\n prologue/epilogue, that is, the registers returned in\n `clobbered_registers` in `RegAllocResult`.  computation. Only\n instructions for which this function returns `true` will be used to\n compute that set.","sig":null,"attributes":[{"value":"/ Determine whether an instruction should be considered while computing","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":9273,"byte_end":9346,"line_start":227,"line_end":227,"column_start":5,"column_end":78}},{"value":"/ the set of registers that need to be saved/restored in the function's","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":9351,"byte_end":9424,"line_start":228,"line_end":228,"column_start":5,"column_end":78}},{"value":"/ prologue/epilogue, that is, the registers returned in","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":9429,"byte_end":9486,"line_start":229,"line_end":229,"column_start":5,"column_end":62}},{"value":"/ `clobbered_registers` in `RegAllocResult`.  computation. Only","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":9491,"byte_end":9556,"line_start":230,"line_end":230,"column_start":5,"column_end":70}},{"value":"/ instructions for which this function returns `true` will be used to","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":9561,"byte_end":9632,"line_start":231,"line_end":231,"column_start":5,"column_end":76}},{"value":"/ compute that set.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":9637,"byte_end":9658,"line_start":232,"line_end":232,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":9663,"byte_end":9666,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ One reason that a client might *not* want an instruction to be included","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":9671,"byte_end":9746,"line_start":234,"line_end":234,"column_start":5,"column_end":80}},{"value":"/ would be if it can handle the clobbers some other way: for example,","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":9751,"byte_end":9822,"line_start":235,"line_end":235,"column_start":5,"column_end":76}},{"value":"/ ABI-support code might exclude call instructions' defs and mods from the","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":9827,"byte_end":9903,"line_start":236,"line_end":236,"column_start":5,"column_end":81}},{"value":"/ clobber set, because (given the callee has same ABI as the caller) the","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":9908,"byte_end":9982,"line_start":237,"line_end":237,"column_start":5,"column_end":79}},{"value":"/ registers possibly written by the callee are all registers that the","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":9987,"byte_end":10058,"line_start":238,"line_end":238,"column_start":5,"column_end":76}},{"value":"/ caller is also allowed to clobber (not save/restore in","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":10063,"byte_end":10121,"line_start":239,"line_end":239,"column_start":5,"column_end":63}},{"value":"/ prologue/epilogue).","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":10126,"byte_end":10149,"line_start":240,"line_end":240,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1773},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":10496,"byte_end":10504,"line_start":252,"line_end":252,"column_start":8,"column_end":16},"name":"get_regs","qualname":"::Function::get_regs","value":"pub fn get_regs(&Self::Inst, &mut RegUsageCollector)","parent":{"krate":0,"index":1760},"children":[],"decl_id":null,"docs":" Add to `collector` the used, defined, and modified registers for an\n instruction.\n","sig":null,"attributes":[{"value":"/ Add to `collector` the used, defined, and modified registers for an","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":10396,"byte_end":10467,"line_start":250,"line_end":250,"column_start":5,"column_end":76}},{"value":"/ instruction.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":10472,"byte_end":10488,"line_start":251,"line_end":251,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1774},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":11232,"byte_end":11240,"line_start":264,"line_end":264,"column_start":8,"column_end":16},"name":"map_regs","qualname":"::Function::map_regs","value":"pub fn map_regs<RUM: RegUsageMapper>(&mut Self::Inst, &RUM)","parent":{"krate":0,"index":1760},"children":[],"decl_id":null,"docs":" Map each register slot through a virtual-to-real mapping indexed\n by virtual register. The two separate maps in `maps.pre` and\n `maps.post` provide the mapping to use for uses (which semantically\n occur just prior to the instruction's effect) and defs (which\n semantically occur just after the instruction's effect). Regs that were\n \"modified\" can use either map; the vreg should be the same in both.","sig":null,"attributes":[{"value":"/ Map each register slot through a virtual-to-real mapping indexed","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":10565,"byte_end":10633,"line_start":254,"line_end":254,"column_start":5,"column_end":73}},{"value":"/ by virtual register. The two separate maps in `maps.pre` and","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":10638,"byte_end":10702,"line_start":255,"line_end":255,"column_start":5,"column_end":69}},{"value":"/ `maps.post` provide the mapping to use for uses (which semantically","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":10707,"byte_end":10778,"line_start":256,"line_end":256,"column_start":5,"column_end":76}},{"value":"/ occur just prior to the instruction's effect) and defs (which","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":10783,"byte_end":10848,"line_start":257,"line_end":257,"column_start":5,"column_end":70}},{"value":"/ semantically occur just after the instruction's effect). Regs that were","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":10853,"byte_end":10928,"line_start":258,"line_end":258,"column_start":5,"column_end":80}},{"value":"/ \"modified\" can use either map; the vreg should be the same in both.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":10933,"byte_end":11004,"line_start":259,"line_end":259,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":11009,"byte_end":11012,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ Note that this does not take a `self`, because we want to allow the","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":11017,"byte_end":11088,"line_start":261,"line_end":261,"column_start":5,"column_end":76}},{"value":"/ regalloc to have a mutable borrow of an insn (which borrows the whole","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":11093,"byte_end":11166,"line_start":262,"line_end":262,"column_start":5,"column_end":78}},{"value":"/ Function in turn) outstanding while calling this.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":11171,"byte_end":11224,"line_start":263,"line_end":263,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1776},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":11386,"byte_end":11393,"line_start":267,"line_end":267,"column_start":8,"column_end":15},"name":"is_move","qualname":"::Function::is_move","value":"pub fn is_move(&Self, &Self::Inst) -> Option<(Writable<Reg>, Reg)>","parent":{"krate":0,"index":1760},"children":[],"decl_id":null,"docs":" Allow the regalloc to query whether this is a move. Returns (dst, src).\n","sig":null,"attributes":[{"value":"/ Allow the regalloc to query whether this is a move. Returns (dst, src).","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":11303,"byte_end":11378,"line_start":266,"line_end":266,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":1777},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":11718,"byte_end":11731,"line_start":272,"line_end":272,"column_start":8,"column_end":21},"name":"get_num_vregs","qualname":"::Function::get_num_vregs","value":"pub fn get_num_vregs(&Self) -> usize","parent":{"krate":0,"index":1760},"children":[],"decl_id":null,"docs":" Get the precise number of `VirtualReg` in use in this function, to allow preallocating data\n structures. This number *must* be a correct lower-bound, otherwise invalid index failures\n may happen; it is of course better if it is exact.\n","sig":null,"attributes":[{"value":"/ Get the precise number of `VirtualReg` in use in this function, to allow preallocating data","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":11458,"byte_end":11553,"line_start":269,"line_end":269,"column_start":5,"column_end":100}},{"value":"/ structures. This number *must* be a correct lower-bound, otherwise invalid index failures","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":11558,"byte_end":11651,"line_start":270,"line_end":270,"column_start":5,"column_end":98}},{"value":"/ may happen; it is of course better if it is exact.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":11656,"byte_end":11710,"line_start":271,"line_end":271,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1778},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":12508,"byte_end":12526,"line_start":289,"line_end":289,"column_start":8,"column_end":26},"name":"get_spillslot_size","qualname":"::Function::get_spillslot_size","value":"pub fn get_spillslot_size(&Self, RegClass, VirtualReg) -> u32","parent":{"krate":0,"index":1760},"children":[],"decl_id":null,"docs":" How many logical spill slots does the given regclass require?  E.g., on a\n 64-bit machine, spill slots may nominally be 64-bit words, but a 128-bit\n vector value will require two slots.  The regalloc will always align on\n this size.","sig":null,"attributes":[{"value":"/ How many logical spill slots does the given regclass require?  E.g., on a","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":11821,"byte_end":11898,"line_start":278,"line_end":278,"column_start":5,"column_end":82}},{"value":"/ 64-bit machine, spill slots may nominally be 64-bit words, but a 128-bit","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":11903,"byte_end":11979,"line_start":279,"line_end":279,"column_start":5,"column_end":81}},{"value":"/ vector value will require two slots.  The regalloc will always align on","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":11984,"byte_end":12059,"line_start":280,"line_end":280,"column_start":5,"column_end":80}},{"value":"/ this size.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":12064,"byte_end":12078,"line_start":281,"line_end":281,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":12083,"byte_end":12086,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ This passes the associated virtual register to the client as well,","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":12091,"byte_end":12161,"line_start":283,"line_end":283,"column_start":5,"column_end":75}},{"value":"/ because the way in which we spill a real register may depend on the","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":12166,"byte_end":12237,"line_start":284,"line_end":284,"column_start":5,"column_end":76}},{"value":"/ value that we are using it for. E.g., if a machine has V128 registers","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":12242,"byte_end":12315,"line_start":285,"line_end":285,"column_start":5,"column_end":78}},{"value":"/ but we also use them for F32 and F64 values, we may use a different","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":12320,"byte_end":12391,"line_start":286,"line_end":286,"column_start":5,"column_end":76}},{"value":"/ store-slot size and smaller-operand store/load instructions for an F64","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":12396,"byte_end":12470,"line_start":287,"line_end":287,"column_start":5,"column_end":79}},{"value":"/ than for a true V128.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":12475,"byte_end":12500,"line_start":288,"line_end":288,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1779},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":13075,"byte_end":13084,"line_start":297,"line_end":297,"column_start":8,"column_end":17},"name":"gen_spill","qualname":"::Function::gen_spill","value":"pub fn gen_spill(&Self, SpillSlot, RealReg, Option<VirtualReg>) -> Self::Inst","parent":{"krate":0,"index":1760},"children":[],"decl_id":null,"docs":" Generate a spill instruction for insertion into the instruction\n sequence. The associated virtual register (whose value is being spilled)\n is passed, if it exists, so that the client may make decisions about the\n instruction to generate based on the type of value in question.  Because\n the register allocator will insert spill instructions at arbitrary points,\n the returned instruction here must not modify the machine's condition codes.\n","sig":null,"attributes":[{"value":"/ Generate a spill instruction for insertion into the instruction","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":12589,"byte_end":12656,"line_start":291,"line_end":291,"column_start":5,"column_end":72}},{"value":"/ sequence. The associated virtual register (whose value is being spilled)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":12661,"byte_end":12737,"line_start":292,"line_end":292,"column_start":5,"column_end":81}},{"value":"/ is passed, if it exists, so that the client may make decisions about the","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":12742,"byte_end":12818,"line_start":293,"line_end":293,"column_start":5,"column_end":81}},{"value":"/ instruction to generate based on the type of value in question.  Because","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":12823,"byte_end":12899,"line_start":294,"line_end":294,"column_start":5,"column_end":81}},{"value":"/ the register allocator will insert spill instructions at arbitrary points,","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":12904,"byte_end":12982,"line_start":295,"line_end":295,"column_start":5,"column_end":83}},{"value":"/ the returned instruction here must not modify the machine's condition codes.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":12987,"byte_end":13067,"line_start":296,"line_end":296,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1780},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":13498,"byte_end":13508,"line_start":308,"line_end":308,"column_start":8,"column_end":18},"name":"gen_reload","qualname":"::Function::gen_reload","value":"pub fn gen_reload(&Self, Writable<RealReg>, SpillSlot, Option<VirtualReg>)\n-> Self::Inst","parent":{"krate":0,"index":1760},"children":[],"decl_id":null,"docs":" Generate a reload instruction for insertion into the instruction\n sequence. The associated virtual register (whose value is being loaded)\n is passed as well, if it exists.  The returned instruction must not modify\n the machine's condition codes.\n","sig":null,"attributes":[{"value":"/ Generate a reload instruction for insertion into the instruction","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":13220,"byte_end":13288,"line_start":304,"line_end":304,"column_start":5,"column_end":73}},{"value":"/ sequence. The associated virtual register (whose value is being loaded)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":13293,"byte_end":13368,"line_start":305,"line_end":305,"column_start":5,"column_end":80}},{"value":"/ is passed as well, if it exists.  The returned instruction must not modify","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":13373,"byte_end":13451,"line_start":306,"line_end":306,"column_start":5,"column_end":83}},{"value":"/ the machine's condition codes.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":13456,"byte_end":13490,"line_start":307,"line_end":307,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1781},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":13887,"byte_end":13895,"line_start":318,"line_end":318,"column_start":8,"column_end":16},"name":"gen_move","qualname":"::Function::gen_move","value":"pub fn gen_move(&Self, Writable<RealReg>, RealReg, VirtualReg) -> Self::Inst","parent":{"krate":0,"index":1760},"children":[],"decl_id":null,"docs":" Generate a register-to-register move for insertion into the instruction\n sequence. The associated virtual register is passed as well.  The\n returned instruction must not modify the machine's condition codes.\n","sig":null,"attributes":[{"value":"/ Generate a register-to-register move for insertion into the instruction","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":13654,"byte_end":13729,"line_start":315,"line_end":315,"column_start":5,"column_end":80}},{"value":"/ sequence. The associated virtual register is passed as well.  The","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":13734,"byte_end":13803,"line_start":316,"line_end":316,"column_start":5,"column_end":74}},{"value":"/ returned instruction must not modify the machine's condition codes.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":13808,"byte_end":13879,"line_start":317,"line_end":317,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":1782},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":14103,"byte_end":14119,"line_start":326,"line_end":326,"column_start":8,"column_end":24},"name":"gen_zero_len_nop","qualname":"::Function::gen_zero_len_nop","value":"pub fn gen_zero_len_nop(&Self) -> Self::Inst","parent":{"krate":0,"index":1760},"children":[],"decl_id":null,"docs":" Generate an instruction which is a no-op and has zero length.\n","sig":null,"attributes":[{"value":"/ Generate an instruction which is a no-op and has zero length.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":14030,"byte_end":14095,"line_start":325,"line_end":325,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1783},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":14761,"byte_end":14780,"line_start":339,"line_end":339,"column_start":8,"column_end":27},"name":"maybe_direct_reload","qualname":"::Function::maybe_direct_reload","value":"pub fn maybe_direct_reload(&Self, &Self::Inst, VirtualReg, SpillSlot)\n-> Option<Self::Inst>","parent":{"krate":0,"index":1760},"children":[],"decl_id":null,"docs":" Try to alter an existing instruction to use a value directly in a\n spillslot (accessing memory directly) instead of the given register. May\n be useful on ISAs that have mem/reg ops, like x86.","sig":null,"attributes":[{"value":"/ Try to alter an existing instruction to use a value directly in a","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":14147,"byte_end":14216,"line_start":328,"line_end":328,"column_start":5,"column_end":74}},{"value":"/ spillslot (accessing memory directly) instead of the given register. May","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":14221,"byte_end":14297,"line_start":329,"line_end":329,"column_start":5,"column_end":81}},{"value":"/ be useful on ISAs that have mem/reg ops, like x86.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":14302,"byte_end":14356,"line_start":330,"line_end":330,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":14361,"byte_end":14364,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ Note that this is not *quite* just fusing a load with the op; if the","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":14369,"byte_end":14441,"line_start":332,"line_end":332,"column_start":5,"column_end":77}},{"value":"/ value is def'd or modified, it should be written back to the spill slot","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":14446,"byte_end":14521,"line_start":333,"line_end":333,"column_start":5,"column_end":80}},{"value":"/ as well. In other words, it is just using the spillslot as if it were a","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":14526,"byte_end":14601,"line_start":334,"line_end":334,"column_start":5,"column_end":80}},{"value":"/ real register, for reads and/or writes.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":14606,"byte_end":14649,"line_start":335,"line_end":335,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":14654,"byte_end":14657,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ FIXME JRS 2020Feb06: state precisely the constraints on condition code","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":14662,"byte_end":14736,"line_start":337,"line_end":337,"column_start":5,"column_end":79}},{"value":"/ changes.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":14741,"byte_end":14753,"line_start":338,"line_end":338,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":1784},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":15350,"byte_end":15362,"line_start":354,"line_end":354,"column_start":8,"column_end":20},"name":"func_liveins","qualname":"::Function::func_liveins","value":"pub fn func_liveins(&Self) -> Set<RealReg>","parent":{"krate":0,"index":1760},"children":[],"decl_id":null,"docs":" Return the set of registers that should be considered live at the\n beginning of the function. This is semantically equivalent to an\n instruction at the top of the entry block def'ing all registers in this\n set.\n","sig":null,"attributes":[{"value":"/ Return the set of registers that should be considered live at the","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":15107,"byte_end":15176,"line_start":350,"line_end":350,"column_start":5,"column_end":74}},{"value":"/ beginning of the function. This is semantically equivalent to an","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":15181,"byte_end":15249,"line_start":351,"line_end":351,"column_start":5,"column_end":73}},{"value":"/ instruction at the top of the entry block def'ing all registers in this","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":15254,"byte_end":15329,"line_start":352,"line_end":352,"column_start":5,"column_end":80}},{"value":"/ set.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":15334,"byte_end":15342,"line_start":353,"line_end":353,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":1785},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":15665,"byte_end":15678,"line_start":360,"line_end":360,"column_start":8,"column_end":21},"name":"func_liveouts","qualname":"::Function::func_liveouts","value":"pub fn func_liveouts(&Self) -> Set<RealReg>","parent":{"krate":0,"index":1760},"children":[],"decl_id":null,"docs":" Return the set of registers that should be considered live at the\n end of the function (after every return instruction). This is\n semantically equivalent to an instruction at each block with no successors\n that uses each of these registers.\n","sig":null,"attributes":[{"value":"/ Return the set of registers that should be considered live at the","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":15392,"byte_end":15461,"line_start":356,"line_end":356,"column_start":5,"column_end":74}},{"value":"/ end of the function (after every return instruction). This is","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":15466,"byte_end":15531,"line_start":357,"line_end":357,"column_start":5,"column_end":70}},{"value":"/ semantically equivalent to an instruction at each block with no successors","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":15536,"byte_end":15614,"line_start":358,"line_end":358,"column_start":5,"column_end":83}},{"value":"/ that uses each of these registers.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":15619,"byte_end":15657,"line_start":359,"line_end":359,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":1786},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":15788,"byte_end":15802,"line_start":364,"line_end":364,"column_start":12,"column_end":26},"name":"RegAllocResult","qualname":"::RegAllocResult","value":"RegAllocResult { insns, target_map, orig_insn_map, clobbered_registers, num_spill_slots, block_annotations, stackmaps, new_safepoint_insns }","parent":null,"children":[{"krate":0,"index":1788},{"krate":0,"index":1789},{"krate":0,"index":1790},{"krate":0,"index":1791},{"krate":0,"index":1792},{"krate":0,"index":1793},{"krate":0,"index":1794},{"krate":0,"index":1795}],"decl_id":null,"docs":" The result of register allocation.  Note that allocation can fail!\n","sig":null,"attributes":[{"value":"/ The result of register allocation.  Note that allocation can fail!","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":15706,"byte_end":15776,"line_start":363,"line_end":363,"column_start":1,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":1788},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":16003,"byte_end":16008,"line_start":368,"line_end":368,"column_start":9,"column_end":14},"name":"insns","qualname":"::RegAllocResult::insns","value":"std::vec::Vec<<F as Function>::Inst>","parent":{"krate":0,"index":1786},"children":[],"decl_id":null,"docs":" A new sequence of instructions with all register slots filled with real\n registers, and spills/fills/moves possibly inserted (and unneeded moves\n elided).\n","sig":null,"attributes":[{"value":"/ A new sequence of instructions with all register slots filled with real","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":15822,"byte_end":15897,"line_start":365,"line_end":365,"column_start":5,"column_end":80}},{"value":"/ registers, and spills/fills/moves possibly inserted (and unneeded moves","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":15902,"byte_end":15977,"line_start":366,"line_end":366,"column_start":5,"column_end":80}},{"value":"/ elided).","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":15982,"byte_end":15994,"line_start":367,"line_end":367,"column_start":5,"column_end":17}}]},{"kind":"Field","id":{"krate":0,"index":1789},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":16230,"byte_end":16240,"line_start":373,"line_end":373,"column_start":9,"column_end":19},"name":"target_map","qualname":"::RegAllocResult::target_map","value":"data_structures::TypedIxVec<data_structures::BlockIx, data_structures::InstIx>","parent":{"krate":0,"index":1786},"children":[],"decl_id":null,"docs":" Basic-block start indices for the new instruction list, indexed by the\n original basic block indices. May be used by the client to, e.g., remap\n branch targets appropriately.\n","sig":null,"attributes":[{"value":"/ Basic-block start indices for the new instruction list, indexed by the","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":16029,"byte_end":16103,"line_start":370,"line_end":370,"column_start":5,"column_end":79}},{"value":"/ original basic block indices. May be used by the client to, e.g., remap","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":16108,"byte_end":16183,"line_start":371,"line_end":371,"column_start":5,"column_end":80}},{"value":"/ branch targets appropriately.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":16188,"byte_end":16221,"line_start":372,"line_end":372,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":1790},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":16749,"byte_end":16762,"line_start":383,"line_end":383,"column_start":9,"column_end":22},"name":"orig_insn_map","qualname":"::RegAllocResult::orig_insn_map","value":"data_structures::TypedIxVec<data_structures::InstIx, data_structures::InstIx>","parent":{"krate":0,"index":1786},"children":[],"decl_id":null,"docs":" Full mapping from new instruction indices to original instruction\n indices. May be needed by the client to, for example, update metadata\n such as debug/source-location info as the instructions are spliced\n and reordered.","sig":null,"attributes":[{"value":"/ Full mapping from new instruction indices to original instruction","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":16276,"byte_end":16345,"line_start":375,"line_end":375,"column_start":5,"column_end":74}},{"value":"/ indices. May be needed by the client to, for example, update metadata","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":16350,"byte_end":16423,"line_start":376,"line_end":376,"column_start":5,"column_end":78}},{"value":"/ such as debug/source-location info as the instructions are spliced","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":16428,"byte_end":16498,"line_start":377,"line_end":377,"column_start":5,"column_end":75}},{"value":"/ and reordered.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":16503,"byte_end":16521,"line_start":378,"line_end":378,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":16526,"byte_end":16529,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ Each entry is an `InstIx`, but may be `InstIx::invalid_value()` if the","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":16534,"byte_end":16608,"line_start":380,"line_end":380,"column_start":5,"column_end":79}},{"value":"/ new instruction at this new index was inserted by the allocator","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":16613,"byte_end":16680,"line_start":381,"line_end":381,"column_start":5,"column_end":72}},{"value":"/ (i.e., if it is a load, spill or move instruction).","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":16685,"byte_end":16740,"line_start":382,"line_end":382,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":1791},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":17199,"byte_end":17218,"line_start":390,"line_end":390,"column_start":9,"column_end":28},"name":"clobbered_registers","qualname":"::RegAllocResult::clobbered_registers","value":"data_structures::Set<data_structures::RealReg>","parent":{"krate":0,"index":1786},"children":[],"decl_id":null,"docs":" Which real registers were overwritten? This will contain all real regs\n that appear as defs or modifies in register slots of the output\n instruction list.  This will only list registers that are available to\n the allocator.  If one of the instructions clobbers a register which\n isn't available to the allocator, it won't be mentioned here.\n","sig":null,"attributes":[{"value":"/ Which real registers were overwritten? This will contain all real regs","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":16818,"byte_end":16892,"line_start":385,"line_end":385,"column_start":5,"column_end":79}},{"value":"/ that appear as defs or modifies in register slots of the output","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":16897,"byte_end":16964,"line_start":386,"line_end":386,"column_start":5,"column_end":72}},{"value":"/ instruction list.  This will only list registers that are available to","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":16969,"byte_end":17043,"line_start":387,"line_end":387,"column_start":5,"column_end":79}},{"value":"/ the allocator.  If one of the instructions clobbers a register which","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":17048,"byte_end":17120,"line_start":388,"line_end":388,"column_start":5,"column_end":77}},{"value":"/ isn't available to the allocator, it won't be mentioned here.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":17125,"byte_end":17190,"line_start":389,"line_end":389,"column_start":5,"column_end":70}}]},{"kind":"Field","id":{"krate":0,"index":1792},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":17283,"byte_end":17298,"line_start":393,"line_end":393,"column_start":9,"column_end":24},"name":"num_spill_slots","qualname":"::RegAllocResult::num_spill_slots","value":"u32","parent":{"krate":0,"index":1786},"children":[],"decl_id":null,"docs":" How many spill slots were used?\n","sig":null,"attributes":[{"value":"/ How many spill slots were used?","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":17239,"byte_end":17274,"line_start":392,"line_end":392,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":1793},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":17540,"byte_end":17557,"line_start":398,"line_end":398,"column_start":9,"column_end":26},"name":"block_annotations","qualname":"::RegAllocResult::block_annotations","value":"std::option::Option<data_structures::TypedIxVec<data_structures::BlockIx, std::vec::Vec<std::string::String>>>","parent":{"krate":0,"index":1786},"children":[],"decl_id":null,"docs":" Block annotation strings, for debugging.  Requires requesting in the\n call to `allocate_registers`.  Creating of these annotations is\n potentially expensive, so don't request them if you don't need them.\n","sig":null,"attributes":[{"value":"/ Block annotation strings, for debugging.  Requires requesting in the","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":17310,"byte_end":17382,"line_start":395,"line_end":395,"column_start":5,"column_end":77}},{"value":"/ call to `allocate_registers`.  Creating of these annotations is","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":17387,"byte_end":17454,"line_start":396,"line_end":396,"column_start":5,"column_end":72}},{"value":"/ potentially expensive, so don't request them if you don't need them.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":17459,"byte_end":17531,"line_start":397,"line_end":397,"column_start":5,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":1794},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":17741,"byte_end":17750,"line_start":402,"line_end":402,"column_start":9,"column_end":18},"name":"stackmaps","qualname":"::RegAllocResult::stackmaps","value":"std::vec::Vec<std::vec::Vec<data_structures::SpillSlot>>","parent":{"krate":0,"index":1786},"children":[],"decl_id":null,"docs":" If stackmap support was requested: one stackmap for each of the safepoint instructions\n declared.  Otherwise empty.\n","sig":null,"attributes":[{"value":"/ If stackmap support was requested: one stackmap for each of the safepoint instructions","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":17606,"byte_end":17696,"line_start":400,"line_end":400,"column_start":5,"column_end":95}},{"value":"/ declared.  Otherwise empty.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":17701,"byte_end":17732,"line_start":401,"line_end":401,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":1795},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":17974,"byte_end":17993,"line_start":406,"line_end":406,"column_start":9,"column_end":28},"name":"new_safepoint_insns","qualname":"::RegAllocResult::new_safepoint_insns","value":"std::vec::Vec<data_structures::InstIx>","parent":{"krate":0,"index":1786},"children":[],"decl_id":null,"docs":" If stackmap support was requested: one InstIx for each safepoint instruction declared,\n indicating the corresponding location in the final instruction stream.  Otherwise empty.\n","sig":null,"attributes":[{"value":"/ If stackmap support was requested: one InstIx for each safepoint instruction declared,","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":17778,"byte_end":17868,"line_start":404,"line_end":404,"column_start":5,"column_end":95}},{"value":"/ indicating the corresponding location in the final instruction stream.  Otherwise empty.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":17873,"byte_end":17965,"line_start":405,"line_end":405,"column_start":5,"column_end":97}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3109},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":18147,"byte_end":18159,"line_start":412,"line_end":412,"column_start":5,"column_end":17},"name":"Backtracking","qualname":"::AlgorithmWithDefaults::Backtracking","value":"AlgorithmWithDefaults::Backtracking","parent":{"krate":0,"index":3108},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3111},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":18165,"byte_end":18175,"line_start":413,"line_end":413,"column_start":5,"column_end":15},"name":"LinearScan","qualname":"::AlgorithmWithDefaults::LinearScan","value":"AlgorithmWithDefaults::LinearScan","parent":{"krate":0,"index":3108},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3108},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":18119,"byte_end":18140,"line_start":411,"line_end":411,"column_start":10,"column_end":31},"name":"AlgorithmWithDefaults","qualname":"::AlgorithmWithDefaults","value":"pub enum AlgorithmWithDefaults { Backtracking, LinearScan, }","parent":null,"children":[{"krate":0,"index":3109},{"krate":0,"index":3111}],"decl_id":null,"docs":" A choice of register allocation algorithm to run.\n","sig":null,"attributes":[{"value":"/ A choice of register allocation algorithm to run.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":18011,"byte_end":18064,"line_start":409,"line_end":409,"column_start":1,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3125},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":18376,"byte_end":18390,"line_start":422,"line_end":422,"column_start":5,"column_end":19},"name":"OutOfRegisters","qualname":"::RegAllocError::OutOfRegisters","value":"RegAllocError::OutOfRegisters(RegClass)","parent":{"krate":0,"index":3124},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3128},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":18406,"byte_end":18432,"line_start":423,"line_end":423,"column_start":5,"column_end":31},"name":"MissingSuggestedScratchReg","qualname":"::RegAllocError::MissingSuggestedScratchReg","value":"RegAllocError::MissingSuggestedScratchReg(RegClass)","parent":{"krate":0,"index":3124},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3131},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":18448,"byte_end":18456,"line_start":424,"line_end":424,"column_start":5,"column_end":13},"name":"Analysis","qualname":"::RegAllocError::Analysis","value":"RegAllocError::Analysis(AnalysisError)","parent":{"krate":0,"index":3124},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3134},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":18477,"byte_end":18487,"line_start":425,"line_end":425,"column_start":5,"column_end":15},"name":"RegChecker","qualname":"::RegAllocError::RegChecker","value":"RegAllocError::RegChecker(CheckerErrors)","parent":{"krate":0,"index":3124},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3137},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":18508,"byte_end":18513,"line_start":426,"line_end":426,"column_start":5,"column_end":10},"name":"Other","qualname":"::RegAllocError::Other","value":"RegAllocError::Other(String)","parent":{"krate":0,"index":3124},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3124},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":18356,"byte_end":18369,"line_start":421,"line_end":421,"column_start":10,"column_end":23},"name":"RegAllocError","qualname":"::RegAllocError","value":"pub enum RegAllocError {\n    OutOfRegisters(RegClass),\n    MissingSuggestedScratchReg(RegClass),\n    Analysis(AnalysisError),\n    RegChecker(CheckerErrors),\n    Other(String),\n}","parent":null,"children":[{"krate":0,"index":3125},{"krate":0,"index":3128},{"krate":0,"index":3131},{"krate":0,"index":3134},{"krate":0,"index":3137}],"decl_id":null,"docs":" An error from the register allocator.\n","sig":null,"attributes":[{"value":"/ An error from the register allocator.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":18281,"byte_end":18322,"line_start":419,"line_end":419,"column_start":1,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3145},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":18799,"byte_end":18809,"line_start":440,"line_end":440,"column_start":5,"column_end":15},"name":"LinearScan","qualname":"::Algorithm::LinearScan","value":"Algorithm::LinearScan(LinearScanOptions)","parent":{"krate":0,"index":3144},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3148},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":18834,"byte_end":18846,"line_start":441,"line_end":441,"column_start":5,"column_end":17},"name":"Backtracking","qualname":"::Algorithm::Backtracking","value":"Algorithm::Backtracking(BacktrackingOptions)","parent":{"krate":0,"index":3144},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3144},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":18783,"byte_end":18792,"line_start":439,"line_end":439,"column_start":10,"column_end":19},"name":"Algorithm","qualname":"::Algorithm","value":"pub enum Algorithm {\n    LinearScan(LinearScanOptions),\n    Backtracking(BacktrackingOptions),\n}","parent":null,"children":[{"krate":0,"index":3145},{"krate":0,"index":3148}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3153},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":19227,"byte_end":19234,"line_start":455,"line_end":455,"column_start":12,"column_end":19},"name":"Options","qualname":"::Options","value":"Options { run_checker, algorithm }","parent":null,"children":[{"krate":0,"index":3154},{"krate":0,"index":3155}],"decl_id":null,"docs":" Tweakable options shared by all the allocators.\n","sig":null,"attributes":[{"value":"/ Tweakable options shared by all the allocators.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":19147,"byte_end":19198,"line_start":453,"line_end":453,"column_start":1,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":3154},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":19392,"byte_end":19403,"line_start":458,"line_end":458,"column_start":9,"column_end":20},"name":"run_checker","qualname":"::Options::run_checker","value":"bool","parent":{"krate":0,"index":3153},"children":[],"decl_id":null,"docs":" Should the register allocator check that its results are valid? This adds runtime to the\n compiler, so this is disabled by default.\n","sig":null,"attributes":[{"value":"/ Should the register allocator check that its results are valid? This adds runtime to the","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":19241,"byte_end":19333,"line_start":456,"line_end":456,"column_start":5,"column_end":97}},{"value":"/ compiler, so this is disabled by default.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":19338,"byte_end":19383,"line_start":457,"line_end":457,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":3155},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":19589,"byte_end":19598,"line_start":462,"line_end":462,"column_start":9,"column_end":18},"name":"algorithm","qualname":"::Options::algorithm","value":"Algorithm","parent":{"krate":0,"index":3153},"children":[],"decl_id":null,"docs":" Which algorithm should be used for register allocation? By default, selects backtracking,\n which is slower to compile but creates code of better quality.\n","sig":null,"attributes":[{"value":"/ Which algorithm should be used for register allocation? By default, selects backtracking,","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":19416,"byte_end":19509,"line_start":460,"line_end":460,"column_start":5,"column_end":98}},{"value":"/ which is slower to compile but creates code of better quality.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":19514,"byte_end":19580,"line_start":461,"line_end":461,"column_start":5,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":1810},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":20125,"byte_end":20144,"line_start":485,"line_end":485,"column_start":12,"column_end":31},"name":"StackmapRequestInfo","qualname":"::StackmapRequestInfo","value":"StackmapRequestInfo { reftype_class, reftyped_vregs, safepoint_insns }","parent":null,"children":[{"krate":0,"index":1811},{"krate":0,"index":1812},{"krate":0,"index":1813}],"decl_id":null,"docs":" A structure with which callers can request stackmap information.\n","sig":null,"attributes":[{"value":"/ A structure with which callers can request stackmap information.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":20045,"byte_end":20113,"line_start":484,"line_end":484,"column_start":1,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":1811},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":20321,"byte_end":20334,"line_start":488,"line_end":488,"column_start":9,"column_end":22},"name":"reftype_class","qualname":"::StackmapRequestInfo::reftype_class","value":"data_structures::RegClass","parent":{"krate":0,"index":1810},"children":[],"decl_id":null,"docs":" The register class that holds reftypes.  This may only be RegClass::I32 or\n RegClass::I64, and it must equal the word size of the target architecture.\n","sig":null,"attributes":[{"value":"/ The register class that holds reftypes.  This may only be RegClass::I32 or","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":20151,"byte_end":20229,"line_start":486,"line_end":486,"column_start":5,"column_end":83}},{"value":"/ RegClass::I64, and it must equal the word size of the target architecture.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":20234,"byte_end":20312,"line_start":487,"line_end":487,"column_start":5,"column_end":83}}]},{"kind":"Field","id":{"krate":0,"index":1812},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":20538,"byte_end":20552,"line_start":492,"line_end":492,"column_start":9,"column_end":23},"name":"reftyped_vregs","qualname":"::StackmapRequestInfo::reftyped_vregs","value":"std::vec::Vec<data_structures::VirtualReg>","parent":{"krate":0,"index":1810},"children":[],"decl_id":null,"docs":" The virtual regs that hold reftyped values.  These must be provided in ascending order\n of register index and be duplicate-free.  They must have class `reftype_class`.\n","sig":null,"attributes":[{"value":"/ The virtual regs that hold reftyped values.  These must be provided in ascending order","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":20351,"byte_end":20441,"line_start":490,"line_end":490,"column_start":5,"column_end":95}},{"value":"/ of register index and be duplicate-free.  They must have class `reftype_class`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":20446,"byte_end":20529,"line_start":491,"line_end":491,"column_start":5,"column_end":88}}]},{"kind":"Field","id":{"krate":0,"index":1813},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":21230,"byte_end":21245,"line_start":501,"line_end":501,"column_start":9,"column_end":24},"name":"safepoint_insns","qualname":"::StackmapRequestInfo::safepoint_insns","value":"std::vec::Vec<data_structures::InstIx>","parent":{"krate":0,"index":1810},"children":[],"decl_id":null,"docs":" The indices of instructions for which the allocator will construct stackmaps.  These\n must be provided in ascending order and be duplicate-free.  The specified instructions\n may not be coalescable move instructions (as the allocator may remove those) and they\n may not modify any register carrying a reftyped value (they may \"def\" or \"use\" them,\n though).  The reason is that, at a safepoint, the client's garbage collector may change\n the values of all live references, so it would be meaningless for a safepoint\n instruction also to attempt to do that -- we'd end up with two competing new values.\n","sig":null,"attributes":[{"value":"/ The indices of instructions for which the allocator will construct stackmaps.  These","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":20576,"byte_end":20664,"line_start":494,"line_end":494,"column_start":5,"column_end":93}},{"value":"/ must be provided in ascending order and be duplicate-free.  The specified instructions","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":20669,"byte_end":20759,"line_start":495,"line_end":495,"column_start":5,"column_end":95}},{"value":"/ may not be coalescable move instructions (as the allocator may remove those) and they","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":20764,"byte_end":20853,"line_start":496,"line_end":496,"column_start":5,"column_end":94}},{"value":"/ may not modify any register carrying a reftyped value (they may \"def\" or \"use\" them,","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":20858,"byte_end":20946,"line_start":497,"line_end":497,"column_start":5,"column_end":93}},{"value":"/ though).  The reason is that, at a safepoint, the client's garbage collector may change","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":20951,"byte_end":21042,"line_start":498,"line_end":498,"column_start":5,"column_end":96}},{"value":"/ the values of all live references, so it would be meaningless for a safepoint","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":21047,"byte_end":21128,"line_start":499,"line_end":499,"column_start":5,"column_end":86}},{"value":"/ instruction also to attempt to do that -- we'd end up with two competing new values.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":21133,"byte_end":21221,"line_start":500,"line_end":500,"column_start":5,"column_end":93}}]},{"kind":"Function","id":{"krate":0,"index":1814},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":22164,"byte_end":22192,"line_start":519,"line_end":519,"column_start":8,"column_end":36},"name":"allocate_registers_with_opts","qualname":"::allocate_registers_with_opts","value":"pub fn allocate_registers_with_opts<F: Function>(&mut F, &RealRegUniverse,\n                                                 Option<&StackmapRequestInfo>,\n                                                 Options)\n-> Result<RegAllocResult<F>, RegAllocError>","parent":null,"children":[],"decl_id":null,"docs":" Allocate registers for a function's code, given a universe of real registers that we are\n allowed to use.  Optionally, stackmap support may be requested.","sig":null,"attributes":[{"value":"/ Allocate registers for a function's code, given a universe of real registers that we are","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":21263,"byte_end":21355,"line_start":504,"line_end":504,"column_start":1,"column_end":93}},{"value":"/ allowed to use.  Optionally, stackmap support may be requested.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":21356,"byte_end":21423,"line_start":505,"line_end":505,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":21424,"byte_end":21427,"line_start":506,"line_end":506,"column_start":1,"column_end":4}},{"value":"/ The control flow graph must not contain any critical edges, that is, any edge coming from a","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":21428,"byte_end":21523,"line_start":507,"line_end":507,"column_start":1,"column_end":96}},{"value":"/ block with multiple successors must not flow into a block with multiple predecessors. The","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":21524,"byte_end":21617,"line_start":508,"line_end":508,"column_start":1,"column_end":94}},{"value":"/ embedder must have split critical edges before handing over the function to this function.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":21618,"byte_end":21712,"line_start":509,"line_end":509,"column_start":1,"column_end":95}},{"value":"/ Otherwise, an error will be returned.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":21713,"byte_end":21754,"line_start":510,"line_end":510,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":21755,"byte_end":21758,"line_start":511,"line_end":511,"column_start":1,"column_end":4}},{"value":"/ Allocation may succeed, returning a `RegAllocResult` with the new instruction sequence, or","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":21759,"byte_end":21853,"line_start":512,"line_end":512,"column_start":1,"column_end":95}},{"value":"/ it may fail, returning an error.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":21854,"byte_end":21890,"line_start":513,"line_end":513,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":21891,"byte_end":21894,"line_start":514,"line_end":514,"column_start":1,"column_end":4}},{"value":"/ Runtime options can be passed to the allocators, through the use of [Options] for options","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":21895,"byte_end":21988,"line_start":515,"line_end":515,"column_start":1,"column_end":94}},{"value":"/ common to all the backends. The choice of algorithm is done by passing a given [Algorithm]","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":21989,"byte_end":22083,"line_start":516,"line_end":516,"column_start":1,"column_end":95}},{"value":"/ instance, with options tailored for each algorithm.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":22084,"byte_end":22139,"line_start":517,"line_end":517,"column_start":1,"column_end":56}},{"value":"inline(never)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":22140,"byte_end":22156,"line_start":518,"line_end":518,"column_start":1,"column_end":17}}]},{"kind":"Function","id":{"krate":0,"index":1816},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":26359,"byte_end":26377,"line_start":619,"line_end":619,"column_start":8,"column_end":26},"name":"allocate_registers","qualname":"::allocate_registers","value":"pub fn allocate_registers<F: Function>(&mut F, &RealRegUniverse,\n                                       Option<&StackmapRequestInfo>,\n                                       AlgorithmWithDefaults)\n-> Result<RegAllocResult<F>, RegAllocError>","parent":null,"children":[],"decl_id":null,"docs":" Allocate registers for a function's code, given a universe of real registers that we are\n allowed to use.","sig":null,"attributes":[{"value":"/ Allocate registers for a function's code, given a universe of real registers that we are","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":25632,"byte_end":25724,"line_start":605,"line_end":605,"column_start":1,"column_end":93}},{"value":"/ allowed to use.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":25725,"byte_end":25744,"line_start":606,"line_end":606,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":25745,"byte_end":25748,"line_start":607,"line_end":607,"column_start":1,"column_end":4}},{"value":"/ The control flow graph must not contain any critical edges, that is, any edge coming from a","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":25749,"byte_end":25844,"line_start":608,"line_end":608,"column_start":1,"column_end":96}},{"value":"/ block with multiple successors must not flow into a block with multiple predecessors. The","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":25845,"byte_end":25938,"line_start":609,"line_end":609,"column_start":1,"column_end":94}},{"value":"/ embedder must have split critical edges before handing over the function to this function.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":25939,"byte_end":26033,"line_start":610,"line_end":610,"column_start":1,"column_end":95}},{"value":"/ Otherwise, an error will be returned.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":26034,"byte_end":26075,"line_start":611,"line_end":611,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":26076,"byte_end":26079,"line_start":612,"line_end":612,"column_start":1,"column_end":4}},{"value":"/ Allocate may succeed, returning a `RegAllocResult` with the new instruction sequence, or it may","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":26080,"byte_end":26179,"line_start":613,"line_end":613,"column_start":1,"column_end":100}},{"value":"/ fail, returning an error.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":26180,"byte_end":26209,"line_start":614,"line_end":614,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":26210,"byte_end":26213,"line_start":615,"line_end":615,"column_start":1,"column_end":4}},{"value":"/ This is a convenient function that uses standard options for the allocator, according to the","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":26214,"byte_end":26310,"line_start":616,"line_end":616,"column_start":1,"column_end":97}},{"value":"/ selected algorithm.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":26311,"byte_end":26334,"line_start":617,"line_end":617,"column_start":1,"column_end":24}},{"value":"inline(never)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":26335,"byte_end":26351,"line_start":618,"line_end":618,"column_start":1,"column_end":17}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\analysis_main.rs","byte_start":29481,"byte_end":29494,"line_start":57,"line_end":57,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":42}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\analysis_control_flow.rs","byte_start":40287,"byte_end":40305,"line_start":35,"line_end":35,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":80},{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\analysis_control_flow.rs","byte_start":63170,"byte_end":63177,"line_start":653,"line_end":653,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\analysis_data_flow.rs","byte_start":97031,"byte_end":97045,"line_start":799,"line_end":799,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":194}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\avl_tree.rs","byte_start":153689,"byte_end":153696,"line_start":27,"line_end":27,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":258}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\avl_tree.rs","byte_start":154876,"byte_end":154883,"line_start":61,"line_end":61,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":268},{"krate":0,"index":269},{"krate":0,"index":270}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\avl_tree.rs","byte_start":158662,"byte_end":158669,"line_start":160,"line_end":160,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":273},{"krate":0,"index":274},{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\avl_tree.rs","byte_start":186269,"byte_end":186280,"line_start":804,"line_end":804,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":301},{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\avl_tree.rs","byte_start":186928,"byte_end":186939,"line_start":828,"line_end":828,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":307},{"krate":0,"index":308}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\avl_tree.rs","byte_start":187512,"byte_end":187519,"line_start":847,"line_end":847,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":311},{"krate":0,"index":313},{"krate":0,"index":315},{"krate":0,"index":317},{"krate":0,"index":320}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\bt_coalescing_analysis.rs","byte_start":208749,"byte_end":208753,"line_start":107,"line_end":107,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":357}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\bt_coalescing_analysis.rs","byte_start":209044,"byte_end":209058,"line_start":118,"line_end":118,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":359},{"krate":0,"index":360}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\bt_commitment_map.rs","byte_start":236951,"byte_end":236970,"line_start":45,"line_end":45,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":405}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\bt_commitment_map.rs","byte_start":237077,"byte_end":237096,"line_start":50,"line_end":50,"column_start":20,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":407}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\bt_commitment_map.rs","byte_start":237280,"byte_end":237299,"line_start":56,"line_end":56,"column_start":21,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":409}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\bt_commitment_map.rs","byte_start":237505,"byte_end":237524,"line_start":62,"line_end":62,"column_start":21,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":411}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\bt_commitment_map.rs","byte_start":238101,"byte_end":238114,"line_start":79,"line_end":79,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":415}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\bt_commitment_map.rs","byte_start":238257,"byte_end":238270,"line_start":86,"line_end":86,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":417},{"krate":0,"index":418},{"krate":0,"index":420},{"krate":0,"index":422},{"krate":0,"index":424}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\bt_main.rs","byte_start":243270,"byte_end":243289,"line_start":37,"line_end":37,"column_start":27,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":493}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\bt_main.rs","byte_start":243419,"byte_end":243438,"line_start":45,"line_end":45,"column_start":21,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":495}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\bt_main.rs","byte_start":244377,"byte_end":244387,"line_start":72,"line_end":72,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":500},{"krate":0,"index":501},{"krate":0,"index":502},{"krate":0,"index":503}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\bt_main.rs","byte_start":251143,"byte_end":251153,"line_start":242,"line_end":242,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":509},{"krate":0,"index":514},{"krate":0,"index":515}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\bt_main.rs","byte_start":265936,"byte_end":265946,"line_start":609,"line_end":609,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":519}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\bt_main.rs","byte_start":267233,"byte_end":267245,"line_start":641,"line_end":641,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":521}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\bt_spillslot_allocator.rs","byte_start":324171,"byte_end":324190,"line_start":41,"line_end":41,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":560}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\bt_spillslot_allocator.rs","byte_start":325154,"byte_end":325170,"line_start":65,"line_end":65,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":568},{"krate":0,"index":569},{"krate":0,"index":570},{"krate":0,"index":571},{"krate":0,"index":572},{"krate":0,"index":573}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\bt_spillslot_allocator.rs","byte_start":331546,"byte_end":331564,"line_start":221,"line_end":221,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":583},{"krate":0,"index":584},{"krate":0,"index":585},{"krate":0,"index":586},{"krate":0,"index":588},{"krate":0,"index":589},{"krate":0,"index":591}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\bt_vlr_priority_queue.rs","byte_start":349682,"byte_end":349703,"line_start":71,"line_end":71,"column_start":6,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":604}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\bt_vlr_priority_queue.rs","byte_start":349918,"byte_end":349939,"line_start":81,"line_end":81,"column_start":20,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":606}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\bt_vlr_priority_queue.rs","byte_start":350074,"byte_end":350095,"line_start":86,"line_end":86,"column_start":13,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\bt_vlr_priority_queue.rs","byte_start":350119,"byte_end":350140,"line_start":87,"line_end":87,"column_start":21,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":609}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\bt_vlr_priority_queue.rs","byte_start":350256,"byte_end":350277,"line_start":92,"line_end":92,"column_start":14,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":611}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\bt_vlr_priority_queue.rs","byte_start":351004,"byte_end":351021,"line_start":112,"line_end":112,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":616},{"krate":0,"index":617},{"krate":0,"index":618},{"krate":0,"index":619},{"krate":0,"index":620},{"krate":0,"index":621}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\checker.rs","byte_start":357771,"byte_end":357783,"line_start":136,"line_end":136,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":649}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\checker.rs","byte_start":357865,"byte_end":357877,"line_start":142,"line_end":142,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":651}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\checker.rs","byte_start":358806,"byte_end":358818,"line_start":167,"line_end":167,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":653}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\checker.rs","byte_start":359277,"byte_end":359289,"line_start":187,"line_end":187,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":657},{"krate":0,"index":658},{"krate":0,"index":659},{"krate":0,"index":660},{"krate":0,"index":661},{"krate":0,"index":662},{"krate":0,"index":663}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\checker.rs","byte_start":368972,"byte_end":368979,"line_start":464,"line_end":464,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":669},{"krate":0,"index":671},{"krate":0,"index":672},{"krate":0,"index":677},{"krate":0,"index":678},{"krate":0,"index":679}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\checker.rs","byte_start":374675,"byte_end":374689,"line_start":624,"line_end":624,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":684},{"krate":0,"index":688},{"krate":0,"index":691}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":379607,"byte_end":379610,"line_start":45,"line_end":45,"column_start":46,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":716},{"krate":0,"index":717},{"krate":0,"index":718},{"krate":0,"index":719},{"krate":0,"index":720},{"krate":0,"index":721},{"krate":0,"index":722},{"krate":0,"index":723},{"krate":0,"index":724},{"krate":0,"index":725},{"krate":0,"index":726},{"krate":0,"index":727},{"krate":0,"index":728},{"krate":0,"index":729},{"krate":0,"index":730},{"krate":0,"index":731},{"krate":0,"index":732},{"krate":0,"index":734},{"krate":0,"index":737},{"krate":0,"index":740}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":382689,"byte_end":382692,"line_start":188,"line_end":188,"column_start":61,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":743}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":383511,"byte_end":383514,"line_start":211,"line_end":211,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":750}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":383659,"byte_end":383666,"line_start":218,"line_end":218,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":754},{"krate":0,"index":755}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":384581,"byte_end":384586,"line_start":254,"line_end":254,"column_start":53,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":762},{"krate":0,"index":763},{"krate":0,"index":764}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":384817,"byte_end":384822,"line_start":265,"line_end":265,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":767},{"krate":0,"index":768},{"krate":0,"index":769},{"krate":0,"index":770},{"krate":0,"index":771},{"krate":0,"index":772},{"krate":0,"index":773}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":385580,"byte_end":385590,"line_start":302,"line_end":302,"column_start":49,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":780},{"krate":0,"index":781}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":386199,"byte_end":386209,"line_start":324,"line_end":324,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":790},{"krate":0,"index":791},{"krate":0,"index":792},{"krate":0,"index":793},{"krate":0,"index":794},{"krate":0,"index":795},{"krate":0,"index":796},{"krate":0,"index":797},{"krate":0,"index":798},{"krate":0,"index":799},{"krate":0,"index":800},{"krate":0,"index":801},{"krate":0,"index":802},{"krate":0,"index":803},{"krate":0,"index":805},{"krate":0,"index":807}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":387976,"byte_end":387986,"line_start":388,"line_end":388,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":811},{"krate":0,"index":812}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":388168,"byte_end":388178,"line_start":398,"line_end":398,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":816}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":388345,"byte_end":388355,"line_start":407,"line_end":407,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":820}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":392318,"byte_end":392328,"line_start":531,"line_end":531,"column_start":43,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":825}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":393375,"byte_end":393383,"line_start":561,"line_end":561,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":828},{"krate":0,"index":829},{"krate":0,"index":830},{"krate":0,"index":831},{"krate":0,"index":832}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":396260,"byte_end":396263,"line_start":647,"line_end":647,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":835},{"krate":0,"index":836},{"krate":0,"index":837},{"krate":0,"index":838},{"krate":0,"index":839},{"krate":0,"index":840},{"krate":0,"index":841},{"krate":0,"index":842},{"krate":0,"index":843},{"krate":0,"index":844},{"krate":0,"index":845},{"krate":0,"index":846},{"krate":0,"index":847},{"krate":0,"index":848},{"krate":0,"index":849},{"krate":0,"index":850}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":399280,"byte_end":399283,"line_start":744,"line_end":744,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":852}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":400002,"byte_end":400005,"line_start":769,"line_end":769,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":854}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":400244,"byte_end":400251,"line_start":778,"line_end":778,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":856},{"krate":0,"index":857},{"krate":0,"index":858},{"krate":0,"index":859},{"krate":0,"index":860},{"krate":0,"index":861},{"krate":0,"index":862},{"krate":0,"index":863}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":401027,"byte_end":401034,"line_start":812,"line_end":812,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":865}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":401321,"byte_end":401324,"line_start":823,"line_end":823,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":867}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":401597,"byte_end":401607,"line_start":833,"line_end":833,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":869},{"krate":0,"index":870},{"krate":0,"index":871},{"krate":0,"index":872},{"krate":0,"index":873},{"krate":0,"index":874},{"krate":0,"index":875}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":402301,"byte_end":402311,"line_start":864,"line_end":864,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":877}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":402427,"byte_end":402430,"line_start":870,"line_end":870,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":879},{"krate":0,"index":882},{"krate":0,"index":885},{"krate":0,"index":888}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":404979,"byte_end":404982,"line_start":931,"line_end":931,"column_start":23,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":405008,"byte_end":405015,"line_start":932,"line_end":932,"column_start":23,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":405041,"byte_end":405051,"line_start":933,"line_end":933,"column_start":23,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":405078,"byte_end":405086,"line_start":935,"line_end":935,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":896},{"krate":0,"index":897},{"krate":0,"index":898}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":405715,"byte_end":405724,"line_start":961,"line_end":961,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":902},{"krate":0,"index":903},{"krate":0,"index":904},{"krate":0,"index":905},{"krate":0,"index":906}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":406271,"byte_end":406280,"line_start":983,"line_end":983,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":908}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":406837,"byte_end":406854,"line_start":1000,"line_end":1000,"column_start":10,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":914},{"krate":0,"index":915},{"krate":0,"index":916},{"krate":0,"index":917},{"krate":0,"index":918},{"krate":0,"index":919},{"krate":0,"index":920},{"krate":0,"index":921},{"krate":0,"index":922}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":408755,"byte_end":408762,"line_start":1059,"line_end":1059,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":924},{"krate":0,"index":925},{"krate":0,"index":926},{"krate":0,"index":927}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":409789,"byte_end":409801,"line_start":1097,"line_end":1097,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":929}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":410397,"byte_end":410413,"line_start":1120,"line_end":1120,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":934},{"krate":0,"index":935},{"krate":0,"index":936}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":411370,"byte_end":411377,"line_start":1148,"line_end":1148,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":938},{"krate":0,"index":939}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":411672,"byte_end":411688,"line_start":1163,"line_end":1163,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":941}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":415848,"byte_end":415863,"line_start":1257,"line_end":1257,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":943},{"krate":0,"index":944}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":422842,"byte_end":422847,"line_start":1429,"line_end":1429,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":947},{"krate":0,"index":948},{"krate":0,"index":949},{"krate":0,"index":950},{"krate":0,"index":951}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":423587,"byte_end":423592,"line_start":1464,"line_end":1464,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":953}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":424738,"byte_end":424747,"line_start":1496,"line_end":1496,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":955},{"krate":0,"index":956},{"krate":0,"index":957},{"krate":0,"index":958},{"krate":0,"index":959},{"krate":0,"index":960},{"krate":0,"index":961},{"krate":0,"index":962},{"krate":0,"index":963},{"krate":0,"index":964},{"krate":0,"index":965},{"krate":0,"index":966}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":426582,"byte_end":426591,"line_start":1565,"line_end":1565,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":968}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":428550,"byte_end":428559,"line_start":1614,"line_end":1614,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":970}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":428699,"byte_end":428708,"line_start":1620,"line_end":1620,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":972},{"krate":0,"index":973},{"krate":0,"index":974}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":430652,"byte_end":430661,"line_start":1680,"line_end":1680,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":978}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":431496,"byte_end":431509,"line_start":1699,"line_end":1699,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":980}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":433669,"byte_end":433685,"line_start":1745,"line_end":1745,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":982}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":434376,"byte_end":434394,"line_start":1768,"line_end":1768,"column_start":21,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":984}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":434503,"byte_end":434521,"line_start":1774,"line_end":1774,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":986},{"krate":0,"index":987},{"krate":0,"index":989},{"krate":0,"index":991},{"krate":0,"index":993}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":436915,"byte_end":436931,"line_start":1843,"line_end":1843,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":996}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":437037,"byte_end":437053,"line_start":1849,"line_end":1849,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":998},{"krate":0,"index":1000},{"krate":0,"index":1002},{"krate":0,"index":1003}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":439815,"byte_end":439824,"line_start":1926,"line_end":1926,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1006}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":440055,"byte_end":440064,"line_start":1935,"line_end":1935,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1008},{"krate":0,"index":1009},{"krate":0,"index":1010},{"krate":0,"index":1011},{"krate":0,"index":1012},{"krate":0,"index":1013},{"krate":0,"index":1014},{"krate":0,"index":1015}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":444595,"byte_end":444604,"line_start":2053,"line_end":2053,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1017}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":444863,"byte_end":444872,"line_start":2065,"line_end":2065,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1019}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":445738,"byte_end":445750,"line_start":2093,"line_end":2093,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1021}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":445889,"byte_end":445901,"line_start":2099,"line_end":2099,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1023}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":450086,"byte_end":450093,"line_start":2187,"line_end":2187,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1040},{"krate":0,"index":1041},{"krate":0,"index":1042},{"krate":0,"index":1043},{"krate":0,"index":1044},{"krate":0,"index":1045},{"krate":0,"index":1046}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":451188,"byte_end":451195,"line_start":2228,"line_end":2228,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1048}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\inst_stream.rs","byte_start":460250,"byte_end":460262,"line_start":45,"line_end":45,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1074},{"krate":0,"index":1076}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\inst_stream.rs","byte_start":464350,"byte_end":464358,"line_start":159,"line_end":159,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1078}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\inst_stream.rs","byte_start":465051,"byte_end":465063,"line_start":182,"line_end":182,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1080},{"krate":0,"index":1081}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\inst_stream.rs","byte_start":465667,"byte_end":465690,"line_start":204,"line_end":204,"column_start":6,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1083}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\linear_scan\\analysis.rs","byte_start":507276,"byte_end":507285,"line_start":24,"line_end":24,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1175}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\linear_scan\\analysis.rs","byte_start":507422,"byte_end":507431,"line_start":30,"line_end":30,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1177},{"krate":0,"index":1179}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\linear_scan\\assign_registers.rs","byte_start":540786,"byte_end":540795,"line_start":35,"line_end":35,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1255}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\linear_scan\\assign_registers.rs","byte_start":541599,"byte_end":541614,"line_start":56,"line_end":56,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1260},{"krate":0,"index":1261},{"krate":0,"index":1262}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\linear_scan\\assign_registers.rs","byte_start":548618,"byte_end":548633,"line_start":259,"line_end":259,"column_start":15,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1270},{"krate":0,"index":1271},{"krate":0,"index":1272}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\linear_scan\\assign_registers.rs","byte_start":549923,"byte_end":549942,"line_start":305,"line_end":305,"column_start":43,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1282},{"krate":0,"index":1283}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\linear_scan\\assign_registers.rs","byte_start":550396,"byte_end":550411,"line_start":322,"line_end":322,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1286},{"krate":0,"index":1287}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\linear_scan\\assign_registers.rs","byte_start":550826,"byte_end":550841,"line_start":334,"line_end":334,"column_start":41,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1290}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\linear_scan\\assign_registers.rs","byte_start":551514,"byte_end":551527,"line_start":355,"line_end":355,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1297}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\linear_scan\\assign_registers.rs","byte_start":552454,"byte_end":552467,"line_start":384,"line_end":384,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1303}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\linear_scan\\assign_registers.rs","byte_start":552584,"byte_end":552597,"line_start":390,"line_end":390,"column_start":18,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\linear_scan\\assign_registers.rs","byte_start":552627,"byte_end":552640,"line_start":392,"line_end":392,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1306}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\linear_scan\\assign_registers.rs","byte_start":552933,"byte_end":552946,"line_start":401,"line_end":401,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1308}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\linear_scan\\assign_registers.rs","byte_start":553140,"byte_end":553158,"line_start":412,"line_end":412,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1312},{"krate":0,"index":1313},{"krate":0,"index":1314}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\linear_scan\\assign_registers.rs","byte_start":554605,"byte_end":554610,"line_start":459,"line_end":459,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1331},{"krate":0,"index":1332},{"krate":0,"index":1333},{"krate":0,"index":1334}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\linear_scan\\resolve_moves.rs","byte_start":588356,"byte_end":588365,"line_start":186,"line_end":186,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1397},{"krate":0,"index":1398},{"krate":0,"index":1401}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\linear_scan\\resolve_moves.rs","byte_start":601569,"byte_end":601580,"line_start":558,"line_end":558,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1414}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\linear_scan\\resolve_moves.rs","byte_start":601827,"byte_end":601833,"line_start":572,"line_end":572,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1422}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\linear_scan\\resolve_moves.rs","byte_start":602231,"byte_end":602237,"line_start":585,"line_end":585,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1424},{"krate":0,"index":1425},{"krate":0,"index":1426},{"krate":0,"index":1427}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\linear_scan\\mod.rs","byte_start":484281,"byte_end":484291,"line_start":45,"line_end":45,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1435}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\linear_scan\\mod.rs","byte_start":485461,"byte_end":485478,"line_start":88,"line_end":88,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1437}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\linear_scan\\mod.rs","byte_start":486598,"byte_end":486615,"line_start":120,"line_end":120,"column_start":21,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1439}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\linear_scan\\mod.rs","byte_start":486972,"byte_end":486977,"line_start":134,"line_end":134,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1442}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\linear_scan\\mod.rs","byte_start":487197,"byte_end":487210,"line_start":146,"line_end":146,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1444}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\linear_scan\\mod.rs","byte_start":487997,"byte_end":488012,"line_start":178,"line_end":178,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1446}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\linear_scan\\mod.rs","byte_start":488381,"byte_end":488396,"line_start":192,"line_end":192,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1448},{"krate":0,"index":1449},{"krate":0,"index":1450},{"krate":0,"index":1451}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\linear_scan\\mod.rs","byte_start":489329,"byte_end":489336,"line_start":228,"line_end":228,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1453}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\linear_scan\\mod.rs","byte_start":489886,"byte_end":489893,"line_start":252,"line_end":252,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1455},{"krate":0,"index":1456},{"krate":0,"index":1457},{"krate":0,"index":1458},{"krate":0,"index":1459},{"krate":0,"index":1460},{"krate":0,"index":1461},{"krate":0,"index":1462},{"krate":0,"index":1463},{"krate":0,"index":1464}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\linear_scan\\mod.rs","byte_start":490746,"byte_end":490754,"line_start":299,"line_end":299,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1468},{"krate":0,"index":1469},{"krate":0,"index":1470}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\linear_scan\\mod.rs","byte_start":491242,"byte_end":491250,"line_start":320,"line_end":320,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1472}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\linear_scan\\mod.rs","byte_start":491659,"byte_end":491668,"line_start":336,"line_end":336,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1477},{"krate":0,"index":1478},{"krate":0,"index":1479},{"krate":0,"index":1480},{"krate":0,"index":1481},{"krate":0,"index":1482},{"krate":0,"index":1483}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\pretty_print.rs","byte_start":614016,"byte_end":614019,"line_start":28,"line_end":28,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1515}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\pretty_print.rs","byte_start":614645,"byte_end":614653,"line_start":46,"line_end":46,"column_start":53,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":1518}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\pretty_print.rs","byte_start":614862,"byte_end":614870,"line_start":52,"line_end":52,"column_start":63,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":1521}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\reg_maps.rs","byte_start":616125,"byte_end":616145,"line_start":26,"line_end":26,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1530},{"krate":0,"index":1531},{"krate":0,"index":1532},{"krate":0,"index":1533},{"krate":0,"index":1535},{"krate":0,"index":1536},{"krate":0,"index":1537},{"krate":0,"index":1538},{"krate":0,"index":1539},{"krate":0,"index":1541}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\reg_maps.rs","byte_start":620676,"byte_end":620696,"line_start":145,"line_end":145,"column_start":25,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1545},{"krate":0,"index":1547},{"krate":0,"index":1550}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\reg_maps.rs","byte_start":627055,"byte_end":627076,"line_start":310,"line_end":310,"column_start":6,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1552},{"krate":0,"index":1553},{"krate":0,"index":1554},{"krate":0,"index":1557},{"krate":0,"index":1560},{"krate":0,"index":1561}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\reg_maps.rs","byte_start":627866,"byte_end":627887,"line_start":335,"line_end":335,"column_start":25,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1563},{"krate":0,"index":1564},{"krate":0,"index":1565}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\snapshot.rs","byte_start":630040,"byte_end":630050,"line_start":58,"line_end":58,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1571},{"krate":0,"index":1575},{"krate":0,"index":1579}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\snapshot.rs","byte_start":633677,"byte_end":633687,"line_start":170,"line_end":170,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1581},{"krate":0,"index":1582},{"krate":0,"index":1583},{"krate":0,"index":1584},{"krate":0,"index":1585},{"krate":0,"index":1586},{"krate":0,"index":1587},{"krate":0,"index":1588},{"krate":0,"index":1589},{"krate":0,"index":1590},{"krate":0,"index":1591},{"krate":0,"index":1592},{"krate":0,"index":1593},{"krate":0,"index":1594},{"krate":0,"index":1595},{"krate":0,"index":1596},{"krate":0,"index":1598},{"krate":0,"index":1599},{"krate":0,"index":1600},{"krate":0,"index":1601},{"krate":0,"index":1602},{"krate":0,"index":1603}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\sparse_set.rs","byte_start":639725,"byte_end":639735,"line_start":53,"line_end":53,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1628},{"krate":0,"index":1629},{"krate":0,"index":1630},{"krate":0,"index":1631}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\sparse_set.rs","byte_start":644596,"byte_end":644606,"line_start":197,"line_end":197,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1636},{"krate":0,"index":1637},{"krate":0,"index":1638},{"krate":0,"index":1639},{"krate":0,"index":1640},{"krate":0,"index":1641},{"krate":0,"index":1642},{"krate":0,"index":1643},{"krate":0,"index":1644},{"krate":0,"index":1645},{"krate":0,"index":1646}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\sparse_set.rs","byte_start":658248,"byte_end":658258,"line_start":575,"line_end":575,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1649}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\sparse_set.rs","byte_start":659099,"byte_end":659109,"line_start":599,"line_end":599,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1652}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\sparse_set.rs","byte_start":659867,"byte_end":659877,"line_start":629,"line_end":629,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1664}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\sparse_set.rs","byte_start":660279,"byte_end":660293,"line_start":643,"line_end":643,"column_start":33,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1668},{"krate":0,"index":1669}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\union_find.rs","byte_start":671214,"byte_end":671223,"line_start":83,"line_end":83,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1686},{"krate":0,"index":1687},{"krate":0,"index":1688},{"krate":0,"index":1689}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\union_find.rs","byte_start":679149,"byte_end":679158,"line_start":275,"line_end":275,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1698}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\union_find.rs","byte_start":686327,"byte_end":686348,"line_start":430,"line_end":430,"column_start":20,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1701}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\union_find.rs","byte_start":687887,"byte_end":687908,"line_start":468,"line_end":468,"column_start":20,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1709}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\union_find.rs","byte_start":688710,"byte_end":688738,"line_start":485,"line_end":485,"column_start":37,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":1714},{"krate":0,"index":1715}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\union_find.rs","byte_start":689524,"byte_end":689545,"line_start":511,"line_end":511,"column_start":20,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1723}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\union_find.rs","byte_start":689786,"byte_end":689816,"line_start":520,"line_end":520,"column_start":37,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":1728},{"krate":0,"index":1729}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":18548,"byte_end":18561,"line_start":429,"line_end":429,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1801}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":18892,"byte_end":18901,"line_start":444,"line_end":444,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1805}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":19640,"byte_end":19647,"line_start":465,"line_end":465,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1807}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":19831,"byte_end":19838,"line_start":474,"line_end":474,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1809}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\analysis_main.rs","byte_start":29481,"byte_end":29494,"line_start":57,"line_end":57,"column_start":19,"column_end":32},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1819},"to":{"krate":5,"index":4275}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\analysis_control_flow.rs","byte_start":40287,"byte_end":40305,"line_start":35,"line_end":35,"column_start":6,"column_end":24},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":77},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\analysis_control_flow.rs","byte_start":63170,"byte_end":63177,"line_start":653,"line_end":653,"column_start":6,"column_end":13},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":113},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\analysis_data_flow.rs","byte_start":97031,"byte_end":97045,"line_start":799,"line_end":799,"column_start":21,"column_end":35},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1839},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\avl_tree.rs","byte_start":153689,"byte_end":153696,"line_start":27,"line_end":27,"column_start":9,"column_end":16},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1861},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\avl_tree.rs","byte_start":154876,"byte_end":154883,"line_start":61,"line_end":61,"column_start":16,"column_end":23},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":260},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\avl_tree.rs","byte_start":158662,"byte_end":158669,"line_start":160,"line_end":160,"column_start":29,"column_end":36},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":260},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\avl_tree.rs","byte_start":186269,"byte_end":186280,"line_start":804,"line_end":804,"column_start":17,"column_end":28},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":291},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\avl_tree.rs","byte_start":186928,"byte_end":186939,"line_start":828,"line_end":828,"column_start":36,"column_end":47},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":291},"to":{"krate":2,"index":5311}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\avl_tree.rs","byte_start":187512,"byte_end":187519,"line_start":847,"line_end":847,"column_start":29,"column_end":36},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":260},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\bt_coalescing_analysis.rs","byte_start":208749,"byte_end":208753,"line_start":107,"line_end":107,"column_start":6,"column_end":10},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1883},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\bt_coalescing_analysis.rs","byte_start":209044,"byte_end":209058,"line_start":118,"line_end":118,"column_start":20,"column_end":34},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":2218},"to":{"krate":0,"index":1672}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\bt_commitment_map.rs","byte_start":236951,"byte_end":236970,"line_start":45,"line_end":45,"column_start":6,"column_end":25},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1894},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\bt_commitment_map.rs","byte_start":237077,"byte_end":237096,"line_start":50,"line_end":50,"column_start":20,"column_end":39},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1894},"to":{"krate":2,"index":1770}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\bt_commitment_map.rs","byte_start":237280,"byte_end":237299,"line_start":56,"line_end":56,"column_start":21,"column_end":40},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1894},"to":{"krate":2,"index":1807}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\bt_commitment_map.rs","byte_start":237505,"byte_end":237524,"line_start":62,"line_end":62,"column_start":21,"column_end":40},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1894},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\bt_commitment_map.rs","byte_start":238101,"byte_end":238114,"line_start":79,"line_end":79,"column_start":21,"column_end":34},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":412},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\bt_commitment_map.rs","byte_start":238257,"byte_end":238270,"line_start":86,"line_end":86,"column_start":6,"column_end":19},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":412},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\bt_main.rs","byte_start":243270,"byte_end":243289,"line_start":37,"line_end":37,"column_start":27,"column_end":46},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1899},"to":{"krate":2,"index":2033}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\bt_main.rs","byte_start":243419,"byte_end":243438,"line_start":45,"line_end":45,"column_start":21,"column_end":40},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1899},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\bt_main.rs","byte_start":244377,"byte_end":244387,"line_start":72,"line_end":72,"column_start":6,"column_end":16},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":496},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\bt_main.rs","byte_start":251143,"byte_end":251153,"line_start":242,"line_end":242,"column_start":6,"column_end":16},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":496},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\bt_main.rs","byte_start":265936,"byte_end":265946,"line_start":609,"line_end":609,"column_start":21,"column_end":31},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1903},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\bt_main.rs","byte_start":267233,"byte_end":267245,"line_start":641,"line_end":641,"column_start":21,"column_end":33},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1916},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\bt_spillslot_allocator.rs","byte_start":324171,"byte_end":324190,"line_start":41,"line_end":41,"column_start":6,"column_end":25},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1924},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\bt_spillslot_allocator.rs","byte_start":325154,"byte_end":325170,"line_start":65,"line_end":65,"column_start":6,"column_end":22},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":561},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\bt_spillslot_allocator.rs","byte_start":331546,"byte_end":331564,"line_start":221,"line_end":221,"column_start":6,"column_end":24},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":580},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\bt_vlr_priority_queue.rs","byte_start":349682,"byte_end":349703,"line_start":71,"line_end":71,"column_start":6,"column_end":27},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":599},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\bt_vlr_priority_queue.rs","byte_start":349918,"byte_end":349939,"line_start":81,"line_end":81,"column_start":20,"column_end":41},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":599},"to":{"krate":2,"index":1770}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\bt_vlr_priority_queue.rs","byte_start":350074,"byte_end":350095,"line_start":86,"line_end":86,"column_start":13,"column_end":34},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":599},"to":{"krate":2,"index":1775}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\bt_vlr_priority_queue.rs","byte_start":350119,"byte_end":350140,"line_start":87,"line_end":87,"column_start":21,"column_end":42},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":599},"to":{"krate":2,"index":1807}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\bt_vlr_priority_queue.rs","byte_start":350256,"byte_end":350277,"line_start":92,"line_end":92,"column_start":14,"column_end":35},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":599},"to":{"krate":2,"index":1796}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\bt_vlr_priority_queue.rs","byte_start":351004,"byte_end":351021,"line_start":112,"line_end":112,"column_start":6,"column_end":23},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":612},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\checker.rs","byte_start":357771,"byte_end":357783,"line_start":136,"line_end":136,"column_start":18,"column_end":30},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1980},"to":{"krate":2,"index":2033}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\checker.rs","byte_start":357865,"byte_end":357877,"line_start":142,"line_end":142,"column_start":6,"column_end":18},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1980},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\checker.rs","byte_start":358806,"byte_end":358818,"line_start":167,"line_end":167,"column_start":18,"column_end":30},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":2001},"to":{"krate":2,"index":2033}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\checker.rs","byte_start":359277,"byte_end":359289,"line_start":187,"line_end":187,"column_start":6,"column_end":18},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":2001},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\checker.rs","byte_start":368972,"byte_end":368979,"line_start":464,"line_end":464,"column_start":6,"column_end":13},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":2044},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\checker.rs","byte_start":374675,"byte_end":374689,"line_start":624,"line_end":624,"column_start":6,"column_end":20},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":680},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":379607,"byte_end":379610,"line_start":45,"line_end":45,"column_start":46,"column_end":49},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":2052},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":382689,"byte_end":382692,"line_start":188,"line_end":188,"column_start":61,"column_end":64},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":2052},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":383511,"byte_end":383514,"line_start":211,"line_end":211,"column_start":20,"column_end":23},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":2052},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":383659,"byte_end":383666,"line_start":218,"line_end":218,"column_start":26,"column_end":33},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":744},"to":{"krate":2,"index":5311}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":384581,"byte_end":384586,"line_start":254,"line_end":254,"column_start":53,"column_end":58},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":2058},"to":{"krate":2,"index":5217}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":384817,"byte_end":384822,"line_start":265,"line_end":265,"column_start":34,"column_end":39},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":2058},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":385580,"byte_end":385590,"line_start":302,"line_end":302,"column_start":49,"column_end":59},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":774},"to":{"krate":2,"index":5311}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":386199,"byte_end":386209,"line_start":324,"line_end":324,"column_start":16,"column_end":26},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":782},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":387976,"byte_end":387986,"line_start":388,"line_end":388,"column_start":32,"column_end":42},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":782},"to":{"krate":2,"index":2323}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":388168,"byte_end":388178,"line_start":398,"line_end":398,"column_start":35,"column_end":45},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":782},"to":{"krate":2,"index":2327}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":388345,"byte_end":388355,"line_start":407,"line_end":407,"column_start":26,"column_end":36},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":782},"to":{"krate":2,"index":1742}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":392318,"byte_end":392328,"line_start":531,"line_end":531,"column_start":43,"column_end":53},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":782},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":393375,"byte_end":393383,"line_start":561,"line_end":561,"column_start":6,"column_end":14},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":2287},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":396260,"byte_end":396263,"line_start":647,"line_end":647,"column_start":6,"column_end":9},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":2317},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":399280,"byte_end":399283,"line_start":744,"line_end":744,"column_start":21,"column_end":24},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":2317},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":400002,"byte_end":400005,"line_start":769,"line_end":769,"column_start":6,"column_end":9},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":2317},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":400244,"byte_end":400251,"line_start":778,"line_end":778,"column_start":6,"column_end":13},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":2340},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":401027,"byte_end":401034,"line_start":812,"line_end":812,"column_start":21,"column_end":28},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":2340},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":401321,"byte_end":401324,"line_start":823,"line_end":823,"column_start":6,"column_end":9},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":2317},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":401597,"byte_end":401607,"line_start":833,"line_end":833,"column_start":6,"column_end":16},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":2363},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":402301,"byte_end":402311,"line_start":864,"line_end":864,"column_start":21,"column_end":31},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":2363},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":402427,"byte_end":402430,"line_start":870,"line_end":870,"column_start":6,"column_end":9},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":2317},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":404883,"byte_end":404887,"line_start":927,"line_end":927,"column_start":5,"column_end":9},"kind":"SuperTrait","from":{"krate":2,"index":2055},"to":{"krate":0,"index":890}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":404890,"byte_end":404895,"line_start":927,"line_end":927,"column_start":12,"column_end":17},"kind":"SuperTrait","from":{"krate":2,"index":1742},"to":{"krate":0,"index":890}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":404898,"byte_end":404907,"line_start":927,"line_end":927,"column_start":20,"column_end":29},"kind":"SuperTrait","from":{"krate":2,"index":1770},"to":{"krate":0,"index":890}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":404910,"byte_end":404912,"line_start":927,"line_end":927,"column_start":32,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":1775},"to":{"krate":0,"index":890}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":404915,"byte_end":404919,"line_start":927,"line_end":927,"column_start":37,"column_end":41},"kind":"SuperTrait","from":{"krate":2,"index":6794},"to":{"krate":0,"index":890}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":404922,"byte_end":404932,"line_start":927,"line_end":927,"column_start":44,"column_end":54},"kind":"SuperTrait","from":{"krate":2,"index":1807},"to":{"krate":0,"index":890}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":404935,"byte_end":404938,"line_start":927,"line_end":927,"column_start":57,"column_end":60},"kind":"SuperTrait","from":{"krate":2,"index":1796},"to":{"krate":0,"index":890}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":404946,"byte_end":404951,"line_start":927,"line_end":927,"column_start":68,"column_end":73},"kind":"SuperTrait","from":{"krate":2,"index":6606},"to":{"krate":0,"index":890}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":404979,"byte_end":404982,"line_start":931,"line_end":931,"column_start":23,"column_end":26},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":2317},"to":{"krate":0,"index":890}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":405008,"byte_end":405015,"line_start":932,"line_end":932,"column_start":23,"column_end":30},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":2340},"to":{"krate":0,"index":890}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":405041,"byte_end":405051,"line_start":933,"line_end":933,"column_start":23,"column_end":33},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":2363},"to":{"krate":0,"index":890}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":405078,"byte_end":405086,"line_start":935,"line_end":935,"column_start":23,"column_end":31},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":2386},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":405715,"byte_end":405724,"line_start":961,"line_end":961,"column_start":6,"column_end":15},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":2422},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":406271,"byte_end":406280,"line_start":983,"line_end":983,"column_start":21,"column_end":30},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":2422},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":406837,"byte_end":406854,"line_start":1000,"line_end":1000,"column_start":10,"column_end":27},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":909},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":408755,"byte_end":408762,"line_start":1059,"line_end":1059,"column_start":6,"column_end":13},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":2446},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":409789,"byte_end":409801,"line_start":1097,"line_end":1097,"column_start":6,"column_end":18},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":2453},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":410397,"byte_end":410413,"line_start":1120,"line_end":1120,"column_start":6,"column_end":22},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":930},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":411370,"byte_end":411377,"line_start":1148,"line_end":1148,"column_start":6,"column_end":13},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":2464},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":411672,"byte_end":411688,"line_start":1163,"line_end":1163,"column_start":6,"column_end":22},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":930},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":415848,"byte_end":415863,"line_start":1257,"line_end":1257,"column_start":6,"column_end":21},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":2471},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":422842,"byte_end":422847,"line_start":1429,"line_end":1429,"column_start":6,"column_end":11},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":2489},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":423587,"byte_end":423592,"line_start":1464,"line_end":1464,"column_start":21,"column_end":26},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":2489},"to":{"krate":2,"index":1807}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":424738,"byte_end":424747,"line_start":1496,"line_end":1496,"column_start":6,"column_end":15},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":2516},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":426582,"byte_end":426591,"line_start":1565,"line_end":1565,"column_start":21,"column_end":30},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":2516},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":428550,"byte_end":428559,"line_start":1614,"line_end":1614,"column_start":21,"column_end":30},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":2539},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":428699,"byte_end":428708,"line_start":1620,"line_end":1620,"column_start":6,"column_end":15},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":2539},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":430652,"byte_end":430661,"line_start":1680,"line_end":1680,"column_start":6,"column_end":15},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":2539},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":431496,"byte_end":431509,"line_start":1699,"line_end":1699,"column_start":21,"column_end":34},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":2566},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":433669,"byte_end":433685,"line_start":1745,"line_end":1745,"column_start":21,"column_end":37},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":2591},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":434376,"byte_end":434394,"line_start":1768,"line_end":1768,"column_start":21,"column_end":39},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":2601},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":434503,"byte_end":434521,"line_start":1774,"line_end":1774,"column_start":6,"column_end":24},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":2601},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":436915,"byte_end":436931,"line_start":1843,"line_end":1843,"column_start":21,"column_end":37},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":2606},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":437037,"byte_end":437053,"line_start":1849,"line_end":1849,"column_start":6,"column_end":22},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":2606},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":439815,"byte_end":439824,"line_start":1926,"line_end":1926,"column_start":21,"column_end":30},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":2611},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":440055,"byte_end":440064,"line_start":1935,"line_end":1935,"column_start":6,"column_end":15},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":2611},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":444595,"byte_end":444604,"line_start":2053,"line_end":2053,"column_start":21,"column_end":30},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":2620},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":444863,"byte_end":444872,"line_start":2065,"line_end":2065,"column_start":6,"column_end":15},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":2620},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":445738,"byte_end":445750,"line_start":2093,"line_end":2093,"column_start":6,"column_end":18},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":2626},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":445889,"byte_end":445901,"line_start":2099,"line_end":2099,"column_start":21,"column_end":33},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":2626},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":450086,"byte_end":450093,"line_start":2187,"line_end":2187,"column_start":6,"column_end":13},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":2636},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\data_structures.rs","byte_start":451188,"byte_end":451195,"line_start":2228,"line_end":2228,"column_start":21,"column_end":28},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":2636},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\inst_stream.rs","byte_start":460250,"byte_end":460262,"line_start":45,"line_end":45,"column_start":6,"column_end":18},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":2659},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\inst_stream.rs","byte_start":464350,"byte_end":464358,"line_start":159,"line_end":159,"column_start":6,"column_end":14},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":2681},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\inst_stream.rs","byte_start":465051,"byte_end":465063,"line_start":182,"line_end":182,"column_start":6,"column_end":18},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":2718},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\inst_stream.rs","byte_start":465667,"byte_end":465690,"line_start":204,"line_end":204,"column_start":6,"column_end":29},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":2747},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\linear_scan\\analysis.rs","byte_start":507276,"byte_end":507285,"line_start":24,"line_end":24,"column_start":21,"column_end":30},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":2752},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\linear_scan\\analysis.rs","byte_start":507422,"byte_end":507431,"line_start":30,"line_end":30,"column_start":6,"column_end":15},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":2752},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\linear_scan\\assign_registers.rs","byte_start":540786,"byte_end":540795,"line_start":35,"line_end":35,"column_start":21,"column_end":30},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":2785},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\linear_scan\\assign_registers.rs","byte_start":541599,"byte_end":541614,"line_start":56,"line_end":56,"column_start":6,"column_end":21},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1256},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\linear_scan\\assign_registers.rs","byte_start":548618,"byte_end":548633,"line_start":259,"line_end":259,"column_start":15,"column_end":30},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":2799},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\linear_scan\\assign_registers.rs","byte_start":549923,"byte_end":549942,"line_start":305,"line_end":305,"column_start":43,"column_end":62},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1274},"to":{"krate":2,"index":5311}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\linear_scan\\assign_registers.rs","byte_start":550396,"byte_end":550411,"line_start":322,"line_end":322,"column_start":38,"column_end":53},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":2799},"to":{"krate":2,"index":2323}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\linear_scan\\assign_registers.rs","byte_start":550826,"byte_end":550841,"line_start":334,"line_end":334,"column_start":41,"column_end":56},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":2799},"to":{"krate":2,"index":2327}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\linear_scan\\assign_registers.rs","byte_start":551514,"byte_end":551527,"line_start":355,"line_end":355,"column_start":6,"column_end":19},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1291},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\linear_scan\\assign_registers.rs","byte_start":552454,"byte_end":552467,"line_start":384,"line_end":384,"column_start":25,"column_end":38},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1298},"to":{"krate":2,"index":1770}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\linear_scan\\assign_registers.rs","byte_start":552584,"byte_end":552597,"line_start":390,"line_end":390,"column_start":18,"column_end":31},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1298},"to":{"krate":2,"index":1775}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\linear_scan\\assign_registers.rs","byte_start":552627,"byte_end":552640,"line_start":392,"line_end":392,"column_start":26,"column_end":39},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1298},"to":{"krate":2,"index":1807}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\linear_scan\\assign_registers.rs","byte_start":552933,"byte_end":552946,"line_start":401,"line_end":401,"column_start":19,"column_end":32},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1298},"to":{"krate":2,"index":1796}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\linear_scan\\assign_registers.rs","byte_start":553140,"byte_end":553158,"line_start":412,"line_end":412,"column_start":6,"column_end":24},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":1309},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\linear_scan\\assign_registers.rs","byte_start":554605,"byte_end":554610,"line_start":459,"line_end":459,"column_start":23,"column_end":28},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1316},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\linear_scan\\resolve_moves.rs","byte_start":588356,"byte_end":588365,"line_start":186,"line_end":186,"column_start":6,"column_end":15},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":2818},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\linear_scan\\resolve_moves.rs","byte_start":601569,"byte_end":601580,"line_start":558,"line_end":558,"column_start":6,"column_end":17},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":2829},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\linear_scan\\resolve_moves.rs","byte_start":601827,"byte_end":601833,"line_start":572,"line_end":572,"column_start":21,"column_end":27},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":1415},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\linear_scan\\resolve_moves.rs","byte_start":602231,"byte_end":602237,"line_start":585,"line_end":585,"column_start":6,"column_end":12},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":1415},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\linear_scan\\mod.rs","byte_start":484281,"byte_end":484291,"line_start":45,"line_end":45,"column_start":15,"column_end":25},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":2842},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\linear_scan\\mod.rs","byte_start":485461,"byte_end":485478,"line_start":88,"line_end":88,"column_start":27,"column_end":44},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":2875},"to":{"krate":2,"index":2033}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\linear_scan\\mod.rs","byte_start":486598,"byte_end":486615,"line_start":120,"line_end":120,"column_start":21,"column_end":38},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":2875},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\linear_scan\\mod.rs","byte_start":486972,"byte_end":486977,"line_start":134,"line_end":134,"column_start":21,"column_end":26},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":2883},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\linear_scan\\mod.rs","byte_start":487197,"byte_end":487210,"line_start":146,"line_end":146,"column_start":23,"column_end":36},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":2896},"to":{"krate":2,"index":6611}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\linear_scan\\mod.rs","byte_start":487997,"byte_end":488012,"line_start":178,"line_end":178,"column_start":23,"column_end":38},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":2901},"to":{"krate":2,"index":6611}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\linear_scan\\mod.rs","byte_start":488381,"byte_end":488396,"line_start":192,"line_end":192,"column_start":6,"column_end":21},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":2901},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\linear_scan\\mod.rs","byte_start":489329,"byte_end":489336,"line_start":228,"line_end":228,"column_start":21,"column_end":28},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":2913},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\linear_scan\\mod.rs","byte_start":489886,"byte_end":489893,"line_start":252,"line_end":252,"column_start":6,"column_end":13},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":2913},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\linear_scan\\mod.rs","byte_start":490746,"byte_end":490754,"line_start":299,"line_end":299,"column_start":6,"column_end":14},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":2937},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\linear_scan\\mod.rs","byte_start":491242,"byte_end":491250,"line_start":320,"line_end":320,"column_start":23,"column_end":31},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":2937},"to":{"krate":2,"index":6611}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\linear_scan\\mod.rs","byte_start":491659,"byte_end":491668,"line_start":336,"line_end":336,"column_start":6,"column_end":15},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":1473},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\pretty_print.rs","byte_start":613446,"byte_end":613457,"line_start":16,"line_end":16,"column_start":29,"column_end":40},"kind":"SuperTrait","from":{"krate":0,"index":1510},"to":{"krate":0,"index":1512}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\pretty_print.rs","byte_start":614016,"byte_end":614019,"line_start":28,"line_end":28,"column_start":22,"column_end":25},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":2317},"to":{"krate":0,"index":1510}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\pretty_print.rs","byte_start":614645,"byte_end":614653,"line_start":46,"line_end":46,"column_start":53,"column_end":61},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":2386},"to":{"krate":0,"index":1510}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\pretty_print.rs","byte_start":614862,"byte_end":614870,"line_start":52,"line_end":52,"column_start":63,"column_end":71},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":2386},"to":{"krate":0,"index":1512}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\reg_maps.rs","byte_start":616125,"byte_end":616145,"line_start":26,"line_end":26,"column_start":6,"column_end":26},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":2951},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\reg_maps.rs","byte_start":620676,"byte_end":620696,"line_start":145,"line_end":145,"column_start":25,"column_end":45},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":2951},"to":{"krate":0,"index":1751}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\reg_maps.rs","byte_start":627055,"byte_end":627076,"line_start":310,"line_end":310,"column_start":6,"column_end":27},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":2957},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\reg_maps.rs","byte_start":627866,"byte_end":627887,"line_start":335,"line_end":335,"column_start":25,"column_end":46},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":2957},"to":{"krate":0,"index":1751}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\snapshot.rs","byte_start":630040,"byte_end":630050,"line_start":58,"line_end":58,"column_start":6,"column_end":16},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":3003},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\snapshot.rs","byte_start":633677,"byte_end":633687,"line_start":170,"line_end":170,"column_start":19,"column_end":29},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":2992},"to":{"krate":0,"index":1760}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\sparse_set.rs","byte_start":639725,"byte_end":639735,"line_start":53,"line_end":53,"column_start":9,"column_end":19},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":1619},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\sparse_set.rs","byte_start":644596,"byte_end":644606,"line_start":197,"line_end":197,"column_start":9,"column_end":19},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":1619},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\sparse_set.rs","byte_start":658248,"byte_end":658258,"line_start":575,"line_end":575,"column_start":24,"column_end":34},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":1619},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\sparse_set.rs","byte_start":659099,"byte_end":659109,"line_start":599,"line_end":599,"column_start":19,"column_end":29},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":1619},"to":{"krate":2,"index":1742}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\sparse_set.rs","byte_start":659867,"byte_end":659877,"line_start":629,"line_end":629,"column_start":16,"column_end":26},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":1619},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\sparse_set.rs","byte_start":660279,"byte_end":660293,"line_start":643,"line_end":643,"column_start":33,"column_end":47},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":1653},"to":{"krate":2,"index":5311}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\union_find.rs","byte_start":671214,"byte_end":671223,"line_start":83,"line_end":83,"column_start":20,"column_end":29},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":1679},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\union_find.rs","byte_start":679149,"byte_end":679158,"line_start":275,"line_end":275,"column_start":20,"column_end":29},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":1679},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\union_find.rs","byte_start":686327,"byte_end":686348,"line_start":430,"line_end":430,"column_start":20,"column_end":41},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":1691},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\union_find.rs","byte_start":687887,"byte_end":687908,"line_start":468,"line_end":468,"column_start":20,"column_end":41},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":1691},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\union_find.rs","byte_start":688710,"byte_end":688738,"line_start":485,"line_end":485,"column_start":37,"column_end":65},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":1702},"to":{"krate":2,"index":5311}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\union_find.rs","byte_start":689524,"byte_end":689545,"line_start":511,"line_end":511,"column_start":20,"column_end":41},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":1691},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\union_find.rs","byte_start":689786,"byte_end":689816,"line_start":520,"line_end":520,"column_start":37,"column_end":67},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":1716},"to":{"krate":2,"index":5311}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":6988,"byte_end":6993,"line_start":163,"line_end":163,"column_start":32,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":6606},"to":{"krate":0,"index":1751}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":18548,"byte_end":18561,"line_start":429,"line_end":429,"column_start":23,"column_end":36},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":3124},"to":{"krate":2,"index":6611}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":18892,"byte_end":18901,"line_start":444,"line_end":444,"column_start":21,"column_end":30},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":3144},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":19640,"byte_end":19647,"line_start":465,"line_end":465,"column_start":27,"column_end":34},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":3153},"to":{"krate":2,"index":2033}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.31\\src\\lib.rs","byte_start":19831,"byte_end":19838,"line_start":474,"line_end":474,"column_start":21,"column_end":28},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":3153},"to":{"krate":2,"index":6606}}]}