{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2","program":"C:\\Users\\Simon Palmer\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","wasmer_vm","--edition=2018","C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=84ed218931de54e8","-C","extra-filename=-84ed218931de54e8","--out-dir","c:\\Users\\Simon Palmer\\Documents\\Programming\\near-enough\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\Simon Palmer\\Documents\\Programming\\near-enough\\target\\rls\\debug\\deps","--extern","backtrace=c:\\Users\\Simon Palmer\\Documents\\Programming\\near-enough\\target\\rls\\debug\\deps\\libbacktrace-b15fb4ba075a248f.rmeta","--extern","cfg_if=c:\\Users\\Simon Palmer\\Documents\\Programming\\near-enough\\target\\rls\\debug\\deps\\libcfg_if-9ceb6b49c89972d2.rmeta","--extern","indexmap=c:\\Users\\Simon Palmer\\Documents\\Programming\\near-enough\\target\\rls\\debug\\deps\\libindexmap-ceb56e5979d102d1.rmeta","--extern","libc=c:\\Users\\Simon Palmer\\Documents\\Programming\\near-enough\\target\\rls\\debug\\deps\\liblibc-64e014b68f840d9c.rmeta","--extern","memoffset=c:\\Users\\Simon Palmer\\Documents\\Programming\\near-enough\\target\\rls\\debug\\deps\\libmemoffset-126fefe79b7d1044.rmeta","--extern","more_asserts=c:\\Users\\Simon Palmer\\Documents\\Programming\\near-enough\\target\\rls\\debug\\deps\\libmore_asserts-d85b7871c683fcfe.rmeta","--extern","region=c:\\Users\\Simon Palmer\\Documents\\Programming\\near-enough\\target\\rls\\debug\\deps\\libregion-0365e893760782d0.rmeta","--extern","serde=c:\\Users\\Simon Palmer\\Documents\\Programming\\near-enough\\target\\rls\\debug\\deps\\libserde-14e46a0cd71f0fa4.rmeta","--extern","thiserror=c:\\Users\\Simon Palmer\\Documents\\Programming\\near-enough\\target\\rls\\debug\\deps\\libthiserror-128cb2c362e7472f.rmeta","--extern","wasmer_types=c:\\Users\\Simon Palmer\\Documents\\Programming\\near-enough\\target\\rls\\debug\\deps\\libwasmer_types-5dd944202f7bf565.rmeta","--extern","winapi=c:\\Users\\Simon Palmer\\Documents\\Programming\\near-enough\\target\\rls\\debug\\deps\\libwinapi-413cc8356b3b791f.rmeta","--cap-lints","allow","-L","native=c:\\Users\\Simon Palmer\\Documents\\Programming\\near-enough\\target\\rls\\debug\\build\\wasmer-vm-846772783f12f298\\out","-l","static=helpers","--error-format=json","--sysroot","C:\\Users\\Simon Palmer\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\Simon Palmer\\Documents\\Programming\\near-enough\\target\\rls\\debug\\deps\\libwasmer_vm-84ed218931de54e8.rmeta"},"prelude":{"crate_id":{"name":"wasmer_vm","disambiguator":[9319033596224928976,12602436311555641535]},"crate_root":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src","external_crates":[{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[2134305066550747688,1377703208702874155]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\trapcode.rs","num":2,"id":{"name":"core","disambiguator":[1322159461575500717,8297198428669169011]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[2376346800744392852,12342541482992122530]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[14946502858004023242,6637215598610016319]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[5305136910335682758,6890491777619641650]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[8079093424489733033,9678018066858265018]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[8191054904896780843,65190916132359678]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[17454577518104061478,8473922882117178851]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[14702801963282246562,3385633331338644346]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[4483555191844012602,617965746000623535]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[6496369475756502088,8603909216288097824]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\lib.rs","num":12,"id":{"name":"panic_unwind","disambiguator":[8790568169648576788,8899032378407077408]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\export.rs","num":13,"id":{"name":"wasmer_types","disambiguator":[7257111478101033833,16823103751844189797]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\memory.rs","num":14,"id":{"name":"serde","disambiguator":[16587173933292170134,18132029071893659478]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\memory.rs","num":15,"id":{"name":"serde_derive","disambiguator":[9842309209684279102,18288336910812146633]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\global.rs","num":16,"id":{"name":"thiserror","disambiguator":[2171609043141791448,674823242066731952]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\export.rs","num":17,"id":{"name":"thiserror_impl","disambiguator":[533010867123694261,830862060686457272]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\export.rs","num":18,"id":{"name":"cranelift_entity","disambiguator":[1589712533132540097,17211741203633751510]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","num":19,"id":{"name":"memoffset","disambiguator":[7049991767248898722,14819135766567114335]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","num":20,"id":{"name":"more_asserts","disambiguator":[13356154696637203576,7422261952908775144]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\mmap.rs","num":21,"id":{"name":"winapi","disambiguator":[7285415714263276032,18405099577706585152]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","num":22,"id":{"name":"indexmap","disambiguator":[17000817982676431082,634947572956521240]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","num":23,"id":{"name":"hashbrown","disambiguator":[13990969113535214916,13338846224993465578]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","num":24,"id":{"name":"ahash","disambiguator":[5354239215566480564,4930329527979972635]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","num":25,"id":{"name":"backtrace","disambiguator":[2074559630354452249,2217162190711019075]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","num":26,"id":{"name":"rustc_demangle","disambiguator":[6805664364276925758,8202770518157972802]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","num":27,"id":{"name":"cfg_if","disambiguator":[12397753863589609571,14658349722023367951]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","num":28,"id":{"name":"cfg_if","disambiguator":[14278688539970073542,8934083179492313950]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\mmap.rs","num":29,"id":{"name":"region","disambiguator":[3882916228539724668,12936834404506895102]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\mmap.rs","num":30,"id":{"name":"bitflags","disambiguator":[3061788739106617431,7195889896823621023]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\mmap.rs","num":31,"id":{"name":"libc","disambiguator":[8155438986870809172,10193467843818979752]}}],"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\lib.rs","byte_start":0,"byte_end":2764,"line_start":1,"line_end":96,"column_start":1,"column_end":2}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\lib.rs","byte_start":790,"byte_end":791,"line_start":39,"line_end":39,"column_start":24,"column_end":25},"alias_span":null,"name":"*","value":"VMExportGlobal, VMExportFunction, VMExportTable, VMExportMemory","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\lib.rs","byte_start":816,"byte_end":817,"line_start":40,"line_end":40,"column_start":24,"column_end":25},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1153},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\lib.rs","byte_start":843,"byte_end":850,"line_start":41,"line_end":41,"column_start":25,"column_end":32},"alias_span":null,"name":"Imports","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1167},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\lib.rs","byte_start":883,"byte_end":900,"line_start":43,"line_end":43,"column_start":5,"column_end":22},"alias_span":null,"name":"ImportFunctionEnv","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":231},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\lib.rs","byte_start":902,"byte_end":926,"line_start":43,"line_end":43,"column_start":24,"column_end":48},"alias_span":null,"name":"ImportInitializerFuncPtr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":114},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\lib.rs","byte_start":928,"byte_end":945,"line_start":43,"line_end":43,"column_start":50,"column_end":67},"alias_span":null,"name":"InstanceAllocator","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1177},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\lib.rs","byte_start":947,"byte_end":961,"line_start":43,"line_end":43,"column_start":69,"column_end":83},"alias_span":null,"name":"InstanceHandle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1359},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\lib.rs","byte_start":990,"byte_end":1002,"line_start":45,"line_end":45,"column_start":25,"column_end":37},"alias_span":null,"name":"LinearMemory","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":386},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\lib.rs","byte_start":1004,"byte_end":1010,"line_start":45,"line_end":45,"column_start":39,"column_end":45},"alias_span":null,"name":"Memory","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1189},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\lib.rs","byte_start":1012,"byte_end":1023,"line_start":45,"line_end":45,"column_start":47,"column_end":58},"alias_span":null,"name":"MemoryError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1224},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\lib.rs","byte_start":1025,"byte_end":1036,"line_start":45,"line_end":45,"column_start":60,"column_end":71},"alias_span":null,"name":"MemoryStyle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1383},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\lib.rs","byte_start":1060,"byte_end":1064,"line_start":46,"line_end":46,"column_start":22,"column_end":26},"alias_span":null,"name":"Mmap","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":524},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\lib.rs","byte_start":1090,"byte_end":1105,"line_start":47,"line_end":47,"column_start":25,"column_end":40},"alias_span":null,"name":"ExportsIterator","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":549},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\lib.rs","byte_start":1107,"byte_end":1122,"line_start":47,"line_end":47,"column_start":42,"column_end":57},"alias_span":null,"name":"ImportsIterator","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1394},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\lib.rs","byte_start":1124,"byte_end":1134,"line_start":47,"line_end":47,"column_start":59,"column_end":69},"alias_span":null,"name":"ModuleInfo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1507},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\lib.rs","byte_start":1164,"byte_end":1174,"line_start":48,"line_end":48,"column_start":28,"column_end":38},"alias_span":null,"name":"PROBESTACK","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1508},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\lib.rs","byte_start":1205,"byte_end":1222,"line_start":49,"line_end":49,"column_start":30,"column_end":47},"alias_span":null,"name":"SignatureRegistry","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1572},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\lib.rs","byte_start":1247,"byte_end":1258,"line_start":50,"line_end":50,"column_start":24,"column_end":35},"alias_span":null,"name":"LinearTable","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":611},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\lib.rs","byte_start":1260,"byte_end":1265,"line_start":50,"line_end":50,"column_start":37,"column_end":42},"alias_span":null,"name":"Table","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1519},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\lib.rs","byte_start":1267,"byte_end":1277,"line_start":50,"line_end":50,"column_start":44,"column_end":54},"alias_span":null,"name":"TableStyle","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\lib.rs","byte_start":1301,"byte_end":1302,"line_start":51,"line_end":51,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1860},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\lib.rs","byte_start":1336,"byte_end":1358,"line_start":53,"line_end":53,"column_start":5,"column_end":27},"alias_span":null,"name":"VMBuiltinFunctionIndex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1852},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\lib.rs","byte_start":1360,"byte_end":1382,"line_start":53,"line_end":53,"column_start":29,"column_end":51},"alias_span":null,"name":"VMCallerCheckedAnyfunc","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1869},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\lib.rs","byte_start":1384,"byte_end":1393,"line_start":53,"line_end":53,"column_start":53,"column_end":62},"alias_span":null,"name":"VMContext","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":797},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\lib.rs","byte_start":1395,"byte_end":1419,"line_start":53,"line_end":53,"column_start":64,"column_end":88},"alias_span":null,"name":"VMDynamicFunctionContext","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":808},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\lib.rs","byte_start":1425,"byte_end":1439,"line_start":54,"line_end":54,"column_start":5,"column_end":19},"alias_span":null,"name":"VMFunctionBody","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1751},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\lib.rs","byte_start":1441,"byte_end":1462,"line_start":54,"line_end":54,"column_start":21,"column_end":42},"alias_span":null,"name":"VMFunctionEnvironment","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1757},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\lib.rs","byte_start":1464,"byte_end":1480,"line_start":54,"line_end":54,"column_start":44,"column_end":60},"alias_span":null,"name":"VMFunctionImport","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1765},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\lib.rs","byte_start":1482,"byte_end":1496,"line_start":54,"line_end":54,"column_start":62,"column_end":76},"alias_span":null,"name":"VMFunctionKind","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1828},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\lib.rs","byte_start":1498,"byte_end":1516,"line_start":54,"line_end":54,"column_start":78,"column_end":96},"alias_span":null,"name":"VMGlobalDefinition","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1792},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\lib.rs","byte_start":1522,"byte_end":1536,"line_start":55,"line_end":55,"column_start":5,"column_end":19},"alias_span":null,"name":"VMGlobalImport","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1799},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\lib.rs","byte_start":1538,"byte_end":1556,"line_start":55,"line_end":55,"column_start":21,"column_end":39},"alias_span":null,"name":"VMMemoryDefinition","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1785},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\lib.rs","byte_start":1558,"byte_end":1572,"line_start":55,"line_end":55,"column_start":41,"column_end":55},"alias_span":null,"name":"VMMemoryImport","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1834},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\lib.rs","byte_start":1574,"byte_end":1596,"line_start":55,"line_end":55,"column_start":57,"column_end":79},"alias_span":null,"name":"VMSharedSignatureIndex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1807},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\lib.rs","byte_start":1598,"byte_end":1615,"line_start":55,"line_end":55,"column_start":81,"column_end":98},"alias_span":null,"name":"VMTableDefinition","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1778},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\lib.rs","byte_start":1621,"byte_end":1634,"line_start":56,"line_end":56,"column_start":5,"column_end":18},"alias_span":null,"name":"VMTableImport","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":878},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\lib.rs","byte_start":1636,"byte_end":1648,"line_start":56,"line_end":56,"column_start":20,"column_end":32},"alias_span":null,"name":"VMTrampoline","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1886},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\lib.rs","byte_start":1680,"byte_end":1706,"line_start":58,"line_end":58,"column_start":28,"column_end":54},"alias_span":null,"name":"TargetSharedSignatureIndex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1872},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\lib.rs","byte_start":1708,"byte_end":1717,"line_start":58,"line_end":58,"column_start":56,"column_end":65},"alias_span":null,"name":"VMOffsets","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\lib.rs","byte_start":0,"byte_end":2764,"line_start":1,"line_end":96,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":48},{"krate":0,"index":71},{"krate":0,"index":91},{"krate":0,"index":366},{"krate":0,"index":406},{"krate":0,"index":443},{"krate":0,"index":574},{"krate":0,"index":575},{"krate":0,"index":590},{"krate":0,"index":639},{"krate":0,"index":775},{"krate":0,"index":879},{"krate":0,"index":972},{"krate":0,"index":1019},{"krate":0,"index":1020},{"krate":0,"index":1021},{"krate":0,"index":1022},{"krate":0,"index":1023},{"krate":0,"index":1024},{"krate":0,"index":1025},{"krate":0,"index":1026},{"krate":0,"index":1027},{"krate":0,"index":1028},{"krate":0,"index":1029},{"krate":0,"index":1030},{"krate":0,"index":1031},{"krate":0,"index":1032},{"krate":0,"index":1033},{"krate":0,"index":1034},{"krate":0,"index":1035},{"krate":0,"index":1036},{"krate":0,"index":1037},{"krate":0,"index":1038},{"krate":0,"index":1039},{"krate":0,"index":1040},{"krate":0,"index":1041},{"krate":0,"index":1042},{"krate":0,"index":1043},{"krate":0,"index":1044},{"krate":0,"index":1045},{"krate":0,"index":1046},{"krate":0,"index":1047},{"krate":0,"index":1048},{"krate":0,"index":1049},{"krate":0,"index":1050},{"krate":0,"index":1051},{"krate":0,"index":1052},{"krate":0,"index":1053},{"krate":0,"index":1054},{"krate":0,"index":1055},{"krate":0,"index":1056},{"krate":0,"index":1057},{"krate":0,"index":1058},{"krate":0,"index":1059},{"krate":0,"index":1060},{"krate":0,"index":1061},{"krate":0,"index":1062},{"krate":0,"index":1063},{"krate":0,"index":1064},{"krate":0,"index":1990},{"krate":0,"index":1996},{"krate":0,"index":1995},{"krate":0,"index":1993},{"krate":0,"index":1065},{"krate":0,"index":1068},{"krate":0,"index":1069},{"krate":0,"index":1998},{"krate":0,"index":2004},{"krate":0,"index":2003},{"krate":0,"index":2001},{"krate":0,"index":1070}],"decl_id":null,"docs":" Runtime library support for Wasmer.\n","sig":null,"attributes":[{"value":"/ Runtime library support for Wasmer.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\lib.rs","byte_start":0,"byte_end":39,"line_start":1,"line_end":1,"column_start":1,"column_end":40}},{"value":"deny(missing_docs, trivial_numeric_casts, unused_extern_crates)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\lib.rs","byte_start":41,"byte_end":108,"line_start":3,"line_end":3,"column_start":1,"column_end":68}},{"value":"warn(unused_import_braces)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\lib.rs","byte_start":109,"byte_end":139,"line_start":4,"line_end":4,"column_start":1,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1074},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\export.rs","byte_start":3348,"byte_end":3356,"line_start":16,"line_end":16,"column_start":5,"column_end":13},"name":"Function","qualname":"::export::VMExport::Function","value":"VMExport::Function(VMExportFunction)","parent":{"krate":0,"index":1073},"children":[],"decl_id":null,"docs":" A function export value.\n","sig":null,"attributes":[{"value":"/ A function export value.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\export.rs","byte_start":3315,"byte_end":3343,"line_start":15,"line_end":15,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1077},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\export.rs","byte_start":3411,"byte_end":3416,"line_start":19,"line_end":19,"column_start":5,"column_end":10},"name":"Table","qualname":"::export::VMExport::Table","value":"VMExport::Table(VMExportTable)","parent":{"krate":0,"index":1073},"children":[],"decl_id":null,"docs":" A table export value.\n","sig":null,"attributes":[{"value":"/ A table export value.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\export.rs","byte_start":3381,"byte_end":3406,"line_start":18,"line_end":18,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1080},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\export.rs","byte_start":3469,"byte_end":3475,"line_start":22,"line_end":22,"column_start":5,"column_end":11},"name":"Memory","qualname":"::export::VMExport::Memory","value":"VMExport::Memory(VMExportMemory)","parent":{"krate":0,"index":1073},"children":[],"decl_id":null,"docs":" A memory export value.\n","sig":null,"attributes":[{"value":"/ A memory export value.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\export.rs","byte_start":3438,"byte_end":3464,"line_start":21,"line_end":21,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1083},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\export.rs","byte_start":3529,"byte_end":3535,"line_start":25,"line_end":25,"column_start":5,"column_end":11},"name":"Global","qualname":"::export::VMExport::Global","value":"VMExport::Global(VMExportGlobal)","parent":{"krate":0,"index":1073},"children":[],"decl_id":null,"docs":" A global export value.\n","sig":null,"attributes":[{"value":"/ A global export value.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\export.rs","byte_start":3498,"byte_end":3524,"line_start":24,"line_end":24,"column_start":5,"column_end":31}}]},{"kind":"Enum","id":{"krate":0,"index":1073},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\export.rs","byte_start":3300,"byte_end":3308,"line_start":14,"line_end":14,"column_start":10,"column_end":18},"name":"VMExport","qualname":"::export::VMExport","value":"pub enum VMExport {\n\n    /// A function export value.\n    Function(VMExportFunction),\n\n    /// A table export value.\n    Table(VMExportTable),\n\n    /// A memory export value.\n    Memory(VMExportMemory),\n\n    /// A global export value.\n    Global(VMExportGlobal),\n}","parent":null,"children":[{"krate":0,"index":1074},{"krate":0,"index":1077},{"krate":0,"index":1080},{"krate":0,"index":1083}],"decl_id":null,"docs":" The value of an export passed from one instance to another.\n","sig":null,"attributes":[{"value":"/ The value of an export passed from one instance to another.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\export.rs","byte_start":3210,"byte_end":3273,"line_start":12,"line_end":12,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":1088},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\export.rs","byte_start":3631,"byte_end":3647,"line_start":30,"line_end":30,"column_start":12,"column_end":28},"name":"VMExportFunction","qualname":"::export::VMExportFunction","value":"VMExportFunction { address, vmctx, signature, kind, call_trampoline, instance_ref }","parent":null,"children":[{"krate":0,"index":1089},{"krate":0,"index":1090},{"krate":0,"index":1091},{"krate":0,"index":1092},{"krate":0,"index":1093},{"krate":0,"index":1094}],"decl_id":null,"docs":" A function export value.\n","sig":null,"attributes":[{"value":"/ A function export value.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\export.rs","byte_start":3556,"byte_end":3584,"line_start":28,"line_end":28,"column_start":1,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":1089},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\export.rs","byte_start":3707,"byte_end":3714,"line_start":32,"line_end":32,"column_start":9,"column_end":16},"name":"address","qualname":"::export::VMExportFunction::address","value":"*const vmcontext::VMFunctionBody","parent":{"krate":0,"index":1088},"children":[],"decl_id":null,"docs":" The address of the native-code function.\n","sig":null,"attributes":[{"value":"/ The address of the native-code function.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\export.rs","byte_start":3654,"byte_end":3698,"line_start":31,"line_end":31,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":1090},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\export.rs","byte_start":3795,"byte_end":3800,"line_start":35,"line_end":35,"column_start":9,"column_end":14},"name":"vmctx","qualname":"::export::VMExportFunction::vmctx","value":"vmcontext::VMFunctionEnvironment","parent":{"krate":0,"index":1088},"children":[],"decl_id":null,"docs":" Pointer to the containing `VMContext`.\n","sig":null,"attributes":[{"value":"/ Pointer to the containing `VMContext`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\export.rs","byte_start":3744,"byte_end":3786,"line_start":34,"line_end":34,"column_start":5,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":1091},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\export.rs","byte_start":3894,"byte_end":3903,"line_start":38,"line_end":38,"column_start":9,"column_end":18},"name":"signature","qualname":"::export::VMExportFunction::signature","value":"wasmer_types::FunctionType","parent":{"krate":0,"index":1088},"children":[],"decl_id":null,"docs":" The function type, used for compatibility checking.\n","sig":null,"attributes":[{"value":"/ The function type, used for compatibility checking.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\export.rs","byte_start":3830,"byte_end":3885,"line_start":37,"line_end":37,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":1092},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\export.rs","byte_start":4015,"byte_end":4019,"line_start":42,"line_end":42,"column_start":9,"column_end":13},"name":"kind","qualname":"::export::VMExportFunction::kind","value":"vmcontext::VMFunctionKind","parent":{"krate":0,"index":1088},"children":[],"decl_id":null,"docs":" The function kind (specifies the calling convention for the\n function).\n","sig":null,"attributes":[{"value":"/ The function kind (specifies the calling convention for the","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\export.rs","byte_start":3924,"byte_end":3987,"line_start":40,"line_end":40,"column_start":5,"column_end":68}},{"value":"/ function).","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\export.rs","byte_start":3992,"byte_end":4006,"line_start":41,"line_end":41,"column_start":5,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":1093},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\export.rs","byte_start":4290,"byte_end":4305,"line_start":49,"line_end":49,"column_start":9,"column_end":24},"name":"call_trampoline","qualname":"::export::VMExportFunction::call_trampoline","value":"std::option::Option<unsafe extern \"C\" fn(*mut vmcontext::VMContext, *const vmcontext::VMFunctionBody, *mut u128)>","parent":{"krate":0,"index":1088},"children":[],"decl_id":null,"docs":" Address of the function call trampoline owned by the same\n VMContext that owns the VMFunctionBody.","sig":null,"attributes":[{"value":"/ Address of the function call trampoline owned by the same","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\export.rs","byte_start":4042,"byte_end":4103,"line_start":44,"line_end":44,"column_start":5,"column_end":66}},{"value":"/ VMContext that owns the VMFunctionBody.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\export.rs","byte_start":4108,"byte_end":4151,"line_start":45,"line_end":45,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\export.rs","byte_start":4156,"byte_end":4159,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ May be `None` when the function is a host function (`FunctionType`","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\export.rs","byte_start":4164,"byte_end":4234,"line_start":47,"line_end":47,"column_start":5,"column_end":75}},{"value":"/ == `Dynamic` or `vmctx` == `nullptr`).","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\export.rs","byte_start":4239,"byte_end":4281,"line_start":48,"line_end":48,"column_start":5,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":1094},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\export.rs","byte_start":4448,"byte_end":4460,"line_start":53,"line_end":53,"column_start":9,"column_end":21},"name":"instance_ref","qualname":"::export::VMExportFunction::instance_ref","value":"std::option::Option<instance::r#ref::InstanceRef>","parent":{"krate":0,"index":1088},"children":[],"decl_id":null,"docs":" A “reference” to the instance through the\n `InstanceRef`. `None` if it is a host function.\n","sig":null,"attributes":[{"value":"/ A “reference” to the instance through the","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\export.rs","byte_start":4334,"byte_end":4383,"line_start":51,"line_end":51,"column_start":5,"column_end":50}},{"value":"/ `InstanceRef`. `None` if it is a host function.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\export.rs","byte_start":4388,"byte_end":4439,"line_start":52,"line_end":52,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":1103},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\export.rs","byte_start":4964,"byte_end":4977,"line_start":72,"line_end":72,"column_start":12,"column_end":25},"name":"VMExportTable","qualname":"::export::VMExportTable","value":"VMExportTable { from, instance_ref }","parent":null,"children":[{"krate":0,"index":1104},{"krate":0,"index":1105}],"decl_id":null,"docs":" A table export value.\n","sig":null,"attributes":[{"value":"/ A table export value.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\export.rs","byte_start":4903,"byte_end":4928,"line_start":70,"line_end":70,"column_start":1,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":1104},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\export.rs","byte_start":5031,"byte_end":5035,"line_start":74,"line_end":74,"column_start":9,"column_end":13},"name":"from","qualname":"::export::VMExportTable::from","value":"std::sync::Arc<(dyn table::Table + 'static)>","parent":{"krate":0,"index":1103},"children":[],"decl_id":null,"docs":" Pointer to the containing `Table`.\n","sig":null,"attributes":[{"value":"/ Pointer to the containing `Table`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\export.rs","byte_start":4984,"byte_end":5022,"line_start":73,"line_end":73,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":1105},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\export.rs","byte_start":5169,"byte_end":5181,"line_start":78,"line_end":78,"column_start":9,"column_end":21},"name":"instance_ref","qualname":"::export::VMExportTable::instance_ref","value":"std::option::Option<instance::r#ref::InstanceRef>","parent":{"krate":0,"index":1103},"children":[],"decl_id":null,"docs":" A “reference” to the instance through the\n `InstanceRef`. `None` if it is a host table.\n","sig":null,"attributes":[{"value":"/ A “reference” to the instance through the","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\export.rs","byte_start":5058,"byte_end":5107,"line_start":76,"line_end":76,"column_start":5,"column_end":50}},{"value":"/ `InstanceRef`. `None` if it is a host table.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\export.rs","byte_start":5112,"byte_end":5160,"line_start":77,"line_end":77,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\export.rs","byte_start":5851,"byte_end":5853,"line_start":95,"line_end":95,"column_start":12,"column_end":14},"name":"ty","qualname":"<VMExportTable>::ty","value":"pub fn ty(&Self) -> &TableType","parent":null,"children":[],"decl_id":null,"docs":" Get the table type for this exported table\n","sig":null,"attributes":[{"value":"/ Get the table type for this exported table","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\export.rs","byte_start":5793,"byte_end":5839,"line_start":94,"line_end":94,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\export.rs","byte_start":5964,"byte_end":5969,"line_start":100,"line_end":100,"column_start":12,"column_end":17},"name":"style","qualname":"<VMExportTable>::style","value":"pub fn style(&Self) -> &TableStyle","parent":null,"children":[],"decl_id":null,"docs":" Get the style for this exported table\n","sig":null,"attributes":[{"value":"/ Get the style for this exported table","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\export.rs","byte_start":5911,"byte_end":5952,"line_start":99,"line_end":99,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\export.rs","byte_start":6120,"byte_end":6124,"line_start":105,"line_end":105,"column_start":12,"column_end":16},"name":"same","qualname":"<VMExportTable>::same","value":"pub fn same(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether or not the two `VMExportTable`s refer to the same Memory.\n","sig":null,"attributes":[{"value":"/ Returns whether or not the two `VMExportTable`s refer to the same Memory.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\export.rs","byte_start":6031,"byte_end":6108,"line_start":104,"line_end":104,"column_start":5,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":1110},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\export.rs","byte_start":6392,"byte_end":6406,"line_start":118,"line_end":118,"column_start":12,"column_end":26},"name":"VMExportMemory","qualname":"::export::VMExportMemory","value":"VMExportMemory { from, instance_ref }","parent":null,"children":[{"krate":0,"index":1111},{"krate":0,"index":1112}],"decl_id":null,"docs":" A memory export value.\n","sig":null,"attributes":[{"value":"/ A memory export value.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\export.rs","byte_start":6330,"byte_end":6356,"line_start":116,"line_end":116,"column_start":1,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":1111},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\export.rs","byte_start":6461,"byte_end":6465,"line_start":120,"line_end":120,"column_start":9,"column_end":13},"name":"from","qualname":"::export::VMExportMemory::from","value":"std::sync::Arc<(dyn memory::Memory + 'static)>","parent":{"krate":0,"index":1110},"children":[],"decl_id":null,"docs":" Pointer to the containing `Memory`.\n","sig":null,"attributes":[{"value":"/ Pointer to the containing `Memory`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\export.rs","byte_start":6413,"byte_end":6452,"line_start":119,"line_end":119,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":1112},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\export.rs","byte_start":6601,"byte_end":6613,"line_start":124,"line_end":124,"column_start":9,"column_end":21},"name":"instance_ref","qualname":"::export::VMExportMemory::instance_ref","value":"std::option::Option<instance::r#ref::InstanceRef>","parent":{"krate":0,"index":1110},"children":[],"decl_id":null,"docs":" A “reference” to the instance through the\n `InstanceRef`. `None` if it is a host memory.\n","sig":null,"attributes":[{"value":"/ A “reference” to the instance through the","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\export.rs","byte_start":6489,"byte_end":6538,"line_start":122,"line_end":122,"column_start":5,"column_end":50}},{"value":"/ `InstanceRef`. `None` if it is a host memory.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\export.rs","byte_start":6543,"byte_end":6592,"line_start":123,"line_end":123,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\export.rs","byte_start":7282,"byte_end":7284,"line_start":141,"line_end":141,"column_start":12,"column_end":14},"name":"ty","qualname":"<VMExportMemory>::ty","value":"pub fn ty(&Self) -> &MemoryType","parent":null,"children":[],"decl_id":null,"docs":" Get the type for this exported memory\n","sig":null,"attributes":[{"value":"/ Get the type for this exported memory","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\export.rs","byte_start":7229,"byte_end":7270,"line_start":140,"line_end":140,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\export.rs","byte_start":7397,"byte_end":7402,"line_start":146,"line_end":146,"column_start":12,"column_end":17},"name":"style","qualname":"<VMExportMemory>::style","value":"pub fn style(&Self) -> &MemoryStyle","parent":null,"children":[],"decl_id":null,"docs":" Get the style for this exported memory\n","sig":null,"attributes":[{"value":"/ Get the style for this exported memory","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\export.rs","byte_start":7343,"byte_end":7385,"line_start":145,"line_end":145,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\export.rs","byte_start":7555,"byte_end":7559,"line_start":151,"line_end":151,"column_start":12,"column_end":16},"name":"same","qualname":"<VMExportMemory>::same","value":"pub fn same(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether or not the two `VMExportMemory`s refer to the same Memory.\n","sig":null,"attributes":[{"value":"/ Returns whether or not the two `VMExportMemory`s refer to the same Memory.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\export.rs","byte_start":7465,"byte_end":7543,"line_start":150,"line_end":150,"column_start":5,"column_end":83}}]},{"kind":"Struct","id":{"krate":0,"index":1117},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\export.rs","byte_start":7832,"byte_end":7846,"line_start":164,"line_end":164,"column_start":12,"column_end":26},"name":"VMExportGlobal","qualname":"::export::VMExportGlobal","value":"VMExportGlobal { from, instance_ref }","parent":null,"children":[{"krate":0,"index":1118},{"krate":0,"index":1119}],"decl_id":null,"docs":" A global export value.\n","sig":null,"attributes":[{"value":"/ A global export value.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\export.rs","byte_start":7770,"byte_end":7796,"line_start":162,"line_end":162,"column_start":1,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":1118},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\export.rs","byte_start":7922,"byte_end":7926,"line_start":166,"line_end":166,"column_start":9,"column_end":13},"name":"from","qualname":"::export::VMExportGlobal::from","value":"std::sync::Arc<global::Global>","parent":{"krate":0,"index":1117},"children":[],"decl_id":null,"docs":" The global declaration, used for compatibility checking.\n","sig":null,"attributes":[{"value":"/ The global declaration, used for compatibility checking.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\export.rs","byte_start":7853,"byte_end":7913,"line_start":165,"line_end":165,"column_start":5,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":1119},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\export.rs","byte_start":8058,"byte_end":8070,"line_start":170,"line_end":170,"column_start":9,"column_end":21},"name":"instance_ref","qualname":"::export::VMExportGlobal::instance_ref","value":"std::option::Option<instance::r#ref::InstanceRef>","parent":{"krate":0,"index":1117},"children":[],"decl_id":null,"docs":" A “reference” to the instance through the\n `InstanceRef`. `None` if it is a host global.\n","sig":null,"attributes":[{"value":"/ A “reference” to the instance through the","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\export.rs","byte_start":7946,"byte_end":7995,"line_start":168,"line_end":168,"column_start":5,"column_end":50}},{"value":"/ `InstanceRef`. `None` if it is a host global.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\export.rs","byte_start":8000,"byte_end":8049,"line_start":169,"line_end":169,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\export.rs","byte_start":8819,"byte_end":8823,"line_start":187,"line_end":187,"column_start":12,"column_end":16},"name":"same","qualname":"<VMExportGlobal>::same","value":"pub fn same(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether or not the two `VMExportGlobal`s refer to the same Global.\n","sig":null,"attributes":[{"value":"/ Returns whether or not the two `VMExportGlobal`s refer to the same Global.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\export.rs","byte_start":8729,"byte_end":8807,"line_start":186,"line_end":186,"column_start":5,"column_end":83}}]},{"kind":"Struct","id":{"krate":0,"index":1124},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\global.rs","byte_start":9278,"byte_end":9284,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"Global","qualname":"::global::Global","value":"Global {  }","parent":null,"children":[{"krate":0,"index":1125},{"krate":0,"index":1126},{"krate":0,"index":1127}],"decl_id":null,"docs":" A Global instance\n","sig":null,"attributes":[{"value":"/ A Global instance","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\global.rs","byte_start":9245,"byte_end":9266,"line_start":9,"line_end":9,"column_start":1,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1131},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\global.rs","byte_start":10072,"byte_end":10098,"line_start":31,"line_end":31,"column_start":5,"column_end":31},"name":"ImmutableGlobalCannotBeSet","qualname":"::global::GlobalError::ImmutableGlobalCannotBeSet","value":"GlobalError::ImmutableGlobalCannotBeSet","parent":{"krate":0,"index":1130},"children":[],"decl_id":null,"docs":" The error returned when attempting to set an immutable global.\n","sig":null,"attributes":[{"value":"/ The error returned when attempting to set an immutable global.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\global.rs","byte_start":9948,"byte_end":10014,"line_start":29,"line_end":29,"column_start":5,"column_end":71}},{"value":"error(\"Attempted to set an immutable global\")","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\global.rs","byte_start":10019,"byte_end":10067,"line_start":30,"line_end":30,"column_start":5,"column_end":53}}]},{"kind":"StructVariant","id":{"krate":0,"index":1133},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\global.rs","byte_start":10335,"byte_end":10348,"line_start":36,"line_end":36,"column_start":5,"column_end":18},"name":"IncorrectType","qualname":"::global::GlobalError::IncorrectType","value":"GlobalError::IncorrectType { expected, found }","parent":{"krate":0,"index":1130},"children":[],"decl_id":null,"docs":" The error returned when attempting to operate on a global as a specific type\n that differs from the global's own type.\n","sig":null,"attributes":[{"value":"/ The error returned when attempting to operate on a global as a specific type","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\global.rs","byte_start":10105,"byte_end":10185,"line_start":33,"line_end":33,"column_start":5,"column_end":85}},{"value":"/ that differs from the global's own type.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\global.rs","byte_start":10190,"byte_end":10234,"line_start":34,"line_end":34,"column_start":5,"column_end":49}},{"value":"error(\"Attempted to operate on a global of type {expected} as a global of type {found}\")","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\global.rs","byte_start":10239,"byte_end":10330,"line_start":35,"line_end":35,"column_start":5,"column_end":96}}]},{"kind":"Enum","id":{"krate":0,"index":1130},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\global.rs","byte_start":9930,"byte_end":9941,"line_start":28,"line_end":28,"column_start":10,"column_end":21},"name":"GlobalError","qualname":"::global::GlobalError","value":"pub enum GlobalError {\n\n    /// The error returned when attempting to set an immutable global.\n    #[error(\"Attempted to set an immutable global\")]\n    ImmutableGlobalCannotBeSet,\n\n    /// The error returned when attempting to operate on a global as a specific type\n    /// that differs from the global's own type.\n    #[error(\"Attempted to operate on a global of type {expected} as a global of type {found}\")]\n    IncorrectType {\n        /// The type that the global is.\n        expected: Type,\n        /// The type that we were asked to use it as.\n        found: Type,\n    },\n}","parent":null,"children":[{"krate":0,"index":1131},{"krate":0,"index":1133}],"decl_id":null,"docs":" Error type describing things that can go wrong when operating on Wasm Globals.\n","sig":null,"attributes":[{"value":"/ Error type describing things that can go wrong when operating on Wasm Globals.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\global.rs","byte_start":9790,"byte_end":9872,"line_start":26,"line_end":26,"column_start":1,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\global.rs","byte_start":10607,"byte_end":10610,"line_start":46,"line_end":46,"column_start":12,"column_end":15},"name":"new","qualname":"<Global>::new","value":"pub fn new(GlobalType) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new, zero bit-pattern initialized global from a [`GlobalType`].\n","sig":null,"attributes":[{"value":"/ Create a new, zero bit-pattern initialized global from a [`GlobalType`].","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\global.rs","byte_start":10519,"byte_end":10595,"line_start":45,"line_end":45,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\global.rs","byte_start":10876,"byte_end":10878,"line_start":55,"line_end":55,"column_start":12,"column_end":14},"name":"ty","qualname":"<Global>::ty","value":"pub fn ty(&Self) -> &GlobalType","parent":null,"children":[],"decl_id":null,"docs":" Get the type of the global.\n","sig":null,"attributes":[{"value":"/ Get the type of the global.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\global.rs","byte_start":10833,"byte_end":10864,"line_start":54,"line_end":54,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\global.rs","byte_start":11017,"byte_end":11025,"line_start":60,"line_end":60,"column_start":12,"column_end":20},"name":"vmglobal","qualname":"<Global>::vmglobal","value":"pub fn vmglobal(&Self) -> NonNull<VMGlobalDefinition>","parent":null,"children":[],"decl_id":null,"docs":" Get a pointer to the underlying definition used by the generated code.\n","sig":null,"attributes":[{"value":"/ Get a pointer to the underlying definition used by the generated code.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\global.rs","byte_start":10931,"byte_end":11005,"line_start":59,"line_end":59,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\global.rs","byte_start":11331,"byte_end":11334,"line_start":67,"line_end":67,"column_start":12,"column_end":15},"name":"get","qualname":"<Global>::get","value":"pub fn get<T>(&Self) -> Value<T>","parent":null,"children":[],"decl_id":null,"docs":" Get a value from the global.\n","sig":null,"attributes":[{"value":"/ Get a value from the global.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\global.rs","byte_start":11287,"byte_end":11319,"line_start":66,"line_end":66,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\global.rs","byte_start":12110,"byte_end":12113,"line_start":86,"line_end":86,"column_start":19,"column_end":22},"name":"set","qualname":"<Global>::set","value":"pub unsafe fn set<T>(&Self, Value<T>) -> Result<(), GlobalError>","parent":null,"children":[],"decl_id":null,"docs":" Set a value for the global.","sig":null,"attributes":[{"value":"/ Set a value for the global.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\global.rs","byte_start":11946,"byte_end":11977,"line_start":82,"line_end":82,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\global.rs","byte_start":11982,"byte_end":11985,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\global.rs","byte_start":11990,"byte_end":12002,"line_start":84,"line_end":84,"column_start":5,"column_end":17}},{"value":"/ The caller should check that the `val` comes from the same store as this global.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\global.rs","byte_start":12007,"byte_end":12091,"line_start":85,"line_end":85,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\global.rs","byte_start":12867,"byte_end":12880,"line_start":106,"line_end":106,"column_start":19,"column_end":32},"name":"set_unchecked","qualname":"<Global>::set_unchecked","value":"pub unsafe fn set_unchecked<T>(&Self, Value<T>) -> Result<(), GlobalError>","parent":null,"children":[],"decl_id":null,"docs":" Set a value from the global (unchecked)","sig":null,"attributes":[{"value":"/ Set a value from the global (unchecked)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\global.rs","byte_start":12581,"byte_end":12624,"line_start":100,"line_end":100,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\global.rs","byte_start":12629,"byte_end":12632,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\global.rs","byte_start":12637,"byte_end":12649,"line_start":102,"line_end":102,"column_start":5,"column_end":17}},{"value":"/ The caller should check that the `val` comes from the same store as this global.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\global.rs","byte_start":12654,"byte_end":12738,"line_start":103,"line_end":103,"column_start":5,"column_end":89}},{"value":"/ The caller should also ensure that this global is synchronized. Otherwise, use","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\global.rs","byte_start":12743,"byte_end":12825,"line_start":104,"line_end":104,"column_start":5,"column_end":87}},{"value":"/ `set` instead.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\global.rs","byte_start":12830,"byte_end":12848,"line_start":105,"line_end":105,"column_start":5,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":1153},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\imports.rs","byte_start":13964,"byte_end":13971,"line_start":11,"line_end":11,"column_start":12,"column_end":19},"name":"Imports","qualname":"::imports::Imports","value":"Imports { functions, host_function_env_initializers, tables, memories, globals }","parent":null,"children":[{"krate":0,"index":1154},{"krate":0,"index":1155},{"krate":0,"index":1156},{"krate":0,"index":1157},{"krate":0,"index":1158}],"decl_id":null,"docs":" Resolved import pointers.\n","sig":null,"attributes":[{"value":"/ Resolved import pointers.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\imports.rs","byte_start":13906,"byte_end":13935,"line_start":9,"line_end":9,"column_start":1,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":1154},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\imports.rs","byte_start":14033,"byte_end":14042,"line_start":13,"line_end":13,"column_start":9,"column_end":18},"name":"functions","qualname":"::imports::Imports::functions","value":"wasmer_types::entity::BoxedSlice<wasmer_types::FunctionIndex, vmcontext::VMFunctionImport>","parent":{"krate":0,"index":1153},"children":[],"decl_id":null,"docs":" Resolved addresses for imported functions.\n","sig":null,"attributes":[{"value":"/ Resolved addresses for imported functions.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\imports.rs","byte_start":13978,"byte_end":14024,"line_start":12,"line_end":12,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":1155},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\imports.rs","byte_start":14680,"byte_end":14710,"line_start":25,"line_end":25,"column_start":9,"column_end":39},"name":"host_function_env_initializers","qualname":"::imports::Imports::host_function_env_initializers","value":"std::option::Option<wasmer_types::entity::BoxedSlice<wasmer_types::FunctionIndex, instance::ImportFunctionEnv>>","parent":{"krate":0,"index":1153},"children":[],"decl_id":null,"docs":" Initializers for host function environments. This is split out from `functions`\n because the generated code never needs to touch this and the extra wasted\n space may affect Wasm runtime performance due to increased cache pressure.","sig":null,"attributes":[{"value":"/ Initializers for host function environments. This is split out from `functions`","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\imports.rs","byte_start":14094,"byte_end":14177,"line_start":15,"line_end":15,"column_start":5,"column_end":88}},{"value":"/ because the generated code never needs to touch this and the extra wasted","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\imports.rs","byte_start":14182,"byte_end":14259,"line_start":16,"line_end":16,"column_start":5,"column_end":82}},{"value":"/ space may affect Wasm runtime performance due to increased cache pressure.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\imports.rs","byte_start":14264,"byte_end":14342,"line_start":17,"line_end":17,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\imports.rs","byte_start":14347,"byte_end":14350,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ We make it optional so that we can free the data after use.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\imports.rs","byte_start":14355,"byte_end":14418,"line_start":19,"line_end":19,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\imports.rs","byte_start":14423,"byte_end":14426,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ We move this data in `get_imported_function_envs` because there's","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\imports.rs","byte_start":14431,"byte_end":14500,"line_start":21,"line_end":21,"column_start":5,"column_end":74}},{"value":"/ no value to keeping it around; host functions must be initialized","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\imports.rs","byte_start":14505,"byte_end":14574,"line_start":22,"line_end":22,"column_start":5,"column_end":74}},{"value":"/ exactly once so we save some memory and improve correctness by","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\imports.rs","byte_start":14579,"byte_end":14645,"line_start":23,"line_end":23,"column_start":5,"column_end":71}},{"value":"/ moving this data.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\imports.rs","byte_start":14650,"byte_end":14671,"line_start":24,"line_end":24,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":1156},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\imports.rs","byte_start":14823,"byte_end":14829,"line_start":28,"line_end":28,"column_start":9,"column_end":15},"name":"tables","qualname":"::imports::Imports::tables","value":"wasmer_types::entity::BoxedSlice<wasmer_types::TableIndex, vmcontext::VMTableImport>","parent":{"krate":0,"index":1153},"children":[],"decl_id":null,"docs":" Resolved addresses for imported tables.\n","sig":null,"attributes":[{"value":"/ Resolved addresses for imported tables.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\imports.rs","byte_start":14771,"byte_end":14814,"line_start":27,"line_end":27,"column_start":5,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":1157},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\imports.rs","byte_start":14929,"byte_end":14937,"line_start":31,"line_end":31,"column_start":9,"column_end":17},"name":"memories","qualname":"::imports::Imports::memories","value":"wasmer_types::entity::BoxedSlice<wasmer_types::MemoryIndex, vmcontext::VMMemoryImport>","parent":{"krate":0,"index":1153},"children":[],"decl_id":null,"docs":" Resolved addresses for imported memories.\n","sig":null,"attributes":[{"value":"/ Resolved addresses for imported memories.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\imports.rs","byte_start":14875,"byte_end":14920,"line_start":30,"line_end":30,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":1158},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\imports.rs","byte_start":15038,"byte_end":15045,"line_start":34,"line_end":34,"column_start":9,"column_end":16},"name":"globals","qualname":"::imports::Imports::globals","value":"wasmer_types::entity::BoxedSlice<wasmer_types::GlobalIndex, vmcontext::VMGlobalImport>","parent":{"krate":0,"index":1153},"children":[],"decl_id":null,"docs":" Resolved addresses for imported globals.\n","sig":null,"attributes":[{"value":"/ Resolved addresses for imported globals.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\imports.rs","byte_start":14985,"byte_end":15029,"line_start":33,"line_end":33,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\imports.rs","byte_start":15161,"byte_end":15164,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<Imports>::new","value":"pub fn new(PrimaryMap<FunctionIndex, VMFunctionImport>,\n           PrimaryMap<FunctionIndex, ImportFunctionEnv>,\n           PrimaryMap<TableIndex, VMTableImport>,\n           PrimaryMap<MemoryIndex, VMMemoryImport>,\n           PrimaryMap<GlobalIndex, VMGlobalImport>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Imports` instance.\n","sig":null,"attributes":[{"value":"/ Construct a new `Imports` instance.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\imports.rs","byte_start":15110,"byte_end":15149,"line_start":38,"line_end":38,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\imports.rs","byte_start":15962,"byte_end":15966,"line_start":56,"line_end":56,"column_start":12,"column_end":16},"name":"none","qualname":"<Imports>::none","value":"pub fn none() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Imports` instance with no imports.\n","sig":null,"attributes":[{"value":"/ Construct a new `Imports` instance with no imports.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\imports.rs","byte_start":15895,"byte_end":15950,"line_start":55,"line_end":55,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\imports.rs","byte_start":16588,"byte_end":16614,"line_start":71,"line_end":71,"column_start":12,"column_end":38},"name":"get_imported_function_envs","qualname":"<Imports>::get_imported_function_envs","value":"pub fn get_imported_function_envs(&mut Self)\n-> BoxedSlice<FunctionIndex, ImportFunctionEnv>","parent":null,"children":[],"decl_id":null,"docs":" Get the `WasmerEnv::init_with_instance` function pointers and the pointers\n to the envs to call it on.","sig":null,"attributes":[{"value":"/ Get the `WasmerEnv::init_with_instance` function pointers and the pointers","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\imports.rs","byte_start":16303,"byte_end":16381,"line_start":66,"line_end":66,"column_start":5,"column_end":83}},{"value":"/ to the envs to call it on.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\imports.rs","byte_start":16386,"byte_end":16416,"line_start":67,"line_end":67,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\imports.rs","byte_start":16421,"byte_end":16424,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ This function can only be called once, it deletes the data it returns after","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\imports.rs","byte_start":16429,"byte_end":16508,"line_start":69,"line_end":69,"column_start":5,"column_end":84}},{"value":"/ returning it to ensure that it's not called more than once.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\imports.rs","byte_start":16513,"byte_end":16576,"line_start":70,"line_end":70,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":114},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\allocator.rs","byte_start":67698,"byte_end":67715,"line_start":29,"line_end":29,"column_start":12,"column_end":29},"name":"InstanceAllocator","qualname":"::instance::allocator::InstanceAllocator","value":"InstanceAllocator {  }","parent":null,"children":[{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118}],"decl_id":null,"docs":" This is an intermediate type that manages the raw allocation and\n metadata when creating an [`Instance`].","sig":null,"attributes":[{"value":"/ This is an intermediate type that manages the raw allocation and","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\allocator.rs","byte_start":66918,"byte_end":66986,"line_start":11,"line_end":11,"column_start":1,"column_end":69}},{"value":"/ metadata when creating an [`Instance`].","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\allocator.rs","byte_start":66987,"byte_end":67030,"line_start":12,"line_end":12,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\allocator.rs","byte_start":67031,"byte_end":67034,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This type will free the allocated memory if it's dropped before","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\allocator.rs","byte_start":67035,"byte_end":67102,"line_start":14,"line_end":14,"column_start":1,"column_end":68}},{"value":"/ being used.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\allocator.rs","byte_start":67103,"byte_end":67118,"line_start":15,"line_end":15,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\allocator.rs","byte_start":67119,"byte_end":67122,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ It is important to remind that [`Instance`] is dynamically-sized","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\allocator.rs","byte_start":67123,"byte_end":67191,"line_start":17,"line_end":17,"column_start":1,"column_end":69}},{"value":"/ based on `VMOffsets`: The `Instance.vmctx` field represents a","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\allocator.rs","byte_start":67192,"byte_end":67257,"line_start":18,"line_end":18,"column_start":1,"column_end":66}},{"value":"/ dynamically-sized array that extends beyond the nominal end of the","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\allocator.rs","byte_start":67258,"byte_end":67328,"line_start":19,"line_end":19,"column_start":1,"column_end":71}},{"value":"/ type. So in order to create an instance of it, we must:","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\allocator.rs","byte_start":67329,"byte_end":67388,"line_start":20,"line_end":20,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\allocator.rs","byte_start":67389,"byte_end":67392,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ 1. Define the correct layout for `Instance` (size and alignment),","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\allocator.rs","byte_start":67393,"byte_end":67462,"line_start":22,"line_end":22,"column_start":1,"column_end":70}},{"value":"/ 2. Allocate it properly.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\allocator.rs","byte_start":67463,"byte_end":67491,"line_start":23,"line_end":23,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\allocator.rs","byte_start":67492,"byte_end":67495,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ The [`InstanceAllocator::instance_layout`] computes the correct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\allocator.rs","byte_start":67496,"byte_end":67563,"line_start":25,"line_end":25,"column_start":1,"column_end":68}},{"value":"/ layout to represent the wanted [`Instance`].","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\allocator.rs","byte_start":67564,"byte_end":67612,"line_start":26,"line_end":26,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\allocator.rs","byte_start":67613,"byte_end":67616,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ Then we use this layout to allocate an empty `Instance` properly.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\allocator.rs","byte_start":67617,"byte_end":67686,"line_start":28,"line_end":28,"column_start":1,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\allocator.rs","byte_start":69140,"byte_end":69143,"line_start":70,"line_end":70,"column_start":12,"column_end":15},"name":"new","qualname":"<InstanceAllocator>::new","value":"pub fn new(&ModuleInfo)\n-> (Self, Vec<NonNull<VMMemoryDefinition>>, Vec<NonNull<VMTableDefinition>>)","parent":null,"children":[],"decl_id":null,"docs":" Allocates instance data for use with [`InstanceHandle::new`].","sig":null,"attributes":[{"value":"/ Allocates instance data for use with [`InstanceHandle::new`].","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\allocator.rs","byte_start":68664,"byte_end":68729,"line_start":61,"line_end":61,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\allocator.rs","byte_start":68734,"byte_end":68737,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ Returns a wrapper type around the allocation and 2 vectors of","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\allocator.rs","byte_start":68742,"byte_end":68807,"line_start":63,"line_end":63,"column_start":5,"column_end":70}},{"value":"/ pointers into the allocated buffer. These lists of pointers","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\allocator.rs","byte_start":68812,"byte_end":68875,"line_start":64,"line_end":64,"column_start":5,"column_end":68}},{"value":"/ correspond to the location in memory for the local memories and","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\allocator.rs","byte_start":68880,"byte_end":68947,"line_start":65,"line_end":65,"column_start":5,"column_end":72}},{"value":"/ tables respectively. These pointers should be written to before","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\allocator.rs","byte_start":68952,"byte_end":69019,"line_start":66,"line_end":66,"column_start":5,"column_end":72}},{"value":"/ calling [`InstanceHandle::new`].","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\allocator.rs","byte_start":69024,"byte_end":69060,"line_start":67,"line_end":67,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\allocator.rs","byte_start":69065,"byte_end":69068,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ [`InstanceHandle::new`]: super::InstanceHandle::new","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\allocator.rs","byte_start":69073,"byte_end":69128,"line_start":69,"line_end":69,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":1161},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\ref.rs","byte_start":76193,"byte_end":76204,"line_start":35,"line_end":35,"column_start":12,"column_end":23},"name":"InstanceRef","qualname":"::instance::r#ref::InstanceRef","value":"InstanceRef {  }","parent":null,"children":[{"krate":0,"index":1162},{"krate":0,"index":1163},{"krate":0,"index":1164}],"decl_id":null,"docs":" An `InstanceRef` is responsible to properly deallocate,\n and to give access to an `Instance`, in such a way that `Instance`\n is unique, can be shared, safely, across threads, without\n duplicating the pointer in multiple locations. `InstanceRef`\n must be the only “owner” of an `Instance`.","sig":null,"attributes":[{"value":"/ An `InstanceRef` is responsible to properly deallocate,","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\ref.rs","byte_start":74767,"byte_end":74826,"line_start":6,"line_end":6,"column_start":1,"column_end":60}},{"value":"/ and to give access to an `Instance`, in such a way that `Instance`","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\ref.rs","byte_start":74827,"byte_end":74897,"line_start":7,"line_end":7,"column_start":1,"column_end":71}},{"value":"/ is unique, can be shared, safely, across threads, without","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\ref.rs","byte_start":74898,"byte_end":74959,"line_start":8,"line_end":8,"column_start":1,"column_end":62}},{"value":"/ duplicating the pointer in multiple locations. `InstanceRef`","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\ref.rs","byte_start":74960,"byte_end":75024,"line_start":9,"line_end":9,"column_start":1,"column_end":65}},{"value":"/ must be the only “owner” of an `Instance`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\ref.rs","byte_start":75025,"byte_end":75075,"line_start":10,"line_end":10,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\ref.rs","byte_start":75076,"byte_end":75079,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Consequently, one must not share `Instance` but","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\ref.rs","byte_start":75080,"byte_end":75131,"line_start":12,"line_end":12,"column_start":1,"column_end":52}},{"value":"/ `InstanceRef`. It acts like an Atomically Reference Counter","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\ref.rs","byte_start":75132,"byte_end":75195,"line_start":13,"line_end":13,"column_start":1,"column_end":64}},{"value":"/ to `Instance`. In short, `InstanceRef` is roughly a","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\ref.rs","byte_start":75196,"byte_end":75251,"line_start":14,"line_end":14,"column_start":1,"column_end":56}},{"value":"/ simplified version of `std::sync::Arc`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\ref.rs","byte_start":75252,"byte_end":75295,"line_start":15,"line_end":15,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\ref.rs","byte_start":75296,"byte_end":75299,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This `InstanceRef` must be freed with [`InstanceRef::deallocate_instance`]","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\ref.rs","byte_start":75300,"byte_end":75378,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ if and only if it has been set correctly. The `Drop` implementation of","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\ref.rs","byte_start":75379,"byte_end":75453,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"/ [`InstanceRef`] calls its `deallocate_instance` method without","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\ref.rs","byte_start":75454,"byte_end":75520,"line_start":19,"line_end":19,"column_start":1,"column_end":67}},{"value":"/ checking if this  property holds, only when `Self.strong` is equal to 1.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\ref.rs","byte_start":75521,"byte_end":75597,"line_start":20,"line_end":20,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\ref.rs","byte_start":75598,"byte_end":75601,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Note for the curious reader: [`InstanceAllocator::new`]","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\ref.rs","byte_start":75602,"byte_end":75661,"line_start":22,"line_end":22,"column_start":1,"column_end":60}},{"value":"/ and [`InstanceHandle::new`] will respectively allocate a proper","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\ref.rs","byte_start":75662,"byte_end":75729,"line_start":23,"line_end":23,"column_start":1,"column_end":68}},{"value":"/ `Instance` and will fill it correctly.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\ref.rs","byte_start":75730,"byte_end":75772,"line_start":24,"line_end":24,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\ref.rs","byte_start":75773,"byte_end":75776,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ A little bit of background: The initial goal was to be able to","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\ref.rs","byte_start":75777,"byte_end":75843,"line_start":26,"line_end":26,"column_start":1,"column_end":67}},{"value":"/ share an [`Instance`] between an [`InstanceHandle`] and the module","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\ref.rs","byte_start":75844,"byte_end":75914,"line_start":27,"line_end":27,"column_start":1,"column_end":71}},{"value":"/ exports, so that one can drop a [`InstanceHandle`] but still being","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\ref.rs","byte_start":75915,"byte_end":75985,"line_start":28,"line_end":28,"column_start":1,"column_end":71}},{"value":"/ able to use the exports properly.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\ref.rs","byte_start":75986,"byte_end":76023,"line_start":29,"line_end":29,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\ref.rs","byte_start":76024,"byte_end":76027,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ This structure has a C representation because `Instance` is","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\ref.rs","byte_start":76028,"byte_end":76091,"line_start":31,"line_end":31,"column_start":1,"column_end":64}},{"value":"/ dynamically-sized, and the `instance` field must be last.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\ref.rs","byte_start":76092,"byte_end":76153,"line_start":32,"line_end":32,"column_start":1,"column_end":62}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\ref.rs","byte_start":76171,"byte_end":76181,"line_start":34,"line_end":34,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\ref.rs","byte_start":78357,"byte_end":78369,"line_start":96,"line_end":96,"column_start":12,"column_end":24},"name":"strong_count","qualname":"<InstanceRef>::strong_count","value":"pub fn strong_count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the number of strong references pointing to this\n `InstanceRef`.\n","sig":null,"attributes":[{"value":"/ Get the number of strong references pointing to this","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\ref.rs","byte_start":78266,"byte_end":78322,"line_start":94,"line_end":94,"column_start":5,"column_end":61}},{"value":"/ `InstanceRef`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\ref.rs","byte_start":78327,"byte_end":78345,"line_start":95,"line_end":95,"column_start":5,"column_end":23}}]},{"kind":"Type","id":{"krate":0,"index":231},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":18768,"byte_end":18792,"line_start":50,"line_end":50,"column_start":10,"column_end":34},"name":"ImportInitializerFuncPtr","qualname":"::instance::ImportInitializerFuncPtr","value":"fn(: *mut ffi::c_void, : *const ffi::c_void) -> Result<(), ResultErr>","parent":null,"children":[],"decl_id":null,"docs":" The function pointer to call with data and an [`Instance`] pointer to\n finish initializing the host env.\n","sig":null,"attributes":[{"value":"/ The function pointer to call with data and an [`Instance`] pointer to","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":18647,"byte_end":18720,"line_start":48,"line_end":48,"column_start":1,"column_end":74}},{"value":"/ finish initializing the host env.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":18721,"byte_end":18758,"line_start":49,"line_end":49,"column_start":1,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1168},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":21431,"byte_end":21436,"line_start":116,"line_end":116,"column_start":5,"column_end":10},"name":"NoEnv","qualname":"::instance::ImportFunctionEnv::NoEnv","value":"ImportFunctionEnv::NoEnv","parent":{"krate":0,"index":1167},"children":[],"decl_id":null,"docs":" The `vmctx` pointer does not refer to a host env, there is no\n metadata about it.\n","sig":null,"attributes":[{"value":"/ The `vmctx` pointer does not refer to a host env, there is no","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":21334,"byte_end":21399,"line_start":114,"line_end":114,"column_start":5,"column_end":70}},{"value":"/ metadata about it.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":21404,"byte_end":21426,"line_start":115,"line_end":115,"column_start":5,"column_end":27}}]},{"kind":"StructVariant","id":{"krate":0,"index":1170},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":21781,"byte_end":21784,"line_start":123,"line_end":123,"column_start":5,"column_end":8},"name":"Env","qualname":"::instance::ImportFunctionEnv::Env","value":"ImportFunctionEnv::Env { env, clone, initializer, destructor }","parent":{"krate":0,"index":1167},"children":[],"decl_id":null,"docs":" We're dealing with a user-defined host env.","sig":null,"attributes":[{"value":"/ We're dealing with a user-defined host env.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":21442,"byte_end":21489,"line_start":117,"line_end":117,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":21494,"byte_end":21497,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ This host env may be either unwrapped (the user-supplied host env","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":21502,"byte_end":21571,"line_start":119,"line_end":119,"column_start":5,"column_end":74}},{"value":"/ directly) or wrapped. i.e. in the case of Dynamic functions, we","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":21576,"byte_end":21643,"line_start":120,"line_end":120,"column_start":5,"column_end":72}},{"value":"/ store our own extra data along with the user supplied env,","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":21648,"byte_end":21710,"line_start":121,"line_end":121,"column_start":5,"column_end":67}},{"value":"/ thus the `env` pointer here points to the outermost type.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":21715,"byte_end":21776,"line_start":122,"line_end":122,"column_start":5,"column_end":66}}]},{"kind":"Enum","id":{"krate":0,"index":1167},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":21310,"byte_end":21327,"line_start":113,"line_end":113,"column_start":10,"column_end":27},"name":"ImportFunctionEnv","qualname":"::instance::ImportFunctionEnv","value":"pub enum ImportFunctionEnv {\n\n    /// The `vmctx` pointer does not refer to a host env, there is no\n    /// metadata about it.\n    NoEnv,\n\n    /// We're dealing with a user-defined host env.\n    ///\n    /// This host env may be either unwrapped (the user-supplied host env\n    /// directly) or wrapped. i.e. in the case of Dynamic functions, we\n    /// store our own extra data along with the user supplied env,\n    /// thus the `env` pointer here points to the outermost type.\n    Env {\n        /// The function environment. This is not always the user-supplied\n        /// env.\n        env: *mut ffi::c_void,\n        /// A clone function for duplicating the env.\n        clone: fn(: *mut ffi::c_void) -> *mut ffi::c_void,\n        /// This field is not always present. When it is present, it\n        /// should be set to `None` after use to prevent double\n        /// initialization.\n        initializer: Option<ImportInitializerFuncPtr>,\n        /// The destructor to clean up the type in `env`.\n        ///\n        /// # Safety\n        /// - This function must be called ina synchronized way. For\n        ///   example, in the `Drop` implementation of this type.\n        destructor: unsafe fn(: *mut ffi::c_void),\n    },\n}","parent":null,"children":[{"krate":0,"index":1168},{"krate":0,"index":1170}],"decl_id":null,"docs":" A collection of data about host envs used by imported functions.\n","sig":null,"attributes":[{"value":"/ A collection of data about host envs used by imported functions.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":21215,"byte_end":21283,"line_start":111,"line_end":111,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":1177},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":44316,"byte_end":44330,"line_start":780,"line_end":780,"column_start":12,"column_end":26},"name":"InstanceHandle","qualname":"::instance::InstanceHandle","value":"InstanceHandle {  }","parent":null,"children":[{"krate":0,"index":1178}],"decl_id":null,"docs":" A handle holding an `InstanceRef`, which holds an `Instance`\n of a WebAssembly module.","sig":null,"attributes":[{"value":"/ A handle holding an `InstanceRef`, which holds an `Instance`","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":44072,"byte_end":44136,"line_start":774,"line_end":774,"column_start":1,"column_end":65}},{"value":"/ of a WebAssembly module.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":44137,"byte_end":44165,"line_start":775,"line_end":775,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":44166,"byte_end":44169,"line_start":776,"line_end":776,"column_start":1,"column_end":4}},{"value":"/ This is more or less a public facade of the private `Instance`,","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":44170,"byte_end":44237,"line_start":777,"line_end":777,"column_start":1,"column_end":68}},{"value":"/ providing useful higher-level API.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":44238,"byte_end":44276,"line_start":778,"line_end":778,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":328},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":45613,"byte_end":45616,"line_start":808,"line_end":808,"column_start":19,"column_end":22},"name":"new","qualname":"<InstanceHandle>::new","value":"pub unsafe fn new(InstanceAllocator, Arc<ModuleInfo>,\n                  BoxedSlice<LocalFunctionIndex, FunctionBodyPtr>,\n                  BoxedSlice<SignatureIndex, VMTrampoline>,\n                  BoxedSlice<LocalMemoryIndex, Arc<Memory>>,\n                  BoxedSlice<LocalTableIndex, Arc<Table>>,\n                  BoxedSlice<LocalGlobalIndex, Arc<Global>>, Imports,\n                  BoxedSlice<SignatureIndex, VMSharedSignatureIndex>,\n                  Box<Any>, BoxedSlice<FunctionIndex, ImportFunctionEnv>)\n-> Result<Self, Trap>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `InstanceHandle` pointing at a new [`InstanceRef`].","sig":null,"attributes":[{"value":"/ Create a new `InstanceHandle` pointing at a new [`InstanceRef`].","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":44455,"byte_end":44523,"line_start":786,"line_end":786,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":44528,"byte_end":44531,"line_start":787,"line_end":787,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":44536,"byte_end":44548,"line_start":788,"line_end":788,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":44553,"byte_end":44556,"line_start":789,"line_end":789,"column_start":5,"column_end":8}},{"value":"/ This method is not necessarily inherently unsafe to call, but in general","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":44561,"byte_end":44637,"line_start":790,"line_end":790,"column_start":5,"column_end":81}},{"value":"/ the APIs of an `Instance` are quite unsafe and have not been really","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":44642,"byte_end":44713,"line_start":791,"line_end":791,"column_start":5,"column_end":76}},{"value":"/ audited for safety that much. As a result the unsafety here on this","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":44718,"byte_end":44789,"line_start":792,"line_end":792,"column_start":5,"column_end":76}},{"value":"/ method is a low-overhead way of saying “this is an extremely unsafe type","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":44794,"byte_end":44872,"line_start":793,"line_end":793,"column_start":5,"column_end":81}},{"value":"/ to work with”.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":44877,"byte_end":44897,"line_start":794,"line_end":794,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":44902,"byte_end":44905,"line_start":795,"line_end":795,"column_start":5,"column_end":8}},{"value":"/ Extreme care must be taken when working with `InstanceHandle` and it's","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":44910,"byte_end":44984,"line_start":796,"line_end":796,"column_start":5,"column_end":79}},{"value":"/ recommended to have relatively intimate knowledge of how it works","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":44989,"byte_end":45058,"line_start":797,"line_end":797,"column_start":5,"column_end":74}},{"value":"/ internally if you'd like to do so. If possible it's recommended to use","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":45063,"byte_end":45137,"line_start":798,"line_end":798,"column_start":5,"column_end":79}},{"value":"/ the `wasmer` crate API rather than this type since that is vetted for","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":45142,"byte_end":45215,"line_start":799,"line_end":799,"column_start":5,"column_end":78}},{"value":"/ safety.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":45220,"byte_end":45231,"line_start":800,"line_end":800,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":45236,"byte_end":45239,"line_start":801,"line_end":801,"column_start":5,"column_end":8}},{"value":"/ However the following must be taken care of before calling this function:","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":45244,"byte_end":45321,"line_start":802,"line_end":802,"column_start":5,"column_end":82}},{"value":"/ - The memory at `instance.tables_ptr()` must be initialized with data for","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":45326,"byte_end":45403,"line_start":803,"line_end":803,"column_start":5,"column_end":82}},{"value":"/   all the local tables.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":45408,"byte_end":45435,"line_start":804,"line_end":804,"column_start":5,"column_end":32}},{"value":"/ - The memory at `instance.memories_ptr()` must be initialized with data for","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":45440,"byte_end":45519,"line_start":805,"line_end":805,"column_start":5,"column_end":84}},{"value":"/   all the local memories.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":45524,"byte_end":45553,"line_start":806,"line_end":806,"column_start":5,"column_end":34}},{"value":"allow(clippy :: too_many_arguments)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":45558,"byte_end":45594,"line_start":807,"line_end":807,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":331},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":49697,"byte_end":49717,"line_start":914,"line_end":914,"column_start":19,"column_end":39},"name":"finish_instantiation","qualname":"<InstanceHandle>::finish_instantiation","value":"pub unsafe fn finish_instantiation(&Self, &[DataInitializer])\n-> Result<(), Trap>","parent":null,"children":[],"decl_id":null,"docs":" Finishes the instantiation process started by `Instance::new`.","sig":null,"attributes":[{"value":"/ Finishes the instantiation process started by `Instance::new`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":49520,"byte_end":49586,"line_start":909,"line_end":909,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":49591,"byte_end":49594,"line_start":910,"line_end":910,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":49599,"byte_end":49611,"line_start":911,"line_end":911,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":49616,"byte_end":49619,"line_start":912,"line_end":912,"column_start":5,"column_end":8}},{"value":"/ Only safe to call immediately after instantiation.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":49624,"byte_end":49678,"line_start":913,"line_end":913,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":332},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":50373,"byte_end":50378,"line_start":933,"line_end":933,"column_start":12,"column_end":17},"name":"vmctx","qualname":"<InstanceHandle>::vmctx","value":"pub fn vmctx(&Self) -> &VMContext","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the vmctx used by compiled wasm code.\n","sig":null,"attributes":[{"value":"/ Return a reference to the vmctx used by compiled wasm code.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":50298,"byte_end":50361,"line_start":932,"line_end":932,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":333},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":50531,"byte_end":50540,"line_start":938,"line_end":938,"column_start":12,"column_end":21},"name":"vmctx_ptr","qualname":"<InstanceHandle>::vmctx_ptr","value":"pub fn vmctx_ptr(&Self) -> *mut VMContext","parent":null,"children":[],"decl_id":null,"docs":" Return a raw pointer to the vmctx used by compiled wasm code.\n","sig":null,"attributes":[{"value":"/ Return a raw pointer to the vmctx used by compiled wasm code.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":50454,"byte_end":50519,"line_start":937,"line_end":937,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":334},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":50783,"byte_end":50792,"line_start":945,"line_end":945,"column_start":12,"column_end":21},"name":"vmoffsets","qualname":"<InstanceHandle>::vmoffsets","value":"pub fn vmoffsets(&Self) -> &VMOffsets","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the `VMOffsets` to get offsets in the\n `Self::vmctx_ptr` region. Be careful when doing pointer\n arithmetic!\n","sig":null,"attributes":[{"value":"/ Return a reference to the `VMOffsets` to get offsets in the","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":50624,"byte_end":50687,"line_start":942,"line_end":942,"column_start":5,"column_end":68}},{"value":"/ `Self::vmctx_ptr` region. Be careful when doing pointer","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":50692,"byte_end":50751,"line_start":943,"line_end":943,"column_start":5,"column_end":64}},{"value":"/ arithmetic!","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":50756,"byte_end":50771,"line_start":944,"line_end":944,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":335},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":50934,"byte_end":50940,"line_start":950,"line_end":950,"column_start":12,"column_end":18},"name":"module","qualname":"<InstanceHandle>::module","value":"pub fn module(&Self) -> &Arc<ModuleInfo>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference-counting pointer to a module.\n","sig":null,"attributes":[{"value":"/ Return a reference-counting pointer to a module.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":50870,"byte_end":50922,"line_start":949,"line_end":949,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":336},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":51070,"byte_end":51080,"line_start":955,"line_end":955,"column_start":12,"column_end":22},"name":"module_ref","qualname":"<InstanceHandle>::module_ref","value":"pub fn module_ref(&Self) -> &ModuleInfo","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to a module.\n","sig":null,"attributes":[{"value":"/ Return a reference to a module.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":51023,"byte_end":51058,"line_start":954,"line_end":954,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":337},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":51215,"byte_end":51221,"line_start":960,"line_end":960,"column_start":12,"column_end":18},"name":"lookup","qualname":"<InstanceHandle>::lookup","value":"pub fn lookup(&Self, &str) -> Option<VMExport>","parent":null,"children":[],"decl_id":null,"docs":" Lookup an export with the given name.\n","sig":null,"attributes":[{"value":"/ Lookup an export with the given name.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":51162,"byte_end":51203,"line_start":959,"line_end":959,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":338},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":51485,"byte_end":51506,"line_start":968,"line_end":968,"column_start":12,"column_end":33},"name":"lookup_by_declaration","qualname":"<InstanceHandle>::lookup_by_declaration","value":"pub fn lookup_by_declaration(&Self, &ExportIndex) -> VMExport","parent":null,"children":[],"decl_id":null,"docs":" Lookup an export with the given export declaration.\n","sig":null,"attributes":[{"value":"/ Lookup an export with the given export declaration.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":51386,"byte_end":51441,"line_start":966,"line_end":966,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":339},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":55313,"byte_end":55320,"line_start":1055,"line_end":1055,"column_start":12,"column_end":19},"name":"exports","qualname":"<InstanceHandle>::exports","value":"pub fn exports(&Self) -> indexmap::map::Iter<, String, ExportIndex>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the exports of this instance.","sig":null,"attributes":[{"value":"/ Return an iterator over the exports of this instance.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":55036,"byte_end":55093,"line_start":1050,"line_end":1050,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":55098,"byte_end":55101,"line_start":1051,"line_end":1051,"column_start":5,"column_end":8}},{"value":"/ Specifically, it provides access to the key-value pairs, where the keys","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":55106,"byte_end":55181,"line_start":1052,"line_end":1052,"column_start":5,"column_end":80}},{"value":"/ are export names, and the values are export declarations which can be","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":55186,"byte_end":55259,"line_start":1053,"line_end":1053,"column_start":5,"column_end":78}},{"value":"/ resolved `lookup_by_declaration`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":55264,"byte_end":55301,"line_start":1054,"line_end":1054,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":340},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":55503,"byte_end":55513,"line_start":1060,"line_end":1060,"column_start":12,"column_end":22},"name":"host_state","qualname":"<InstanceHandle>::host_state","value":"pub fn host_state(&Self) -> &Any","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the custom state attached to this instance.\n","sig":null,"attributes":[{"value":"/ Return a reference to the custom state attached to this instance.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":55422,"byte_end":55491,"line_start":1059,"line_end":1059,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":341},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":55684,"byte_end":55696,"line_start":1065,"line_end":1065,"column_start":12,"column_end":24},"name":"memory_index","qualname":"<InstanceHandle>::memory_index","value":"pub fn memory_index(&Self, &VMMemoryDefinition) -> LocalMemoryIndex","parent":null,"children":[],"decl_id":null,"docs":" Return the memory index for the given `VMMemoryDefinition` in this instance.\n","sig":null,"attributes":[{"value":"/ Return the memory index for the given `VMMemoryDefinition` in this instance.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":55592,"byte_end":55672,"line_start":1064,"line_end":1064,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":342},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":55996,"byte_end":56007,"line_start":1073,"line_end":1073,"column_start":12,"column_end":23},"name":"memory_grow","qualname":"<InstanceHandle>::memory_grow","value":"pub fn memory_grow<IntoPages>(&Self, LocalMemoryIndex, IntoPages)\n-> Result<Pages, MemoryError> where IntoPages: Into<Pages>","parent":null,"children":[],"decl_id":null,"docs":" Grow memory in this instance by the specified amount of pages.","sig":null,"attributes":[{"value":"/ Grow memory in this instance by the specified amount of pages.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":55820,"byte_end":55886,"line_start":1069,"line_end":1069,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":55891,"byte_end":55894,"line_start":1070,"line_end":1070,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if memory can't be grown by the specified amount","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":55899,"byte_end":55966,"line_start":1071,"line_end":1071,"column_start":5,"column_end":72}},{"value":"/ of pages.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":55971,"byte_end":55984,"line_start":1072,"line_end":1072,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":344},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":56352,"byte_end":56363,"line_start":1085,"line_end":1085,"column_start":12,"column_end":23},"name":"table_index","qualname":"<InstanceHandle>::table_index","value":"pub fn table_index(&Self, &VMTableDefinition) -> LocalTableIndex","parent":null,"children":[],"decl_id":null,"docs":" Return the table index for the given `VMTableDefinition` in this instance.\n","sig":null,"attributes":[{"value":"/ Return the table index for the given `VMTableDefinition` in this instance.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":56262,"byte_end":56340,"line_start":1084,"line_end":1084,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":345},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":56657,"byte_end":56667,"line_start":1093,"line_end":1093,"column_start":12,"column_end":22},"name":"table_grow","qualname":"<InstanceHandle>::table_grow","value":"pub fn table_grow(&Self, LocalTableIndex, u32) -> Option<u32>","parent":null,"children":[],"decl_id":null,"docs":" Grow table in this instance by the specified amount of pages.","sig":null,"attributes":[{"value":"/ Grow table in this instance by the specified amount of pages.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":56482,"byte_end":56547,"line_start":1089,"line_end":1089,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":56552,"byte_end":56555,"line_start":1090,"line_end":1090,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if memory can't be grown by the specified amount","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":56560,"byte_end":56627,"line_start":1091,"line_end":1091,"column_start":5,"column_end":72}},{"value":"/ of pages.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":56632,"byte_end":56645,"line_start":1092,"line_end":1092,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":346},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":56911,"byte_end":56920,"line_start":1100,"line_end":1100,"column_start":12,"column_end":21},"name":"table_get","qualname":"<InstanceHandle>::table_get","value":"pub fn table_get(&Self, LocalTableIndex, u32)\n-> Option<VMCallerCheckedAnyfunc>","parent":null,"children":[],"decl_id":null,"docs":" Get table element reference.","sig":null,"attributes":[{"value":"/ Get table element reference.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":56809,"byte_end":56841,"line_start":1097,"line_end":1097,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":56846,"byte_end":56849,"line_start":1098,"line_end":1098,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if index is out of bounds.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":56854,"byte_end":56899,"line_start":1099,"line_end":1099,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":347},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":57218,"byte_end":57227,"line_start":1111,"line_end":1111,"column_start":12,"column_end":21},"name":"table_set","qualname":"<InstanceHandle>::table_set","value":"pub fn table_set(&Self, LocalTableIndex, u32, VMCallerCheckedAnyfunc)\n-> Result<(), Trap>","parent":null,"children":[],"decl_id":null,"docs":" Set table element reference.","sig":null,"attributes":[{"value":"/ Set table element reference.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":57111,"byte_end":57143,"line_start":1108,"line_end":1108,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":57148,"byte_end":57151,"line_start":1109,"line_end":1109,"column_start":5,"column_end":8}},{"value":"/ Returns an error if the index is out of bounds","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":57156,"byte_end":57206,"line_start":1110,"line_end":1110,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":348},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":57509,"byte_end":57524,"line_start":1121,"line_end":1121,"column_start":12,"column_end":27},"name":"get_local_table","qualname":"<InstanceHandle>::get_local_table","value":"pub fn get_local_table(&Self, LocalTableIndex) -> &Table","parent":null,"children":[],"decl_id":null,"docs":" Get a table defined locally within this module.\n","sig":null,"attributes":[{"value":"/ Get a table defined locally within this module.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":57446,"byte_end":57497,"line_start":1120,"line_end":1120,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":349},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":58036,"byte_end":58056,"line_start":1132,"line_end":1132,"column_start":19,"column_end":39},"name":"initialize_host_envs","qualname":"<InstanceHandle>::initialize_host_envs","value":"pub unsafe fn initialize_host_envs<Err: Sized>(&mut Self, *const ffi::c_void)\n-> Result<(), Err>","parent":null,"children":[],"decl_id":null,"docs":" Initializes the host environments.","sig":null,"attributes":[{"value":"/ Initializes the host environments.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":57639,"byte_end":57677,"line_start":1125,"line_end":1125,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":57682,"byte_end":57685,"line_start":1126,"line_end":1126,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":57690,"byte_end":57702,"line_start":1127,"line_end":1127,"column_start":5,"column_end":17}},{"value":"/ - This function must be called with the correct `Err` type parameter: the error type is not","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":57707,"byte_end":57802,"line_start":1128,"line_end":1128,"column_start":5,"column_end":100}},{"value":"/   visible to code in `wasmer_vm`, so it's the caller's responsibility to ensure these","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":57807,"byte_end":57896,"line_start":1129,"line_end":1129,"column_start":5,"column_end":94}},{"value":"/   functions are called with the correct type.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":57901,"byte_end":57950,"line_start":1130,"line_end":1130,"column_start":5,"column_end":54}},{"value":"/ - `instance_ptr` must point to a valid `wasmer::Instance`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":57955,"byte_end":58017,"line_start":1131,"line_end":1131,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1187},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":59807,"byte_end":59825,"line_start":1180,"line_end":1180,"column_start":20,"column_end":38},"name":"set_signal_handler","qualname":"<InstanceHandle>::set_signal_handler","value":"pub fn set_signal_handler<H>(&Self, H) where H: 'static +\nFn(winapi::um::winnt::PEXCEPTION_POINTERS) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Set a custom signal handler\n","sig":null,"attributes":[{"value":"/ Set a custom signal handler","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":59756,"byte_end":59787,"line_start":1179,"line_end":1179,"column_start":13,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1190},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\memory.rs","byte_start":83833,"byte_end":83839,"line_start":26,"line_end":26,"column_start":5,"column_end":11},"name":"Region","qualname":"::memory::MemoryError::Region","value":"MemoryError::Region(String)","parent":{"krate":0,"index":1189},"children":[],"decl_id":null,"docs":" Low level error with mmap.\n","sig":null,"attributes":[{"value":"/ Low level error with mmap.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\memory.rs","byte_start":83748,"byte_end":83778,"line_start":24,"line_end":24,"column_start":5,"column_end":35}},{"value":"error(\"Error when allocating memory: {0}\")","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\memory.rs","byte_start":83783,"byte_end":83828,"line_start":25,"line_end":25,"column_start":5,"column_end":50}}]},{"kind":"StructVariant","id":{"krate":0,"index":1193},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\memory.rs","byte_start":84123,"byte_end":84135,"line_start":30,"line_end":30,"column_start":5,"column_end":17},"name":"CouldNotGrow","qualname":"::memory::MemoryError::CouldNotGrow","value":"MemoryError::CouldNotGrow { current, attempted_delta }","parent":{"krate":0,"index":1189},"children":[],"decl_id":null,"docs":" The operation would cause the size of the memory to exceed the maximum or would cause\n an overflow leading to unindexable memory.\n","sig":null,"attributes":[{"value":"/ The operation would cause the size of the memory to exceed the maximum or would cause","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\memory.rs","byte_start":83853,"byte_end":83942,"line_start":27,"line_end":27,"column_start":5,"column_end":94}},{"value":"/ an overflow leading to unindexable memory.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\memory.rs","byte_start":83947,"byte_end":83993,"line_start":28,"line_end":28,"column_start":5,"column_end":51}},{"value":"error(\"The memory could not grow: current size {} pages, requested increase: {} pages\",\n        current . 0, attempted_delta . 0)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\memory.rs","byte_start":83998,"byte_end":84118,"line_start":29,"line_end":29,"column_start":5,"column_end":125}}]},{"kind":"StructVariant","id":{"krate":0,"index":1196},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\memory.rs","byte_start":84437,"byte_end":84450,"line_start":38,"line_end":38,"column_start":5,"column_end":18},"name":"InvalidMemory","qualname":"::memory::MemoryError::InvalidMemory","value":"MemoryError::InvalidMemory { reason }","parent":{"krate":0,"index":1189},"children":[],"decl_id":null,"docs":" The operation would cause the size of the memory size exceed the maximum.\n","sig":null,"attributes":[{"value":"/ The operation would cause the size of the memory size exceed the maximum.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\memory.rs","byte_start":84298,"byte_end":84375,"line_start":36,"line_end":36,"column_start":5,"column_end":82}},{"value":"error(\"The memory is invalid because {}\", reason)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\memory.rs","byte_start":84380,"byte_end":84432,"line_start":37,"line_end":37,"column_start":5,"column_end":57}}]},{"kind":"StructVariant","id":{"krate":0,"index":1198},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\memory.rs","byte_start":84757,"byte_end":84778,"line_start":44,"line_end":44,"column_start":5,"column_end":26},"name":"MinimumMemoryTooLarge","qualname":"::memory::MemoryError::MinimumMemoryTooLarge","value":"MemoryError::MinimumMemoryTooLarge { min_requested, max_allowed }","parent":{"krate":0,"index":1189},"children":[],"decl_id":null,"docs":" Caller asked for more minimum memory than we can give them.\n","sig":null,"attributes":[{"value":"/ Caller asked for more minimum memory than we can give them.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\memory.rs","byte_start":84547,"byte_end":84610,"line_start":42,"line_end":42,"column_start":5,"column_end":68}},{"value":"error(\"The minimum requested ({} pages) memory is greater than the maximum allowed memory ({} pages)\",\n        min_requested . 0, max_allowed . 0)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\memory.rs","byte_start":84615,"byte_end":84752,"line_start":43,"line_end":43,"column_start":5,"column_end":142}}]},{"kind":"StructVariant","id":{"krate":0,"index":1201},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\memory.rs","byte_start":85198,"byte_end":85219,"line_start":52,"line_end":52,"column_start":5,"column_end":26},"name":"MaximumMemoryTooLarge","qualname":"::memory::MemoryError::MaximumMemoryTooLarge","value":"MemoryError::MaximumMemoryTooLarge { max_requested, max_allowed }","parent":{"krate":0,"index":1189},"children":[],"decl_id":null,"docs":" Caller asked for a maximum memory greater than we can give them.\n","sig":null,"attributes":[{"value":"/ Caller asked for a maximum memory greater than we can give them.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\memory.rs","byte_start":84983,"byte_end":85051,"line_start":50,"line_end":50,"column_start":5,"column_end":73}},{"value":"error(\"The maximum requested memory ({} pages) is greater than the maximum allowed memory ({} pages)\",\n        max_requested . 0, max_allowed . 0)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\memory.rs","byte_start":85056,"byte_end":85193,"line_start":51,"line_end":51,"column_start":5,"column_end":142}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1204},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\memory.rs","byte_start":85567,"byte_end":85574,"line_start":60,"line_end":60,"column_start":5,"column_end":12},"name":"Generic","qualname":"::memory::MemoryError::Generic","value":"MemoryError::Generic(String)","parent":{"krate":0,"index":1189},"children":[],"decl_id":null,"docs":" A user defined error value, used for error cases not listed above.\n","sig":null,"attributes":[{"value":"/ A user defined error value, used for error cases not listed above.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\memory.rs","byte_start":85441,"byte_end":85511,"line_start":58,"line_end":58,"column_start":5,"column_end":75}},{"value":"error(\"A user-defined error occurred: {0}\")","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\memory.rs","byte_start":85516,"byte_end":85562,"line_start":59,"line_end":59,"column_start":5,"column_end":51}}]},{"kind":"Enum","id":{"krate":0,"index":1189},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\memory.rs","byte_start":83730,"byte_end":83741,"line_start":23,"line_end":23,"column_start":10,"column_end":21},"name":"MemoryError","qualname":"::memory::MemoryError","value":"pub enum MemoryError {\n\n    /// Low level error with mmap.\n    #[error(\"Error when allocating memory: {0}\")]\n    Region(String),\n\n    /// The operation would cause the size of the memory to exceed the maximum or would cause\n    /// an overflow leading to unindexable memory.\n    #[error(\"The memory could not grow: current size {} pages, requested increase: {} pages\",\n            current . 0, attempted_delta . 0)]\n    CouldNotGrow {\n        /// The current size in pages.\n        current: Pages,\n        /// The attempted amount to grow by in pages.\n        attempted_delta: Pages,\n    },\n\n    /// The operation would cause the size of the memory size exceed the maximum.\n    #[error(\"The memory is invalid because {}\", reason)]\n    InvalidMemory {\n        /// The reason why the provided memory is invalid.\n        reason: String,\n    },\n\n    /// Caller asked for more minimum memory than we can give them.\n    #[error(\"The minimum requested ({} pages) memory is greater than the maximum allowed memory ({} pages)\",\n            min_requested . 0, max_allowed . 0)]\n    MinimumMemoryTooLarge {\n        /// The number of pages requested as the minimum amount of memory.\n        min_requested: Pages,\n        /// The maximum amount of memory we can allocate.\n        max_allowed: Pages,\n    },\n\n    /// Caller asked for a maximum memory greater than we can give them.\n    #[error(\"The maximum requested memory ({} pages) is greater than the maximum allowed memory ({} pages)\",\n            max_requested . 0, max_allowed . 0)]\n    MaximumMemoryTooLarge {\n        /// The number of pages requested as the maximum amount of memory.\n        max_requested: Pages,\n        /// The number of pages requested as the maximum amount of memory.\n        max_allowed: Pages,\n    },\n\n    /// A user defined error value, used for error cases not listed above.\n    #[error(\"A user-defined error occurred: {0}\")]\n    Generic(String),\n}","parent":null,"children":[{"krate":0,"index":1190},{"krate":0,"index":1193},{"krate":0,"index":1196},{"krate":0,"index":1198},{"krate":0,"index":1201},{"krate":0,"index":1204}],"decl_id":null,"docs":" Error type describing things that can go wrong when operating on Wasm Memories.\n","sig":null,"attributes":[{"value":"/ Error type describing things that can go wrong when operating on Wasm Memories.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\memory.rs","byte_start":83589,"byte_end":83672,"line_start":21,"line_end":21,"column_start":1,"column_end":84}}]},{"kind":"StructVariant","id":{"krate":0,"index":1225},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\memory.rs","byte_start":85792,"byte_end":85799,"line_start":67,"line_end":67,"column_start":5,"column_end":12},"name":"Dynamic","qualname":"::memory::MemoryStyle::Dynamic","value":"MemoryStyle::Dynamic { offset_guard_size }","parent":{"krate":0,"index":1224},"children":[],"decl_id":null,"docs":" The actual memory can be resized and moved.\n","sig":null,"attributes":[{"value":"/ The actual memory can be resized and moved.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\memory.rs","byte_start":85740,"byte_end":85787,"line_start":66,"line_end":66,"column_start":5,"column_end":52}}]},{"kind":"StructVariant","id":{"krate":0,"index":1227},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\memory.rs","byte_start":86087,"byte_end":86093,"line_start":75,"line_end":75,"column_start":5,"column_end":11},"name":"Static","qualname":"::memory::MemoryStyle::Static","value":"MemoryStyle::Static { bound, offset_guard_size }","parent":{"krate":0,"index":1224},"children":[],"decl_id":null,"docs":" Address space is allocated up front.\n","sig":null,"attributes":[{"value":"/ Address space is allocated up front.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\memory.rs","byte_start":86042,"byte_end":86082,"line_start":74,"line_end":74,"column_start":5,"column_end":45}}]},{"kind":"Enum","id":{"krate":0,"index":1224},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\memory.rs","byte_start":85722,"byte_end":85733,"line_start":65,"line_end":65,"column_start":10,"column_end":21},"name":"MemoryStyle","qualname":"::memory::MemoryStyle","value":"pub enum MemoryStyle {\n\n    /// The actual memory can be resized and moved.\n    Dynamic {\n        /// Our chosen offset-guard size.\n        ///\n        /// It represents the size in bytes of extra guard pages after the end\n        /// to optimize loads and stores with constant offsets.\n        offset_guard_size: u64,\n    },\n\n    /// Address space is allocated up front.\n    Static {\n        /// The number of mapped and unmapped pages.\n        bound: Pages,\n        /// Our chosen offset-guard size.\n        ///\n        /// It represents the size in bytes of extra guard pages after the end\n        /// to optimize loads and stores with constant offsets.\n        offset_guard_size: u64,\n    },\n}","parent":null,"children":[{"krate":0,"index":1225},{"krate":0,"index":1227}],"decl_id":null,"docs":" Implementation styles for WebAssembly linear memory.\n","sig":null,"attributes":[{"value":"/ Implementation styles for WebAssembly linear memory.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\memory.rs","byte_start":85587,"byte_end":85643,"line_start":63,"line_end":63,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":385},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\memory.rs","byte_start":86478,"byte_end":86495,"line_start":88,"line_end":88,"column_start":12,"column_end":29},"name":"offset_guard_size","qualname":"<MemoryStyle>::offset_guard_size","value":"pub fn offset_guard_size(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the offset-guard size\n","sig":null,"attributes":[{"value":"/ Returns the offset-guard size","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\memory.rs","byte_start":86433,"byte_end":86466,"line_start":87,"line_end":87,"column_start":5,"column_end":38}}]},{"kind":"Trait","id":{"krate":0,"index":386},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\memory.rs","byte_start":86790,"byte_end":86796,"line_start":99,"line_end":99,"column_start":11,"column_end":17},"name":"Memory","qualname":"::memory::Memory","value":"Memory: fmt::Debug + Send + Sync","parent":null,"children":[{"krate":0,"index":387},{"krate":0,"index":388},{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":391}],"decl_id":null,"docs":" Trait for implementing Wasm Memory used by Wasmer.\n","sig":null,"attributes":[{"value":"/ Trait for implementing Wasm Memory used by Wasmer.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\memory.rs","byte_start":86725,"byte_end":86779,"line_start":98,"line_end":98,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":387},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\memory.rs","byte_start":86881,"byte_end":86883,"line_start":101,"line_end":101,"column_start":8,"column_end":10},"name":"ty","qualname":"::memory::Memory::ty","value":"pub fn ty(&Self) -> &MemoryType","parent":{"krate":0,"index":386},"children":[],"decl_id":null,"docs":" Returns the memory type for this memory.\n","sig":null,"attributes":[{"value":"/ Returns the memory type for this memory.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\memory.rs","byte_start":86829,"byte_end":86873,"line_start":100,"line_end":100,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":388},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\memory.rs","byte_start":86965,"byte_end":86970,"line_start":104,"line_end":104,"column_start":8,"column_end":13},"name":"style","qualname":"::memory::Memory::style","value":"pub fn style(&Self) -> &MemoryStyle","parent":{"krate":0,"index":386},"children":[],"decl_id":null,"docs":" Returns the memory style for this memory.\n","sig":null,"attributes":[{"value":"/ Returns the memory style for this memory.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\memory.rs","byte_start":86912,"byte_end":86957,"line_start":103,"line_end":103,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":389},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\memory.rs","byte_start":87055,"byte_end":87059,"line_start":107,"line_end":107,"column_start":8,"column_end":12},"name":"size","qualname":"::memory::Memory::size","value":"pub fn size(&Self) -> Pages","parent":{"krate":0,"index":386},"children":[],"decl_id":null,"docs":" Returns the number of allocated wasm pages.\n","sig":null,"attributes":[{"value":"/ Returns the number of allocated wasm pages.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\memory.rs","byte_start":87000,"byte_end":87047,"line_start":106,"line_end":106,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":390},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\memory.rs","byte_start":87144,"byte_end":87148,"line_start":110,"line_end":110,"column_start":8,"column_end":12},"name":"grow","qualname":"::memory::Memory::grow","value":"pub fn grow(&Self, Pages) -> Result<Pages, MemoryError>","parent":{"krate":0,"index":386},"children":[],"decl_id":null,"docs":" Grow memory by the specified amount of wasm pages.\n","sig":null,"attributes":[{"value":"/ Grow memory by the specified amount of wasm pages.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\memory.rs","byte_start":87082,"byte_end":87136,"line_start":109,"line_end":109,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":391},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\memory.rs","byte_start":87406,"byte_end":87414,"line_start":115,"line_end":115,"column_start":8,"column_end":16},"name":"vmmemory","qualname":"::memory::Memory::vmmemory","value":"pub fn vmmemory(&Self) -> NonNull<VMMemoryDefinition>","parent":{"krate":0,"index":386},"children":[],"decl_id":null,"docs":" Return a [`VMMemoryDefinition`] for exposing the memory to compiled wasm code.","sig":null,"attributes":[{"value":"/ Return a [`VMMemoryDefinition`] for exposing the memory to compiled wasm code.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\memory.rs","byte_start":87206,"byte_end":87288,"line_start":112,"line_end":112,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\memory.rs","byte_start":87293,"byte_end":87296,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ The pointer returned in [`VMMemoryDefinition`] must be valid for the lifetime of this memory.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\memory.rs","byte_start":87301,"byte_end":87398,"line_start":114,"line_end":114,"column_start":5,"column_end":102}}]},{"kind":"Struct","id":{"krate":0,"index":1359},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\memory.rs","byte_start":87515,"byte_end":87527,"line_start":120,"line_end":120,"column_start":12,"column_end":24},"name":"LinearMemory","qualname":"::memory::LinearMemory","value":"LinearMemory {  }","parent":null,"children":[{"krate":0,"index":1360},{"krate":0,"index":1361},{"krate":0,"index":1362},{"krate":0,"index":1363},{"krate":0,"index":1364},{"krate":0,"index":1365},{"krate":0,"index":1366}],"decl_id":null,"docs":" A linear memory instance.\n","sig":null,"attributes":[{"value":"/ A linear memory instance.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\memory.rs","byte_start":87457,"byte_end":87486,"line_start":118,"line_end":118,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":395},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\memory.rs","byte_start":89882,"byte_end":89885,"line_start":183,"line_end":183,"column_start":12,"column_end":15},"name":"new","qualname":"<LinearMemory>::new","value":"pub fn new(&MemoryType, &MemoryStyle) -> Result<Self, MemoryError>","parent":null,"children":[],"decl_id":null,"docs":" Create a new linear memory instance with specified minimum and maximum number of wasm pages.","sig":null,"attributes":[{"value":"/ Create a new linear memory instance with specified minimum and maximum number of wasm pages.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\memory.rs","byte_start":89622,"byte_end":89718,"line_start":179,"line_end":179,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\memory.rs","byte_start":89723,"byte_end":89726,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ This creates a `LinearMemory` with owned metadata: this can be used to create a memory","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\memory.rs","byte_start":89731,"byte_end":89821,"line_start":181,"line_end":181,"column_start":5,"column_end":95}},{"value":"/ that will be imported into Wasm modules.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\memory.rs","byte_start":89826,"byte_end":89870,"line_start":182,"line_end":182,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":396},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\memory.rs","byte_start":90407,"byte_end":90422,"line_start":194,"line_end":194,"column_start":19,"column_end":34},"name":"from_definition","qualname":"<LinearMemory>::from_definition","value":"pub unsafe fn from_definition(&MemoryType, &MemoryStyle,\n                              NonNull<VMMemoryDefinition>)\n-> Result<Self, MemoryError>","parent":null,"children":[],"decl_id":null,"docs":" Create a new linear memory instance with specified minimum and maximum number of wasm pages.","sig":null,"attributes":[{"value":"/ Create a new linear memory instance with specified minimum and maximum number of wasm pages.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\memory.rs","byte_start":90029,"byte_end":90125,"line_start":187,"line_end":187,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\memory.rs","byte_start":90130,"byte_end":90133,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ This creates a `LinearMemory` with metadata owned by a VM, pointed to by","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\memory.rs","byte_start":90138,"byte_end":90214,"line_start":189,"line_end":189,"column_start":5,"column_end":81}},{"value":"/ `vm_memory_location`: this can be used to create a local memory.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\memory.rs","byte_start":90219,"byte_end":90287,"line_start":190,"line_end":190,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\memory.rs","byte_start":90292,"byte_end":90295,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\memory.rs","byte_start":90300,"byte_end":90312,"line_start":192,"line_end":192,"column_start":5,"column_end":17}},{"value":"/ - `vm_memory_location` must point to a valid location in VM memory.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\memory.rs","byte_start":90317,"byte_end":90388,"line_start":193,"line_end":193,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":1383},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\mmap.rs","byte_start":99085,"byte_end":99089,"line_start":21,"line_end":21,"column_start":12,"column_end":16},"name":"Mmap","qualname":"::mmap::Mmap","value":"Mmap {  }","parent":null,"children":[{"krate":0,"index":1384},{"krate":0,"index":1385}],"decl_id":null,"docs":" A simple struct consisting of a page-aligned pointer to page-aligned\n and initially-zeroed memory and a length.\n","sig":null,"attributes":[{"value":"/ A simple struct consisting of a page-aligned pointer to page-aligned","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\mmap.rs","byte_start":98938,"byte_end":99010,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"/ and initially-zeroed memory and a length.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\mmap.rs","byte_start":99011,"byte_end":99056,"line_start":19,"line_end":19,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":414},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\mmap.rs","byte_start":99489,"byte_end":99492,"line_start":32,"line_end":32,"column_start":12,"column_end":15},"name":"new","qualname":"<Mmap>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new empty instance of `Mmap`.\n","sig":null,"attributes":[{"value":"/ Construct a new empty instance of `Mmap`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\mmap.rs","byte_start":99432,"byte_end":99477,"line_start":31,"line_end":31,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":415},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\mmap.rs","byte_start":99947,"byte_end":99960,"line_start":44,"line_end":44,"column_start":12,"column_end":25},"name":"with_at_least","qualname":"<Mmap>::with_at_least","value":"pub fn with_at_least(usize) -> Result<Self, String>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Mmap` pointing to at least `size` bytes of page-aligned accessible memory.\n","sig":null,"attributes":[{"value":"/ Create a new `Mmap` pointing to at least `size` bytes of page-aligned accessible memory.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\mmap.rs","byte_start":99843,"byte_end":99935,"line_start":43,"line_end":43,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":416},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\mmap.rs","byte_start":102715,"byte_end":102734,"line_start":123,"line_end":123,"column_start":12,"column_end":31},"name":"accessible_reserved","qualname":"<Mmap>::accessible_reserved","value":"pub fn accessible_reserved(usize, usize) -> Result<Self, String>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Mmap` pointing to `accessible_size` bytes of page-aligned accessible memory,\n within a reserved mapping of `mapping_size` bytes. `accessible_size` and `mapping_size`\n must be native page-size multiples.\n","sig":null,"attributes":[{"value":"/ Create a new `Mmap` pointing to `accessible_size` bytes of page-aligned accessible memory,","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\mmap.rs","byte_start":102435,"byte_end":102529,"line_start":119,"line_end":119,"column_start":5,"column_end":99}},{"value":"/ within a reserved mapping of `mapping_size` bytes. `accessible_size` and `mapping_size`","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\mmap.rs","byte_start":102534,"byte_end":102625,"line_start":120,"line_end":120,"column_start":5,"column_end":96}},{"value":"/ must be native page-size multiples.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\mmap.rs","byte_start":102630,"byte_end":102669,"line_start":121,"line_end":121,"column_start":5,"column_end":44}},{"value":"cfg(target_os = \"windows\")","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\mmap.rs","byte_start":102674,"byte_end":102703,"line_start":122,"line_end":122,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":423},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\mmap.rs","byte_start":105585,"byte_end":105600,"line_start":202,"line_end":202,"column_start":12,"column_end":27},"name":"make_accessible","qualname":"<Mmap>::make_accessible","value":"pub fn make_accessible(&mut Self, usize, usize) -> Result<(), String>","parent":null,"children":[],"decl_id":null,"docs":" Make the memory starting at `start` and extending for `len` bytes accessible.\n `start` and `len` must be native page-size multiples and describe a range within\n `self`'s reserved memory.\n","sig":null,"attributes":[{"value":"/ Make the memory starting at `start` and extending for `len` bytes accessible.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\mmap.rs","byte_start":105335,"byte_end":105416,"line_start":198,"line_end":198,"column_start":5,"column_end":86}},{"value":"/ `start` and `len` must be native page-size multiples and describe a range within","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\mmap.rs","byte_start":105421,"byte_end":105505,"line_start":199,"line_end":199,"column_start":5,"column_end":89}},{"value":"/ `self`'s reserved memory.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\mmap.rs","byte_start":105510,"byte_end":105539,"line_start":200,"line_end":200,"column_start":5,"column_end":34}},{"value":"cfg(target_os = \"windows\")","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\mmap.rs","byte_start":105544,"byte_end":105573,"line_start":201,"line_end":201,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":429},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\mmap.rs","byte_start":106496,"byte_end":106504,"line_start":231,"line_end":231,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<Mmap>::as_slice","value":"pub fn as_slice(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Return the allocated memory as a slice of u8.\n","sig":null,"attributes":[{"value":"/ Return the allocated memory as a slice of u8.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\mmap.rs","byte_start":106435,"byte_end":106484,"line_start":230,"line_end":230,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":430},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\mmap.rs","byte_start":106677,"byte_end":106689,"line_start":236,"line_end":236,"column_start":12,"column_end":24},"name":"as_mut_slice","qualname":"<Mmap>::as_mut_slice","value":"pub fn as_mut_slice(&mut Self) -> &mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" Return the allocated memory as a mutable slice of u8.\n","sig":null,"attributes":[{"value":"/ Return the allocated memory as a mutable slice of u8.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\mmap.rs","byte_start":106608,"byte_end":106665,"line_start":235,"line_end":235,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":431},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\mmap.rs","byte_start":106866,"byte_end":106872,"line_start":241,"line_end":241,"column_start":12,"column_end":18},"name":"as_ptr","qualname":"<Mmap>::as_ptr","value":"pub fn as_ptr(&Self) -> *const u8","parent":null,"children":[],"decl_id":null,"docs":" Return the allocated memory as a pointer to u8.\n","sig":null,"attributes":[{"value":"/ Return the allocated memory as a pointer to u8.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\mmap.rs","byte_start":106803,"byte_end":106854,"line_start":240,"line_end":240,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":432},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\mmap.rs","byte_start":107007,"byte_end":107017,"line_start":246,"line_end":246,"column_start":12,"column_end":22},"name":"as_mut_ptr","qualname":"<Mmap>::as_mut_ptr","value":"pub fn as_mut_ptr(&mut Self) -> *mut u8","parent":null,"children":[],"decl_id":null,"docs":" Return the allocated memory as a mutable pointer to u8.\n","sig":null,"attributes":[{"value":"/ Return the allocated memory as a mutable pointer to u8.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\mmap.rs","byte_start":106936,"byte_end":106995,"line_start":245,"line_end":245,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":433},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\mmap.rs","byte_start":107139,"byte_end":107142,"line_start":251,"line_end":251,"column_start":12,"column_end":15},"name":"len","qualname":"<Mmap>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the length of the allocated memory.\n","sig":null,"attributes":[{"value":"/ Return the length of the allocated memory.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\mmap.rs","byte_start":107081,"byte_end":107127,"line_start":250,"line_end":250,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":434},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\mmap.rs","byte_start":107250,"byte_end":107258,"line_start":256,"line_end":256,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Mmap>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return whether any memory has been allocated.\n","sig":null,"attributes":[{"value":"/ Return whether any memory has been allocated.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\mmap.rs","byte_start":107189,"byte_end":107238,"line_start":255,"line_end":255,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":1388},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":109280,"byte_end":109288,"line_start":23,"line_end":23,"column_start":12,"column_end":20},"name":"ModuleId","qualname":"::module::ModuleId","value":"ModuleId {  }","parent":null,"children":[{"krate":0,"index":1389}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":483},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":109336,"byte_end":109338,"line_start":28,"line_end":28,"column_start":12,"column_end":14},"name":"id","qualname":"<ModuleId>::id","value":"pub fn id(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1394},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":109748,"byte_end":109758,"line_start":45,"line_end":45,"column_start":12,"column_end":22},"name":"ModuleInfo","qualname":"::module::ModuleInfo","value":"ModuleInfo { id, name, imports, exports, start_function, table_initializers, passive_elements, passive_data, global_initializers, function_names, signatures, functions, tables, memories, globals, custom_sections, custom_sections_data, num_imported_functions, num_imported_tables, num_imported_memories, num_imported_globals }","parent":null,"children":[{"krate":0,"index":1415},{"krate":0,"index":1395},{"krate":0,"index":1396},{"krate":0,"index":1397},{"krate":0,"index":1398},{"krate":0,"index":1399},{"krate":0,"index":1400},{"krate":0,"index":1401},{"krate":0,"index":1402},{"krate":0,"index":1403},{"krate":0,"index":1404},{"krate":0,"index":1405},{"krate":0,"index":1406},{"krate":0,"index":1407},{"krate":0,"index":1408},{"krate":0,"index":1409},{"krate":0,"index":1410},{"krate":0,"index":1411},{"krate":0,"index":1412},{"krate":0,"index":1413},{"krate":0,"index":1414}],"decl_id":null,"docs":" A translated WebAssembly module, excluding the function bodies and\n memory initializers.\n","sig":null,"attributes":[{"value":"/ A translated WebAssembly module, excluding the function bodies and","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":109593,"byte_end":109663,"line_start":42,"line_end":42,"column_start":1,"column_end":71}},{"value":"/ memory initializers.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":109664,"byte_end":109688,"line_start":43,"line_end":43,"column_start":1,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":1415},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":110005,"byte_end":110007,"line_start":51,"line_end":51,"column_start":9,"column_end":11},"name":"id","qualname":"::module::ModuleInfo::id","value":"module::ModuleId","parent":{"krate":0,"index":1394},"children":[],"decl_id":null,"docs":" A unique identifier (within this process) for this module.","sig":null,"attributes":[{"value":"/ A unique identifier (within this process) for this module.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":109765,"byte_end":109827,"line_start":46,"line_end":46,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":109832,"byte_end":109835,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ We skip serialization/deserialization of this field, as it","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":109840,"byte_end":109902,"line_start":48,"line_end":48,"column_start":5,"column_end":67}},{"value":"/ should be computed by the process.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":109907,"byte_end":109945,"line_start":49,"line_end":49,"column_start":5,"column_end":43}},{"value":"serde(skip_serializing, skip_deserializing)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":109950,"byte_end":109996,"line_start":50,"line_end":50,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":1395},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":110096,"byte_end":110100,"line_start":54,"line_end":54,"column_start":9,"column_end":13},"name":"name","qualname":"::module::ModuleInfo::name","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1394},"children":[],"decl_id":null,"docs":" The name of this wasm module, often found in the wasm file.\n","sig":null,"attributes":[{"value":"/ The name of this wasm module, often found in the wasm file.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":110024,"byte_end":110087,"line_start":53,"line_end":53,"column_start":5,"column_end":68}}]},{"kind":"Field","id":{"krate":0,"index":1396},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":110370,"byte_end":110377,"line_start":61,"line_end":61,"column_start":9,"column_end":16},"name":"imports","qualname":"::module::ModuleInfo::imports","value":"indexmap::IndexMap<(std::string::String, std::string::String, u32), wasmer_types::ImportIndex>","parent":{"krate":0,"index":1394},"children":[],"decl_id":null,"docs":" Imported entities with the (module, field, index_of_the_import)","sig":null,"attributes":[{"value":"/ Imported entities with the (module, field, index_of_the_import)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":110123,"byte_end":110190,"line_start":56,"line_end":56,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":110195,"byte_end":110198,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ Keeping the `index_of_the_import` is important, as there can be","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":110203,"byte_end":110270,"line_start":58,"line_end":58,"column_start":5,"column_end":72}},{"value":"/ two same references to the same import, and we don't want to confuse","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":110275,"byte_end":110347,"line_start":59,"line_end":59,"column_start":5,"column_end":77}},{"value":"/ them.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":110352,"byte_end":110361,"line_start":60,"line_end":60,"column_start":5,"column_end":14}}]},{"kind":"Field","id":{"krate":0,"index":1397},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":110461,"byte_end":110468,"line_start":64,"line_end":64,"column_start":9,"column_end":16},"name":"exports","qualname":"::module::ModuleInfo::exports","value":"indexmap::IndexMap<std::string::String, wasmer_types::ExportIndex>","parent":{"krate":0,"index":1394},"children":[],"decl_id":null,"docs":" Exported entities.\n","sig":null,"attributes":[{"value":"/ Exported entities.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":110430,"byte_end":110452,"line_start":63,"line_end":63,"column_start":5,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":1398},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":110559,"byte_end":110573,"line_start":67,"line_end":67,"column_start":9,"column_end":23},"name":"start_function","qualname":"::module::ModuleInfo::start_function","value":"std::option::Option<wasmer_types::FunctionIndex>","parent":{"krate":0,"index":1394},"children":[],"decl_id":null,"docs":" The module \"start\" function, if present.\n","sig":null,"attributes":[{"value":"/ The module \"start\" function, if present.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":110506,"byte_end":110550,"line_start":66,"line_end":66,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":1399},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":110647,"byte_end":110665,"line_start":70,"line_end":70,"column_start":9,"column_end":27},"name":"table_initializers","qualname":"::module::ModuleInfo::table_initializers","value":"std::vec::Vec<wasmer_types::TableInitializer>","parent":{"krate":0,"index":1394},"children":[],"decl_id":null,"docs":" WebAssembly table initializers.\n","sig":null,"attributes":[{"value":"/ WebAssembly table initializers.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":110603,"byte_end":110638,"line_start":69,"line_end":69,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":1400},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":110737,"byte_end":110753,"line_start":73,"line_end":73,"column_start":9,"column_end":25},"name":"passive_elements","qualname":"::module::ModuleInfo::passive_elements","value":"std::collections::HashMap<wasmer_types::ElemIndex, std::boxed::Box<[wasmer_types::FunctionIndex]>>","parent":{"krate":0,"index":1394},"children":[],"decl_id":null,"docs":" WebAssembly passive elements.\n","sig":null,"attributes":[{"value":"/ WebAssembly passive elements.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":110695,"byte_end":110728,"line_start":72,"line_end":72,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":1401},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":110849,"byte_end":110861,"line_start":76,"line_end":76,"column_start":9,"column_end":21},"name":"passive_data","qualname":"::module::ModuleInfo::passive_data","value":"std::collections::HashMap<wasmer_types::DataIndex, std::sync::Arc<[u8]>>","parent":{"krate":0,"index":1394},"children":[],"decl_id":null,"docs":" WebAssembly passive data segments.\n","sig":null,"attributes":[{"value":"/ WebAssembly passive data segments.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":110802,"byte_end":110840,"line_start":75,"line_end":75,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":1402},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":110944,"byte_end":110963,"line_start":79,"line_end":79,"column_start":9,"column_end":28},"name":"global_initializers","qualname":"::module::ModuleInfo::global_initializers","value":"wasmer_types::entity::PrimaryMap<wasmer_types::LocalGlobalIndex, wasmer_types::GlobalInit>","parent":{"krate":0,"index":1394},"children":[],"decl_id":null,"docs":" WebAssembly global initializers.\n","sig":null,"attributes":[{"value":"/ WebAssembly global initializers.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":110899,"byte_end":110935,"line_start":78,"line_end":78,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":1403},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":111052,"byte_end":111066,"line_start":82,"line_end":82,"column_start":9,"column_end":23},"name":"function_names","qualname":"::module::ModuleInfo::function_names","value":"std::collections::HashMap<wasmer_types::FunctionIndex, std::string::String>","parent":{"krate":0,"index":1394},"children":[],"decl_id":null,"docs":" WebAssembly function names.\n","sig":null,"attributes":[{"value":"/ WebAssembly function names.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":111012,"byte_end":111043,"line_start":81,"line_end":81,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":1404},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":111150,"byte_end":111160,"line_start":85,"line_end":85,"column_start":9,"column_end":19},"name":"signatures","qualname":"::module::ModuleInfo::signatures","value":"wasmer_types::entity::PrimaryMap<wasmer_types::SignatureIndex, wasmer_types::FunctionType>","parent":{"krate":0,"index":1394},"children":[],"decl_id":null,"docs":" WebAssembly function signatures.\n","sig":null,"attributes":[{"value":"/ WebAssembly function signatures.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":111105,"byte_end":111141,"line_start":84,"line_end":84,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":1405},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":111265,"byte_end":111274,"line_start":88,"line_end":88,"column_start":9,"column_end":18},"name":"functions","qualname":"::module::ModuleInfo::functions","value":"wasmer_types::entity::PrimaryMap<wasmer_types::FunctionIndex, wasmer_types::SignatureIndex>","parent":{"krate":0,"index":1394},"children":[],"decl_id":null,"docs":" WebAssembly functions (imported and local).\n","sig":null,"attributes":[{"value":"/ WebAssembly functions (imported and local).","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":111209,"byte_end":111256,"line_start":87,"line_end":87,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1406},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":111377,"byte_end":111383,"line_start":91,"line_end":91,"column_start":9,"column_end":15},"name":"tables","qualname":"::module::ModuleInfo::tables","value":"wasmer_types::entity::PrimaryMap<wasmer_types::TableIndex, wasmer_types::TableType>","parent":{"krate":0,"index":1394},"children":[],"decl_id":null,"docs":" WebAssembly tables (imported and local).\n","sig":null,"attributes":[{"value":"/ WebAssembly tables (imported and local).","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":111324,"byte_end":111368,"line_start":90,"line_end":90,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":1407},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":111487,"byte_end":111495,"line_start":94,"line_end":94,"column_start":9,"column_end":17},"name":"memories","qualname":"::module::ModuleInfo::memories","value":"wasmer_types::entity::PrimaryMap<wasmer_types::MemoryIndex, wasmer_types::MemoryType>","parent":{"krate":0,"index":1394},"children":[],"decl_id":null,"docs":" WebAssembly linear memories (imported and local).\n","sig":null,"attributes":[{"value":"/ WebAssembly linear memories (imported and local).","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":111425,"byte_end":111478,"line_start":93,"line_end":93,"column_start":5,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":1408},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":111602,"byte_end":111609,"line_start":97,"line_end":97,"column_start":9,"column_end":16},"name":"globals","qualname":"::module::ModuleInfo::globals","value":"wasmer_types::entity::PrimaryMap<wasmer_types::GlobalIndex, wasmer_types::GlobalType>","parent":{"krate":0,"index":1394},"children":[],"decl_id":null,"docs":" WebAssembly global variables (imported and local).\n","sig":null,"attributes":[{"value":"/ WebAssembly global variables (imported and local).","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":111539,"byte_end":111593,"line_start":96,"line_end":96,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":1409},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":111696,"byte_end":111711,"line_start":100,"line_end":100,"column_start":9,"column_end":24},"name":"custom_sections","qualname":"::module::ModuleInfo::custom_sections","value":"indexmap::IndexMap<std::string::String, wasmer_types::CustomSectionIndex>","parent":{"krate":0,"index":1394},"children":[],"decl_id":null,"docs":" Custom sections in the module.\n","sig":null,"attributes":[{"value":"/ Custom sections in the module.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":111653,"byte_end":111687,"line_start":99,"line_end":99,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":1410},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":111815,"byte_end":111835,"line_start":103,"line_end":103,"column_start":9,"column_end":29},"name":"custom_sections_data","qualname":"::module::ModuleInfo::custom_sections_data","value":"wasmer_types::entity::PrimaryMap<wasmer_types::CustomSectionIndex, std::sync::Arc<[u8]>>","parent":{"krate":0,"index":1394},"children":[],"decl_id":null,"docs":" The data for each CustomSection in the module.\n","sig":null,"attributes":[{"value":"/ The data for each CustomSection in the module.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":111756,"byte_end":111806,"line_start":102,"line_end":102,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":1411},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":111941,"byte_end":111963,"line_start":106,"line_end":106,"column_start":9,"column_end":31},"name":"num_imported_functions","qualname":"::module::ModuleInfo::num_imported_functions","value":"usize","parent":{"krate":0,"index":1394},"children":[],"decl_id":null,"docs":" Number of imported functions in the module.\n","sig":null,"attributes":[{"value":"/ Number of imported functions in the module.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":111885,"byte_end":111932,"line_start":105,"line_end":105,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1412},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":112030,"byte_end":112049,"line_start":109,"line_end":109,"column_start":9,"column_end":28},"name":"num_imported_tables","qualname":"::module::ModuleInfo::num_imported_tables","value":"usize","parent":{"krate":0,"index":1394},"children":[],"decl_id":null,"docs":" Number of imported tables in the module.\n","sig":null,"attributes":[{"value":"/ Number of imported tables in the module.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":111977,"byte_end":112021,"line_start":108,"line_end":108,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":1413},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":112118,"byte_end":112139,"line_start":112,"line_end":112,"column_start":9,"column_end":30},"name":"num_imported_memories","qualname":"::module::ModuleInfo::num_imported_memories","value":"usize","parent":{"krate":0,"index":1394},"children":[],"decl_id":null,"docs":" Number of imported memories in the module.\n","sig":null,"attributes":[{"value":"/ Number of imported memories in the module.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":112063,"byte_end":112109,"line_start":111,"line_end":111,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":1414},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":112207,"byte_end":112227,"line_start":115,"line_end":115,"column_start":9,"column_end":29},"name":"num_imported_globals","qualname":"::module::ModuleInfo::num_imported_globals","value":"usize","parent":{"krate":0,"index":1394},"children":[],"decl_id":null,"docs":" Number of imported globals in the module.\n","sig":null,"attributes":[{"value":"/ Number of imported globals in the module.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":112153,"byte_end":112198,"line_start":114,"line_end":114,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":488},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":112314,"byte_end":112317,"line_start":120,"line_end":120,"column_start":12,"column_end":15},"name":"new","qualname":"<ModuleInfo>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Allocates the module data structures.\n","sig":null,"attributes":[{"value":"/ Allocates the module data structures.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":112261,"byte_end":112302,"line_start":119,"line_end":119,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":489},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":113279,"byte_end":113298,"line_start":147,"line_end":147,"column_start":12,"column_end":31},"name":"get_passive_element","qualname":"<ModuleInfo>::get_passive_element","value":"pub fn get_passive_element(&Self, ElemIndex) -> Option<&[FunctionIndex]>","parent":null,"children":[],"decl_id":null,"docs":" Get the given passive element, if it exists.\n","sig":null,"attributes":[{"value":"/ Get the given passive element, if it exists.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":113219,"byte_end":113267,"line_start":146,"line_end":146,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":491},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":113480,"byte_end":113499,"line_start":152,"line_end":152,"column_start":12,"column_end":31},"name":"exported_signatures","qualname":"<ModuleInfo>::exported_signatures","value":"pub fn exported_signatures(&Self) -> Vec<FunctionType>","parent":null,"children":[],"decl_id":null,"docs":" Get the exported signatures of the module\n","sig":null,"attributes":[{"value":"/ Get the exported signatures of the module","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":113423,"byte_end":113468,"line_start":151,"line_end":151,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":493},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":114042,"byte_end":114049,"line_start":167,"line_end":167,"column_start":12,"column_end":19},"name":"exports","qualname":"<ModuleInfo>::exports","value":"pub fn exports<'a>(&'a Self) -> ExportsIterator</*impl Trait*/>","parent":null,"children":[],"decl_id":null,"docs":" Get the export types of the module\n","sig":null,"attributes":[{"value":"/ Get the export types of the module","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":113992,"byte_end":114030,"line_start":166,"line_end":166,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":497},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":115294,"byte_end":115301,"line_start":197,"line_end":197,"column_start":12,"column_end":19},"name":"imports","qualname":"<ModuleInfo>::imports","value":"pub fn imports<'a>(&'a Self) -> ImportsIterator</*impl Trait*/>","parent":null,"children":[],"decl_id":null,"docs":" Get the export types of the module\n","sig":null,"attributes":[{"value":"/ Get the export types of the module","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":115244,"byte_end":115282,"line_start":196,"line_end":196,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":501},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":116711,"byte_end":116726,"line_start":230,"line_end":230,"column_start":12,"column_end":27},"name":"custom_sections","qualname":"<ModuleInfo>::custom_sections","value":"pub fn custom_sections<'a>(&'a Self, &'a str) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Get the custom sections of the module given a `name`.\n","sig":null,"attributes":[{"value":"/ Get the custom sections of the module given a `name`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":116642,"byte_end":116699,"line_start":229,"line_end":229,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":505},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":117171,"byte_end":117181,"line_start":242,"line_end":242,"column_start":12,"column_end":22},"name":"func_index","qualname":"<ModuleInfo>::func_index","value":"pub fn func_index(&Self, LocalFunctionIndex) -> FunctionIndex","parent":null,"children":[],"decl_id":null,"docs":" Convert a `LocalFunctionIndex` into a `FunctionIndex`.\n","sig":null,"attributes":[{"value":"/ Convert a `LocalFunctionIndex` into a `FunctionIndex`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":117101,"byte_end":117159,"line_start":241,"line_end":241,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":506},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":117457,"byte_end":117473,"line_start":248,"line_end":248,"column_start":12,"column_end":28},"name":"local_func_index","qualname":"<ModuleInfo>::local_func_index","value":"pub fn local_func_index(&Self, FunctionIndex) -> Option<LocalFunctionIndex>","parent":null,"children":[],"decl_id":null,"docs":" Convert a `FunctionIndex` into a `LocalFunctionIndex`. Returns None if the\n index is an imported function.\n","sig":null,"attributes":[{"value":"/ Convert a `FunctionIndex` into a `LocalFunctionIndex`. Returns None if the","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":117328,"byte_end":117406,"line_start":246,"line_end":246,"column_start":5,"column_end":83}},{"value":"/ index is an imported function.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":117411,"byte_end":117445,"line_start":247,"line_end":247,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":507},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":117744,"byte_end":117764,"line_start":255,"line_end":255,"column_start":12,"column_end":32},"name":"is_imported_function","qualname":"<ModuleInfo>::is_imported_function","value":"pub fn is_imported_function(&Self, FunctionIndex) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Test whether the given function index is for an imported function.\n","sig":null,"attributes":[{"value":"/ Test whether the given function index is for an imported function.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":117662,"byte_end":117732,"line_start":254,"line_end":254,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":508},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":117931,"byte_end":117942,"line_start":260,"line_end":260,"column_start":12,"column_end":23},"name":"table_index","qualname":"<ModuleInfo>::table_index","value":"pub fn table_index(&Self, LocalTableIndex) -> TableIndex","parent":null,"children":[],"decl_id":null,"docs":" Convert a `LocalTableIndex` into a `TableIndex`.\n","sig":null,"attributes":[{"value":"/ Convert a `LocalTableIndex` into a `TableIndex`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":117867,"byte_end":117919,"line_start":259,"line_end":259,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":509},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":118199,"byte_end":118216,"line_start":266,"line_end":266,"column_start":12,"column_end":29},"name":"local_table_index","qualname":"<ModuleInfo>::local_table_index","value":"pub fn local_table_index(&Self, TableIndex) -> Option<LocalTableIndex>","parent":null,"children":[],"decl_id":null,"docs":" Convert a `TableIndex` into a `LocalTableIndex`. Returns None if the\n index is an imported table.\n","sig":null,"attributes":[{"value":"/ Convert a `TableIndex` into a `LocalTableIndex`. Returns None if the","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":118079,"byte_end":118151,"line_start":264,"line_end":264,"column_start":5,"column_end":77}},{"value":"/ index is an imported table.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":118156,"byte_end":118187,"line_start":265,"line_end":265,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":510},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":118484,"byte_end":118501,"line_start":274,"line_end":274,"column_start":12,"column_end":29},"name":"is_imported_table","qualname":"<ModuleInfo>::is_imported_table","value":"pub fn is_imported_table(&Self, TableIndex) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Test whether the given table index is for an imported table.\n","sig":null,"attributes":[{"value":"/ Test whether the given table index is for an imported table.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":118408,"byte_end":118472,"line_start":273,"line_end":273,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":511},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":118664,"byte_end":118676,"line_start":279,"line_end":279,"column_start":12,"column_end":24},"name":"memory_index","qualname":"<ModuleInfo>::memory_index","value":"pub fn memory_index(&Self, LocalMemoryIndex) -> MemoryIndex","parent":null,"children":[],"decl_id":null,"docs":" Convert a `LocalMemoryIndex` into a `MemoryIndex`.\n","sig":null,"attributes":[{"value":"/ Convert a `LocalMemoryIndex` into a `MemoryIndex`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":118598,"byte_end":118652,"line_start":278,"line_end":278,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":512},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":118943,"byte_end":118961,"line_start":285,"line_end":285,"column_start":12,"column_end":30},"name":"local_memory_index","qualname":"<ModuleInfo>::local_memory_index","value":"pub fn local_memory_index(&Self, MemoryIndex) -> Option<LocalMemoryIndex>","parent":null,"children":[],"decl_id":null,"docs":" Convert a `MemoryIndex` into a `LocalMemoryIndex`. Returns None if the\n index is an imported memory.\n","sig":null,"attributes":[{"value":"/ Convert a `MemoryIndex` into a `LocalMemoryIndex`. Returns None if the","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":118820,"byte_end":118894,"line_start":283,"line_end":283,"column_start":5,"column_end":79}},{"value":"/ index is an imported memory.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":118899,"byte_end":118931,"line_start":284,"line_end":284,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":513},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":119238,"byte_end":119256,"line_start":293,"line_end":293,"column_start":12,"column_end":30},"name":"is_imported_memory","qualname":"<ModuleInfo>::is_imported_memory","value":"pub fn is_imported_memory(&Self, MemoryIndex) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Test whether the given memory index is for an imported memory.\n","sig":null,"attributes":[{"value":"/ Test whether the given memory index is for an imported memory.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":119160,"byte_end":119226,"line_start":292,"line_end":292,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":514},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":119422,"byte_end":119434,"line_start":298,"line_end":298,"column_start":12,"column_end":24},"name":"global_index","qualname":"<ModuleInfo>::global_index","value":"pub fn global_index(&Self, LocalGlobalIndex) -> GlobalIndex","parent":null,"children":[],"decl_id":null,"docs":" Convert a `LocalGlobalIndex` into a `GlobalIndex`.\n","sig":null,"attributes":[{"value":"/ Convert a `LocalGlobalIndex` into a `GlobalIndex`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":119356,"byte_end":119410,"line_start":297,"line_end":297,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":515},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":119700,"byte_end":119718,"line_start":304,"line_end":304,"column_start":12,"column_end":30},"name":"local_global_index","qualname":"<ModuleInfo>::local_global_index","value":"pub fn local_global_index(&Self, GlobalIndex) -> Option<LocalGlobalIndex>","parent":null,"children":[],"decl_id":null,"docs":" Convert a `GlobalIndex` into a `LocalGlobalIndex`. Returns None if the\n index is an imported global.\n","sig":null,"attributes":[{"value":"/ Convert a `GlobalIndex` into a `LocalGlobalIndex`. Returns None if the","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":119577,"byte_end":119651,"line_start":302,"line_end":302,"column_start":5,"column_end":79}},{"value":"/ index is an imported global.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":119656,"byte_end":119688,"line_start":303,"line_end":303,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":516},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":119994,"byte_end":120012,"line_start":312,"line_end":312,"column_start":12,"column_end":30},"name":"is_imported_global","qualname":"<ModuleInfo>::is_imported_global","value":"pub fn is_imported_global(&Self, GlobalIndex) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Test whether the given global index is for an imported global.\n","sig":null,"attributes":[{"value":"/ Test whether the given global index is for an imported global.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":119916,"byte_end":119982,"line_start":311,"line_end":311,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":517},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":120146,"byte_end":120150,"line_start":317,"line_end":317,"column_start":12,"column_end":16},"name":"name","qualname":"<ModuleInfo>::name","value":"pub fn name(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Get the Module name\n","sig":null,"attributes":[{"value":"/ Get the Module name","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":120111,"byte_end":120134,"line_start":316,"line_end":316,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":518},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":120371,"byte_end":120394,"line_start":325,"line_end":325,"column_start":12,"column_end":35},"name":"imported_function_types","qualname":"<ModuleInfo>::imported_function_types","value":"pub fn imported_function_types<'a>(&'a Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Get the imported function types of the module.\n","sig":null,"attributes":[{"value":"/ Get the imported function types of the module.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":120309,"byte_end":120359,"line_start":324,"line_end":324,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":524},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":120987,"byte_end":121002,"line_start":344,"line_end":344,"column_start":12,"column_end":27},"name":"ExportsIterator","qualname":"::module::ExportsIterator","value":"ExportsIterator {  }","parent":null,"children":[{"krate":0,"index":526},{"krate":0,"index":527}],"decl_id":null,"docs":" This iterator allows us to iterate over the exports\n and offer nice API ergonomics over it.\n","sig":null,"attributes":[{"value":"/ This iterator allows us to iterate over the exports","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":120877,"byte_end":120932,"line_start":342,"line_end":342,"column_start":1,"column_end":56}},{"value":"/ and offer nice API ergonomics over it.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":120933,"byte_end":120975,"line_start":343,"line_end":343,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":533},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":121397,"byte_end":121406,"line_start":358,"line_end":358,"column_start":12,"column_end":21},"name":"functions","qualname":"<ExportsIterator<I>>::functions","value":"pub fn functions(Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Get only the functions\n","sig":null,"attributes":[{"value":"/ Get only the functions","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":121359,"byte_end":121385,"line_start":357,"line_end":357,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":536},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":121705,"byte_end":121713,"line_start":365,"line_end":365,"column_start":12,"column_end":20},"name":"memories","qualname":"<ExportsIterator<I>>::memories","value":"pub fn memories(Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Get only the memories\n","sig":null,"attributes":[{"value":"/ Get only the memories","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":121668,"byte_end":121693,"line_start":364,"line_end":364,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":539},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":121999,"byte_end":122005,"line_start":372,"line_end":372,"column_start":12,"column_end":18},"name":"tables","qualname":"<ExportsIterator<I>>::tables","value":"pub fn tables(Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Get only the tables\n","sig":null,"attributes":[{"value":"/ Get only the tables","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":121964,"byte_end":121987,"line_start":371,"line_end":371,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":542},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":122290,"byte_end":122297,"line_start":379,"line_end":379,"column_start":12,"column_end":19},"name":"globals","qualname":"<ExportsIterator<I>>::globals","value":"pub fn globals(Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Get only the globals\n","sig":null,"attributes":[{"value":"/ Get only the globals","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":122254,"byte_end":122278,"line_start":378,"line_end":378,"column_start":5,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":549},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":122845,"byte_end":122860,"line_start":396,"line_end":396,"column_start":12,"column_end":27},"name":"ImportsIterator","qualname":"::module::ImportsIterator","value":"ImportsIterator {  }","parent":null,"children":[{"krate":0,"index":551},{"krate":0,"index":552}],"decl_id":null,"docs":" This iterator allows us to iterate over the imports\n and offer nice API ergonomics over it.\n","sig":null,"attributes":[{"value":"/ This iterator allows us to iterate over the imports","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":122735,"byte_end":122790,"line_start":394,"line_end":394,"column_start":1,"column_end":56}},{"value":"/ and offer nice API ergonomics over it.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":122791,"byte_end":122833,"line_start":395,"line_end":395,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":558},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":123255,"byte_end":123264,"line_start":410,"line_end":410,"column_start":12,"column_end":21},"name":"functions","qualname":"<ImportsIterator<I>>::functions","value":"pub fn functions(Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Get only the functions\n","sig":null,"attributes":[{"value":"/ Get only the functions","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":123217,"byte_end":123243,"line_start":409,"line_end":409,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":561},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":123644,"byte_end":123652,"line_start":421,"line_end":421,"column_start":12,"column_end":20},"name":"memories","qualname":"<ImportsIterator<I>>::memories","value":"pub fn memories(Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Get only the memories\n","sig":null,"attributes":[{"value":"/ Get only the memories","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":123607,"byte_end":123632,"line_start":420,"line_end":420,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":564},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":123956,"byte_end":123962,"line_start":428,"line_end":428,"column_start":12,"column_end":18},"name":"tables","qualname":"<ImportsIterator<I>>::tables","value":"pub fn tables(Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Get only the tables\n","sig":null,"attributes":[{"value":"/ Get only the tables","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":123921,"byte_end":123944,"line_start":427,"line_end":427,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":567},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":124265,"byte_end":124272,"line_start":435,"line_end":435,"column_start":12,"column_end":19},"name":"globals","qualname":"<ImportsIterator<I>>::globals","value":"pub fn globals(Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Get only the globals\n","sig":null,"attributes":[{"value":"/ Get only the globals","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":124229,"byte_end":124253,"line_start":434,"line_end":434,"column_start":5,"column_end":29}}]},{"kind":"Const","id":{"krate":0,"index":1507},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\probestack.rs","byte_start":125998,"byte_end":126008,"line_start":29,"line_end":29,"column_start":19,"column_end":29},"name":"PROBESTACK","qualname":"::probestack::PROBESTACK","value":"unsafe extern \"C\" fn()","parent":null,"children":[],"decl_id":null,"docs":" The probestack for Windows when compiled with MSVC\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1508},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\sig_registry.rs","byte_start":128039,"byte_end":128056,"line_start":19,"line_end":19,"column_start":12,"column_end":29},"name":"SignatureRegistry","qualname":"::sig_registry::SignatureRegistry","value":"SignatureRegistry {  }","parent":null,"children":[{"krate":0,"index":1509}],"decl_id":null,"docs":" WebAssembly requires that the caller and callee signatures in an indirect\n call must match. To implement this efficiently, keep a registry of all\n signatures, shared by all instances, so that call sites can just do an\n index comparison.\n","sig":null,"attributes":[{"value":"/ WebAssembly requires that the caller and callee signatures in an indirect","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\sig_registry.rs","byte_start":127761,"byte_end":127838,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ call must match. To implement this efficiently, keep a registry of all","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\sig_registry.rs","byte_start":127839,"byte_end":127913,"line_start":15,"line_end":15,"column_start":1,"column_end":75}},{"value":"/ signatures, shared by all instances, so that call sites can just do an","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\sig_registry.rs","byte_start":127914,"byte_end":127988,"line_start":16,"line_end":16,"column_start":1,"column_end":75}},{"value":"/ index comparison.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\sig_registry.rs","byte_start":127989,"byte_end":128010,"line_start":17,"line_end":17,"column_start":1,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":587},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\sig_registry.rs","byte_start":128706,"byte_end":128709,"line_start":36,"line_end":36,"column_start":12,"column_end":15},"name":"new","qualname":"<SignatureRegistry>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `SignatureRegistry`.\n","sig":null,"attributes":[{"value":"/ Create a new `SignatureRegistry`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\sig_registry.rs","byte_start":128657,"byte_end":128694,"line_start":35,"line_end":35,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":588},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\sig_registry.rs","byte_start":128862,"byte_end":128870,"line_start":43,"line_end":43,"column_start":12,"column_end":20},"name":"register","qualname":"<SignatureRegistry>::register","value":"pub fn register(&Self, &FunctionType) -> VMSharedSignatureIndex","parent":null,"children":[],"decl_id":null,"docs":" Register a signature and return its unique index.\n","sig":null,"attributes":[{"value":"/ Register a signature and return its unique index.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\sig_registry.rs","byte_start":128797,"byte_end":128850,"line_start":42,"line_end":42,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":589},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\sig_registry.rs","byte_start":130048,"byte_end":130054,"line_start":68,"line_end":68,"column_start":12,"column_end":18},"name":"lookup","qualname":"<SignatureRegistry>::lookup","value":"pub fn lookup(&Self, VMSharedSignatureIndex) -> Option<FunctionType>","parent":null,"children":[],"decl_id":null,"docs":" Looks up a shared signature index within this registry.","sig":null,"attributes":[{"value":"/ Looks up a shared signature index within this registry.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\sig_registry.rs","byte_start":129814,"byte_end":129873,"line_start":64,"line_end":64,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\sig_registry.rs","byte_start":129878,"byte_end":129881,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ Note that for this operation to be semantically correct the `idx` must","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\sig_registry.rs","byte_start":129886,"byte_end":129960,"line_start":66,"line_end":66,"column_start":5,"column_end":79}},{"value":"/ have previously come from a call to `register` of this same object.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\sig_registry.rs","byte_start":129965,"byte_end":130036,"line_start":67,"line_end":67,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1520},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\table.rs","byte_start":131062,"byte_end":131083,"line_start":23,"line_end":23,"column_start":5,"column_end":26},"name":"CallerChecksSignature","qualname":"::table::TableStyle::CallerChecksSignature","value":"TableStyle::CallerChecksSignature","parent":{"krate":0,"index":1519},"children":[],"decl_id":null,"docs":" Signatures are stored in the table and checked in the caller.\n","sig":null,"attributes":[{"value":"/ Signatures are stored in the table and checked in the caller.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\table.rs","byte_start":130992,"byte_end":131057,"line_start":22,"line_end":22,"column_start":5,"column_end":70}}]},{"kind":"Enum","id":{"krate":0,"index":1519},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\table.rs","byte_start":130975,"byte_end":130985,"line_start":21,"line_end":21,"column_start":10,"column_end":20},"name":"TableStyle","qualname":"::table::TableStyle","value":"pub enum TableStyle {\n\n    /// Signatures are stored in the table and checked in the caller.\n    CallerChecksSignature,\n}","parent":null,"children":[{"krate":0,"index":1520}],"decl_id":null,"docs":" Implementation styles for WebAssembly tables.\n","sig":null,"attributes":[{"value":"/ Implementation styles for WebAssembly tables.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\table.rs","byte_start":130862,"byte_end":130911,"line_start":19,"line_end":19,"column_start":1,"column_end":50}}]},{"kind":"Trait","id":{"krate":0,"index":611},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\table.rs","byte_start":131156,"byte_end":131161,"line_start":27,"line_end":27,"column_start":11,"column_end":16},"name":"Table","qualname":"::table::Table","value":"Table: fmt::Debug + Send + Sync","parent":null,"children":[{"krate":0,"index":612},{"krate":0,"index":613},{"krate":0,"index":614},{"krate":0,"index":615},{"krate":0,"index":616},{"krate":0,"index":617},{"krate":0,"index":618},{"krate":0,"index":619}],"decl_id":null,"docs":" Trait for implementing the interface of a Wasm table.\n","sig":null,"attributes":[{"value":"/ Trait for implementing the interface of a Wasm table.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\table.rs","byte_start":131088,"byte_end":131145,"line_start":26,"line_end":26,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":612},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\table.rs","byte_start":131239,"byte_end":131244,"line_start":29,"line_end":29,"column_start":8,"column_end":13},"name":"style","qualname":"::table::Table::style","value":"pub fn style(&Self) -> &TableStyle","parent":{"krate":0,"index":611},"children":[],"decl_id":null,"docs":" Returns the style for this Table.\n","sig":null,"attributes":[{"value":"/ Returns the style for this Table.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\table.rs","byte_start":131194,"byte_end":131231,"line_start":28,"line_end":28,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":613},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\table.rs","byte_start":131317,"byte_end":131319,"line_start":32,"line_end":32,"column_start":8,"column_end":10},"name":"ty","qualname":"::table::Table::ty","value":"pub fn ty(&Self) -> &TableType","parent":{"krate":0,"index":611},"children":[],"decl_id":null,"docs":" Returns the type for this Table.\n","sig":null,"attributes":[{"value":"/ Returns the type for this Table.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\table.rs","byte_start":131273,"byte_end":131309,"line_start":31,"line_end":31,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":614},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\table.rs","byte_start":131400,"byte_end":131404,"line_start":35,"line_end":35,"column_start":8,"column_end":12},"name":"size","qualname":"::table::Table::size","value":"pub fn size(&Self) -> u32","parent":{"krate":0,"index":611},"children":[],"decl_id":null,"docs":" Returns the number of allocated elements.\n","sig":null,"attributes":[{"value":"/ Returns the number of allocated elements.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\table.rs","byte_start":131347,"byte_end":131392,"line_start":34,"line_end":34,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":615},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\table.rs","byte_start":131634,"byte_end":131638,"line_start":41,"line_end":41,"column_start":8,"column_end":12},"name":"grow","qualname":"::table::Table::grow","value":"pub fn grow(&Self, u32) -> Option<u32>","parent":{"krate":0,"index":611},"children":[],"decl_id":null,"docs":" Grow table by the specified amount of elements.","sig":null,"attributes":[{"value":"/ Grow table by the specified amount of elements.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\table.rs","byte_start":131425,"byte_end":131476,"line_start":37,"line_end":37,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\table.rs","byte_start":131481,"byte_end":131484,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if table can't be grown by the specified amount","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\table.rs","byte_start":131489,"byte_end":131555,"line_start":39,"line_end":39,"column_start":5,"column_end":71}},{"value":"/ of elements, otherwise returns the previous size of the table.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\table.rs","byte_start":131560,"byte_end":131626,"line_start":40,"line_end":40,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":616},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\table.rs","byte_start":131792,"byte_end":131795,"line_start":46,"line_end":46,"column_start":8,"column_end":11},"name":"get","qualname":"::table::Table::get","value":"pub fn get(&Self, u32) -> Option<VMCallerCheckedAnyfunc>","parent":{"krate":0,"index":611},"children":[],"decl_id":null,"docs":" Get reference to the specified element.","sig":null,"attributes":[{"value":"/ Get reference to the specified element.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\table.rs","byte_start":131679,"byte_end":131722,"line_start":43,"line_end":43,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\table.rs","byte_start":131727,"byte_end":131730,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the index is out of bounds.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\table.rs","byte_start":131735,"byte_end":131784,"line_start":45,"line_end":45,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":617},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\table.rs","byte_start":131995,"byte_end":131998,"line_start":53,"line_end":53,"column_start":8,"column_end":11},"name":"set","qualname":"::table::Table::set","value":"pub fn set(&Self, u32, VMCallerCheckedAnyfunc) -> Result<(), Trap>","parent":{"krate":0,"index":611},"children":[],"decl_id":null,"docs":" Set reference to the specified element.","sig":null,"attributes":[{"value":"/ Set reference to the specified element.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\table.rs","byte_start":131855,"byte_end":131898,"line_start":48,"line_end":48,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\table.rs","byte_start":131903,"byte_end":131906,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\table.rs","byte_start":131911,"byte_end":131923,"line_start":50,"line_end":50,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\table.rs","byte_start":131928,"byte_end":131931,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ Returns an error if the index is out of bounds.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\table.rs","byte_start":131936,"byte_end":131987,"line_start":52,"line_end":52,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":618},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\table.rs","byte_start":132160,"byte_end":132167,"line_start":56,"line_end":56,"column_start":8,"column_end":15},"name":"vmtable","qualname":"::table::Table::vmtable","value":"pub fn vmtable(&Self) -> NonNull<VMTableDefinition>","parent":{"krate":0,"index":611},"children":[],"decl_id":null,"docs":" Return a `VMTableDefinition` for exposing the table to compiled wasm code.\n","sig":null,"attributes":[{"value":"/ Return a `VMTableDefinition` for exposing the table to compiled wasm code.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\table.rs","byte_start":132074,"byte_end":132152,"line_start":55,"line_end":55,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":619},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\table.rs","byte_start":132443,"byte_end":132447,"line_start":64,"line_end":64,"column_start":8,"column_end":12},"name":"copy","qualname":"::table::Table::copy","value":"pub fn copy(&Self, &Table, u32, u32, u32) -> Result<(), Trap>","parent":{"krate":0,"index":611},"children":[],"decl_id":null,"docs":" Copy `len` elements from `src_table[src_index..]` into `dst_table[dst_index..]`.","sig":null,"attributes":[{"value":"/ Copy `len` elements from `src_table[src_index..]` into `dst_table[dst_index..]`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\table.rs","byte_start":132211,"byte_end":132295,"line_start":58,"line_end":58,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\table.rs","byte_start":132300,"byte_end":132303,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\table.rs","byte_start":132308,"byte_end":132320,"line_start":60,"line_end":60,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\table.rs","byte_start":132325,"byte_end":132328,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ Returns an error if the range is out of bounds of either the source or","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\table.rs","byte_start":132333,"byte_end":132407,"line_start":62,"line_end":62,"column_start":5,"column_end":79}},{"value":"/ destination tables.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\table.rs","byte_start":132412,"byte_end":132435,"line_start":63,"line_end":63,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":1572},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\table.rs","byte_start":133732,"byte_end":133743,"line_start":107,"line_end":107,"column_start":12,"column_end":23},"name":"LinearTable","qualname":"::table::LinearTable","value":"LinearTable {  }","parent":null,"children":[{"krate":0,"index":1573},{"krate":0,"index":1574},{"krate":0,"index":1575},{"krate":0,"index":1576},{"krate":0,"index":1577}],"decl_id":null,"docs":" A table instance.\n","sig":null,"attributes":[{"value":"/ A table instance.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\table.rs","byte_start":133682,"byte_end":133703,"line_start":105,"line_end":105,"column_start":1,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":625},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\table.rs","byte_start":135208,"byte_end":135211,"line_start":141,"line_end":141,"column_start":12,"column_end":15},"name":"new","qualname":"<LinearTable>::new","value":"pub fn new(&TableType, &TableStyle) -> Result<Self, String>","parent":null,"children":[],"decl_id":null,"docs":" Create a new linear table instance with specified minimum and maximum number of elements.","sig":null,"attributes":[{"value":"/ Create a new linear table instance with specified minimum and maximum number of elements.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\table.rs","byte_start":134944,"byte_end":135037,"line_start":137,"line_end":137,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\table.rs","byte_start":135042,"byte_end":135045,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ This creates a `LinearTable` with metadata owned by a VM, pointed to by","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\table.rs","byte_start":135050,"byte_end":135125,"line_start":139,"line_end":139,"column_start":5,"column_end":80}},{"value":"/ `vm_table_location`: this can be used to create a local table.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\table.rs","byte_start":135130,"byte_end":135196,"line_start":140,"line_end":140,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":626},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\table.rs","byte_start":135714,"byte_end":135729,"line_start":152,"line_end":152,"column_start":19,"column_end":34},"name":"from_definition","qualname":"<LinearTable>::from_definition","value":"pub unsafe fn from_definition(&TableType, &TableStyle,\n                              NonNull<VMTableDefinition>)\n-> Result<Self, String>","parent":null,"children":[],"decl_id":null,"docs":" Create a new linear table instance with specified minimum and maximum number of elements.","sig":null,"attributes":[{"value":"/ Create a new linear table instance with specified minimum and maximum number of elements.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\table.rs","byte_start":135343,"byte_end":135436,"line_start":145,"line_end":145,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\table.rs","byte_start":135441,"byte_end":135444,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ This creates a `LinearTable` with metadata owned by a VM, pointed to by","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\table.rs","byte_start":135449,"byte_end":135524,"line_start":147,"line_end":147,"column_start":5,"column_end":80}},{"value":"/ `vm_table_location`: this can be used to create a local table.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\table.rs","byte_start":135529,"byte_end":135595,"line_start":148,"line_end":148,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\table.rs","byte_start":135600,"byte_end":135603,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\table.rs","byte_start":135608,"byte_end":135620,"line_start":150,"line_end":150,"column_start":5,"column_end":17}},{"value":"/ - `vm_table_location` must point to a valid location in VM memory.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\table.rs","byte_start":135625,"byte_end":135695,"line_start":151,"line_end":151,"column_start":5,"column_end":75}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1590},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\trapcode.rs","byte_start":142151,"byte_end":142164,"line_start":21,"line_end":21,"column_start":5,"column_end":18},"name":"StackOverflow","qualname":"::trap::trapcode::TrapCode::StackOverflow","value":"TrapCode::StackOverflow","parent":{"krate":0,"index":1589},"children":[],"decl_id":null,"docs":" The current stack space was exhausted.","sig":null,"attributes":[{"value":"/ The current stack space was exhausted.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\trapcode.rs","byte_start":141971,"byte_end":142013,"line_start":17,"line_end":17,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\trapcode.rs","byte_start":142018,"byte_end":142021,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ On some platforms, a stack overflow may also be indicated by a segmentation fault from the","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\trapcode.rs","byte_start":142026,"byte_end":142120,"line_start":19,"line_end":19,"column_start":5,"column_end":99}},{"value":"/ stack guard page.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\trapcode.rs","byte_start":142125,"byte_end":142146,"line_start":20,"line_end":20,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1593},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\trapcode.rs","byte_start":142283,"byte_end":142304,"line_start":26,"line_end":26,"column_start":5,"column_end":26},"name":"HeapSetterOutOfBounds","qualname":"::trap::trapcode::TrapCode::HeapSetterOutOfBounds","value":"TrapCode::HeapSetterOutOfBounds","parent":{"krate":0,"index":1589},"children":[],"decl_id":null,"docs":" Memory data doesn't fit the memory size.","sig":null,"attributes":[{"value":"/ Memory data doesn't fit the memory size.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\trapcode.rs","byte_start":142175,"byte_end":142219,"line_start":23,"line_end":23,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\trapcode.rs","byte_start":142224,"byte_end":142227,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ This only can happen during instantiation.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\trapcode.rs","byte_start":142232,"byte_end":142278,"line_start":25,"line_end":25,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1596},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\trapcode.rs","byte_start":142569,"byte_end":142590,"line_start":33,"line_end":33,"column_start":5,"column_end":26},"name":"HeapAccessOutOfBounds","qualname":"::trap::trapcode::TrapCode::HeapAccessOutOfBounds","value":"TrapCode::HeapAccessOutOfBounds","parent":{"krate":0,"index":1589},"children":[],"decl_id":null,"docs":" A `heap_addr` instruction detected an out-of-bounds error.","sig":null,"attributes":[{"value":"/ A `heap_addr` instruction detected an out-of-bounds error.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\trapcode.rs","byte_start":142315,"byte_end":142377,"line_start":28,"line_end":28,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\trapcode.rs","byte_start":142382,"byte_end":142385,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ Note that not all out-of-bounds heap accesses are reported this way;","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\trapcode.rs","byte_start":142390,"byte_end":142462,"line_start":30,"line_end":30,"column_start":5,"column_end":77}},{"value":"/ some are detected by a segmentation fault on the heap unmapped or","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\trapcode.rs","byte_start":142467,"byte_end":142536,"line_start":31,"line_end":31,"column_start":5,"column_end":74}},{"value":"/ offset-guard pages.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\trapcode.rs","byte_start":142541,"byte_end":142564,"line_start":32,"line_end":32,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1599},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\trapcode.rs","byte_start":142651,"byte_end":142665,"line_start":36,"line_end":36,"column_start":5,"column_end":19},"name":"HeapMisaligned","qualname":"::trap::trapcode::TrapCode::HeapMisaligned","value":"TrapCode::HeapMisaligned","parent":{"krate":0,"index":1589},"children":[],"decl_id":null,"docs":" A `heap_addr` instruction was misaligned.\n","sig":null,"attributes":[{"value":"/ A `heap_addr` instruction was misaligned.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\trapcode.rs","byte_start":142601,"byte_end":142646,"line_start":35,"line_end":35,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1602},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\trapcode.rs","byte_start":142786,"byte_end":142808,"line_start":41,"line_end":41,"column_start":5,"column_end":27},"name":"TableSetterOutOfBounds","qualname":"::trap::trapcode::TrapCode::TableSetterOutOfBounds","value":"TrapCode::TableSetterOutOfBounds","parent":{"krate":0,"index":1589},"children":[],"decl_id":null,"docs":" Table Elements doesn't fit the table size.","sig":null,"attributes":[{"value":"/ Table Elements doesn't fit the table size.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\trapcode.rs","byte_start":142676,"byte_end":142722,"line_start":38,"line_end":38,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\trapcode.rs","byte_start":142727,"byte_end":142730,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ This only can happen during instantiation.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\trapcode.rs","byte_start":142735,"byte_end":142781,"line_start":40,"line_end":40,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1605},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\trapcode.rs","byte_start":142887,"byte_end":142909,"line_start":44,"line_end":44,"column_start":5,"column_end":27},"name":"TableAccessOutOfBounds","qualname":"::trap::trapcode::TrapCode::TableAccessOutOfBounds","value":"TrapCode::TableAccessOutOfBounds","parent":{"krate":0,"index":1589},"children":[],"decl_id":null,"docs":" A `table_addr` instruction detected an out-of-bounds error.\n","sig":null,"attributes":[{"value":"/ A `table_addr` instruction detected an out-of-bounds error.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\trapcode.rs","byte_start":142819,"byte_end":142882,"line_start":43,"line_end":43,"column_start":5,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1608},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\trapcode.rs","byte_start":142957,"byte_end":142968,"line_start":47,"line_end":47,"column_start":5,"column_end":16},"name":"OutOfBounds","qualname":"::trap::trapcode::TrapCode::OutOfBounds","value":"TrapCode::OutOfBounds","parent":{"krate":0,"index":1589},"children":[],"decl_id":null,"docs":" Other bounds checking error.\n","sig":null,"attributes":[{"value":"/ Other bounds checking error.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\trapcode.rs","byte_start":142920,"byte_end":142952,"line_start":46,"line_end":46,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1611},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\trapcode.rs","byte_start":143024,"byte_end":143042,"line_start":50,"line_end":50,"column_start":5,"column_end":23},"name":"IndirectCallToNull","qualname":"::trap::trapcode::TrapCode::IndirectCallToNull","value":"TrapCode::IndirectCallToNull","parent":{"krate":0,"index":1589},"children":[],"decl_id":null,"docs":" Indirect call to a null table entry.\n","sig":null,"attributes":[{"value":"/ Indirect call to a null table entry.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\trapcode.rs","byte_start":142979,"byte_end":143019,"line_start":49,"line_end":49,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1614},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\trapcode.rs","byte_start":143098,"byte_end":143110,"line_start":53,"line_end":53,"column_start":5,"column_end":17},"name":"BadSignature","qualname":"::trap::trapcode::TrapCode::BadSignature","value":"TrapCode::BadSignature","parent":{"krate":0,"index":1589},"children":[],"decl_id":null,"docs":" Signature mismatch on indirect call.\n","sig":null,"attributes":[{"value":"/ Signature mismatch on indirect call.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\trapcode.rs","byte_start":143053,"byte_end":143093,"line_start":52,"line_end":52,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1617},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\trapcode.rs","byte_start":143181,"byte_end":143196,"line_start":56,"line_end":56,"column_start":5,"column_end":20},"name":"IntegerOverflow","qualname":"::trap::trapcode::TrapCode::IntegerOverflow","value":"TrapCode::IntegerOverflow","parent":{"krate":0,"index":1589},"children":[],"decl_id":null,"docs":" An integer arithmetic operation caused an overflow.\n","sig":null,"attributes":[{"value":"/ An integer arithmetic operation caused an overflow.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\trapcode.rs","byte_start":143121,"byte_end":143176,"line_start":55,"line_end":55,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1620},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\trapcode.rs","byte_start":143244,"byte_end":143265,"line_start":59,"line_end":59,"column_start":5,"column_end":26},"name":"IntegerDivisionByZero","qualname":"::trap::trapcode::TrapCode::IntegerDivisionByZero","value":"TrapCode::IntegerDivisionByZero","parent":{"krate":0,"index":1589},"children":[],"decl_id":null,"docs":" An integer division by zero.\n","sig":null,"attributes":[{"value":"/ An integer division by zero.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\trapcode.rs","byte_start":143207,"byte_end":143239,"line_start":58,"line_end":58,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1623},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\trapcode.rs","byte_start":143317,"byte_end":143339,"line_start":62,"line_end":62,"column_start":5,"column_end":27},"name":"BadConversionToInteger","qualname":"::trap::trapcode::TrapCode::BadConversionToInteger","value":"TrapCode::BadConversionToInteger","parent":{"krate":0,"index":1589},"children":[],"decl_id":null,"docs":" Failed float-to-int conversion.\n","sig":null,"attributes":[{"value":"/ Failed float-to-int conversion.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\trapcode.rs","byte_start":143277,"byte_end":143312,"line_start":61,"line_end":61,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1626},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\trapcode.rs","byte_start":143420,"byte_end":143442,"line_start":65,"line_end":65,"column_start":5,"column_end":27},"name":"UnreachableCodeReached","qualname":"::trap::trapcode::TrapCode::UnreachableCodeReached","value":"TrapCode::UnreachableCodeReached","parent":{"krate":0,"index":1589},"children":[],"decl_id":null,"docs":" Code that was supposed to have been unreachable was reached.\n","sig":null,"attributes":[{"value":"/ Code that was supposed to have been unreachable was reached.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\trapcode.rs","byte_start":143351,"byte_end":143415,"line_start":64,"line_end":64,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1629},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\trapcode.rs","byte_start":143557,"byte_end":143566,"line_start":69,"line_end":69,"column_start":5,"column_end":14},"name":"Interrupt","qualname":"::trap::trapcode::TrapCode::Interrupt","value":"TrapCode::Interrupt","parent":{"krate":0,"index":1589},"children":[],"decl_id":null,"docs":" Execution has potentially run too long and may be interrupted.\n This trap is resumable.\n","sig":null,"attributes":[{"value":"/ Execution has potentially run too long and may be interrupted.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\trapcode.rs","byte_start":143454,"byte_end":143520,"line_start":67,"line_end":67,"column_start":5,"column_end":71}},{"value":"/ This trap is resumable.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\trapcode.rs","byte_start":143525,"byte_end":143552,"line_start":68,"line_end":68,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1632},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\trapcode.rs","byte_start":143651,"byte_end":143666,"line_start":72,"line_end":72,"column_start":5,"column_end":20},"name":"UnalignedAtomic","qualname":"::trap::trapcode::TrapCode::UnalignedAtomic","value":"TrapCode::UnalignedAtomic","parent":{"krate":0,"index":1589},"children":[],"decl_id":null,"docs":" An atomic memory access was attempted with an unaligned pointer.\n","sig":null,"attributes":[{"value":"/ An atomic memory access was attempted with an unaligned pointer.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\trapcode.rs","byte_start":143578,"byte_end":143646,"line_start":71,"line_end":71,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1635},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\trapcode.rs","byte_start":143763,"byte_end":143776,"line_start":75,"line_end":75,"column_start":5,"column_end":18},"name":"VMOutOfMemory","qualname":"::trap::trapcode::TrapCode::VMOutOfMemory","value":"TrapCode::VMOutOfMemory","parent":{"krate":0,"index":1589},"children":[],"decl_id":null,"docs":" A trap indicating that the runtime was unable to allocate sufficient memory.\n","sig":null,"attributes":[{"value":"/ A trap indicating that the runtime was unable to allocate sufficient memory.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\trapcode.rs","byte_start":143678,"byte_end":143758,"line_start":74,"line_end":74,"column_start":5,"column_end":85}}]},{"kind":"Enum","id":{"krate":0,"index":1589},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\trapcode.rs","byte_start":141956,"byte_end":141964,"line_start":16,"line_end":16,"column_start":10,"column_end":18},"name":"TrapCode","qualname":"::trap::trapcode::TrapCode","value":"pub enum TrapCode {\n\n    /// The current stack space was exhausted.\n    ///\n    /// On some platforms, a stack overflow may also be indicated by a segmentation fault from the\n    /// stack guard page.\n    StackOverflow = ,\n\n    /// Memory data doesn't fit the memory size.\n    ///\n    /// This only can happen during instantiation.\n    HeapSetterOutOfBounds = ,\n\n    /// A `heap_addr` instruction detected an out-of-bounds error.\n    ///\n    /// Note that not all out-of-bounds heap accesses are reported this way;\n    /// some are detected by a segmentation fault on the heap unmapped or\n    /// offset-guard pages.\n    HeapAccessOutOfBounds = ,\n\n    /// A `heap_addr` instruction was misaligned.\n    HeapMisaligned = ,\n\n    /// Table Elements doesn't fit the table size.\n    ///\n    /// This only can happen during instantiation.\n    TableSetterOutOfBounds = ,\n\n    /// A `table_addr` instruction detected an out-of-bounds error.\n    TableAccessOutOfBounds = ,\n\n    /// Other bounds checking error.\n    OutOfBounds = ,\n\n    /// Indirect call to a null table entry.\n    IndirectCallToNull = ,\n\n    /// Signature mismatch on indirect call.\n    BadSignature = ,\n\n    /// An integer arithmetic operation caused an overflow.\n    IntegerOverflow = ,\n\n    /// An integer division by zero.\n    IntegerDivisionByZero = ,\n\n    /// Failed float-to-int conversion.\n    BadConversionToInteger = ,\n\n    /// Code that was supposed to have been unreachable was reached.\n    UnreachableCodeReached = ,\n\n    /// Execution has potentially run too long and may be interrupted.\n    /// This trap is resumable.\n    Interrupt = ,\n\n    /// An atomic memory access was attempted with an unaligned pointer.\n    UnalignedAtomic = ,\n\n    /// A trap indicating that the runtime was unable to allocate sufficient memory.\n    VMOutOfMemory = ,\n}","parent":null,"children":[{"krate":0,"index":1590},{"krate":0,"index":1593},{"krate":0,"index":1596},{"krate":0,"index":1599},{"krate":0,"index":1602},{"krate":0,"index":1605},{"krate":0,"index":1608},{"krate":0,"index":1611},{"krate":0,"index":1614},{"krate":0,"index":1617},{"krate":0,"index":1620},{"krate":0,"index":1623},{"krate":0,"index":1626},{"krate":0,"index":1629},{"krate":0,"index":1632},{"krate":0,"index":1635}],"decl_id":null,"docs":" A trap code describing the reason for a trap.","sig":null,"attributes":[{"value":"/ A trap code describing the reason for a trap.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\trapcode.rs","byte_start":141744,"byte_end":141793,"line_start":11,"line_end":11,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\trapcode.rs","byte_start":141794,"byte_end":141797,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ All trap instructions have an explicit trap code.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\trapcode.rs","byte_start":141798,"byte_end":141851,"line_start":13,"line_end":13,"column_start":1,"column_end":54}},{"value":"repr(u32)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\trapcode.rs","byte_start":141934,"byte_end":141946,"line_start":15,"line_end":15,"column_start":1,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":651},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\trapcode.rs","byte_start":143912,"byte_end":143919,"line_start":82,"line_end":82,"column_start":12,"column_end":19},"name":"message","qualname":"<TrapCode>::message","value":"pub fn message(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Gets the message for this trap code\n","sig":null,"attributes":[{"value":"/ Gets the message for this trap code","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\trapcode.rs","byte_start":143861,"byte_end":143900,"line_start":81,"line_end":81,"column_start":5,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":678},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":165268,"byte_end":165278,"line_start":357,"line_end":357,"column_start":8,"column_end":18},"name":"init_traps","qualname":"::trap::traphandlers::init_traps","value":"pub fn init_traps()","parent":null,"children":[],"decl_id":null,"docs":" This function performs the low-overhead signal handler initialization that\n we want to do eagerly to ensure a more-deterministic global process state.","sig":null,"attributes":[{"value":"/ This function performs the low-overhead signal handler initialization that","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":164665,"byte_end":164743,"line_start":348,"line_end":348,"column_start":1,"column_end":79}},{"value":"/ we want to do eagerly to ensure a more-deterministic global process state.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":164744,"byte_end":164822,"line_start":349,"line_end":349,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":164823,"byte_end":164826,"line_start":350,"line_end":350,"column_start":1,"column_end":4}},{"value":"/ This is especially relevant for signal handlers since handler ordering","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":164827,"byte_end":164901,"line_start":351,"line_end":351,"column_start":1,"column_end":75}},{"value":"/ depends on installation order: the wasm signal handler must run *before*","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":164902,"byte_end":164978,"line_start":352,"line_end":352,"column_start":1,"column_end":77}},{"value":"/ the other crash handlers and since POSIX signal handlers work LIFO, this","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":164979,"byte_end":165055,"line_start":353,"line_end":353,"column_start":1,"column_end":77}},{"value":"/ function needs to be called at the end of the startup process, after other","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":165056,"byte_end":165134,"line_start":354,"line_end":354,"column_start":1,"column_end":79}},{"value":"/ handlers have been installed. This function can thus be called multiple","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":165135,"byte_end":165210,"line_start":355,"line_end":355,"column_start":1,"column_end":76}},{"value":"/ times, having no effect after the first call.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":165211,"byte_end":165260,"line_start":356,"line_end":356,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":681},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":165884,"byte_end":165899,"line_start":379,"line_end":379,"column_start":15,"column_end":30},"name":"raise_user_trap","qualname":"::trap::traphandlers::raise_user_trap","value":"pub unsafe fn raise_user_trap(Box<Error + Send + Sync>) -> !","parent":null,"children":[],"decl_id":null,"docs":" Raises a user-defined trap immediately.","sig":null,"attributes":[{"value":"/ Raises a user-defined trap immediately.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":165418,"byte_end":165461,"line_start":368,"line_end":368,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":165462,"byte_end":165465,"line_start":369,"line_end":369,"column_start":1,"column_end":4}},{"value":"/ This function performs as-if a wasm trap was just executed, only the trap","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":165466,"byte_end":165543,"line_start":370,"line_end":370,"column_start":1,"column_end":78}},{"value":"/ has a dynamic payload associated with it which is user-provided. This trap","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":165544,"byte_end":165622,"line_start":371,"line_end":371,"column_start":1,"column_end":79}},{"value":"/ payload is then returned from `wasmer_call` and `wasmer_call_trampoline`","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":165623,"byte_end":165699,"line_start":372,"line_end":372,"column_start":1,"column_end":77}},{"value":"/ below.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":165700,"byte_end":165710,"line_start":373,"line_end":373,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":165711,"byte_end":165714,"line_start":374,"line_end":374,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":165715,"byte_end":165727,"line_start":375,"line_end":375,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":165728,"byte_end":165731,"line_start":376,"line_end":376,"column_start":1,"column_end":4}},{"value":"/ Only safe to call when wasm code is on the stack, aka `wasmer_call` or","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":165732,"byte_end":165806,"line_start":377,"line_end":377,"column_start":1,"column_end":75}},{"value":"/ `wasmer_call_trampoline` must have been previously called.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":165807,"byte_end":165869,"line_start":378,"line_end":378,"column_start":1,"column_end":63}}]},{"kind":"Function","id":{"krate":0,"index":683},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":166419,"byte_end":166433,"line_start":393,"line_end":393,"column_start":15,"column_end":29},"name":"raise_lib_trap","qualname":"::trap::traphandlers::raise_lib_trap","value":"pub unsafe fn raise_lib_trap(Trap) -> !","parent":null,"children":[],"decl_id":null,"docs":" Raises a trap from inside library code immediately.","sig":null,"attributes":[{"value":"/ Raises a trap from inside library code immediately.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":166024,"byte_end":166079,"line_start":383,"line_end":383,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":166080,"byte_end":166083,"line_start":384,"line_end":384,"column_start":1,"column_end":4}},{"value":"/ This function performs as-if a wasm trap was just executed. This trap","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":166084,"byte_end":166157,"line_start":385,"line_end":385,"column_start":1,"column_end":74}},{"value":"/ payload is then returned from `wasmer_call` and `wasmer_call_trampoline`","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":166158,"byte_end":166234,"line_start":386,"line_end":386,"column_start":1,"column_end":77}},{"value":"/ below.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":166235,"byte_end":166245,"line_start":387,"line_end":387,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":166246,"byte_end":166249,"line_start":388,"line_end":388,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":166250,"byte_end":166262,"line_start":389,"line_end":389,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":166263,"byte_end":166266,"line_start":390,"line_end":390,"column_start":1,"column_end":4}},{"value":"/ Only safe to call when wasm code is on the stack, aka `wasmer_call` or","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":166267,"byte_end":166341,"line_start":391,"line_end":391,"column_start":1,"column_end":75}},{"value":"/ `wasmer_call_trampoline` must have been previously called.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":166342,"byte_end":166404,"line_start":392,"line_end":392,"column_start":1,"column_end":63}}]},{"kind":"Function","id":{"krate":0,"index":685},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":166793,"byte_end":166805,"line_start":404,"line_end":404,"column_start":15,"column_end":27},"name":"resume_panic","qualname":"::trap::traphandlers::resume_panic","value":"pub unsafe fn resume_panic(Box<Any + Send>) -> !","parent":null,"children":[],"decl_id":null,"docs":" Carries a Rust panic across wasm code and resumes the panic on the other\n side.","sig":null,"attributes":[{"value":"/ Carries a Rust panic across wasm code and resumes the panic on the other","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":166533,"byte_end":166609,"line_start":397,"line_end":397,"column_start":1,"column_end":77}},{"value":"/ side.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":166610,"byte_end":166619,"line_start":398,"line_end":398,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":166620,"byte_end":166623,"line_start":399,"line_end":399,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":166624,"byte_end":166636,"line_start":400,"line_end":400,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":166637,"byte_end":166640,"line_start":401,"line_end":401,"column_start":1,"column_end":4}},{"value":"/ Only safe to call when wasm code is on the stack, aka `wasmer_call` or","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":166641,"byte_end":166715,"line_start":402,"line_end":402,"column_start":1,"column_end":75}},{"value":"/ `wasmer_call_trampoline` must have been previously called.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":166716,"byte_end":166778,"line_start":403,"line_end":403,"column_start":1,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1735},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":167542,"byte_end":167546,"line_start":428,"line_end":428,"column_start":5,"column_end":9},"name":"User","qualname":"::trap::traphandlers::Trap::User","value":"Trap::User(Box<Error + Send + Sync>)","parent":{"krate":0,"index":1734},"children":[],"decl_id":null,"docs":" A user-raised trap through `raise_user_trap`.\n","sig":null,"attributes":[{"value":"/ A user-raised trap through `raise_user_trap`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":167488,"byte_end":167537,"line_start":427,"line_end":427,"column_start":5,"column_end":54}}]},{"kind":"StructVariant","id":{"krate":0,"index":1738},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":167643,"byte_end":167647,"line_start":431,"line_end":431,"column_start":5,"column_end":9},"name":"Wasm","qualname":"::trap::traphandlers::Trap::Wasm","value":"Trap::Wasm { pc, backtrace, signal_trap }","parent":{"krate":0,"index":1734},"children":[],"decl_id":null,"docs":" A trap raised from machine code generated from Wasm\n","sig":null,"attributes":[{"value":"/ A trap raised from machine code generated from Wasm","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":167583,"byte_end":167638,"line_start":430,"line_end":430,"column_start":5,"column_end":60}}]},{"kind":"StructVariant","id":{"krate":0,"index":1742},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":168017,"byte_end":168024,"line_start":441,"line_end":441,"column_start":5,"column_end":12},"name":"Runtime","qualname":"::trap::traphandlers::Trap::Runtime","value":"Trap::Runtime { trap_code, backtrace }","parent":{"krate":0,"index":1734},"children":[],"decl_id":null,"docs":" A trap raised manually from the Wasmer VM\n","sig":null,"attributes":[{"value":"/ A trap raised manually from the Wasmer VM","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":167967,"byte_end":168012,"line_start":440,"line_end":440,"column_start":5,"column_end":50}}]},{"kind":"Enum","id":{"krate":0,"index":1734},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":167477,"byte_end":167481,"line_start":426,"line_end":426,"column_start":10,"column_end":14},"name":"Trap","qualname":"::trap::traphandlers::Trap","value":"pub enum Trap {\n\n    /// A user-raised trap through `raise_user_trap`.\n    User(Box<Error + Send + Sync>),\n\n    /// A trap raised from machine code generated from Wasm\n    Wasm {\n        /// The program counter in generated code where this trap happened.\n        pc: usize,\n        /// Native stack backtrace at the time the trap occurred\n        backtrace: Backtrace,\n        /// Optional trapcode associated to the signal that caused the trap\n        signal_trap: Option<TrapCode>,\n    },\n\n    /// A trap raised manually from the Wasmer VM\n    Runtime {\n        /// Code of the trap.\n        trap_code: TrapCode,\n        /// Native stack backtrace at the time the trap occurred\n        backtrace: Backtrace,\n    },\n}","parent":null,"children":[{"krate":0,"index":1735},{"krate":0,"index":1738},{"krate":0,"index":1742}],"decl_id":null,"docs":" Stores trace message with backtrace.\n","sig":null,"attributes":[{"value":"/ Stores trace message with backtrace.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":167410,"byte_end":167450,"line_start":424,"line_end":424,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":691},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":168498,"byte_end":168511,"line_start":454,"line_end":454,"column_start":12,"column_end":25},"name":"new_from_wasm","qualname":"<Trap>::new_from_wasm","value":"pub fn new_from_wasm(usize, Backtrace, Option<TrapCode>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new VM `Trap` with the given the program counter, backtrace and an optional\n trap code associated with the signal received from the kernel.\n Wasm traps are Traps that are triggered by the chip when running generated\n code for a Wasm function.\n","sig":null,"attributes":[{"value":"/ Construct a new VM `Trap` with the given the program counter, backtrace and an optional","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":168207,"byte_end":168298,"line_start":450,"line_end":450,"column_start":5,"column_end":96}},{"value":"/ trap code associated with the signal received from the kernel.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":168303,"byte_end":168369,"line_start":451,"line_end":451,"column_start":5,"column_end":71}},{"value":"/ Wasm traps are Traps that are triggered by the chip when running generated","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":168374,"byte_end":168452,"line_start":452,"line_end":452,"column_start":5,"column_end":83}},{"value":"/ code for a Wasm function.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":168457,"byte_end":168486,"line_start":453,"line_end":453,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":692},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":168900,"byte_end":168916,"line_start":466,"line_end":466,"column_start":12,"column_end":28},"name":"new_from_runtime","qualname":"<Trap>::new_from_runtime","value":"pub fn new_from_runtime(TrapCode) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new runtime `Trap` with the given trap code.\n Runtime traps are Traps that are triggered manually from the VM.","sig":null,"attributes":[{"value":"/ Construct a new runtime `Trap` with the given trap code.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":168692,"byte_end":168752,"line_start":462,"line_end":462,"column_start":5,"column_end":65}},{"value":"/ Runtime traps are Traps that are triggered manually from the VM.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":168757,"byte_end":168825,"line_start":463,"line_end":463,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":168830,"byte_end":168833,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ Internally saves a backtrace when constructed.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":168838,"byte_end":168888,"line_start":465,"line_end":465,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":693},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":169214,"byte_end":169227,"line_start":477,"line_end":477,"column_start":12,"column_end":25},"name":"new_from_user","qualname":"<Trap>::new_from_user","value":"pub fn new_from_user(Box<Error + Send + Sync>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new Out of Memory (OOM) `Trap`.","sig":null,"attributes":[{"value":"/ Construct a new Out of Memory (OOM) `Trap`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":169092,"byte_end":169139,"line_start":474,"line_end":474,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":169144,"byte_end":169147,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ Internally saves a backtrace when constructed.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":169152,"byte_end":169202,"line_start":476,"line_end":476,"column_start":5,"column_end":55}}]},{"kind":"Function","id":{"krate":0,"index":694},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":169985,"byte_end":170007,"line_start":497,"line_end":497,"column_start":15,"column_end":37},"name":"wasmer_call_trampoline","qualname":"::trap::traphandlers::wasmer_call_trampoline","value":"pub unsafe fn wasmer_call_trampoline(VMFunctionEnvironment, VMTrampoline,\n                                     *const VMFunctionBody, *mut u8)\n-> Result<(), Trap>","parent":null,"children":[],"decl_id":null,"docs":" Call the wasm function pointed to by `callee`.","sig":null,"attributes":[{"value":"/ Call the wasm function pointed to by `callee`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":169310,"byte_end":169360,"line_start":482,"line_end":482,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":169361,"byte_end":169364,"line_start":483,"line_end":483,"column_start":1,"column_end":4}},{"value":"/ * `vmctx` - the callee vmctx argument","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":169365,"byte_end":169406,"line_start":484,"line_end":484,"column_start":1,"column_end":42}},{"value":"/ * `caller_vmctx` - the caller vmctx argument","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":169407,"byte_end":169455,"line_start":485,"line_end":485,"column_start":1,"column_end":49}},{"value":"/ * `trampoline` - the jit-generated trampoline whose ABI takes 4 values, the","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":169456,"byte_end":169535,"line_start":486,"line_end":486,"column_start":1,"column_end":80}},{"value":"/   callee vmctx, the caller vmctx, the `callee` argument below, and then the","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":169536,"byte_end":169615,"line_start":487,"line_end":487,"column_start":1,"column_end":80}},{"value":"/   `values_vec` argument.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":169616,"byte_end":169644,"line_start":488,"line_end":488,"column_start":1,"column_end":29}},{"value":"/ * `callee` - the third argument to the `trampoline` function","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":169645,"byte_end":169709,"line_start":489,"line_end":489,"column_start":1,"column_end":65}},{"value":"/ * `values_vec` - points to a buffer which holds the incoming arguments, and to","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":169710,"byte_end":169792,"line_start":490,"line_end":490,"column_start":1,"column_end":83}},{"value":"/   which the outgoing return values will be written.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":169793,"byte_end":169848,"line_start":491,"line_end":491,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":169849,"byte_end":169852,"line_start":492,"line_end":492,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":169853,"byte_end":169865,"line_start":493,"line_end":493,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":169866,"byte_end":169869,"line_start":494,"line_end":494,"column_start":1,"column_end":4}},{"value":"/ Wildly unsafe because it calls raw function pointers and reads/writes raw","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":169870,"byte_end":169947,"line_start":495,"line_end":495,"column_start":1,"column_end":78}},{"value":"/ function pointers.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":169948,"byte_end":169970,"line_start":496,"line_end":496,"column_start":1,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":696},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":170564,"byte_end":170575,"line_start":516,"line_end":516,"column_start":15,"column_end":26},"name":"catch_traps","qualname":"::trap::traphandlers::catch_traps","value":"pub unsafe fn catch_traps<F>(VMFunctionEnvironment, F) -> Result<(), Trap>\nwhere F: FnMut() -> ()","parent":null,"children":[],"decl_id":null,"docs":" Catches any wasm traps that happen within the execution of `closure`,\n returning them as a `Result`.","sig":null,"attributes":[{"value":"/ Catches any wasm traps that happen within the execution of `closure`,","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":170355,"byte_end":170428,"line_start":510,"line_end":510,"column_start":1,"column_end":74}},{"value":"/ returning them as a `Result`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":170429,"byte_end":170462,"line_start":511,"line_end":511,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":170463,"byte_end":170466,"line_start":512,"line_end":512,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":170467,"byte_end":170479,"line_start":513,"line_end":513,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":170480,"byte_end":170483,"line_start":514,"line_end":514,"column_start":1,"column_end":4}},{"value":"/ Highly unsafe since `closure` won't have any destructors run.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":170484,"byte_end":170549,"line_start":515,"line_end":515,"column_start":1,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":701},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":171439,"byte_end":171462,"line_start":549,"line_end":549,"column_start":15,"column_end":38},"name":"catch_traps_with_result","qualname":"::trap::traphandlers::catch_traps_with_result","value":"pub unsafe fn catch_traps_with_result<F, R>(VMFunctionEnvironment, F)\n-> Result<R, Trap> where F: FnMut() -> R","parent":null,"children":[],"decl_id":null,"docs":" Catches any wasm traps that happen within the execution of `closure`,\n returning them as a `Result`, with the closure contents.","sig":null,"attributes":[{"value":"/ Catches any wasm traps that happen within the execution of `closure`,","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":171118,"byte_end":171191,"line_start":540,"line_end":540,"column_start":1,"column_end":74}},{"value":"/ returning them as a `Result`, with the closure contents.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":171192,"byte_end":171252,"line_start":541,"line_end":541,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":171253,"byte_end":171256,"line_start":542,"line_end":542,"column_start":1,"column_end":4}},{"value":"/ The main difference from this method and `catch_traps`, is that is able","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":171257,"byte_end":171332,"line_start":543,"line_end":543,"column_start":1,"column_end":76}},{"value":"/ to return the results from the closure.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":171333,"byte_end":171376,"line_start":544,"line_end":544,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":171377,"byte_end":171380,"line_start":545,"line_end":545,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":171381,"byte_end":171393,"line_start":546,"line_end":546,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":171394,"byte_end":171397,"line_start":547,"line_end":547,"column_start":1,"column_end":4}},{"value":"/ Check [`catch_traps`].","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":171398,"byte_end":171424,"line_start":548,"line_end":548,"column_start":1,"column_end":27}}]},{"kind":"Union","id":{"krate":0,"index":1751},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":183420,"byte_end":183441,"line_start":24,"line_end":24,"column_start":11,"column_end":32},"name":"VMFunctionEnvironment","qualname":"::vmcontext::VMFunctionEnvironment","value":"VMFunctionEnvironment { vmctx, host_env }","parent":null,"children":[{"krate":0,"index":1752},{"krate":0,"index":1753}],"decl_id":null,"docs":" Union representing the first parameter passed when calling a function.","sig":null,"attributes":[{"value":"/ Union representing the first parameter passed when calling a function.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":183149,"byte_end":183223,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":183224,"byte_end":183227,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ It may either be a pointer to the [`VMContext`] if it's a Wasm function","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":183228,"byte_end":183303,"line_start":21,"line_end":21,"column_start":1,"column_end":76}},{"value":"/ or a pointer to arbitrary data controlled by the host if it's a host function.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":183304,"byte_end":183386,"line_start":22,"line_end":22,"column_start":1,"column_end":83}}]},{"kind":"Field","id":{"krate":0,"index":1752},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":183508,"byte_end":183513,"line_start":26,"line_end":26,"column_start":9,"column_end":14},"name":"vmctx","qualname":"::vmcontext::VMFunctionEnvironment::vmctx","value":"*mut vmcontext::VMContext","parent":{"krate":0,"index":1751},"children":[],"decl_id":null,"docs":" Wasm functions take a pointer to [`VMContext`].\n","sig":null,"attributes":[{"value":"/ Wasm functions take a pointer to [`VMContext`].","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":183448,"byte_end":183499,"line_start":25,"line_end":25,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":1753},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":183592,"byte_end":183600,"line_start":28,"line_end":28,"column_start":9,"column_end":17},"name":"host_env","qualname":"::vmcontext::VMFunctionEnvironment::host_env","value":"*mut std::ffi::c_void","parent":{"krate":0,"index":1751},"children":[],"decl_id":null,"docs":" Host functions can have custom environments.\n","sig":null,"attributes":[{"value":"/ Host functions can have custom environments.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":183535,"byte_end":183583,"line_start":27,"line_end":27,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":792},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":183725,"byte_end":183732,"line_start":33,"line_end":33,"column_start":12,"column_end":19},"name":"is_null","qualname":"<VMFunctionEnvironment>::is_null","value":"pub fn is_null(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether the pointer stored is null or not.\n","sig":null,"attributes":[{"value":"/ Check whether the pointer stored is null or not.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":183661,"byte_end":183713,"line_start":32,"line_end":32,"column_start":5,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":1757},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":184311,"byte_end":184327,"line_start":55,"line_end":55,"column_start":12,"column_end":28},"name":"VMFunctionImport","qualname":"::vmcontext::VMFunctionImport","value":"VMFunctionImport { body, environment }","parent":null,"children":[{"krate":0,"index":1758},{"krate":0,"index":1759}],"decl_id":null,"docs":" An imported function.\n","sig":null,"attributes":[{"value":"/ An imported function.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":184233,"byte_end":184258,"line_start":52,"line_end":52,"column_start":1,"column_end":26}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":184289,"byte_end":184299,"line_start":54,"line_end":54,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":1758},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":184387,"byte_end":184391,"line_start":57,"line_end":57,"column_start":9,"column_end":13},"name":"body","qualname":"::vmcontext::VMFunctionImport::body","value":"*const vmcontext::VMFunctionBody","parent":{"krate":0,"index":1757},"children":[],"decl_id":null,"docs":" A pointer to the imported function body.\n","sig":null,"attributes":[{"value":"/ A pointer to the imported function body.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":184334,"byte_end":184378,"line_start":56,"line_end":56,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":1759},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":184503,"byte_end":184514,"line_start":60,"line_end":60,"column_start":9,"column_end":20},"name":"environment","qualname":"::vmcontext::VMFunctionImport::environment","value":"vmcontext::VMFunctionEnvironment","parent":{"krate":0,"index":1757},"children":[],"decl_id":null,"docs":" A pointer to the `VMContext` that owns the function or host env data.\n","sig":null,"attributes":[{"value":"/ A pointer to the `VMContext` that owns the function or host env data.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":184421,"byte_end":184494,"line_start":59,"line_end":59,"column_start":5,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":797},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":185707,"byte_end":185731,"line_start":98,"line_end":98,"column_start":12,"column_end":36},"name":"VMDynamicFunctionContext","qualname":"::vmcontext::VMDynamicFunctionContext","value":"VMDynamicFunctionContext { address, ctx }","parent":null,"children":[{"krate":0,"index":799},{"krate":0,"index":800}],"decl_id":null,"docs":" The `VMDynamicFunctionContext` is the context that dynamic\n functions will receive when called (rather than `vmctx`).\n A dynamic function is a function for which we don't know the signature\n until runtime.","sig":null,"attributes":[{"value":"/ The `VMDynamicFunctionContext` is the context that dynamic","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":185311,"byte_end":185373,"line_start":89,"line_end":89,"column_start":1,"column_end":63}},{"value":"/ functions will receive when called (rather than `vmctx`).","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":185374,"byte_end":185435,"line_start":90,"line_end":90,"column_start":1,"column_end":62}},{"value":"/ A dynamic function is a function for which we don't know the signature","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":185436,"byte_end":185510,"line_start":91,"line_end":91,"column_start":1,"column_end":75}},{"value":"/ until runtime.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":185511,"byte_end":185529,"line_start":92,"line_end":92,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":185530,"byte_end":185533,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ As such, we need to expose the dynamic function `context`","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":185534,"byte_end":185595,"line_start":94,"line_end":94,"column_start":1,"column_end":62}},{"value":"/ containing the relevant context for running the function indicated","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":185596,"byte_end":185666,"line_start":95,"line_end":95,"column_start":1,"column_end":71}},{"value":"/ in `address`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":185667,"byte_end":185684,"line_start":96,"line_end":96,"column_start":1,"column_end":18}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":185685,"byte_end":185695,"line_start":97,"line_end":97,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":799},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":185922,"byte_end":185929,"line_start":103,"line_end":103,"column_start":9,"column_end":16},"name":"address","qualname":"::vmcontext::VMDynamicFunctionContext::address","value":"*const vmcontext::VMFunctionBody","parent":{"krate":0,"index":797},"children":[],"decl_id":null,"docs":" The address of the inner dynamic function.","sig":null,"attributes":[{"value":"/ The address of the inner dynamic function.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":185762,"byte_end":185808,"line_start":99,"line_end":99,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":185813,"byte_end":185816,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ Note: The function must be on the form of","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":185821,"byte_end":185866,"line_start":101,"line_end":101,"column_start":5,"column_end":50}},{"value":"/ `(*mut T, SignatureIndex, *mut i128)`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":185871,"byte_end":185913,"line_start":102,"line_end":102,"column_start":5,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":800},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":186029,"byte_end":186032,"line_start":106,"line_end":106,"column_start":9,"column_end":12},"name":"ctx","qualname":"::vmcontext::VMDynamicFunctionContext::ctx","value":"T","parent":{"krate":0,"index":797},"children":[],"decl_id":null,"docs":" The context that the inner dynamic function will receive.\n","sig":null,"attributes":[{"value":"/ The context that the inner dynamic function will receive.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":185959,"byte_end":186020,"line_start":105,"line_end":105,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":808},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":187840,"byte_end":187854,"line_start":156,"line_end":156,"column_start":12,"column_end":26},"name":"VMFunctionBody","qualname":"::vmcontext::VMFunctionBody","value":"","parent":null,"children":[],"decl_id":null,"docs":" A placeholder byte-sized type which is just used to provide some amount of type\n safety when dealing with pointers to JIT-compiled function bodies. Note that it's\n deliberately not Copy, as we shouldn't be carelessly copying function body bytes\n around.\n","sig":null,"attributes":[{"value":"/ A placeholder byte-sized type which is just used to provide some amount of type","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":187551,"byte_end":187634,"line_start":151,"line_end":151,"column_start":1,"column_end":84}},{"value":"/ safety when dealing with pointers to JIT-compiled function bodies. Note that it's","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":187635,"byte_end":187720,"line_start":152,"line_end":152,"column_start":1,"column_end":86}},{"value":"/ deliberately not Copy, as we shouldn't be carelessly copying function body bytes","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":187721,"byte_end":187805,"line_start":153,"line_end":153,"column_start":1,"column_end":85}},{"value":"/ around.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":187806,"byte_end":187817,"line_start":154,"line_end":154,"column_start":1,"column_end":12}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":187818,"byte_end":187828,"line_start":155,"line_end":155,"column_start":1,"column_end":11}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1766},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":188487,"byte_end":188493,"line_start":179,"line_end":179,"column_start":5,"column_end":11},"name":"Static","qualname":"::vmcontext::VMFunctionKind::Static","value":"VMFunctionKind::Static","parent":{"krate":0,"index":1765},"children":[],"decl_id":null,"docs":" A static function has the native signature:\n `extern \"C\" (vmctx, arg1, arg2...) -> (result1, result2, ...)`.","sig":null,"attributes":[{"value":"/ A static function has the native signature:","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":188227,"byte_end":188274,"line_start":173,"line_end":173,"column_start":5,"column_end":52}},{"value":"/ `extern \"C\" (vmctx, arg1, arg2...) -> (result1, result2, ...)`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":188279,"byte_end":188346,"line_start":174,"line_end":174,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":188351,"byte_end":188354,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ This is the default for functions that are defined:","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":188359,"byte_end":188414,"line_start":176,"line_end":176,"column_start":5,"column_end":60}},{"value":"/ 1. In the Host, natively","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":188419,"byte_end":188447,"line_start":177,"line_end":177,"column_start":5,"column_end":33}},{"value":"/ 2. In the WebAssembly file","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":188452,"byte_end":188482,"line_start":178,"line_end":178,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1768},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":188709,"byte_end":188716,"line_start":186,"line_end":186,"column_start":5,"column_end":12},"name":"Dynamic","qualname":"::vmcontext::VMFunctionKind::Dynamic","value":"VMFunctionKind::Dynamic","parent":{"krate":0,"index":1765},"children":[],"decl_id":null,"docs":" A dynamic function has the native signature:\n `extern \"C\" (ctx, &[Value]) -> Vec<Value>`.","sig":null,"attributes":[{"value":"/ A dynamic function has the native signature:","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":188500,"byte_end":188548,"line_start":181,"line_end":181,"column_start":5,"column_end":53}},{"value":"/ `extern \"C\" (ctx, &[Value]) -> Vec<Value>`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":188553,"byte_end":188600,"line_start":182,"line_end":182,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":188605,"byte_end":188608,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ This is the default for functions that are defined:","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":188613,"byte_end":188668,"line_start":184,"line_end":184,"column_start":5,"column_end":60}},{"value":"/ 1. In the Host, dynamically","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":188673,"byte_end":188704,"line_start":185,"line_end":185,"column_start":5,"column_end":36}}]},{"kind":"Enum","id":{"krate":0,"index":1765},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":188206,"byte_end":188220,"line_start":172,"line_end":172,"column_start":10,"column_end":24},"name":"VMFunctionKind","qualname":"::vmcontext::VMFunctionKind","value":"pub enum VMFunctionKind {\n\n    /// A static function has the native signature:\n    /// `extern \"C\" (vmctx, arg1, arg2...) -> (result1, result2, ...)`.\n    ///\n    /// This is the default for functions that are defined:\n    /// 1. In the Host, natively\n    /// 2. In the WebAssembly file\n    Static,\n\n    /// A dynamic function has the native signature:\n    /// `extern \"C\" (ctx, &[Value]) -> Vec<Value>`.\n    ///\n    /// This is the default for functions that are defined:\n    /// 1. In the Host, dynamically\n    Dynamic,\n}","parent":null,"children":[{"krate":0,"index":1766},{"krate":0,"index":1768}],"decl_id":null,"docs":" A function kind is a calling convention into and out of wasm code.\n","sig":null,"attributes":[{"value":"/ A function kind is a calling convention into and out of wasm code.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":188074,"byte_end":188144,"line_start":169,"line_end":169,"column_start":1,"column_end":71}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":188186,"byte_end":188196,"line_start":171,"line_end":171,"column_start":1,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":1778},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":188879,"byte_end":188892,"line_start":193,"line_end":193,"column_start":12,"column_end":25},"name":"VMTableImport","qualname":"::vmcontext::VMTableImport","value":"VMTableImport { definition, from }","parent":null,"children":[{"krate":0,"index":1779},{"krate":0,"index":1780}],"decl_id":null,"docs":" The fields compiled code needs to access to utilize a WebAssembly table\n imported from another instance.\n","sig":null,"attributes":[{"value":"/ The fields compiled code needs to access to utilize a WebAssembly table","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":188721,"byte_end":188796,"line_start":189,"line_end":189,"column_start":1,"column_end":76}},{"value":"/ imported from another instance.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":188797,"byte_end":188832,"line_start":190,"line_end":190,"column_start":1,"column_end":36}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":188857,"byte_end":188867,"line_start":192,"line_end":192,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":1779},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":188956,"byte_end":188966,"line_start":195,"line_end":195,"column_start":9,"column_end":19},"name":"definition","qualname":"::vmcontext::VMTableImport::definition","value":"std::ptr::NonNull<vmcontext::VMTableDefinition>","parent":{"krate":0,"index":1778},"children":[],"decl_id":null,"docs":" A pointer to the imported table description.\n","sig":null,"attributes":[{"value":"/ A pointer to the imported table description.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":188899,"byte_end":188947,"line_start":194,"line_end":194,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":1780},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":189071,"byte_end":189075,"line_start":198,"line_end":198,"column_start":9,"column_end":13},"name":"from","qualname":"::vmcontext::VMTableImport::from","value":"std::sync::Arc<(dyn table::Table + 'static)>","parent":{"krate":0,"index":1778},"children":[],"decl_id":null,"docs":" A pointer to the `Table` that owns the table description.\n","sig":null,"attributes":[{"value":"/ A pointer to the `Table` that owns the table description.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":189001,"byte_end":189062,"line_start":197,"line_end":197,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":1785},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":190008,"byte_end":190022,"line_start":231,"line_end":231,"column_start":12,"column_end":26},"name":"VMMemoryImport","qualname":"::vmcontext::VMMemoryImport","value":"VMMemoryImport { definition, from }","parent":null,"children":[{"krate":0,"index":1786},{"krate":0,"index":1787}],"decl_id":null,"docs":" The fields compiled code needs to access to utilize a WebAssembly linear\n memory imported from another instance.\n","sig":null,"attributes":[{"value":"/ The fields compiled code needs to access to utilize a WebAssembly linear","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":189842,"byte_end":189918,"line_start":227,"line_end":227,"column_start":1,"column_end":77}},{"value":"/ memory imported from another instance.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":189919,"byte_end":189961,"line_start":228,"line_end":228,"column_start":1,"column_end":43}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":189986,"byte_end":189996,"line_start":230,"line_end":230,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":1786},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":190087,"byte_end":190097,"line_start":233,"line_end":233,"column_start":9,"column_end":19},"name":"definition","qualname":"::vmcontext::VMMemoryImport::definition","value":"std::ptr::NonNull<vmcontext::VMMemoryDefinition>","parent":{"krate":0,"index":1785},"children":[],"decl_id":null,"docs":" A pointer to the imported memory description.\n","sig":null,"attributes":[{"value":"/ A pointer to the imported memory description.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":190029,"byte_end":190078,"line_start":232,"line_end":232,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1787},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":190205,"byte_end":190209,"line_start":236,"line_end":236,"column_start":9,"column_end":13},"name":"from","qualname":"::vmcontext::VMMemoryImport::from","value":"std::sync::Arc<(dyn memory::Memory + 'static)>","parent":{"krate":0,"index":1785},"children":[],"decl_id":null,"docs":" A pointer to the `Memory` that owns the memory description.\n","sig":null,"attributes":[{"value":"/ A pointer to the `Memory` that owns the memory description.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":190133,"byte_end":190196,"line_start":235,"line_end":235,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":1792},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":191154,"byte_end":191168,"line_start":269,"line_end":269,"column_start":12,"column_end":26},"name":"VMGlobalImport","qualname":"::vmcontext::VMGlobalImport","value":"VMGlobalImport { definition, from }","parent":null,"children":[{"krate":0,"index":1793},{"krate":0,"index":1794}],"decl_id":null,"docs":" The fields compiled code needs to access to utilize a WebAssembly global\n variable imported from another instance.\n","sig":null,"attributes":[{"value":"/ The fields compiled code needs to access to utilize a WebAssembly global","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":190986,"byte_end":191062,"line_start":265,"line_end":265,"column_start":1,"column_end":77}},{"value":"/ variable imported from another instance.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":191063,"byte_end":191107,"line_start":266,"line_end":266,"column_start":1,"column_end":45}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":191132,"byte_end":191142,"line_start":268,"line_end":268,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":1793},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":191242,"byte_end":191252,"line_start":271,"line_end":271,"column_start":9,"column_end":19},"name":"definition","qualname":"::vmcontext::VMGlobalImport::definition","value":"std::ptr::NonNull<vmcontext::VMGlobalDefinition>","parent":{"krate":0,"index":1792},"children":[],"decl_id":null,"docs":" A pointer to the imported global variable description.\n","sig":null,"attributes":[{"value":"/ A pointer to the imported global variable description.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":191175,"byte_end":191233,"line_start":270,"line_end":270,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":1794},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":191360,"byte_end":191364,"line_start":274,"line_end":274,"column_start":9,"column_end":13},"name":"from","qualname":"::vmcontext::VMGlobalImport::from","value":"std::sync::Arc<global::Global>","parent":{"krate":0,"index":1792},"children":[],"decl_id":null,"docs":" A pointer to the `Global` that owns the global description.\n","sig":null,"attributes":[{"value":"/ A pointer to the `Global` that owns the global description.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":191288,"byte_end":191351,"line_start":273,"line_end":273,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":1799},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":192985,"byte_end":193003,"line_start":320,"line_end":320,"column_start":12,"column_end":30},"name":"VMMemoryDefinition","qualname":"::vmcontext::VMMemoryDefinition","value":"VMMemoryDefinition { base, current_length }","parent":null,"children":[{"krate":0,"index":1800},{"krate":0,"index":1801}],"decl_id":null,"docs":" The fields compiled code needs to access to utilize a WebAssembly linear\n memory defined within the instance, namely the start address and the\n size in bytes.\n","sig":null,"attributes":[{"value":"/ The fields compiled code needs to access to utilize a WebAssembly linear","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":192764,"byte_end":192840,"line_start":315,"line_end":315,"column_start":1,"column_end":77}},{"value":"/ memory defined within the instance, namely the start address and the","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":192841,"byte_end":192913,"line_start":316,"line_end":316,"column_start":1,"column_end":73}},{"value":"/ size in bytes.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":192914,"byte_end":192932,"line_start":317,"line_end":317,"column_start":1,"column_end":19}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":192963,"byte_end":192973,"line_start":319,"line_end":319,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":1800},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":193089,"byte_end":193093,"line_start":322,"line_end":322,"column_start":9,"column_end":13},"name":"base","qualname":"::vmcontext::VMMemoryDefinition::base","value":"*mut u8","parent":{"krate":0,"index":1799},"children":[],"decl_id":null,"docs":" The start address which is always valid, even if the memory grows.\n","sig":null,"attributes":[{"value":"/ The start address which is always valid, even if the memory grows.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":193010,"byte_end":193080,"line_start":321,"line_end":321,"column_start":5,"column_end":75}}]},{"kind":"Field","id":{"krate":0,"index":1801},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":193178,"byte_end":193192,"line_start":325,"line_end":325,"column_start":9,"column_end":23},"name":"current_length","qualname":"::vmcontext::VMMemoryDefinition::current_length","value":"u32","parent":{"krate":0,"index":1799},"children":[],"decl_id":null,"docs":" The current logical size of this linear memory in bytes.\n","sig":null,"attributes":[{"value":"/ The current logical size of this linear memory in bytes.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":193109,"byte_end":193169,"line_start":324,"line_end":324,"column_start":5,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":1807},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":197128,"byte_end":197145,"line_start":440,"line_end":440,"column_start":12,"column_end":29},"name":"VMTableDefinition","qualname":"::vmcontext::VMTableDefinition","value":"VMTableDefinition { base, current_elements }","parent":null,"children":[{"krate":0,"index":1808},{"krate":0,"index":1809}],"decl_id":null,"docs":" The fields compiled code needs to access to utilize a WebAssembly table\n defined within the instance.\n","sig":null,"attributes":[{"value":"/ The fields compiled code needs to access to utilize a WebAssembly table","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":196967,"byte_end":197042,"line_start":436,"line_end":436,"column_start":1,"column_end":76}},{"value":"/ defined within the instance.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":197043,"byte_end":197075,"line_start":437,"line_end":437,"column_start":1,"column_end":33}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":197106,"byte_end":197116,"line_start":439,"line_end":439,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":1808},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":197191,"byte_end":197195,"line_start":442,"line_end":442,"column_start":9,"column_end":13},"name":"base","qualname":"::vmcontext::VMTableDefinition::base","value":"*mut u8","parent":{"krate":0,"index":1807},"children":[],"decl_id":null,"docs":" Pointer to the table data.\n","sig":null,"attributes":[{"value":"/ Pointer to the table data.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":197152,"byte_end":197182,"line_start":441,"line_end":441,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":1809},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":197268,"byte_end":197284,"line_start":445,"line_end":445,"column_start":9,"column_end":25},"name":"current_elements","qualname":"::vmcontext::VMTableDefinition::current_elements","value":"u32","parent":{"krate":0,"index":1807},"children":[],"decl_id":null,"docs":" The current number of elements in the table.\n","sig":null,"attributes":[{"value":"/ The current number of elements in the table.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":197211,"byte_end":197259,"line_start":444,"line_end":444,"column_start":5,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":1828},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":199069,"byte_end":199087,"line_start":508,"line_end":508,"column_start":12,"column_end":30},"name":"VMGlobalDefinition","qualname":"::vmcontext::VMGlobalDefinition","value":"VMGlobalDefinition {  }","parent":null,"children":[{"krate":0,"index":1829}],"decl_id":null,"docs":" The storage for a WebAssembly global defined within the instance.","sig":null,"attributes":[{"value":"/ The storage for a WebAssembly global defined within the instance.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":198845,"byte_end":198914,"line_start":502,"line_end":502,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":198915,"byte_end":198918,"line_start":503,"line_end":503,"column_start":1,"column_end":4}},{"value":"/ TODO: Pack the globals more densely, rather than using the same size","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":198919,"byte_end":198991,"line_start":504,"line_end":504,"column_start":1,"column_end":73}},{"value":"/ for every type.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":198992,"byte_end":199011,"line_start":505,"line_end":505,"column_start":1,"column_end":20}},{"value":"repr(C, align(16))","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":199036,"byte_end":199057,"line_start":507,"line_end":507,"column_start":1,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":824},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":200475,"byte_end":200478,"line_start":549,"line_end":549,"column_start":12,"column_end":15},"name":"new","qualname":"<VMGlobalDefinition>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a `VMGlobalDefinition`.\n","sig":null,"attributes":[{"value":"/ Construct a `VMGlobalDefinition`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":200426,"byte_end":200463,"line_start":548,"line_end":548,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":826},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":200730,"byte_end":200736,"line_start":558,"line_end":558,"column_start":12,"column_end":18},"name":"to_i32","qualname":"<VMGlobalDefinition>::to_i32","value":"pub fn to_i32(&Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Return the value as an i32.","sig":null,"attributes":[{"value":"/ Return the value as an i32.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":200594,"byte_end":200625,"line_start":555,"line_end":555,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":200630,"byte_end":200633,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ If this is not an I32 typed global it is unspecified what value is returned.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":200638,"byte_end":200718,"line_start":557,"line_end":557,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":827},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":201193,"byte_end":201203,"line_start":570,"line_end":570,"column_start":19,"column_end":29},"name":"as_i32_mut","qualname":"<VMGlobalDefinition>::as_i32_mut","value":"pub unsafe fn as_i32_mut(&mut Self) -> &mut i32","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to the value as an i32.","sig":null,"attributes":[{"value":"/ Return a mutable reference to the value as an i32.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":200803,"byte_end":200857,"line_start":562,"line_end":562,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":200862,"byte_end":200865,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":200870,"byte_end":200882,"line_start":564,"line_end":564,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":200887,"byte_end":200890,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/ It is the callers responsibility to make sure the global has I32 type.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":200895,"byte_end":200969,"line_start":566,"line_end":566,"column_start":5,"column_end":79}},{"value":"/ Until the returned borrow is dropped, reads and writes of this global","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":200974,"byte_end":201047,"line_start":567,"line_end":567,"column_start":5,"column_end":78}},{"value":"/ must be done exclusively through this borrow. That includes reads and","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":201052,"byte_end":201125,"line_start":568,"line_end":568,"column_start":5,"column_end":78}},{"value":"/ writes of globals inside wasm functions.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":201130,"byte_end":201174,"line_start":569,"line_end":569,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":828},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":201424,"byte_end":201430,"line_start":577,"line_end":577,"column_start":12,"column_end":18},"name":"to_u32","qualname":"<VMGlobalDefinition>::to_u32","value":"pub fn to_u32(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the value as an u32.","sig":null,"attributes":[{"value":"/ Return a reference to the value as an u32.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":201273,"byte_end":201319,"line_start":574,"line_end":574,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":201324,"byte_end":201327,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ If this is not an I32 typed global it is unspecified what value is returned.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":201332,"byte_end":201412,"line_start":576,"line_end":576,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":829},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":201887,"byte_end":201897,"line_start":589,"line_end":589,"column_start":19,"column_end":29},"name":"as_u32_mut","qualname":"<VMGlobalDefinition>::as_u32_mut","value":"pub unsafe fn as_u32_mut(&mut Self) -> &mut u32","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to the value as an u32.","sig":null,"attributes":[{"value":"/ Return a mutable reference to the value as an u32.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":201497,"byte_end":201551,"line_start":581,"line_end":581,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":201556,"byte_end":201559,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":201564,"byte_end":201576,"line_start":583,"line_end":583,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":201581,"byte_end":201584,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ It is the callers responsibility to make sure the global has I32 type.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":201589,"byte_end":201663,"line_start":585,"line_end":585,"column_start":5,"column_end":79}},{"value":"/ Until the returned borrow is dropped, reads and writes of this global","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":201668,"byte_end":201741,"line_start":586,"line_end":586,"column_start":5,"column_end":78}},{"value":"/ must be done exclusively through this borrow. That includes reads and","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":201746,"byte_end":201819,"line_start":587,"line_end":587,"column_start":5,"column_end":78}},{"value":"/ writes of globals inside wasm functions.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":201824,"byte_end":201868,"line_start":588,"line_end":588,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":830},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":202118,"byte_end":202124,"line_start":596,"line_end":596,"column_start":12,"column_end":18},"name":"to_i64","qualname":"<VMGlobalDefinition>::to_i64","value":"pub fn to_i64(&Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the value as an i64.","sig":null,"attributes":[{"value":"/ Return a reference to the value as an i64.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":201967,"byte_end":202013,"line_start":593,"line_end":593,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":202018,"byte_end":202021,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ If this is not an I64 typed global it is unspecified what value is returned.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":202026,"byte_end":202106,"line_start":595,"line_end":595,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":831},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":202581,"byte_end":202591,"line_start":608,"line_end":608,"column_start":19,"column_end":29},"name":"as_i64_mut","qualname":"<VMGlobalDefinition>::as_i64_mut","value":"pub unsafe fn as_i64_mut(&mut Self) -> &mut i64","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to the value as an i64.","sig":null,"attributes":[{"value":"/ Return a mutable reference to the value as an i64.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":202191,"byte_end":202245,"line_start":600,"line_end":600,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":202250,"byte_end":202253,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":202258,"byte_end":202270,"line_start":602,"line_end":602,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":202275,"byte_end":202278,"line_start":603,"line_end":603,"column_start":5,"column_end":8}},{"value":"/ It is the callers responsibility to make sure the global has I32 type.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":202283,"byte_end":202357,"line_start":604,"line_end":604,"column_start":5,"column_end":79}},{"value":"/ Until the returned borrow is dropped, reads and writes of this global","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":202362,"byte_end":202435,"line_start":605,"line_end":605,"column_start":5,"column_end":78}},{"value":"/ must be done exclusively through this borrow. That includes reads and","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":202440,"byte_end":202513,"line_start":606,"line_end":606,"column_start":5,"column_end":78}},{"value":"/ writes of globals inside wasm functions.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":202518,"byte_end":202562,"line_start":607,"line_end":607,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":832},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":202812,"byte_end":202818,"line_start":615,"line_end":615,"column_start":12,"column_end":18},"name":"to_u64","qualname":"<VMGlobalDefinition>::to_u64","value":"pub fn to_u64(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the value as an u64.","sig":null,"attributes":[{"value":"/ Return a reference to the value as an u64.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":202661,"byte_end":202707,"line_start":612,"line_end":612,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":202712,"byte_end":202715,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ If this is not an I64 typed global it is unspecified what value is returned.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":202720,"byte_end":202800,"line_start":614,"line_end":614,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":833},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":203275,"byte_end":203285,"line_start":627,"line_end":627,"column_start":19,"column_end":29},"name":"as_u64_mut","qualname":"<VMGlobalDefinition>::as_u64_mut","value":"pub unsafe fn as_u64_mut(&mut Self) -> &mut u64","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to the value as an u64.","sig":null,"attributes":[{"value":"/ Return a mutable reference to the value as an u64.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":202885,"byte_end":202939,"line_start":619,"line_end":619,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":202944,"byte_end":202947,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":202952,"byte_end":202964,"line_start":621,"line_end":621,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":202969,"byte_end":202972,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ It is the callers responsibility to make sure the global has I64 type.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":202977,"byte_end":203051,"line_start":623,"line_end":623,"column_start":5,"column_end":79}},{"value":"/ Until the returned borrow is dropped, reads and writes of this global","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":203056,"byte_end":203129,"line_start":624,"line_end":624,"column_start":5,"column_end":78}},{"value":"/ must be done exclusively through this borrow. That includes reads and","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":203134,"byte_end":203207,"line_start":625,"line_end":625,"column_start":5,"column_end":78}},{"value":"/ writes of globals inside wasm functions.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":203212,"byte_end":203256,"line_start":626,"line_end":626,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":834},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":203506,"byte_end":203512,"line_start":634,"line_end":634,"column_start":12,"column_end":18},"name":"to_f32","qualname":"<VMGlobalDefinition>::to_f32","value":"pub fn to_f32(&Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the value as an f32.","sig":null,"attributes":[{"value":"/ Return a reference to the value as an f32.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":203355,"byte_end":203401,"line_start":631,"line_end":631,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":203406,"byte_end":203409,"line_start":632,"line_end":632,"column_start":5,"column_end":8}},{"value":"/ If this is not an F32 typed global it is unspecified what value is returned.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":203414,"byte_end":203494,"line_start":633,"line_end":633,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":835},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":203969,"byte_end":203979,"line_start":646,"line_end":646,"column_start":19,"column_end":29},"name":"as_f32_mut","qualname":"<VMGlobalDefinition>::as_f32_mut","value":"pub unsafe fn as_f32_mut(&mut Self) -> &mut f32","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to the value as an f32.","sig":null,"attributes":[{"value":"/ Return a mutable reference to the value as an f32.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":203579,"byte_end":203633,"line_start":638,"line_end":638,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":203638,"byte_end":203641,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":203646,"byte_end":203658,"line_start":640,"line_end":640,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":203663,"byte_end":203666,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ It is the callers responsibility to make sure the global has F32 type.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":203671,"byte_end":203745,"line_start":642,"line_end":642,"column_start":5,"column_end":79}},{"value":"/ Until the returned borrow is dropped, reads and writes of this global","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":203750,"byte_end":203823,"line_start":643,"line_end":643,"column_start":5,"column_end":78}},{"value":"/ must be done exclusively through this borrow. That includes reads and","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":203828,"byte_end":203901,"line_start":644,"line_end":644,"column_start":5,"column_end":78}},{"value":"/ writes of globals inside wasm functions.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":203906,"byte_end":203950,"line_start":645,"line_end":645,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":836},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":204200,"byte_end":204206,"line_start":653,"line_end":653,"column_start":12,"column_end":18},"name":"to_f64","qualname":"<VMGlobalDefinition>::to_f64","value":"pub fn to_f64(&Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the value as an f64.","sig":null,"attributes":[{"value":"/ Return a reference to the value as an f64.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":204049,"byte_end":204095,"line_start":650,"line_end":650,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":204100,"byte_end":204103,"line_start":651,"line_end":651,"column_start":5,"column_end":8}},{"value":"/ If this is not an F64 typed global it is unspecified what value is returned.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":204108,"byte_end":204188,"line_start":652,"line_end":652,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":837},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":204663,"byte_end":204673,"line_start":665,"line_end":665,"column_start":19,"column_end":29},"name":"as_f64_mut","qualname":"<VMGlobalDefinition>::as_f64_mut","value":"pub unsafe fn as_f64_mut(&mut Self) -> &mut f64","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to the value as an f64.","sig":null,"attributes":[{"value":"/ Return a mutable reference to the value as an f64.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":204273,"byte_end":204327,"line_start":657,"line_end":657,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":204332,"byte_end":204335,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":204340,"byte_end":204352,"line_start":659,"line_end":659,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":204357,"byte_end":204360,"line_start":660,"line_end":660,"column_start":5,"column_end":8}},{"value":"/ It is the callers responsibility to make sure the global has F64 type.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":204365,"byte_end":204439,"line_start":661,"line_end":661,"column_start":5,"column_end":79}},{"value":"/ Until the returned borrow is dropped, reads and writes of this global","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":204444,"byte_end":204517,"line_start":662,"line_end":662,"column_start":5,"column_end":78}},{"value":"/ must be done exclusively through this borrow. That includes reads and","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":204522,"byte_end":204595,"line_start":663,"line_end":663,"column_start":5,"column_end":78}},{"value":"/ writes of globals inside wasm functions.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":204600,"byte_end":204644,"line_start":664,"line_end":664,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":838},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":204896,"byte_end":204903,"line_start":672,"line_end":672,"column_start":12,"column_end":19},"name":"to_u128","qualname":"<VMGlobalDefinition>::to_u128","value":"pub fn to_u128(&Self) -> u128","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the value as an u128.","sig":null,"attributes":[{"value":"/ Return a reference to the value as an u128.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":204743,"byte_end":204790,"line_start":669,"line_end":669,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":204795,"byte_end":204798,"line_start":670,"line_end":670,"column_start":5,"column_end":8}},{"value":"/ If this is not an V128 typed global it is unspecified what value is returned.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":204803,"byte_end":204884,"line_start":671,"line_end":671,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":839},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":205364,"byte_end":205375,"line_start":684,"line_end":684,"column_start":19,"column_end":30},"name":"as_u128_mut","qualname":"<VMGlobalDefinition>::as_u128_mut","value":"pub unsafe fn as_u128_mut(&mut Self) -> &mut u128","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to the value as an u128.","sig":null,"attributes":[{"value":"/ Return a mutable reference to the value as an u128.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":204972,"byte_end":205027,"line_start":676,"line_end":676,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":205032,"byte_end":205035,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":205040,"byte_end":205052,"line_start":678,"line_end":678,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":205057,"byte_end":205060,"line_start":679,"line_end":679,"column_start":5,"column_end":8}},{"value":"/ It is the callers responsibility to make sure the global has V128 type.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":205065,"byte_end":205140,"line_start":680,"line_end":680,"column_start":5,"column_end":80}},{"value":"/ Until the returned borrow is dropped, reads and writes of this global","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":205145,"byte_end":205218,"line_start":681,"line_end":681,"column_start":5,"column_end":78}},{"value":"/ must be done exclusively through this borrow. That includes reads and","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":205223,"byte_end":205296,"line_start":682,"line_end":682,"column_start":5,"column_end":78}},{"value":"/ writes of globals inside wasm functions.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":205301,"byte_end":205345,"line_start":683,"line_end":683,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":840},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":205504,"byte_end":205512,"line_start":689,"line_end":689,"column_start":12,"column_end":20},"name":"to_bytes","qualname":"<VMGlobalDefinition>::to_bytes","value":"pub fn to_bytes(&Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the value as bytes.\n","sig":null,"attributes":[{"value":"/ Return a reference to the value as bytes.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":205447,"byte_end":205492,"line_start":688,"line_end":688,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":842},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":205893,"byte_end":205905,"line_start":700,"line_end":700,"column_start":19,"column_end":31},"name":"as_bytes_mut","qualname":"<VMGlobalDefinition>::as_bytes_mut","value":"pub unsafe fn as_bytes_mut(&mut Self) -> &mut [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to the value as bytes.","sig":null,"attributes":[{"value":"/ Return a mutable reference to the value as bytes.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":205583,"byte_end":205636,"line_start":693,"line_end":693,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":205641,"byte_end":205644,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":205649,"byte_end":205661,"line_start":695,"line_end":695,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":205666,"byte_end":205669,"line_start":696,"line_end":696,"column_start":5,"column_end":8}},{"value":"/ Until the returned borrow is dropped, reads and writes of this global","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":205674,"byte_end":205747,"line_start":697,"line_end":697,"column_start":5,"column_end":78}},{"value":"/ must be done exclusively through this borrow. That includes reads and","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":205752,"byte_end":205825,"line_start":698,"line_end":698,"column_start":5,"column_end":78}},{"value":"/ writes of globals inside wasm functions.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":205830,"byte_end":205874,"line_start":699,"line_end":699,"column_start":5,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":1834},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":206153,"byte_end":206175,"line_start":709,"line_end":709,"column_start":12,"column_end":34},"name":"VMSharedSignatureIndex","qualname":"::vmcontext::VMSharedSignatureIndex","value":"","parent":null,"children":[],"decl_id":null,"docs":" An index into the shared signature registry, usable for checking signatures\n at indirect calls.\n","sig":null,"attributes":[{"value":"/ An index into the shared signature registry, usable for checking signatures","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":205977,"byte_end":206056,"line_start":705,"line_end":705,"column_start":1,"column_end":80}},{"value":"/ at indirect calls.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":206057,"byte_end":206079,"line_start":706,"line_end":706,"column_start":1,"column_end":23}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":206080,"byte_end":206090,"line_start":707,"line_end":707,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":845},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":207013,"byte_end":207016,"line_start":739,"line_end":739,"column_start":12,"column_end":15},"name":"new","qualname":"<VMSharedSignatureIndex>::new","value":"pub fn new(u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `VMSharedSignatureIndex`.\n","sig":null,"attributes":[{"value":"/ Create a new `VMSharedSignatureIndex`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":206959,"byte_end":207001,"line_start":738,"line_end":738,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":1852},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":207399,"byte_end":207421,"line_start":755,"line_end":755,"column_start":12,"column_end":34},"name":"VMCallerCheckedAnyfunc","qualname":"::vmcontext::VMCallerCheckedAnyfunc","value":"VMCallerCheckedAnyfunc { func_ptr, type_index, vmctx }","parent":null,"children":[{"krate":0,"index":1853},{"krate":0,"index":1854},{"krate":0,"index":1855}],"decl_id":null,"docs":" The VM caller-checked \"anyfunc\" record, for caller-side signature checking.\n It consists of the actual function pointer and a signature id to be checked\n by the caller.\n","sig":null,"attributes":[{"value":"/ The VM caller-checked \"anyfunc\" record, for caller-side signature checking.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":207174,"byte_end":207253,"line_start":750,"line_end":750,"column_start":1,"column_end":80}},{"value":"/ It consists of the actual function pointer and a signature id to be checked","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":207254,"byte_end":207333,"line_start":751,"line_end":751,"column_start":1,"column_end":80}},{"value":"/ by the caller.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":207334,"byte_end":207352,"line_start":752,"line_end":752,"column_start":1,"column_end":19}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":207377,"byte_end":207387,"line_start":754,"line_end":754,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":1853},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":207455,"byte_end":207463,"line_start":757,"line_end":757,"column_start":9,"column_end":17},"name":"func_ptr","qualname":"::vmcontext::VMCallerCheckedAnyfunc::func_ptr","value":"*const vmcontext::VMFunctionBody","parent":{"krate":0,"index":1852},"children":[],"decl_id":null,"docs":" Function body.\n","sig":null,"attributes":[{"value":"/ Function body.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":207428,"byte_end":207446,"line_start":756,"line_end":756,"column_start":5,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":1854},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":207527,"byte_end":207537,"line_start":759,"line_end":759,"column_start":9,"column_end":19},"name":"type_index","qualname":"::vmcontext::VMCallerCheckedAnyfunc::type_index","value":"vmcontext::VMSharedSignatureIndex","parent":{"krate":0,"index":1852},"children":[],"decl_id":null,"docs":" Function signature id.\n","sig":null,"attributes":[{"value":"/ Function signature id.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":207492,"byte_end":207518,"line_start":758,"line_end":758,"column_start":5,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":1855},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":207613,"byte_end":207618,"line_start":761,"line_end":761,"column_start":9,"column_end":14},"name":"vmctx","qualname":"::vmcontext::VMCallerCheckedAnyfunc::vmctx","value":"vmcontext::VMFunctionEnvironment","parent":{"krate":0,"index":1852},"children":[],"decl_id":null,"docs":" Function `VMContext` or host env.\n","sig":null,"attributes":[{"value":"/ Function `VMContext` or host env.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":207567,"byte_end":207604,"line_start":760,"line_end":760,"column_start":5,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":1860},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":209083,"byte_end":209105,"line_start":809,"line_end":809,"column_start":12,"column_end":34},"name":"VMBuiltinFunctionIndex","qualname":"::vmcontext::VMBuiltinFunctionIndex","value":"","parent":null,"children":[],"decl_id":null,"docs":" An index type for builtin functions.\n","sig":null,"attributes":[{"value":"/ An index type for builtin functions.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":209001,"byte_end":209041,"line_start":807,"line_end":807,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":851},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":209228,"byte_end":209251,"line_start":813,"line_end":813,"column_start":18,"column_end":41},"name":"get_memory32_grow_index","qualname":"<VMBuiltinFunctionIndex>::get_memory32_grow_index","value":"pub const fn get_memory32_grow_index() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns an index for wasm's `memory.grow` builtin function.\n","sig":null,"attributes":[{"value":"/ Returns an index for wasm's `memory.grow` builtin function.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":209147,"byte_end":209210,"line_start":812,"line_end":812,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":852},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":209380,"byte_end":209412,"line_start":817,"line_end":817,"column_start":18,"column_end":50},"name":"get_imported_memory32_grow_index","qualname":"<VMBuiltinFunctionIndex>::get_imported_memory32_grow_index","value":"pub const fn get_imported_memory32_grow_index() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns an index for wasm's imported `memory.grow` builtin function.\n","sig":null,"attributes":[{"value":"/ Returns an index for wasm's imported `memory.grow` builtin function.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":209290,"byte_end":209362,"line_start":816,"line_end":816,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":853},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":209532,"byte_end":209555,"line_start":821,"line_end":821,"column_start":18,"column_end":41},"name":"get_memory32_size_index","qualname":"<VMBuiltinFunctionIndex>::get_memory32_size_index","value":"pub const fn get_memory32_size_index() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns an index for wasm's `memory.size` builtin function.\n","sig":null,"attributes":[{"value":"/ Returns an index for wasm's `memory.size` builtin function.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":209451,"byte_end":209514,"line_start":820,"line_end":820,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":854},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":209684,"byte_end":209716,"line_start":825,"line_end":825,"column_start":18,"column_end":50},"name":"get_imported_memory32_size_index","qualname":"<VMBuiltinFunctionIndex>::get_imported_memory32_size_index","value":"pub const fn get_imported_memory32_size_index() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns an index for wasm's imported `memory.size` builtin function.\n","sig":null,"attributes":[{"value":"/ Returns an index for wasm's imported `memory.size` builtin function.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":209594,"byte_end":209666,"line_start":824,"line_end":824,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":855},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":209863,"byte_end":209883,"line_start":830,"line_end":830,"column_start":18,"column_end":38},"name":"get_table_copy_index","qualname":"<VMBuiltinFunctionIndex>::get_table_copy_index","value":"pub const fn get_table_copy_index() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns an index for wasm's `table.copy` when both tables are locally\n defined.\n","sig":null,"attributes":[{"value":"/ Returns an index for wasm's `table.copy` when both tables are locally","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":209755,"byte_end":209828,"line_start":828,"line_end":828,"column_start":5,"column_end":78}},{"value":"/ defined.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":209833,"byte_end":209845,"line_start":829,"line_end":829,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":856},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":209985,"byte_end":210005,"line_start":834,"line_end":834,"column_start":18,"column_end":38},"name":"get_table_init_index","qualname":"<VMBuiltinFunctionIndex>::get_table_init_index","value":"pub const fn get_table_init_index() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns an index for wasm's `table.init`.\n","sig":null,"attributes":[{"value":"/ Returns an index for wasm's `table.init`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":209922,"byte_end":209967,"line_start":833,"line_end":833,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":857},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":210106,"byte_end":210125,"line_start":838,"line_end":838,"column_start":18,"column_end":37},"name":"get_elem_drop_index","qualname":"<VMBuiltinFunctionIndex>::get_elem_drop_index","value":"pub const fn get_elem_drop_index() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns an index for wasm's `elem.drop`.\n","sig":null,"attributes":[{"value":"/ Returns an index for wasm's `elem.drop`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":210044,"byte_end":210088,"line_start":837,"line_end":837,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":858},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":210257,"byte_end":210284,"line_start":842,"line_end":842,"column_start":18,"column_end":45},"name":"get_local_memory_copy_index","qualname":"<VMBuiltinFunctionIndex>::get_local_memory_copy_index","value":"pub const fn get_local_memory_copy_index() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns an index for wasm's `memory.copy` for locally defined memories.\n","sig":null,"attributes":[{"value":"/ Returns an index for wasm's `memory.copy` for locally defined memories.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":210164,"byte_end":210239,"line_start":841,"line_end":841,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":859},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":210409,"byte_end":210439,"line_start":846,"line_end":846,"column_start":18,"column_end":48},"name":"get_imported_memory_copy_index","qualname":"<VMBuiltinFunctionIndex>::get_imported_memory_copy_index","value":"pub const fn get_imported_memory_copy_index() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns an index for wasm's `memory.copy` for imported memories.\n","sig":null,"attributes":[{"value":"/ Returns an index for wasm's `memory.copy` for imported memories.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":210323,"byte_end":210391,"line_start":845,"line_end":845,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":860},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":210571,"byte_end":210592,"line_start":850,"line_end":850,"column_start":18,"column_end":39},"name":"get_memory_fill_index","qualname":"<VMBuiltinFunctionIndex>::get_memory_fill_index","value":"pub const fn get_memory_fill_index() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns an index for wasm's `memory.fill` for locally defined memories.\n","sig":null,"attributes":[{"value":"/ Returns an index for wasm's `memory.fill` for locally defined memories.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":210478,"byte_end":210553,"line_start":849,"line_end":849,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":861},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":210717,"byte_end":210747,"line_start":854,"line_end":854,"column_start":18,"column_end":48},"name":"get_imported_memory_fill_index","qualname":"<VMBuiltinFunctionIndex>::get_imported_memory_fill_index","value":"pub const fn get_imported_memory_fill_index() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns an index for wasm's `memory.fill` for imported memories.\n","sig":null,"attributes":[{"value":"/ Returns an index for wasm's `memory.fill` for imported memories.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":210631,"byte_end":210699,"line_start":853,"line_end":853,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":862},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":210863,"byte_end":210884,"line_start":858,"line_end":858,"column_start":18,"column_end":39},"name":"get_memory_init_index","qualname":"<VMBuiltinFunctionIndex>::get_memory_init_index","value":"pub const fn get_memory_init_index() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns an index for wasm's `memory.init` instruction.\n","sig":null,"attributes":[{"value":"/ Returns an index for wasm's `memory.init` instruction.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":210787,"byte_end":210845,"line_start":857,"line_end":857,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":863},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":210998,"byte_end":211017,"line_start":862,"line_end":862,"column_start":18,"column_end":37},"name":"get_data_drop_index","qualname":"<VMBuiltinFunctionIndex>::get_data_drop_index","value":"pub const fn get_data_drop_index() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns an index for wasm's `data.drop` instruction.\n","sig":null,"attributes":[{"value":"/ Returns an index for wasm's `data.drop` instruction.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":210924,"byte_end":210980,"line_start":861,"line_end":861,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":864},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":211132,"byte_end":211152,"line_start":866,"line_end":866,"column_start":18,"column_end":38},"name":"get_raise_trap_index","qualname":"<VMBuiltinFunctionIndex>::get_raise_trap_index","value":"pub const fn get_raise_trap_index() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns an index for wasm's `raise_trap` instruction.\n","sig":null,"attributes":[{"value":"/ Returns an index for wasm's `raise_trap` instruction.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":211057,"byte_end":211114,"line_start":865,"line_end":865,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":865},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":211260,"byte_end":211290,"line_start":870,"line_end":870,"column_start":18,"column_end":48},"name":"builtin_functions_total_number","qualname":"<VMBuiltinFunctionIndex>::builtin_functions_total_number","value":"pub const fn builtin_functions_total_number() -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the total number of builtin functions.\n","sig":null,"attributes":[{"value":"/ Returns the total number of builtin functions.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":211192,"byte_end":211242,"line_start":869,"line_end":869,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":866},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":211380,"byte_end":211385,"line_start":875,"line_end":875,"column_start":18,"column_end":23},"name":"index","qualname":"<VMBuiltinFunctionIndex>::index","value":"pub const fn index(Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Return the index as an u32 number.\n","sig":null,"attributes":[{"value":"/ Return the index as an u32 number.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":211324,"byte_end":211362,"line_start":874,"line_end":874,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":1869},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":214370,"byte_end":214379,"line_start":947,"line_end":947,"column_start":12,"column_end":21},"name":"VMContext","qualname":"::vmcontext::VMContext","value":"VMContext {  }","parent":null,"children":[],"decl_id":null,"docs":" The VM \"context\", which is pointed to by the `vmctx` arg in the compiler.\n This has information about globals, memories, tables, and other runtime\n state associated with the current instance.","sig":null,"attributes":[{"value":"/ The VM \"context\", which is pointed to by the `vmctx` arg in the compiler.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":213801,"byte_end":213878,"line_start":936,"line_end":936,"column_start":1,"column_end":78}},{"value":"/ This has information about globals, memories, tables, and other runtime","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":213879,"byte_end":213954,"line_start":937,"line_end":937,"column_start":1,"column_end":76}},{"value":"/ state associated with the current instance.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":213955,"byte_end":214002,"line_start":938,"line_end":938,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":214003,"byte_end":214006,"line_start":939,"line_end":939,"column_start":1,"column_end":4}},{"value":"/ The struct here is empty, as the sizes of these fields are dynamic, and","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":214007,"byte_end":214082,"line_start":940,"line_end":940,"column_start":1,"column_end":76}},{"value":"/ we can't describe them in Rust's type system. Sufficient memory is","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":214083,"byte_end":214153,"line_start":941,"line_end":941,"column_start":1,"column_end":71}},{"value":"/ allocated at runtime.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":214154,"byte_end":214179,"line_start":942,"line_end":942,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":214180,"byte_end":214183,"line_start":943,"line_end":943,"column_start":1,"column_end":4}},{"value":"/ TODO: We could move the globals into the `vmctx` allocation too.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":214184,"byte_end":214252,"line_start":944,"line_end":944,"column_start":1,"column_end":69}},{"value":"repr(C, align(16))","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":214270,"byte_end":214291,"line_start":946,"line_end":946,"column_start":1,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":877},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":215124,"byte_end":215134,"line_start":967,"line_end":967,"column_start":19,"column_end":29},"name":"host_state","qualname":"<VMContext>::host_state","value":"pub unsafe fn host_state(&Self) -> &Any","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the host state associated with this `Instance`.","sig":null,"attributes":[{"value":"/ Return a reference to the host state associated with this `Instance`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":214852,"byte_end":214925,"line_start":961,"line_end":961,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":214930,"byte_end":214933,"line_start":962,"line_end":962,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":214938,"byte_end":214950,"line_start":963,"line_end":963,"column_start":5,"column_end":17}},{"value":"/ This is unsafe because it doesn't work on just any `VMContext`, it must","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":214955,"byte_end":215030,"line_start":964,"line_end":964,"column_start":5,"column_end":80}},{"value":"/ be a `VMContext` allocated as part of an `Instance`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":215035,"byte_end":215091,"line_start":965,"line_end":965,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":215096,"byte_end":215105,"line_start":966,"line_end":966,"column_start":5,"column_end":14}}]},{"kind":"Type","id":{"krate":0,"index":878},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":215215,"byte_end":215227,"line_start":973,"line_end":973,"column_start":10,"column_end":22},"name":"VMTrampoline","qualname":"::vmcontext::VMTrampoline","value":"unsafe extern \"C\" fn(: *mut VMContext, : *const VMFunctionBody, : *mut u128)","parent":null,"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":215202,"byte_end":215205,"line_start":972,"line_end":972,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":1872},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":216581,"byte_end":216590,"line_start":37,"line_end":37,"column_start":12,"column_end":21},"name":"VMOffsets","qualname":"::vmoffsets::VMOffsets","value":"VMOffsets { pointer_size, num_signature_ids, num_imported_functions, num_imported_tables, num_imported_memories, num_imported_globals, num_local_tables, num_local_memories, num_local_globals }","parent":null,"children":[{"krate":0,"index":1873},{"krate":0,"index":1874},{"krate":0,"index":1875},{"krate":0,"index":1876},{"krate":0,"index":1877},{"krate":0,"index":1878},{"krate":0,"index":1879},{"krate":0,"index":1880},{"krate":0,"index":1881}],"decl_id":null,"docs":" This class computes offsets to fields within [`VMContext`] and other\n related structs that JIT code accesses directly.","sig":null,"attributes":[{"value":"/ This class computes offsets to fields within [`VMContext`] and other","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":216369,"byte_end":216441,"line_start":32,"line_end":32,"column_start":1,"column_end":73}},{"value":"/ related structs that JIT code accesses directly.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":216442,"byte_end":216494,"line_start":33,"line_end":33,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":216495,"byte_end":216498,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ [`VMContext`]: crate::vmcontext::VMContext","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":216499,"byte_end":216545,"line_start":35,"line_end":35,"column_start":1,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":1873},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":216655,"byte_end":216667,"line_start":39,"line_end":39,"column_start":9,"column_end":21},"name":"pointer_size","qualname":"::vmoffsets::VMOffsets::pointer_size","value":"u8","parent":{"krate":0,"index":1872},"children":[],"decl_id":null,"docs":" The size in bytes of a pointer on the target.\n","sig":null,"attributes":[{"value":"/ The size in bytes of a pointer on the target.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":216597,"byte_end":216646,"line_start":38,"line_end":38,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1874},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":216741,"byte_end":216758,"line_start":41,"line_end":41,"column_start":9,"column_end":26},"name":"num_signature_ids","qualname":"::vmoffsets::VMOffsets::num_signature_ids","value":"u32","parent":{"krate":0,"index":1872},"children":[],"decl_id":null,"docs":" The number of signature declarations in the module.\n","sig":null,"attributes":[{"value":"/ The number of signature declarations in the module.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":216677,"byte_end":216732,"line_start":40,"line_end":40,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":1875},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":216829,"byte_end":216851,"line_start":43,"line_end":43,"column_start":9,"column_end":31},"name":"num_imported_functions","qualname":"::vmoffsets::VMOffsets::num_imported_functions","value":"u32","parent":{"krate":0,"index":1872},"children":[],"decl_id":null,"docs":" The number of imported functions in the module.\n","sig":null,"attributes":[{"value":"/ The number of imported functions in the module.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":216769,"byte_end":216820,"line_start":42,"line_end":42,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":1876},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":216919,"byte_end":216938,"line_start":45,"line_end":45,"column_start":9,"column_end":28},"name":"num_imported_tables","qualname":"::vmoffsets::VMOffsets::num_imported_tables","value":"u32","parent":{"krate":0,"index":1872},"children":[],"decl_id":null,"docs":" The number of imported tables in the module.\n","sig":null,"attributes":[{"value":"/ The number of imported tables in the module.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":216862,"byte_end":216910,"line_start":44,"line_end":44,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":1877},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":217008,"byte_end":217029,"line_start":47,"line_end":47,"column_start":9,"column_end":30},"name":"num_imported_memories","qualname":"::vmoffsets::VMOffsets::num_imported_memories","value":"u32","parent":{"krate":0,"index":1872},"children":[],"decl_id":null,"docs":" The number of imported memories in the module.\n","sig":null,"attributes":[{"value":"/ The number of imported memories in the module.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":216949,"byte_end":216999,"line_start":46,"line_end":46,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":1878},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":217098,"byte_end":217118,"line_start":49,"line_end":49,"column_start":9,"column_end":29},"name":"num_imported_globals","qualname":"::vmoffsets::VMOffsets::num_imported_globals","value":"u32","parent":{"krate":0,"index":1872},"children":[],"decl_id":null,"docs":" The number of imported globals in the module.\n","sig":null,"attributes":[{"value":"/ The number of imported globals in the module.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":217040,"byte_end":217089,"line_start":48,"line_end":48,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1879},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":217185,"byte_end":217201,"line_start":51,"line_end":51,"column_start":9,"column_end":25},"name":"num_local_tables","qualname":"::vmoffsets::VMOffsets::num_local_tables","value":"u32","parent":{"krate":0,"index":1872},"children":[],"decl_id":null,"docs":" The number of defined tables in the module.\n","sig":null,"attributes":[{"value":"/ The number of defined tables in the module.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":217129,"byte_end":217176,"line_start":50,"line_end":50,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1880},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":217270,"byte_end":217288,"line_start":53,"line_end":53,"column_start":9,"column_end":27},"name":"num_local_memories","qualname":"::vmoffsets::VMOffsets::num_local_memories","value":"u32","parent":{"krate":0,"index":1872},"children":[],"decl_id":null,"docs":" The number of defined memories in the module.\n","sig":null,"attributes":[{"value":"/ The number of defined memories in the module.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":217212,"byte_end":217261,"line_start":52,"line_end":52,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1881},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":217356,"byte_end":217373,"line_start":55,"line_end":55,"column_start":9,"column_end":26},"name":"num_local_globals","qualname":"::vmoffsets::VMOffsets::num_local_globals","value":"u32","parent":{"krate":0,"index":1872},"children":[],"decl_id":null,"docs":" The number of defined globals in the module.\n","sig":null,"attributes":[{"value":"/ The number of defined globals in the module.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":217299,"byte_end":217347,"line_start":54,"line_end":54,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":896},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":217480,"byte_end":217483,"line_start":60,"line_end":60,"column_start":12,"column_end":15},"name":"new","qualname":"<VMOffsets>::new","value":"pub fn new(u8, &ModuleInfo) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return a new `VMOffsets` instance, for a given pointer size.\n","sig":null,"attributes":[{"value":"/ Return a new `VMOffsets` instance, for a given pointer size.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":217404,"byte_end":217468,"line_start":59,"line_end":59,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":897},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":218357,"byte_end":218376,"line_start":78,"line_end":78,"column_start":12,"column_end":31},"name":"new_for_trampolines","qualname":"<VMOffsets>::new_for_trampolines","value":"pub fn new_for_trampolines(u8) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return a new `VMOffsets` instance, for a given pointer size\n skipping the `ModuleInfo`.","sig":null,"attributes":[{"value":"/ Return a new `VMOffsets` instance, for a given pointer size","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":218170,"byte_end":218233,"line_start":74,"line_end":74,"column_start":5,"column_end":68}},{"value":"/ skipping the `ModuleInfo`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":218238,"byte_end":218268,"line_start":75,"line_end":75,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":218273,"byte_end":218276,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ Note: This should only when generating code for trampolines.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":218281,"byte_end":218345,"line_start":77,"line_end":77,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":899},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":218961,"byte_end":218983,"line_start":99,"line_end":99,"column_start":18,"column_end":40},"name":"vmfunction_import_body","qualname":"<VMOffsets>::vmfunction_import_body","value":"pub const fn vmfunction_import_body(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" The offset of the `body` field.\n","sig":null,"attributes":[{"value":"/ The offset of the `body` field.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":218875,"byte_end":218910,"line_start":97,"line_end":97,"column_start":5,"column_end":40}},{"value":"allow(clippy :: erasing_op)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":218915,"byte_end":218943,"line_start":98,"line_end":98,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":900},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":219128,"byte_end":219151,"line_start":105,"line_end":105,"column_start":18,"column_end":41},"name":"vmfunction_import_vmctx","qualname":"<VMOffsets>::vmfunction_import_vmctx","value":"pub const fn vmfunction_import_vmctx(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" The offset of the `vmctx` field.\n","sig":null,"attributes":[{"value":"/ The offset of the `vmctx` field.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":219040,"byte_end":219076,"line_start":103,"line_end":103,"column_start":5,"column_end":41}},{"value":"allow(clippy :: identity_op)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":219081,"byte_end":219110,"line_start":104,"line_end":104,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":901},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":219343,"byte_end":219368,"line_start":112,"line_end":112,"column_start":18,"column_end":43},"name":"size_of_vmfunction_import","qualname":"<VMOffsets>::size_of_vmfunction_import","value":"pub const fn size_of_vmfunction_import(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Return the size of [`VMFunctionImport`].","sig":null,"attributes":[{"value":"/ Return the size of [`VMFunctionImport`].","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":219208,"byte_end":219252,"line_start":109,"line_end":109,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":219257,"byte_end":219260,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ [`VMFunctionImport`]: crate::vmcontext::VMFunctionImport","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":219265,"byte_end":219325,"line_start":111,"line_end":111,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":903},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":219660,"byte_end":219700,"line_start":123,"line_end":123,"column_start":18,"column_end":58},"name":"vmdynamicfunction_import_context_address","qualname":"<VMOffsets>::vmdynamicfunction_import_context_address","value":"pub const fn vmdynamicfunction_import_context_address(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" The offset of the `address` field.\n","sig":null,"attributes":[{"value":"/ The offset of the `address` field.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":219571,"byte_end":219609,"line_start":121,"line_end":121,"column_start":5,"column_end":43}},{"value":"allow(clippy :: erasing_op)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":219614,"byte_end":219642,"line_start":122,"line_end":122,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":904},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":219843,"byte_end":219879,"line_start":129,"line_end":129,"column_start":18,"column_end":54},"name":"vmdynamicfunction_import_context_ctx","qualname":"<VMOffsets>::vmdynamicfunction_import_context_ctx","value":"pub const fn vmdynamicfunction_import_context_ctx(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" The offset of the `ctx` field.\n","sig":null,"attributes":[{"value":"/ The offset of the `ctx` field.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":219757,"byte_end":219791,"line_start":127,"line_end":127,"column_start":5,"column_end":39}},{"value":"allow(clippy :: identity_op)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":219796,"byte_end":219825,"line_start":128,"line_end":128,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":905},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":220095,"byte_end":220135,"line_start":136,"line_end":136,"column_start":18,"column_end":58},"name":"size_of_vmdynamicfunction_import_context","qualname":"<VMOffsets>::size_of_vmdynamicfunction_import_context","value":"pub const fn size_of_vmdynamicfunction_import_context(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Return the size of [`VMDynamicFunctionContext`].","sig":null,"attributes":[{"value":"/ Return the size of [`VMDynamicFunctionContext`].","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":219936,"byte_end":219988,"line_start":133,"line_end":133,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":219993,"byte_end":219996,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ [`VMDynamicFunctionContext`]: crate::vmcontext::VMDynamicFunctionContext","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":220001,"byte_end":220077,"line_start":135,"line_end":135,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":907},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":220349,"byte_end":220376,"line_start":145,"line_end":145,"column_start":18,"column_end":45},"name":"size_of_vmfunction_body_ptr","qualname":"<VMOffsets>::size_of_vmfunction_body_ptr","value":"pub const fn size_of_vmfunction_body_ptr(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" The size of the `current_elements` field.\n","sig":null,"attributes":[{"value":"/ The size of the `current_elements` field.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":220252,"byte_end":220297,"line_start":143,"line_end":143,"column_start":5,"column_end":50}},{"value":"allow(clippy :: identity_op)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":220302,"byte_end":220331,"line_start":144,"line_end":144,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":909},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":220638,"byte_end":220663,"line_start":156,"line_end":156,"column_start":18,"column_end":43},"name":"vmtable_import_definition","qualname":"<VMOffsets>::vmtable_import_definition","value":"pub const fn vmtable_import_definition(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" The offset of the `definition` field.\n","sig":null,"attributes":[{"value":"/ The offset of the `definition` field.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":220546,"byte_end":220587,"line_start":154,"line_end":154,"column_start":5,"column_end":46}},{"value":"allow(clippy :: erasing_op)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":220592,"byte_end":220620,"line_start":155,"line_end":155,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":910},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":220807,"byte_end":220826,"line_start":162,"line_end":162,"column_start":18,"column_end":37},"name":"vmtable_import_from","qualname":"<VMOffsets>::vmtable_import_from","value":"pub const fn vmtable_import_from(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" The offset of the `from` field.\n","sig":null,"attributes":[{"value":"/ The offset of the `from` field.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":220720,"byte_end":220755,"line_start":160,"line_end":160,"column_start":5,"column_end":40}},{"value":"allow(clippy :: identity_op)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":220760,"byte_end":220789,"line_start":161,"line_end":161,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":911},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":221009,"byte_end":221031,"line_start":169,"line_end":169,"column_start":18,"column_end":40},"name":"size_of_vmtable_import","qualname":"<VMOffsets>::size_of_vmtable_import","value":"pub const fn size_of_vmtable_import(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Return the size of [`VMTableImport`].","sig":null,"attributes":[{"value":"/ Return the size of [`VMTableImport`].","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":220883,"byte_end":220924,"line_start":166,"line_end":166,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":220929,"byte_end":220932,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ [`VMTableImport`]: crate::vmcontext::VMTableImport","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":220937,"byte_end":220991,"line_start":168,"line_end":168,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":913},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":221299,"byte_end":221322,"line_start":180,"line_end":180,"column_start":18,"column_end":41},"name":"vmtable_definition_base","qualname":"<VMOffsets>::vmtable_definition_base","value":"pub const fn vmtable_definition_base(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" The offset of the `base` field.\n","sig":null,"attributes":[{"value":"/ The offset of the `base` field.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":221213,"byte_end":221248,"line_start":178,"line_end":178,"column_start":5,"column_end":40}},{"value":"allow(clippy :: erasing_op)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":221253,"byte_end":221281,"line_start":179,"line_end":179,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":914},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":221478,"byte_end":221513,"line_start":186,"line_end":186,"column_start":18,"column_end":53},"name":"vmtable_definition_current_elements","qualname":"<VMOffsets>::vmtable_definition_current_elements","value":"pub const fn vmtable_definition_current_elements(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" The offset of the `current_elements` field.\n","sig":null,"attributes":[{"value":"/ The offset of the `current_elements` field.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":221379,"byte_end":221426,"line_start":184,"line_end":184,"column_start":5,"column_end":52}},{"value":"allow(clippy :: identity_op)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":221431,"byte_end":221460,"line_start":185,"line_end":185,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":915},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":221633,"byte_end":221676,"line_start":191,"line_end":191,"column_start":18,"column_end":61},"name":"size_of_vmtable_definition_current_elements","qualname":"<VMOffsets>::size_of_vmtable_definition_current_elements","value":"pub const fn size_of_vmtable_definition_current_elements(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" The size of the `current_elements` field.\n","sig":null,"attributes":[{"value":"/ The size of the `current_elements` field.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":221570,"byte_end":221615,"line_start":190,"line_end":190,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":916},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":221851,"byte_end":221877,"line_start":198,"line_end":198,"column_start":18,"column_end":44},"name":"size_of_vmtable_definition","qualname":"<VMOffsets>::size_of_vmtable_definition","value":"pub const fn size_of_vmtable_definition(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Return the size of [`VMTableDefinition`].","sig":null,"attributes":[{"value":"/ Return the size of [`VMTableDefinition`].","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":221713,"byte_end":221758,"line_start":195,"line_end":195,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":221763,"byte_end":221766,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ [`VMTableDefinition`]: crate::vmcontext::VMTableDefinition","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":221771,"byte_end":221833,"line_start":197,"line_end":197,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":918},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":222136,"byte_end":222162,"line_start":209,"line_end":209,"column_start":18,"column_end":44},"name":"vmmemory_import_definition","qualname":"<VMOffsets>::vmmemory_import_definition","value":"pub const fn vmmemory_import_definition(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" The offset of the `from` field.\n","sig":null,"attributes":[{"value":"/ The offset of the `from` field.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":222050,"byte_end":222085,"line_start":207,"line_end":207,"column_start":5,"column_end":40}},{"value":"allow(clippy :: erasing_op)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":222090,"byte_end":222118,"line_start":208,"line_end":208,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":919},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":222306,"byte_end":222326,"line_start":215,"line_end":215,"column_start":18,"column_end":38},"name":"vmmemory_import_from","qualname":"<VMOffsets>::vmmemory_import_from","value":"pub const fn vmmemory_import_from(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" The offset of the `from` field.\n","sig":null,"attributes":[{"value":"/ The offset of the `from` field.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":222219,"byte_end":222254,"line_start":213,"line_end":213,"column_start":5,"column_end":40}},{"value":"allow(clippy :: identity_op)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":222259,"byte_end":222288,"line_start":214,"line_end":214,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":920},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":222512,"byte_end":222535,"line_start":222,"line_end":222,"column_start":18,"column_end":41},"name":"size_of_vmmemory_import","qualname":"<VMOffsets>::size_of_vmmemory_import","value":"pub const fn size_of_vmmemory_import(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Return the size of [`VMMemoryImport`].","sig":null,"attributes":[{"value":"/ Return the size of [`VMMemoryImport`].","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":222383,"byte_end":222425,"line_start":219,"line_end":219,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":222430,"byte_end":222433,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ [`VMMemoryImport`]: crate::vmcontext::VMMemoryImport","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":222438,"byte_end":222494,"line_start":221,"line_end":221,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":922},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":222806,"byte_end":222830,"line_start":233,"line_end":233,"column_start":18,"column_end":42},"name":"vmmemory_definition_base","qualname":"<VMOffsets>::vmmemory_definition_base","value":"pub const fn vmmemory_definition_base(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" The offset of the `base` field.\n","sig":null,"attributes":[{"value":"/ The offset of the `base` field.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":222720,"byte_end":222755,"line_start":231,"line_end":231,"column_start":5,"column_end":40}},{"value":"allow(clippy :: erasing_op)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":222760,"byte_end":222788,"line_start":232,"line_end":232,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":923},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":222984,"byte_end":223018,"line_start":239,"line_end":239,"column_start":18,"column_end":52},"name":"vmmemory_definition_current_length","qualname":"<VMOffsets>::vmmemory_definition_current_length","value":"pub const fn vmmemory_definition_current_length(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" The offset of the `current_length` field.\n","sig":null,"attributes":[{"value":"/ The offset of the `current_length` field.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":222887,"byte_end":222932,"line_start":237,"line_end":237,"column_start":5,"column_end":50}},{"value":"allow(clippy :: identity_op)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":222937,"byte_end":222966,"line_start":238,"line_end":238,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":924},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":223136,"byte_end":223178,"line_start":244,"line_end":244,"column_start":18,"column_end":60},"name":"size_of_vmmemory_definition_current_length","qualname":"<VMOffsets>::size_of_vmmemory_definition_current_length","value":"pub const fn size_of_vmmemory_definition_current_length(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" The size of the `current_length` field.\n","sig":null,"attributes":[{"value":"/ The size of the `current_length` field.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":223075,"byte_end":223118,"line_start":243,"line_end":243,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":925},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":223356,"byte_end":223383,"line_start":251,"line_end":251,"column_start":18,"column_end":45},"name":"size_of_vmmemory_definition","qualname":"<VMOffsets>::size_of_vmmemory_definition","value":"pub const fn size_of_vmmemory_definition(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Return the size of [`VMMemoryDefinition`].","sig":null,"attributes":[{"value":"/ Return the size of [`VMMemoryDefinition`].","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":223215,"byte_end":223261,"line_start":248,"line_end":248,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":223266,"byte_end":223269,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ [`VMMemoryDefinition`]: crate::vmcontext::VMMemoryDefinition","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":223274,"byte_end":223338,"line_start":250,"line_end":250,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":927},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":223648,"byte_end":223674,"line_start":262,"line_end":262,"column_start":18,"column_end":44},"name":"vmglobal_import_definition","qualname":"<VMOffsets>::vmglobal_import_definition","value":"pub const fn vmglobal_import_definition(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" The offset of the `definition` field.\n","sig":null,"attributes":[{"value":"/ The offset of the `definition` field.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":223556,"byte_end":223597,"line_start":260,"line_end":260,"column_start":5,"column_end":46}},{"value":"allow(clippy :: erasing_op)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":223602,"byte_end":223630,"line_start":261,"line_end":261,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":928},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":223818,"byte_end":223838,"line_start":268,"line_end":268,"column_start":18,"column_end":38},"name":"vmglobal_import_from","qualname":"<VMOffsets>::vmglobal_import_from","value":"pub const fn vmglobal_import_from(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" The offset of the `from` field.\n","sig":null,"attributes":[{"value":"/ The offset of the `from` field.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":223731,"byte_end":223766,"line_start":266,"line_end":266,"column_start":5,"column_end":40}},{"value":"allow(clippy :: identity_op)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":223771,"byte_end":223800,"line_start":267,"line_end":267,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":929},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":224058,"byte_end":224081,"line_start":276,"line_end":276,"column_start":18,"column_end":41},"name":"size_of_vmglobal_import","qualname":"<VMOffsets>::size_of_vmglobal_import","value":"pub const fn size_of_vmglobal_import(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Return the size of [`VMGlobalImport`].","sig":null,"attributes":[{"value":"/ Return the size of [`VMGlobalImport`].","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":223895,"byte_end":223937,"line_start":272,"line_end":272,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":223942,"byte_end":223945,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ [`VMGlobalImport`]: crate::vmcontext::VMGlobalImport","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":223950,"byte_end":224006,"line_start":274,"line_end":274,"column_start":5,"column_end":61}},{"value":"allow(clippy :: identity_op)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":224011,"byte_end":224040,"line_start":275,"line_end":275,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":931},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":224636,"byte_end":224658,"line_start":291,"line_end":291,"column_start":18,"column_end":40},"name":"size_of_vmglobal_local","qualname":"<VMOffsets>::size_of_vmglobal_local","value":"pub const fn size_of_vmglobal_local(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Return the size of a pointer to a [`VMGlobalDefinition`];","sig":null,"attributes":[{"value":"/ Return the size of a pointer to a [`VMGlobalDefinition`];","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":224313,"byte_end":224374,"line_start":285,"line_end":285,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":224379,"byte_end":224382,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ The underlying global itself is the size of the largest value type (i.e. a V128),","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":224387,"byte_end":224472,"line_start":287,"line_end":287,"column_start":5,"column_end":90}},{"value":"/ however the size of this type is just the size of a pointer.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":224477,"byte_end":224541,"line_start":288,"line_end":288,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":224546,"byte_end":224549,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ [`VMGlobalDefinition`]: crate::vmcontext::VMGlobalDefinition","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":224554,"byte_end":224618,"line_start":290,"line_end":290,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":933},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":225004,"byte_end":225036,"line_start":303,"line_end":303,"column_start":18,"column_end":50},"name":"size_of_vmshared_signature_index","qualname":"<VMOffsets>::size_of_vmshared_signature_index","value":"pub const fn size_of_vmshared_signature_index(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Return the size of [`VMSharedSignatureIndex`].","sig":null,"attributes":[{"value":"/ Return the size of [`VMSharedSignatureIndex`].","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":224851,"byte_end":224901,"line_start":300,"line_end":300,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":224906,"byte_end":224909,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ [`VMSharedSignatureIndex`]: crate::vmcontext::VMSharedSignatureIndex","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":224914,"byte_end":224986,"line_start":302,"line_end":302,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":935},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":225303,"byte_end":225336,"line_start":314,"line_end":314,"column_start":18,"column_end":51},"name":"vmcaller_checked_anyfunc_func_ptr","qualname":"<VMOffsets>::vmcaller_checked_anyfunc_func_ptr","value":"pub const fn vmcaller_checked_anyfunc_func_ptr(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" The offset of the `func_ptr` field.\n","sig":null,"attributes":[{"value":"/ The offset of the `func_ptr` field.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":225213,"byte_end":225252,"line_start":312,"line_end":312,"column_start":5,"column_end":44}},{"value":"allow(clippy :: erasing_op)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":225257,"byte_end":225285,"line_start":313,"line_end":313,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":936},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":225486,"byte_end":225521,"line_start":320,"line_end":320,"column_start":18,"column_end":53},"name":"vmcaller_checked_anyfunc_type_index","qualname":"<VMOffsets>::vmcaller_checked_anyfunc_type_index","value":"pub const fn vmcaller_checked_anyfunc_type_index(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" The offset of the `type_index` field.\n","sig":null,"attributes":[{"value":"/ The offset of the `type_index` field.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":225393,"byte_end":225434,"line_start":318,"line_end":318,"column_start":5,"column_end":46}},{"value":"allow(clippy :: identity_op)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":225439,"byte_end":225468,"line_start":319,"line_end":319,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":937},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":225632,"byte_end":225662,"line_start":325,"line_end":325,"column_start":18,"column_end":48},"name":"vmcaller_checked_anyfunc_vmctx","qualname":"<VMOffsets>::vmcaller_checked_anyfunc_vmctx","value":"pub const fn vmcaller_checked_anyfunc_vmctx(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" The offset of the `vmctx` field.\n","sig":null,"attributes":[{"value":"/ The offset of the `vmctx` field.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":225578,"byte_end":225614,"line_start":324,"line_end":324,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":938},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":225872,"byte_end":225904,"line_start":332,"line_end":332,"column_start":18,"column_end":50},"name":"size_of_vmcaller_checked_anyfunc","qualname":"<VMOffsets>::size_of_vmcaller_checked_anyfunc","value":"pub const fn size_of_vmcaller_checked_anyfunc(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Return the size of [`VMCallerCheckedAnyfunc`].","sig":null,"attributes":[{"value":"/ Return the size of [`VMCallerCheckedAnyfunc`].","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":225719,"byte_end":225769,"line_start":329,"line_end":329,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":225774,"byte_end":225777,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ [`VMCallerCheckedAnyfunc`]: crate::vmcontext::VMCallerCheckedAnyfunc","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":225782,"byte_end":225854,"line_start":331,"line_end":331,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":940},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":226118,"byte_end":226143,"line_start":342,"line_end":342,"column_start":12,"column_end":37},"name":"vmctx_signature_ids_begin","qualname":"<VMOffsets>::vmctx_signature_ids_begin","value":"pub fn vmctx_signature_ids_begin(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The offset of the `signature_ids` array.\n","sig":null,"attributes":[{"value":"/ The offset of the `signature_ids` array.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":226062,"byte_end":226106,"line_start":341,"line_end":341,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":941},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":226263,"byte_end":226293,"line_start":348,"line_end":348,"column_start":12,"column_end":42},"name":"vmctx_imported_functions_begin","qualname":"<VMOffsets>::vmctx_imported_functions_begin","value":"pub fn vmctx_imported_functions_begin(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The offset of the `tables` array.\n","sig":null,"attributes":[{"value":"/ The offset of the `tables` array.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":226181,"byte_end":226218,"line_start":346,"line_end":346,"column_start":5,"column_end":42}},{"value":"allow(clippy :: erasing_op)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":226223,"byte_end":226251,"line_start":347,"line_end":347,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":942},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":226662,"byte_end":226689,"line_start":360,"line_end":360,"column_start":12,"column_end":39},"name":"vmctx_imported_tables_begin","qualname":"<VMOffsets>::vmctx_imported_tables_begin","value":"pub fn vmctx_imported_tables_begin(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The offset of the `tables` array.\n","sig":null,"attributes":[{"value":"/ The offset of the `tables` array.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":226579,"byte_end":226616,"line_start":358,"line_end":358,"column_start":5,"column_end":42}},{"value":"allow(clippy :: identity_op)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":226621,"byte_end":226650,"line_start":359,"line_end":359,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":943},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":227029,"byte_end":227058,"line_start":371,"line_end":371,"column_start":12,"column_end":41},"name":"vmctx_imported_memories_begin","qualname":"<VMOffsets>::vmctx_imported_memories_begin","value":"pub fn vmctx_imported_memories_begin(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The offset of the `memories` array.\n","sig":null,"attributes":[{"value":"/ The offset of the `memories` array.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":226978,"byte_end":227017,"line_start":370,"line_end":370,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":944},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":227388,"byte_end":227416,"line_start":382,"line_end":382,"column_start":12,"column_end":40},"name":"vmctx_imported_globals_begin","qualname":"<VMOffsets>::vmctx_imported_globals_begin","value":"pub fn vmctx_imported_globals_begin(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The offset of the `globals` array.\n","sig":null,"attributes":[{"value":"/ The offset of the `globals` array.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":227338,"byte_end":227376,"line_start":381,"line_end":381,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":945},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":227750,"byte_end":227768,"line_start":393,"line_end":393,"column_start":12,"column_end":30},"name":"vmctx_tables_begin","qualname":"<VMOffsets>::vmctx_tables_begin","value":"pub fn vmctx_tables_begin(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The offset of the `tables` array.\n","sig":null,"attributes":[{"value":"/ The offset of the `tables` array.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":227701,"byte_end":227738,"line_start":392,"line_end":392,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":946},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":228102,"byte_end":228122,"line_start":404,"line_end":404,"column_start":12,"column_end":32},"name":"vmctx_memories_begin","qualname":"<VMOffsets>::vmctx_memories_begin","value":"pub fn vmctx_memories_begin(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The offset of the `memories` array.\n","sig":null,"attributes":[{"value":"/ The offset of the `memories` array.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":228051,"byte_end":228090,"line_start":403,"line_end":403,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":947},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":228444,"byte_end":228463,"line_start":415,"line_end":415,"column_start":12,"column_end":31},"name":"vmctx_globals_begin","qualname":"<VMOffsets>::vmctx_globals_begin","value":"pub fn vmctx_globals_begin(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The offset of the `globals` array.\n","sig":null,"attributes":[{"value":"/ The offset of the `globals` array.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":228394,"byte_end":228432,"line_start":414,"line_end":414,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":948},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":228851,"byte_end":228880,"line_start":428,"line_end":428,"column_start":12,"column_end":41},"name":"vmctx_builtin_functions_begin","qualname":"<VMOffsets>::vmctx_builtin_functions_begin","value":"pub fn vmctx_builtin_functions_begin(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The offset of the builtin functions array.\n","sig":null,"attributes":[{"value":"/ The offset of the builtin functions array.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":228793,"byte_end":228839,"line_start":427,"line_end":427,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":949},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":229273,"byte_end":229286,"line_start":441,"line_end":441,"column_start":12,"column_end":25},"name":"size_of_vmctx","qualname":"<VMOffsets>::size_of_vmctx","value":"pub fn size_of_vmctx(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Return the size of the [`VMContext`] allocation.","sig":null,"attributes":[{"value":"/ Return the size of the [`VMContext`] allocation.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":229150,"byte_end":229202,"line_start":438,"line_end":438,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":229207,"byte_end":229210,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ [`VMContext`]: crate::vmcontext::VMContext","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":229215,"byte_end":229261,"line_start":440,"line_end":440,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":950},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":229751,"byte_end":229778,"line_start":454,"line_end":454,"column_start":12,"column_end":39},"name":"vmctx_vmshared_signature_id","qualname":"<VMOffsets>::vmctx_vmshared_signature_id","value":"pub fn vmctx_vmshared_signature_id(&Self, SignatureIndex) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Return the offset to [`VMSharedSignatureIndex`] index `index`.","sig":null,"attributes":[{"value":"/ Return the offset to [`VMSharedSignatureIndex`] index `index`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":229588,"byte_end":229654,"line_start":451,"line_end":451,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":229659,"byte_end":229662,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ [`VMSharedSignatureIndex`]: crate::vmcontext::VMSharedSignatureIndex","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":229667,"byte_end":229739,"line_start":453,"line_end":453,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":951},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":230305,"byte_end":230328,"line_start":469,"line_end":469,"column_start":12,"column_end":35},"name":"vmctx_vmfunction_import","qualname":"<VMOffsets>::vmctx_vmfunction_import","value":"pub fn vmctx_vmfunction_import(&Self, FunctionIndex) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Return the offset to [`VMFunctionImport`] index `index`.","sig":null,"attributes":[{"value":"/ Return the offset to [`VMFunctionImport`] index `index`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":230160,"byte_end":230220,"line_start":466,"line_end":466,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":230225,"byte_end":230228,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ [`VMFunctionImport`]: crate::vmcontext::VMFunctionImport","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":230233,"byte_end":230293,"line_start":468,"line_end":468,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":952},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":230848,"byte_end":230868,"line_start":484,"line_end":484,"column_start":12,"column_end":32},"name":"vmctx_vmtable_import","qualname":"<VMOffsets>::vmctx_vmtable_import","value":"pub fn vmctx_vmtable_import(&Self, TableIndex) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Return the offset to [`VMTableImport`] index `index`.","sig":null,"attributes":[{"value":"/ Return the offset to [`VMTableImport`] index `index`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":230712,"byte_end":230769,"line_start":481,"line_end":481,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":230774,"byte_end":230777,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ [`VMTableImport`]: crate::vmcontext::VMTableImport","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":230782,"byte_end":230836,"line_start":483,"line_end":483,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":953},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":231379,"byte_end":231400,"line_start":499,"line_end":499,"column_start":12,"column_end":33},"name":"vmctx_vmmemory_import","qualname":"<VMOffsets>::vmctx_vmmemory_import","value":"pub fn vmctx_vmmemory_import(&Self, MemoryIndex) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Return the offset to [`VMMemoryImport`] index `index`.","sig":null,"attributes":[{"value":"/ Return the offset to [`VMMemoryImport`] index `index`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":231240,"byte_end":231298,"line_start":496,"line_end":496,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":231303,"byte_end":231306,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ [`VMMemoryImport`]: crate::vmcontext::VMMemoryImport","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":231311,"byte_end":231367,"line_start":498,"line_end":498,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":954},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":231917,"byte_end":231938,"line_start":514,"line_end":514,"column_start":12,"column_end":33},"name":"vmctx_vmglobal_import","qualname":"<VMOffsets>::vmctx_vmglobal_import","value":"pub fn vmctx_vmglobal_import(&Self, GlobalIndex) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Return the offset to [`VMGlobalImport`] index `index`.","sig":null,"attributes":[{"value":"/ Return the offset to [`VMGlobalImport`] index `index`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":231778,"byte_end":231836,"line_start":511,"line_end":511,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":231841,"byte_end":231844,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ [`VMGlobalImport`]: crate::vmcontext::VMGlobalImport","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":231849,"byte_end":231905,"line_start":513,"line_end":513,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":955},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":232462,"byte_end":232486,"line_start":529,"line_end":529,"column_start":12,"column_end":36},"name":"vmctx_vmtable_definition","qualname":"<VMOffsets>::vmctx_vmtable_definition","value":"pub fn vmctx_vmtable_definition(&Self, LocalTableIndex) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Return the offset to [`VMTableDefinition`] index `index`.","sig":null,"attributes":[{"value":"/ Return the offset to [`VMTableDefinition`] index `index`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":232314,"byte_end":232375,"line_start":526,"line_end":526,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":232380,"byte_end":232383,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ [`VMTableDefinition`]: crate::vmcontext::VMTableDefinition","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":232388,"byte_end":232450,"line_start":528,"line_end":528,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":956},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":233006,"byte_end":233031,"line_start":544,"line_end":544,"column_start":12,"column_end":37},"name":"vmctx_vmmemory_definition","qualname":"<VMOffsets>::vmctx_vmmemory_definition","value":"pub fn vmctx_vmmemory_definition(&Self, LocalMemoryIndex) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Return the offset to [`VMMemoryDefinition`] index `index`.","sig":null,"attributes":[{"value":"/ Return the offset to [`VMMemoryDefinition`] index `index`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":232855,"byte_end":232917,"line_start":541,"line_end":541,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":232922,"byte_end":232925,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ [`VMMemoryDefinition`]: crate::vmcontext::VMMemoryDefinition","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":232930,"byte_end":232994,"line_start":543,"line_end":543,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":957},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":233561,"byte_end":233586,"line_start":559,"line_end":559,"column_start":12,"column_end":37},"name":"vmctx_vmglobal_definition","qualname":"<VMOffsets>::vmctx_vmglobal_definition","value":"pub fn vmctx_vmglobal_definition(&Self, LocalGlobalIndex) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Return the offset to the [`VMGlobalDefinition`] index `index`.","sig":null,"attributes":[{"value":"/ Return the offset to the [`VMGlobalDefinition`] index `index`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":233406,"byte_end":233472,"line_start":556,"line_end":556,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":233477,"byte_end":233480,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ [`VMGlobalDefinition`]: crate::vmcontext::VMGlobalDefinition","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":233485,"byte_end":233549,"line_start":558,"line_end":558,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":958},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":234049,"byte_end":234077,"line_start":572,"line_end":572,"column_start":12,"column_end":40},"name":"vmctx_vmfunction_import_body","qualname":"<VMOffsets>::vmctx_vmfunction_import_body","value":"pub fn vmctx_vmfunction_import_body(&Self, FunctionIndex) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Return the offset to the `body` field in `*const VMFunctionBody` index `index`.\n","sig":null,"attributes":[{"value":"/ Return the offset to the `body` field in `*const VMFunctionBody` index `index`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":233954,"byte_end":234037,"line_start":571,"line_end":571,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":959},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":234356,"byte_end":234385,"line_start":579,"line_end":579,"column_start":12,"column_end":41},"name":"vmctx_vmfunction_import_vmctx","qualname":"<VMOffsets>::vmctx_vmfunction_import_vmctx","value":"pub fn vmctx_vmfunction_import_vmctx(&Self, FunctionIndex) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Return the offset to the `vmctx` field in `*const VMFunctionBody` index `index`.\n","sig":null,"attributes":[{"value":"/ Return the offset to the `vmctx` field in `*const VMFunctionBody` index `index`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":234260,"byte_end":234344,"line_start":578,"line_end":578,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":960},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":234731,"byte_end":234762,"line_start":588,"line_end":588,"column_start":12,"column_end":43},"name":"vmctx_vmtable_import_definition","qualname":"<VMOffsets>::vmctx_vmtable_import_definition","value":"pub fn vmctx_vmtable_import_definition(&Self, TableIndex) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Return the offset to the `definition` field in [`VMTableImport`] index `index`.","sig":null,"attributes":[{"value":"/ Return the offset to the `definition` field in [`VMTableImport`] index `index`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":234569,"byte_end":234652,"line_start":585,"line_end":585,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":234657,"byte_end":234660,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ [`VMTableImport`]: crate::vmcontext::VMTableImport","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":234665,"byte_end":234719,"line_start":587,"line_end":587,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":961},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":235110,"byte_end":235139,"line_start":597,"line_end":597,"column_start":12,"column_end":41},"name":"vmctx_vmtable_definition_base","qualname":"<VMOffsets>::vmctx_vmtable_definition_base","value":"pub fn vmctx_vmtable_definition_base(&Self, LocalTableIndex) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Return the offset to the `base` field in [`VMTableDefinition`] index `index`.","sig":null,"attributes":[{"value":"/ Return the offset to the `base` field in [`VMTableDefinition`] index `index`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":234942,"byte_end":235023,"line_start":594,"line_end":594,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":235028,"byte_end":235031,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ [`VMTableDefinition`]: crate::vmcontext::VMTableDefinition","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":235036,"byte_end":235098,"line_start":596,"line_end":596,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":962},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":235506,"byte_end":235547,"line_start":606,"line_end":606,"column_start":12,"column_end":53},"name":"vmctx_vmtable_definition_current_elements","qualname":"<VMOffsets>::vmctx_vmtable_definition_current_elements","value":"pub fn vmctx_vmtable_definition_current_elements(&Self, LocalTableIndex)\n-> u32","parent":null,"children":[],"decl_id":null,"docs":" Return the offset to the `current_elements` field in [`VMTableDefinition`] index `index`.","sig":null,"attributes":[{"value":"/ Return the offset to the `current_elements` field in [`VMTableDefinition`] index `index`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":235326,"byte_end":235419,"line_start":603,"line_end":603,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":235424,"byte_end":235427,"line_start":604,"line_end":604,"column_start":5,"column_end":8}},{"value":"/ [`VMTableDefinition`]: crate::vmcontext::VMTableDefinition","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":235432,"byte_end":235494,"line_start":605,"line_end":605,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":963},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":235905,"byte_end":235937,"line_start":615,"line_end":615,"column_start":12,"column_end":44},"name":"vmctx_vmmemory_import_definition","qualname":"<VMOffsets>::vmctx_vmmemory_import_definition","value":"pub fn vmctx_vmmemory_import_definition(&Self, MemoryIndex) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Return the offset to the `from` field in [`VMMemoryImport`] index `index`.","sig":null,"attributes":[{"value":"/ Return the offset to the `from` field in [`VMMemoryImport`] index `index`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":235746,"byte_end":235824,"line_start":612,"line_end":612,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":235829,"byte_end":235832,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ [`VMMemoryImport`]: crate::vmcontext::VMMemoryImport","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":235837,"byte_end":235893,"line_start":614,"line_end":614,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":964},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":236280,"byte_end":236306,"line_start":624,"line_end":624,"column_start":12,"column_end":38},"name":"vmctx_vmmemory_import_from","qualname":"<VMOffsets>::vmctx_vmmemory_import_from","value":"pub fn vmctx_vmmemory_import_from(&Self, MemoryIndex) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Return the offset to the `vmctx` field in [`VMMemoryImport`] index `index`.","sig":null,"attributes":[{"value":"/ Return the offset to the `vmctx` field in [`VMMemoryImport`] index `index`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":236120,"byte_end":236199,"line_start":621,"line_end":621,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":236204,"byte_end":236207,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ [`VMMemoryImport`]: crate::vmcontext::VMMemoryImport","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":236212,"byte_end":236268,"line_start":623,"line_end":623,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":965},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":236654,"byte_end":236684,"line_start":633,"line_end":633,"column_start":12,"column_end":42},"name":"vmctx_vmmemory_definition_base","qualname":"<VMOffsets>::vmctx_vmmemory_definition_base","value":"pub fn vmctx_vmmemory_definition_base(&Self, LocalMemoryIndex) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Return the offset to the `base` field in [`VMMemoryDefinition`] index `index`.","sig":null,"attributes":[{"value":"/ Return the offset to the `base` field in [`VMMemoryDefinition`] index `index`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":236483,"byte_end":236565,"line_start":630,"line_end":630,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":236570,"byte_end":236573,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ [`VMMemoryDefinition`]: crate::vmcontext::VMMemoryDefinition","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":236578,"byte_end":236642,"line_start":632,"line_end":632,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":966},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":237055,"byte_end":237095,"line_start":642,"line_end":642,"column_start":12,"column_end":52},"name":"vmctx_vmmemory_definition_current_length","qualname":"<VMOffsets>::vmctx_vmmemory_definition_current_length","value":"pub fn vmctx_vmmemory_definition_current_length(&Self, LocalMemoryIndex)\n-> u32","parent":null,"children":[],"decl_id":null,"docs":" Return the offset to the `current_length` field in [`VMMemoryDefinition`] index `index`.","sig":null,"attributes":[{"value":"/ Return the offset to the `current_length` field in [`VMMemoryDefinition`] index `index`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":236874,"byte_end":236966,"line_start":639,"line_end":639,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":236971,"byte_end":236974,"line_start":640,"line_end":640,"column_start":5,"column_end":8}},{"value":"/ [`VMMemoryDefinition`]: crate::vmcontext::VMMemoryDefinition","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":236979,"byte_end":237043,"line_start":641,"line_end":641,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":967},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":237454,"byte_end":237486,"line_start":651,"line_end":651,"column_start":12,"column_end":44},"name":"vmctx_vmglobal_import_definition","qualname":"<VMOffsets>::vmctx_vmglobal_import_definition","value":"pub fn vmctx_vmglobal_import_definition(&Self, GlobalIndex) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Return the offset to the `from` field in [`VMGlobalImport`] index `index`.","sig":null,"attributes":[{"value":"/ Return the offset to the `from` field in [`VMGlobalImport`] index `index`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":237295,"byte_end":237373,"line_start":648,"line_end":648,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":237378,"byte_end":237381,"line_start":649,"line_end":649,"column_start":5,"column_end":8}},{"value":"/ [`VMGlobalImport`]: crate::vmcontext::VMGlobalImport","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":237386,"byte_end":237442,"line_start":650,"line_end":650,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":968},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":237766,"byte_end":237788,"line_start":658,"line_end":658,"column_start":12,"column_end":34},"name":"vmctx_builtin_function","qualname":"<VMOffsets>::vmctx_builtin_function","value":"pub fn vmctx_builtin_function(&Self, VMBuiltinFunctionIndex) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Return the offset to builtin function in `VMBuiltinFunctionsArray` index `index`.\n","sig":null,"attributes":[{"value":"/ Return the offset to builtin function in `VMBuiltinFunctionsArray` index `index`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":237669,"byte_end":237754,"line_start":657,"line_end":657,"column_start":5,"column_end":90}}]},{"kind":"Struct","id":{"krate":0,"index":1886},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":238191,"byte_end":238217,"line_start":672,"line_end":672,"column_start":12,"column_end":38},"name":"TargetSharedSignatureIndex","qualname":"::vmoffsets::TargetSharedSignatureIndex","value":"","parent":null,"children":[],"decl_id":null,"docs":" Target specific type for shared signature index.\n","sig":null,"attributes":[{"value":"/ Target specific type for shared signature index.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":238097,"byte_end":238149,"line_start":670,"line_end":670,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":970},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":238325,"byte_end":238328,"line_start":676,"line_end":676,"column_start":18,"column_end":21},"name":"new","qualname":"<TargetSharedSignatureIndex>::new","value":"pub const fn new(u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs `TargetSharedSignatureIndex`.\n","sig":null,"attributes":[{"value":"/ Constructs `TargetSharedSignatureIndex`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":238263,"byte_end":238307,"line_start":675,"line_end":675,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":971},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":238424,"byte_end":238429,"line_start":681,"line_end":681,"column_start":18,"column_end":23},"name":"index","qualname":"<TargetSharedSignatureIndex>::index","value":"pub const fn index(Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns index value.\n","sig":null,"attributes":[{"value":"/ Returns index value.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":238382,"byte_end":238406,"line_start":680,"line_end":680,"column_start":5,"column_end":29}}]},{"kind":"Mod","id":{"krate":0,"index":972},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"libcalls","qualname":"::libcalls","value":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","parent":null,"children":[{"krate":0,"index":973},{"krate":0,"index":974},{"krate":0,"index":975},{"krate":0,"index":976},{"krate":0,"index":977},{"krate":0,"index":978},{"krate":0,"index":979},{"krate":0,"index":980},{"krate":0,"index":2566},{"krate":0,"index":981},{"krate":0,"index":2568},{"krate":0,"index":982},{"krate":0,"index":983},{"krate":0,"index":984},{"krate":0,"index":985},{"krate":0,"index":986},{"krate":0,"index":987},{"krate":0,"index":988},{"krate":0,"index":989},{"krate":0,"index":990},{"krate":0,"index":991},{"krate":0,"index":992},{"krate":0,"index":993},{"krate":0,"index":994},{"krate":0,"index":995},{"krate":0,"index":996},{"krate":0,"index":997},{"krate":0,"index":999},{"krate":0,"index":1001},{"krate":0,"index":1002},{"krate":0,"index":1003},{"krate":0,"index":1004},{"krate":0,"index":1005},{"krate":0,"index":1006},{"krate":0,"index":1007},{"krate":0,"index":1008},{"krate":0,"index":1009},{"krate":0,"index":1010},{"krate":0,"index":1011},{"krate":0,"index":1012},{"krate":0,"index":1013},{"krate":0,"index":1894},{"krate":0,"index":1989},{"krate":0,"index":1987},{"krate":0,"index":1985},{"krate":0,"index":1982},{"krate":0,"index":1983},{"krate":0,"index":1979},{"krate":0,"index":1980},{"krate":0,"index":1976},{"krate":0,"index":1970},{"krate":0,"index":1915},{"krate":0,"index":1014},{"krate":0,"index":1017}],"decl_id":null,"docs":" Runtime library calls.","sig":null,"attributes":[{"value":"/ Runtime library calls.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":238950,"byte_end":238976,"line_start":4,"line_end":4,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":238977,"byte_end":238980,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ Note that Wasm compilers may sometimes perform these inline rather than","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":238981,"byte_end":239056,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"/ calling them, particularly when CPUs have special instructions which compute","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":239057,"byte_end":239137,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"/ them directly.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":239138,"byte_end":239156,"line_start":8,"line_end":8,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":239157,"byte_end":239160,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ These functions are called by compiled Wasm code, and therefore must take","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":239161,"byte_end":239238,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ certain care about some things:","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":239239,"byte_end":239274,"line_start":11,"line_end":11,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":239275,"byte_end":239278,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ * They must always be `pub extern \"C\"` and should only contain basic, raw","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":239279,"byte_end":239356,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/   i32/i64/f32/f64/pointer parameters that are safe to pass across the system","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":239357,"byte_end":239437,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/   ABI!","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":239438,"byte_end":239448,"line_start":15,"line_end":15,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":239449,"byte_end":239452,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ * If any nested function propagates an `Err(trap)` out to the library","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":239453,"byte_end":239526,"line_start":17,"line_end":17,"column_start":1,"column_end":74}},{"value":"/   function frame, we need to raise it. This involves some nasty and quite","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":239527,"byte_end":239604,"line_start":18,"line_end":18,"column_start":1,"column_end":78}},{"value":"/   unsafe code under the covers! Notable, after raising the trap, drops","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":239605,"byte_end":239679,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/   **will not** be run for local variables! This can lead to things like","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":239680,"byte_end":239755,"line_start":20,"line_end":20,"column_start":1,"column_end":76}},{"value":"/   leaking `InstanceHandle`s which leads to never deallocating JIT code,","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":239756,"byte_end":239831,"line_start":21,"line_end":21,"column_start":1,"column_end":76}},{"value":"/   instances, and modules! Therefore, always use nested blocks to ensure","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":239832,"byte_end":239907,"line_start":22,"line_end":22,"column_start":1,"column_end":76}},{"value":"/   drops run before raising a trap:","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":239908,"byte_end":239946,"line_start":23,"line_end":23,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":239947,"byte_end":239950,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/   ```ignore","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":239951,"byte_end":239966,"line_start":25,"line_end":25,"column_start":1,"column_end":16}},{"value":"/   pub extern \"C\" fn my_lib_function(...) {","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":239967,"byte_end":240013,"line_start":26,"line_end":26,"column_start":1,"column_end":47}},{"value":"/       let result = {","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":240014,"byte_end":240038,"line_start":27,"line_end":27,"column_start":1,"column_end":25}},{"value":"/           // Do everything in here so drops run at the end of the block.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":240039,"byte_end":240115,"line_start":28,"line_end":28,"column_start":1,"column_end":77}},{"value":"/           ...","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":240116,"byte_end":240133,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/       };","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":240134,"byte_end":240146,"line_start":30,"line_end":30,"column_start":1,"column_end":13}},{"value":"/       if let Err(trap) = result {","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":240147,"byte_end":240184,"line_start":31,"line_end":31,"column_start":1,"column_end":38}},{"value":"/           // Now we can safely raise the trap without leaking!","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":240185,"byte_end":240251,"line_start":32,"line_end":32,"column_start":1,"column_end":67}},{"value":"/           raise_lib_trap(trap);","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":240252,"byte_end":240287,"line_start":33,"line_end":33,"column_start":1,"column_end":36}},{"value":"/       }","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":240288,"byte_end":240299,"line_start":34,"line_end":34,"column_start":1,"column_end":12}},{"value":"/   }","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":240300,"byte_end":240307,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/   ```","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":240308,"byte_end":240317,"line_start":36,"line_end":36,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":989},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":240637,"byte_end":240652,"line_start":47,"line_end":47,"column_start":19,"column_end":34},"name":"wasmer_f32_ceil","qualname":"::libcalls::wasmer_f32_ceil","value":"pub extern \"C\" fn wasmer_f32_ceil(f32) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Implementation of f32.ceil\n","sig":null,"attributes":[{"value":"/ Implementation of f32.ceil","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":240575,"byte_end":240605,"line_start":45,"line_end":45,"column_start":1,"column_end":31}},{"value":"no_mangle","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":240606,"byte_end":240618,"line_start":46,"line_end":46,"column_start":1,"column_end":13}}]},{"kind":"Function","id":{"krate":0,"index":990},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":240749,"byte_end":240765,"line_start":53,"line_end":53,"column_start":19,"column_end":35},"name":"wasmer_f32_floor","qualname":"::libcalls::wasmer_f32_floor","value":"pub extern \"C\" fn wasmer_f32_floor(f32) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Implementation of f32.floor\n","sig":null,"attributes":[{"value":"/ Implementation of f32.floor","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":240686,"byte_end":240717,"line_start":51,"line_end":51,"column_start":1,"column_end":32}},{"value":"no_mangle","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":240718,"byte_end":240730,"line_start":52,"line_end":52,"column_start":1,"column_end":13}}]},{"kind":"Function","id":{"krate":0,"index":991},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":240863,"byte_end":240879,"line_start":59,"line_end":59,"column_start":19,"column_end":35},"name":"wasmer_f32_trunc","qualname":"::libcalls::wasmer_f32_trunc","value":"pub extern \"C\" fn wasmer_f32_trunc(f32) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Implementation of f32.trunc\n","sig":null,"attributes":[{"value":"/ Implementation of f32.trunc","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":240800,"byte_end":240831,"line_start":57,"line_end":57,"column_start":1,"column_end":32}},{"value":"no_mangle","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":240832,"byte_end":240844,"line_start":58,"line_end":58,"column_start":1,"column_end":13}}]},{"kind":"Function","id":{"krate":0,"index":992},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":241033,"byte_end":241051,"line_start":66,"line_end":66,"column_start":19,"column_end":37},"name":"wasmer_f32_nearest","qualname":"::libcalls::wasmer_f32_nearest","value":"pub extern \"C\" fn wasmer_f32_nearest(f32) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Implementation of f32.nearest\n","sig":null,"attributes":[{"value":"/ Implementation of f32.nearest","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":240914,"byte_end":240947,"line_start":63,"line_end":63,"column_start":1,"column_end":34}},{"value":"allow(clippy :: float_arithmetic, clippy :: float_cmp)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":240948,"byte_end":241001,"line_start":64,"line_end":64,"column_start":1,"column_end":54}},{"value":"no_mangle","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":241002,"byte_end":241014,"line_start":65,"line_end":65,"column_start":1,"column_end":13}}]},{"kind":"Function","id":{"krate":0,"index":993},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":241674,"byte_end":241689,"line_start":92,"line_end":92,"column_start":19,"column_end":34},"name":"wasmer_f64_ceil","qualname":"::libcalls::wasmer_f64_ceil","value":"pub extern \"C\" fn wasmer_f64_ceil(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Implementation of f64.ceil\n","sig":null,"attributes":[{"value":"/ Implementation of f64.ceil","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":241612,"byte_end":241642,"line_start":90,"line_end":90,"column_start":1,"column_end":31}},{"value":"no_mangle","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":241643,"byte_end":241655,"line_start":91,"line_end":91,"column_start":1,"column_end":13}}]},{"kind":"Function","id":{"krate":0,"index":994},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":241786,"byte_end":241802,"line_start":98,"line_end":98,"column_start":19,"column_end":35},"name":"wasmer_f64_floor","qualname":"::libcalls::wasmer_f64_floor","value":"pub extern \"C\" fn wasmer_f64_floor(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Implementation of f64.floor\n","sig":null,"attributes":[{"value":"/ Implementation of f64.floor","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":241723,"byte_end":241754,"line_start":96,"line_end":96,"column_start":1,"column_end":32}},{"value":"no_mangle","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":241755,"byte_end":241767,"line_start":97,"line_end":97,"column_start":1,"column_end":13}}]},{"kind":"Function","id":{"krate":0,"index":995},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":241900,"byte_end":241916,"line_start":104,"line_end":104,"column_start":19,"column_end":35},"name":"wasmer_f64_trunc","qualname":"::libcalls::wasmer_f64_trunc","value":"pub extern \"C\" fn wasmer_f64_trunc(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Implementation of f64.trunc\n","sig":null,"attributes":[{"value":"/ Implementation of f64.trunc","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":241837,"byte_end":241868,"line_start":102,"line_end":102,"column_start":1,"column_end":32}},{"value":"no_mangle","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":241869,"byte_end":241881,"line_start":103,"line_end":103,"column_start":1,"column_end":13}}]},{"kind":"Function","id":{"krate":0,"index":996},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":242070,"byte_end":242088,"line_start":111,"line_end":111,"column_start":19,"column_end":37},"name":"wasmer_f64_nearest","qualname":"::libcalls::wasmer_f64_nearest","value":"pub extern \"C\" fn wasmer_f64_nearest(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Implementation of f64.nearest\n","sig":null,"attributes":[{"value":"/ Implementation of f64.nearest","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":241951,"byte_end":241984,"line_start":108,"line_end":108,"column_start":1,"column_end":34}},{"value":"allow(clippy :: float_arithmetic, clippy :: float_cmp)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":241985,"byte_end":242038,"line_start":109,"line_end":109,"column_start":1,"column_end":54}},{"value":"no_mangle","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":242039,"byte_end":242051,"line_start":110,"line_end":110,"column_start":1,"column_end":13}}]},{"kind":"Function","id":{"krate":0,"index":997},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":242806,"byte_end":242826,"line_start":140,"line_end":140,"column_start":26,"column_end":46},"name":"wasmer_memory32_grow","qualname":"::libcalls::wasmer_memory32_grow","value":"pub unsafe extern \"C\" fn wasmer_memory32_grow(*mut VMContext, u32, u32) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Implementation of memory.grow for locally-defined 32-bit memories.","sig":null,"attributes":[{"value":"/ Implementation of memory.grow for locally-defined 32-bit memories.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":242649,"byte_end":242719,"line_start":135,"line_end":135,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":242720,"byte_end":242723,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":242724,"byte_end":242736,"line_start":137,"line_end":137,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":242737,"byte_end":242740,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ `vmctx` must be valid and not null.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":242741,"byte_end":242780,"line_start":139,"line_end":139,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":999},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":243287,"byte_end":243316,"line_start":159,"line_end":159,"column_start":26,"column_end":55},"name":"wasmer_imported_memory32_grow","qualname":"::libcalls::wasmer_imported_memory32_grow","value":"pub unsafe extern \"C\" fn wasmer_imported_memory32_grow(*mut VMContext, u32,\n                                                       u32) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Implementation of memory.grow for imported 32-bit memories.","sig":null,"attributes":[{"value":"/ Implementation of memory.grow for imported 32-bit memories.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":243137,"byte_end":243200,"line_start":154,"line_end":154,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":243201,"byte_end":243204,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":243205,"byte_end":243217,"line_start":156,"line_end":156,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":243218,"byte_end":243221,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ `vmctx` must be valid and not null.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":243222,"byte_end":243261,"line_start":158,"line_end":158,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":1001},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":243788,"byte_end":243808,"line_start":178,"line_end":178,"column_start":26,"column_end":46},"name":"wasmer_memory32_size","qualname":"::libcalls::wasmer_memory32_size","value":"pub unsafe extern \"C\" fn wasmer_memory32_size(*mut VMContext, u32) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Implementation of memory.size for locally-defined 32-bit memories.","sig":null,"attributes":[{"value":"/ Implementation of memory.size for locally-defined 32-bit memories.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":243631,"byte_end":243701,"line_start":173,"line_end":173,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":243702,"byte_end":243705,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":243706,"byte_end":243718,"line_start":175,"line_end":175,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":243719,"byte_end":243722,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ `vmctx` must be valid and not null.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":243723,"byte_end":243762,"line_start":177,"line_end":177,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":1002},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":244161,"byte_end":244190,"line_start":190,"line_end":190,"column_start":26,"column_end":55},"name":"wasmer_imported_memory32_size","qualname":"::libcalls::wasmer_imported_memory32_size","value":"pub unsafe extern \"C\" fn wasmer_imported_memory32_size(*mut VMContext, u32)\n-> u32","parent":null,"children":[],"decl_id":null,"docs":" Implementation of memory.size for imported 32-bit memories.","sig":null,"attributes":[{"value":"/ Implementation of memory.size for imported 32-bit memories.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":244011,"byte_end":244074,"line_start":185,"line_end":185,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":244075,"byte_end":244078,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":244079,"byte_end":244091,"line_start":187,"line_end":187,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":244092,"byte_end":244095,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ `vmctx` must be valid and not null.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":244096,"byte_end":244135,"line_start":189,"line_end":189,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":1003},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":244530,"byte_end":244547,"line_start":205,"line_end":205,"column_start":26,"column_end":43},"name":"wasmer_table_copy","qualname":"::libcalls::wasmer_table_copy","value":"pub unsafe extern \"C\" fn wasmer_table_copy(*mut VMContext, u32, u32, u32, u32,\n                                           u32)","parent":null,"children":[],"decl_id":null,"docs":" Implementation of `table.copy`.","sig":null,"attributes":[{"value":"/ Implementation of `table.copy`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":244408,"byte_end":244443,"line_start":200,"line_end":200,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":244444,"byte_end":244447,"line_start":201,"line_end":201,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":244448,"byte_end":244460,"line_start":202,"line_end":202,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":244461,"byte_end":244464,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/ `vmctx` must be valid and not null.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":244465,"byte_end":244504,"line_start":204,"line_end":204,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":1004},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":245247,"byte_end":245264,"line_start":231,"line_end":231,"column_start":26,"column_end":43},"name":"wasmer_table_init","qualname":"::libcalls::wasmer_table_init","value":"pub unsafe extern \"C\" fn wasmer_table_init(*mut VMContext, u32, u32, u32, u32,\n                                           u32)","parent":null,"children":[],"decl_id":null,"docs":" Implementation of `table.init`.","sig":null,"attributes":[{"value":"/ Implementation of `table.init`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":245125,"byte_end":245160,"line_start":226,"line_end":226,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":245161,"byte_end":245164,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":245165,"byte_end":245177,"line_start":228,"line_end":228,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":245178,"byte_end":245181,"line_start":229,"line_end":229,"column_start":1,"column_end":4}},{"value":"/ `vmctx` must be valid and not null.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":245182,"byte_end":245221,"line_start":230,"line_end":230,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":1005},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":245832,"byte_end":245848,"line_start":255,"line_end":255,"column_start":26,"column_end":42},"name":"wasmer_elem_drop","qualname":"::libcalls::wasmer_elem_drop","value":"pub unsafe extern \"C\" fn wasmer_elem_drop(*mut VMContext, u32)","parent":null,"children":[],"decl_id":null,"docs":" Implementation of `elem.drop`.","sig":null,"attributes":[{"value":"/ Implementation of `elem.drop`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":245711,"byte_end":245745,"line_start":250,"line_end":250,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":245746,"byte_end":245749,"line_start":251,"line_end":251,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":245750,"byte_end":245762,"line_start":252,"line_end":252,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":245763,"byte_end":245766,"line_start":253,"line_end":253,"column_start":1,"column_end":4}},{"value":"/ `vmctx` must be valid and not null.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":245767,"byte_end":245806,"line_start":254,"line_end":254,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":1006},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":246177,"byte_end":246201,"line_start":266,"line_end":266,"column_start":26,"column_end":50},"name":"wasmer_local_memory_copy","qualname":"::libcalls::wasmer_local_memory_copy","value":"pub unsafe extern \"C\" fn wasmer_local_memory_copy(*mut VMContext, u32, u32,\n                                                  u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Implementation of `memory.copy` for locally defined memories.","sig":null,"attributes":[{"value":"/ Implementation of `memory.copy` for locally defined memories.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":246025,"byte_end":246090,"line_start":261,"line_end":261,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":246091,"byte_end":246094,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":246095,"byte_end":246107,"line_start":263,"line_end":263,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":246108,"byte_end":246111,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ `vmctx` must be valid and not null.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":246112,"byte_end":246151,"line_start":265,"line_end":265,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":1007},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":246719,"byte_end":246746,"line_start":288,"line_end":288,"column_start":26,"column_end":53},"name":"wasmer_imported_memory_copy","qualname":"::libcalls::wasmer_imported_memory_copy","value":"pub unsafe extern \"C\" fn wasmer_imported_memory_copy(*mut VMContext, u32, u32,\n                                                     u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Implementation of `memory.copy` for imported memories.","sig":null,"attributes":[{"value":"/ Implementation of `memory.copy` for imported memories.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":246574,"byte_end":246632,"line_start":283,"line_end":283,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":246633,"byte_end":246636,"line_start":284,"line_end":284,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":246637,"byte_end":246649,"line_start":285,"line_end":285,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":246650,"byte_end":246653,"line_start":286,"line_end":286,"column_start":1,"column_end":4}},{"value":"/ `vmctx` must be valid and not null.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":246654,"byte_end":246693,"line_start":287,"line_end":287,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":1008},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":247269,"byte_end":247287,"line_start":310,"line_end":310,"column_start":26,"column_end":44},"name":"wasmer_memory_fill","qualname":"::libcalls::wasmer_memory_fill","value":"pub unsafe extern \"C\" fn wasmer_memory_fill(*mut VMContext, u32, u32, u32,\n                                            u32)","parent":null,"children":[],"decl_id":null,"docs":" Implementation of `memory.fill` for locally defined memories.","sig":null,"attributes":[{"value":"/ Implementation of `memory.fill` for locally defined memories.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":247117,"byte_end":247182,"line_start":305,"line_end":305,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":247183,"byte_end":247186,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":247187,"byte_end":247199,"line_start":307,"line_end":307,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":247200,"byte_end":247203,"line_start":308,"line_end":308,"column_start":1,"column_end":4}},{"value":"/ `vmctx` must be valid and not null.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":247204,"byte_end":247243,"line_start":309,"line_end":309,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":1009},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":247805,"byte_end":247832,"line_start":332,"line_end":332,"column_start":26,"column_end":53},"name":"wasmer_imported_memory_fill","qualname":"::libcalls::wasmer_imported_memory_fill","value":"pub unsafe extern \"C\" fn wasmer_imported_memory_fill(*mut VMContext, u32, u32,\n                                                     u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Implementation of `memory.fill` for imported memories.","sig":null,"attributes":[{"value":"/ Implementation of `memory.fill` for imported memories.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":247660,"byte_end":247718,"line_start":327,"line_end":327,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":247719,"byte_end":247722,"line_start":328,"line_end":328,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":247723,"byte_end":247735,"line_start":329,"line_end":329,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":247736,"byte_end":247739,"line_start":330,"line_end":330,"column_start":1,"column_end":4}},{"value":"/ `vmctx` must be valid and not null.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":247740,"byte_end":247779,"line_start":331,"line_end":331,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":1010},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":248326,"byte_end":248344,"line_start":354,"line_end":354,"column_start":26,"column_end":44},"name":"wasmer_memory_init","qualname":"::libcalls::wasmer_memory_init","value":"pub unsafe extern \"C\" fn wasmer_memory_init(*mut VMContext, u32, u32, u32,\n                                            u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Implementation of `memory.init`.","sig":null,"attributes":[{"value":"/ Implementation of `memory.init`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":248203,"byte_end":248239,"line_start":349,"line_end":349,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":248240,"byte_end":248243,"line_start":350,"line_end":350,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":248244,"byte_end":248256,"line_start":351,"line_end":351,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":248257,"byte_end":248260,"line_start":352,"line_end":352,"column_start":1,"column_end":4}},{"value":"/ `vmctx` must be valid and not null.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":248261,"byte_end":248300,"line_start":353,"line_end":353,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":1011},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":248918,"byte_end":248934,"line_start":378,"line_end":378,"column_start":26,"column_end":42},"name":"wasmer_data_drop","qualname":"::libcalls::wasmer_data_drop","value":"pub unsafe extern \"C\" fn wasmer_data_drop(*mut VMContext, u32)","parent":null,"children":[],"decl_id":null,"docs":" Implementation of `data.drop`.","sig":null,"attributes":[{"value":"/ Implementation of `data.drop`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":248797,"byte_end":248831,"line_start":373,"line_end":373,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":248832,"byte_end":248835,"line_start":374,"line_end":374,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":248836,"byte_end":248848,"line_start":375,"line_end":375,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":248849,"byte_end":248852,"line_start":376,"line_end":376,"column_start":1,"column_end":4}},{"value":"/ `vmctx` must be valid and not null.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":248853,"byte_end":248892,"line_start":377,"line_end":377,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":1012},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":249345,"byte_end":249362,"line_start":391,"line_end":391,"column_start":26,"column_end":43},"name":"wasmer_raise_trap","qualname":"::libcalls::wasmer_raise_trap","value":"pub unsafe extern \"C\" fn wasmer_raise_trap(TrapCode) -> !","parent":null,"children":[],"decl_id":null,"docs":" Implementation for raising a trap","sig":null,"attributes":[{"value":"/ Implementation for raising a trap","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":249110,"byte_end":249147,"line_start":384,"line_end":384,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":249148,"byte_end":249151,"line_start":385,"line_end":385,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":249152,"byte_end":249164,"line_start":386,"line_end":386,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":249165,"byte_end":249168,"line_start":387,"line_end":387,"column_start":1,"column_end":4}},{"value":"/ Only safe to call when wasm code is on the stack, aka `wasmer_call` or","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":249169,"byte_end":249243,"line_start":388,"line_end":388,"column_start":1,"column_end":75}},{"value":"/ `wasmer_call_trampoline` must have been previously called.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":249244,"byte_end":249306,"line_start":389,"line_end":389,"column_start":1,"column_end":63}},{"value":"no_mangle","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":249307,"byte_end":249319,"line_start":390,"line_end":390,"column_start":1,"column_end":13}}]},{"kind":"Static","id":{"krate":0,"index":1013},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":249648,"byte_end":249665,"line_start":403,"line_end":403,"column_start":12,"column_end":29},"name":"wasmer_probestack","qualname":"::libcalls::wasmer_probestack","value":"unsafe extern \"C\" fn()","parent":null,"children":[],"decl_id":null,"docs":" Probestack check","sig":null,"attributes":[{"value":"/ Probestack check","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":249469,"byte_end":249489,"line_start":396,"line_end":396,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":249490,"byte_end":249493,"line_start":397,"line_end":397,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":249494,"byte_end":249506,"line_start":398,"line_end":398,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":249507,"byte_end":249510,"line_start":399,"line_end":399,"column_start":1,"column_end":4}},{"value":"/ This function does not follow the standard function ABI, and is called as","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":249511,"byte_end":249588,"line_start":400,"line_end":400,"column_start":1,"column_end":78}},{"value":"/ part of the function prologue.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":249589,"byte_end":249623,"line_start":401,"line_end":401,"column_start":1,"column_end":35}},{"value":"no_mangle","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":249624,"byte_end":249636,"line_start":402,"line_end":402,"column_start":1,"column_end":13}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1895},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":249910,"byte_end":249917,"line_start":411,"line_end":411,"column_start":5,"column_end":12},"name":"CeilF32","qualname":"::libcalls::LibCall::CeilF32","value":"LibCall::CeilF32","parent":{"krate":0,"index":1894},"children":[],"decl_id":null,"docs":" ceil.f32\n","sig":null,"attributes":[{"value":"/ ceil.f32","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":249893,"byte_end":249905,"line_start":410,"line_end":410,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1897},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":249941,"byte_end":249948,"line_start":414,"line_end":414,"column_start":5,"column_end":12},"name":"CeilF64","qualname":"::libcalls::LibCall::CeilF64","value":"LibCall::CeilF64","parent":{"krate":0,"index":1894},"children":[],"decl_id":null,"docs":" ceil.f64\n","sig":null,"attributes":[{"value":"/ ceil.f64","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":249924,"byte_end":249936,"line_start":413,"line_end":413,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1899},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":249973,"byte_end":249981,"line_start":417,"line_end":417,"column_start":5,"column_end":13},"name":"FloorF32","qualname":"::libcalls::LibCall::FloorF32","value":"LibCall::FloorF32","parent":{"krate":0,"index":1894},"children":[],"decl_id":null,"docs":" floor.f32\n","sig":null,"attributes":[{"value":"/ floor.f32","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":249955,"byte_end":249968,"line_start":416,"line_end":416,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1901},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":250006,"byte_end":250014,"line_start":420,"line_end":420,"column_start":5,"column_end":13},"name":"FloorF64","qualname":"::libcalls::LibCall::FloorF64","value":"LibCall::FloorF64","parent":{"krate":0,"index":1894},"children":[],"decl_id":null,"docs":" floor.f64\n","sig":null,"attributes":[{"value":"/ floor.f64","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":249988,"byte_end":250001,"line_start":419,"line_end":419,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1903},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":250041,"byte_end":250051,"line_start":423,"line_end":423,"column_start":5,"column_end":15},"name":"NearestF32","qualname":"::libcalls::LibCall::NearestF32","value":"LibCall::NearestF32","parent":{"krate":0,"index":1894},"children":[],"decl_id":null,"docs":" nearest.f32\n","sig":null,"attributes":[{"value":"/ nearest.f32","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":250021,"byte_end":250036,"line_start":422,"line_end":422,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1905},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":250078,"byte_end":250088,"line_start":426,"line_end":426,"column_start":5,"column_end":15},"name":"NearestF64","qualname":"::libcalls::LibCall::NearestF64","value":"LibCall::NearestF64","parent":{"krate":0,"index":1894},"children":[],"decl_id":null,"docs":" nearest.f64\n","sig":null,"attributes":[{"value":"/ nearest.f64","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":250058,"byte_end":250073,"line_start":425,"line_end":425,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1907},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":250226,"byte_end":250236,"line_start":430,"line_end":430,"column_start":5,"column_end":15},"name":"Probestack","qualname":"::libcalls::LibCall::Probestack","value":"LibCall::Probestack","parent":{"krate":0,"index":1894},"children":[],"decl_id":null,"docs":" probe for stack overflow. These are emitted for functions which need\n when the `enable_probestack` setting is true.\n","sig":null,"attributes":[{"value":"/ probe for stack overflow. These are emitted for functions which need","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":250095,"byte_end":250167,"line_start":428,"line_end":428,"column_start":5,"column_end":77}},{"value":"/ when the `enable_probestack` setting is true.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":250172,"byte_end":250221,"line_start":429,"line_end":429,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1909},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":250265,"byte_end":250274,"line_start":433,"line_end":433,"column_start":5,"column_end":14},"name":"RaiseTrap","qualname":"::libcalls::LibCall::RaiseTrap","value":"LibCall::RaiseTrap","parent":{"krate":0,"index":1894},"children":[],"decl_id":null,"docs":" A custom trap\n","sig":null,"attributes":[{"value":"/ A custom trap","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":250243,"byte_end":250260,"line_start":432,"line_end":432,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1911},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":250299,"byte_end":250307,"line_start":436,"line_end":436,"column_start":5,"column_end":13},"name":"TruncF32","qualname":"::libcalls::LibCall::TruncF32","value":"LibCall::TruncF32","parent":{"krate":0,"index":1894},"children":[],"decl_id":null,"docs":" trunc.f32\n","sig":null,"attributes":[{"value":"/ trunc.f32","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":250281,"byte_end":250294,"line_start":435,"line_end":435,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1913},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":250332,"byte_end":250340,"line_start":439,"line_end":439,"column_start":5,"column_end":13},"name":"TruncF64","qualname":"::libcalls::LibCall::TruncF64","value":"LibCall::TruncF64","parent":{"krate":0,"index":1894},"children":[],"decl_id":null,"docs":" frunc.f64\n","sig":null,"attributes":[{"value":"/ frunc.f64","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":250314,"byte_end":250327,"line_start":438,"line_end":438,"column_start":5,"column_end":18}}]},{"kind":"Enum","id":{"krate":0,"index":1894},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":249879,"byte_end":249886,"line_start":409,"line_end":409,"column_start":10,"column_end":17},"name":"LibCall","qualname":"::libcalls::LibCall","value":"pub enum LibCall {\n\n    /// ceil.f32\n    CeilF32,\n\n    /// ceil.f64\n    CeilF64,\n\n    /// floor.f32\n    FloorF32,\n\n    /// floor.f64\n    FloorF64,\n\n    /// nearest.f32\n    NearestF32,\n\n    /// nearest.f64\n    NearestF64,\n\n    /// probe for stack overflow. These are emitted for functions which need\n    /// when the `enable_probestack` setting is true.\n    Probestack,\n\n    /// A custom trap\n    RaiseTrap,\n\n    /// trunc.f32\n    TruncF32,\n\n    /// frunc.f64\n    TruncF64,\n}","parent":null,"children":[{"krate":0,"index":1895},{"krate":0,"index":1897},{"krate":0,"index":1899},{"krate":0,"index":1901},{"krate":0,"index":1903},{"krate":0,"index":1905},{"krate":0,"index":1907},{"krate":0,"index":1909},{"krate":0,"index":1911},{"krate":0,"index":1913}],"decl_id":null,"docs":" The name of a runtime library routine.","sig":null,"attributes":[{"value":"/ The name of a runtime library routine.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":249705,"byte_end":249747,"line_start":405,"line_end":405,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":249748,"byte_end":249751,"line_start":406,"line_end":406,"column_start":1,"column_end":4}},{"value":"/ This list is likely to grow over time.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":249752,"byte_end":249794,"line_start":407,"line_end":407,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1015},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":250413,"byte_end":250429,"line_start":444,"line_end":444,"column_start":12,"column_end":28},"name":"function_pointer","qualname":"<LibCall>::function_pointer","value":"pub fn function_pointer(Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The function pointer to a libcall\n","sig":null,"attributes":[{"value":"/ The function pointer to a libcall","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":250364,"byte_end":250401,"line_start":443,"line_end":443,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1016},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":251135,"byte_end":251151,"line_start":460,"line_end":460,"column_start":12,"column_end":28},"name":"to_function_name","qualname":"<LibCall>::to_function_name","value":"pub fn to_function_name(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Return the function name associated to the libcall.\n","sig":null,"attributes":[{"value":"/ Return the function name associated to the libcall.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":251068,"byte_end":251123,"line_start":459,"line_end":459,"column_start":5,"column_end":60}}]},{"kind":"Const","id":{"krate":0,"index":1064},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\lib.rs","byte_start":1765,"byte_end":1772,"line_start":61,"line_end":61,"column_start":11,"column_end":18},"name":"VERSION","qualname":"::VERSION","value":"&str","parent":null,"children":[],"decl_id":null,"docs":" Version number of this crate.\n","sig":null,"attributes":[{"value":"/ Version number of this crate.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\lib.rs","byte_start":1721,"byte_end":1754,"line_start":60,"line_end":60,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":1990},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\lib.rs","byte_start":1915,"byte_end":1930,"line_start":66,"line_end":66,"column_start":12,"column_end":27},"name":"FunctionBodyPtr","qualname":"::FunctionBodyPtr","value":"","parent":null,"children":[],"decl_id":null,"docs":" A safe wrapper around `VMFunctionBody`.\n","sig":null,"attributes":[{"value":"/ A safe wrapper around `VMFunctionBody`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\lib.rs","byte_start":1809,"byte_end":1852,"line_start":63,"line_end":63,"column_start":1,"column_end":44}},{"value":"repr(transparent)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\lib.rs","byte_start":1883,"byte_end":1903,"line_start":65,"line_end":65,"column_start":1,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":1992},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\lib.rs","byte_start":1931,"byte_end":1956,"line_start":66,"line_end":66,"column_start":28,"column_end":53},"name":"0","qualname":"::FunctionBodyPtr::0","value":"*const vmcontext::VMFunctionBody","parent":{"krate":0,"index":1990},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1998},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\lib.rs","byte_start":2598,"byte_end":2612,"line_start":88,"line_end":88,"column_start":12,"column_end":26},"name":"SectionBodyPtr","qualname":"::SectionBodyPtr","value":"","parent":null,"children":[],"decl_id":null,"docs":" Pointers to section data.\n","sig":null,"attributes":[{"value":"/ Pointers to section data.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\lib.rs","byte_start":2506,"byte_end":2535,"line_start":85,"line_end":85,"column_start":1,"column_end":30}},{"value":"repr(transparent)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\lib.rs","byte_start":2566,"byte_end":2586,"line_start":87,"line_end":87,"column_start":1,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":2000},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\lib.rs","byte_start":2613,"byte_end":2626,"line_start":88,"line_end":88,"column_start":27,"column_end":40},"name":"0","qualname":"::SectionBodyPtr::0","value":"*const u8","parent":{"krate":0,"index":1998},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\export.rs","byte_start":4628,"byte_end":4644,"line_start":59,"line_end":59,"column_start":22,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\export.rs","byte_start":4755,"byte_end":4771,"line_start":62,"line_end":62,"column_start":22,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\export.rs","byte_start":4808,"byte_end":4816,"line_start":64,"line_end":64,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":25}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\export.rs","byte_start":5470,"byte_end":5483,"line_start":85,"line_end":85,"column_start":22,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\export.rs","byte_start":5750,"byte_end":5763,"line_start":91,"line_end":91,"column_start":22,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\export.rs","byte_start":5773,"byte_end":5786,"line_start":93,"line_end":93,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\export.rs","byte_start":6239,"byte_end":6247,"line_start":110,"line_end":110,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":33}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\export.rs","byte_start":6903,"byte_end":6917,"line_start":131,"line_end":131,"column_start":22,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\export.rs","byte_start":7184,"byte_end":7198,"line_start":137,"line_end":137,"column_start":22,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\export.rs","byte_start":7208,"byte_end":7222,"line_start":139,"line_end":139,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\export.rs","byte_start":7675,"byte_end":7683,"line_start":156,"line_end":156,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":41}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\export.rs","byte_start":8360,"byte_end":8374,"line_start":177,"line_end":177,"column_start":22,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\export.rs","byte_start":8684,"byte_end":8698,"line_start":183,"line_end":183,"column_start":22,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\export.rs","byte_start":8708,"byte_end":8722,"line_start":185,"line_end":185,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":45}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\export.rs","byte_start":8939,"byte_end":8947,"line_start":192,"line_end":192,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":47}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\global.rs","byte_start":9655,"byte_end":9661,"line_start":21,"line_end":21,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\global.rs","byte_start":9779,"byte_end":9785,"line_start":24,"line_end":24,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\global.rs","byte_start":10506,"byte_end":10512,"line_start":44,"line_end":44,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":67},{"krate":0,"index":69}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\imports.rs","byte_start":15096,"byte_end":15103,"line_start":37,"line_end":37,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\allocator.rs","byte_start":68239,"byte_end":68256,"line_start":46,"line_end":46,"column_start":15,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":120}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\allocator.rs","byte_start":68640,"byte_end":68657,"line_start":60,"line_end":60,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\ref.rs","byte_start":76975,"byte_end":76986,"line_start":56,"line_end":56,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\ref.rs","byte_start":78968,"byte_end":78979,"line_start":116,"line_end":116,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\ref.rs","byte_start":79004,"byte_end":79015,"line_start":117,"line_end":117,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\ref.rs","byte_start":79035,"byte_end":79046,"line_start":119,"line_end":119,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":147}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\ref.rs","byte_start":80903,"byte_end":80914,"line_start":164,"line_end":164,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":149}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\ref.rs","byte_start":81125,"byte_end":81136,"line_start":172,"line_end":172,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":151}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":22527,"byte_end":22544,"line_start":142,"line_end":142,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":248}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":22809,"byte_end":22826,"line_start":152,"line_end":152,"column_start":16,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":250}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":23365,"byte_end":23382,"line_start":174,"line_end":174,"column_start":15,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":252}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":23844,"byte_end":23852,"line_start":192,"line_end":192,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":254}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":24025,"byte_end":24033,"line_start":199,"line_end":199,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":256},{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":267},{"krate":0,"index":268},{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":273},{"krate":0,"index":274},{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":297},{"krate":0,"index":299},{"krate":0,"index":301},{"krate":0,"index":302},{"krate":0,"index":304},{"krate":0,"index":306},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":44434,"byte_end":44448,"line_start":785,"line_end":785,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":328},{"krate":0,"index":330},{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":336},{"krate":0,"index":337},{"krate":0,"index":338},{"krate":0,"index":339},{"krate":0,"index":340},{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":346},{"krate":0,"index":347},{"krate":0,"index":348},{"krate":0,"index":349}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":59727,"byte_end":59741,"line_start":1178,"line_end":1178,"column_start":14,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1187}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\memory.rs","byte_start":86415,"byte_end":86426,"line_start":86,"line_end":86,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":385}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\memory.rs","byte_start":89282,"byte_end":89294,"line_start":165,"line_end":165,"column_start":22,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\memory.rs","byte_start":89397,"byte_end":89409,"line_start":168,"line_end":168,"column_start":22,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\memory.rs","byte_start":89603,"byte_end":89615,"line_start":178,"line_end":178,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":398}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\memory.rs","byte_start":94555,"byte_end":94567,"line_start":304,"line_end":304,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":400},{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":403},{"krate":0,"index":405}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\mmap.rs","byte_start":99421,"byte_end":99425,"line_start":30,"line_end":30,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":414},{"krate":0,"index":415},{"krate":0,"index":416},{"krate":0,"index":423},{"krate":0,"index":429},{"krate":0,"index":430},{"krate":0,"index":431},{"krate":0,"index":432},{"krate":0,"index":433},{"krate":0,"index":434}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\mmap.rs","byte_start":107323,"byte_end":107327,"line_start":261,"line_end":261,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":436}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":109314,"byte_end":109322,"line_start":27,"line_end":27,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":483}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":109416,"byte_end":109424,"line_start":33,"line_end":33,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":485}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":112244,"byte_end":112254,"line_start":118,"line_end":118,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":488},{"krate":0,"index":489},{"krate":0,"index":491},{"krate":0,"index":493},{"krate":0,"index":497},{"krate":0,"index":501},{"krate":0,"index":505},{"krate":0,"index":506},{"krate":0,"index":507},{"krate":0,"index":508},{"krate":0,"index":509},{"krate":0,"index":510},{"krate":0,"index":511},{"krate":0,"index":512},{"krate":0,"index":513},{"krate":0,"index":514},{"krate":0,"index":515},{"krate":0,"index":516},{"krate":0,"index":517},{"krate":0,"index":518}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":120648,"byte_end":120658,"line_start":333,"line_end":333,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":523}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":121145,"byte_end":121160,"line_start":349,"line_end":349,"column_start":68,"column_end":83},"value":"","parent":null,"children":[{"krate":0,"index":530}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":121334,"byte_end":121349,"line_start":356,"line_end":356,"column_start":46,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":533},{"krate":0,"index":536},{"krate":0,"index":539},{"krate":0,"index":542}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":122605,"byte_end":122620,"line_start":387,"line_end":387,"column_start":59,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":547},{"krate":0,"index":548}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":123003,"byte_end":123018,"line_start":401,"line_end":401,"column_start":68,"column_end":83},"value":"","parent":null,"children":[{"krate":0,"index":555}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":123192,"byte_end":123207,"line_start":408,"line_end":408,"column_start":46,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":558},{"krate":0,"index":561},{"krate":0,"index":564},{"krate":0,"index":567}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":124598,"byte_end":124613,"line_start":443,"line_end":443,"column_start":59,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":572},{"krate":0,"index":573}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\sig_registry.rs","byte_start":128633,"byte_end":128650,"line_start":34,"line_end":34,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":587},{"krate":0,"index":588},{"krate":0,"index":589}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\table.rs","byte_start":134792,"byte_end":134803,"line_start":132,"line_end":132,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\table.rs","byte_start":134905,"byte_end":134916,"line_start":134,"line_end":134,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\table.rs","byte_start":134926,"byte_end":134937,"line_start":136,"line_end":136,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":625},{"krate":0,"index":626},{"krate":0,"index":627},{"krate":0,"index":629}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\table.rs","byte_start":138436,"byte_end":138447,"line_start":223,"line_end":223,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":631},{"krate":0,"index":632},{"krate":0,"index":633},{"krate":0,"index":634},{"krate":0,"index":636},{"krate":0,"index":637},{"krate":0,"index":638}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\trapcode.rs","byte_start":143846,"byte_end":143854,"line_start":80,"line_end":80,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":651}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\trapcode.rs","byte_start":145117,"byte_end":145125,"line_start":105,"line_end":105,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":653}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\trapcode.rs","byte_start":146185,"byte_end":146193,"line_start":130,"line_end":130,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":655},{"krate":0,"index":656}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":168196,"byte_end":168200,"line_start":449,"line_end":449,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":691},{"krate":0,"index":692},{"krate":0,"index":693}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":172359,"byte_end":172374,"line_start":586,"line_end":586,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":729},{"krate":0,"index":730},{"krate":0,"index":735},{"krate":0,"index":737},{"krate":0,"index":738}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":177484,"byte_end":177499,"line_start":727,"line_end":727,"column_start":15,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":742}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":178487,"byte_end":178492,"line_start":753,"line_end":753,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":758}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":183633,"byte_end":183654,"line_start":31,"line_end":31,"column_start":6,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":792}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":183827,"byte_end":183848,"line_start":38,"line_end":38,"column_start":26,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":794}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":184094,"byte_end":184115,"line_start":46,"line_end":46,"column_start":30,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":796}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":186212,"byte_end":186236,"line_start":111,"line_end":111,"column_start":46,"column_end":70},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":186415,"byte_end":186439,"line_start":114,"line_end":114,"column_start":46,"column_end":70},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":186494,"byte_end":186518,"line_start":116,"line_end":116,"column_start":48,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":807}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":191642,"byte_end":191656,"line_start":281,"line_end":281,"column_start":22,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":191990,"byte_end":192004,"line_start":287,"line_end":287,"column_start":22,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":193361,"byte_end":193379,"line_start":331,"line_end":331,"column_start":22,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":193706,"byte_end":193724,"line_start":337,"line_end":337,"column_start":22,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":193734,"byte_end":193752,"line_start":339,"line_end":339,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":816},{"krate":0,"index":819}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":198619,"byte_end":198644,"line_start":494,"line_end":494,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":822}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":200401,"byte_end":200419,"line_start":547,"line_end":547,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":824},{"krate":0,"index":826},{"krate":0,"index":827},{"krate":0,"index":828},{"krate":0,"index":829},{"krate":0,"index":830},{"krate":0,"index":831},{"krate":0,"index":832},{"krate":0,"index":833},{"krate":0,"index":834},{"krate":0,"index":835},{"krate":0,"index":836},{"krate":0,"index":837},{"krate":0,"index":838},{"krate":0,"index":839},{"krate":0,"index":840},{"krate":0,"index":842}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":206930,"byte_end":206952,"line_start":737,"line_end":737,"column_start":6,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":845}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":207085,"byte_end":207107,"line_start":744,"line_end":744,"column_start":18,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":847}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":208734,"byte_end":208756,"line_start":795,"line_end":795,"column_start":18,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":849}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":209118,"byte_end":209140,"line_start":811,"line_end":811,"column_start":6,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":851},{"krate":0,"index":852},{"krate":0,"index":853},{"krate":0,"index":854},{"krate":0,"index":855},{"krate":0,"index":856},{"krate":0,"index":857},{"krate":0,"index":858},{"krate":0,"index":859},{"krate":0,"index":860},{"krate":0,"index":861},{"krate":0,"index":862},{"krate":0,"index":863},{"krate":0,"index":864},{"krate":0,"index":865},{"krate":0,"index":866}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":211658,"byte_end":211681,"line_start":887,"line_end":887,"column_start":6,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":871},{"krate":0,"index":872}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":214389,"byte_end":214398,"line_start":949,"line_end":949,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":876},{"krate":0,"index":877}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":217388,"byte_end":217397,"line_start":58,"line_end":58,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":896},{"krate":0,"index":897}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":218859,"byte_end":218868,"line_start":96,"line_end":96,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":899},{"krate":0,"index":900},{"krate":0,"index":901}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":219555,"byte_end":219564,"line_start":120,"line_end":120,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":903},{"krate":0,"index":904},{"krate":0,"index":905}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":220236,"byte_end":220245,"line_start":142,"line_end":142,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":907}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":220530,"byte_end":220539,"line_start":153,"line_end":153,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":909},{"krate":0,"index":910},{"krate":0,"index":911}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":221197,"byte_end":221206,"line_start":177,"line_end":177,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":913},{"krate":0,"index":914},{"krate":0,"index":915},{"krate":0,"index":916}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":222034,"byte_end":222043,"line_start":206,"line_end":206,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":918},{"krate":0,"index":919},{"krate":0,"index":920}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":222704,"byte_end":222713,"line_start":230,"line_end":230,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":922},{"krate":0,"index":923},{"krate":0,"index":924},{"krate":0,"index":925}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":223540,"byte_end":223549,"line_start":259,"line_end":259,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":927},{"krate":0,"index":928},{"krate":0,"index":929}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":224297,"byte_end":224306,"line_start":284,"line_end":284,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":931}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":224835,"byte_end":224844,"line_start":299,"line_end":299,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":933}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":225197,"byte_end":225206,"line_start":311,"line_end":311,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":935},{"krate":0,"index":936},{"krate":0,"index":937},{"krate":0,"index":938}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":226046,"byte_end":226055,"line_start":340,"line_end":340,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":940},{"krate":0,"index":941},{"krate":0,"index":942},{"krate":0,"index":943},{"krate":0,"index":944},{"krate":0,"index":945},{"krate":0,"index":946},{"krate":0,"index":947},{"krate":0,"index":948},{"krate":0,"index":949},{"krate":0,"index":950},{"krate":0,"index":951},{"krate":0,"index":952},{"krate":0,"index":953},{"krate":0,"index":954},{"krate":0,"index":955},{"krate":0,"index":956},{"krate":0,"index":957},{"krate":0,"index":958},{"krate":0,"index":959},{"krate":0,"index":960},{"krate":0,"index":961},{"krate":0,"index":962},{"krate":0,"index":963},{"krate":0,"index":964},{"krate":0,"index":965},{"krate":0,"index":966},{"krate":0,"index":967},{"krate":0,"index":968}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":238230,"byte_end":238256,"line_start":674,"line_end":674,"column_start":6,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":970},{"krate":0,"index":971}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":250350,"byte_end":250357,"line_start":442,"line_end":442,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1015},{"krate":0,"index":1016}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":252051,"byte_end":252058,"line_start":481,"line_end":481,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1018}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\lib.rs","byte_start":1985,"byte_end":2000,"line_start":68,"line_end":68,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1066},{"krate":0,"index":1067}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\lib.rs","byte_start":2288,"byte_end":2303,"line_start":79,"line_end":79,"column_start":22,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\lib.rs","byte_start":2486,"byte_end":2501,"line_start":83,"line_end":83,"column_start":22,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\lib.rs","byte_start":2655,"byte_end":2669,"line_start":90,"line_end":90,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1071},{"krate":0,"index":1072}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\lib.rs","byte_start":756,"byte_end":764,"line_start":37,"line_end":37,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":972}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\export.rs","byte_start":4628,"byte_end":4644,"line_start":59,"line_end":59,"column_start":22,"column_end":38},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1088},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\export.rs","byte_start":4755,"byte_end":4771,"line_start":62,"line_end":62,"column_start":22,"column_end":38},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1088},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\export.rs","byte_start":4808,"byte_end":4816,"line_start":64,"line_end":64,"column_start":33,"column_end":41},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1073},"to":{"krate":2,"index":1963}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\export.rs","byte_start":5470,"byte_end":5483,"line_start":85,"line_end":85,"column_start":22,"column_end":35},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1103},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\export.rs","byte_start":5750,"byte_end":5763,"line_start":91,"line_end":91,"column_start":22,"column_end":35},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1103},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\export.rs","byte_start":5773,"byte_end":5786,"line_start":93,"line_end":93,"column_start":6,"column_end":19},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1103},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\export.rs","byte_start":6239,"byte_end":6247,"line_start":110,"line_end":110,"column_start":30,"column_end":38},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1073},"to":{"krate":2,"index":1963}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\export.rs","byte_start":6903,"byte_end":6917,"line_start":131,"line_end":131,"column_start":22,"column_end":36},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1110},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\export.rs","byte_start":7184,"byte_end":7198,"line_start":137,"line_end":137,"column_start":22,"column_end":36},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1110},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\export.rs","byte_start":7208,"byte_end":7222,"line_start":139,"line_end":139,"column_start":6,"column_end":20},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1110},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\export.rs","byte_start":7675,"byte_end":7683,"line_start":156,"line_end":156,"column_start":31,"column_end":39},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1073},"to":{"krate":2,"index":1963}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\export.rs","byte_start":8360,"byte_end":8374,"line_start":177,"line_end":177,"column_start":22,"column_end":36},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1117},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\export.rs","byte_start":8684,"byte_end":8698,"line_start":183,"line_end":183,"column_start":22,"column_end":36},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1117},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\export.rs","byte_start":8708,"byte_end":8722,"line_start":185,"line_end":185,"column_start":6,"column_end":20},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1117},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\export.rs","byte_start":8939,"byte_end":8947,"line_start":192,"line_end":192,"column_start":31,"column_end":39},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1073},"to":{"krate":2,"index":1963}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\global.rs","byte_start":9655,"byte_end":9661,"line_start":21,"line_end":21,"column_start":22,"column_end":28},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1124},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\global.rs","byte_start":9779,"byte_end":9785,"line_start":24,"line_end":24,"column_start":22,"column_end":28},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1124},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\global.rs","byte_start":10506,"byte_end":10512,"line_start":44,"line_end":44,"column_start":6,"column_end":12},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1124},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\imports.rs","byte_start":15096,"byte_end":15103,"line_start":37,"line_end":37,"column_start":6,"column_end":13},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1153},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\allocator.rs","byte_start":68239,"byte_end":68256,"line_start":46,"line_end":46,"column_start":15,"column_end":32},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":114},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\allocator.rs","byte_start":68640,"byte_end":68657,"line_start":60,"line_end":60,"column_start":6,"column_end":23},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":114},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\ref.rs","byte_start":76975,"byte_end":76986,"line_start":56,"line_end":56,"column_start":6,"column_end":17},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1161},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\ref.rs","byte_start":78968,"byte_end":78979,"line_start":116,"line_end":116,"column_start":22,"column_end":33},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1161},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\ref.rs","byte_start":79004,"byte_end":79015,"line_start":117,"line_end":117,"column_start":22,"column_end":33},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1161},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\ref.rs","byte_start":79035,"byte_end":79046,"line_start":119,"line_end":119,"column_start":16,"column_end":27},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1161},"to":{"krate":2,"index":1742}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\ref.rs","byte_start":80903,"byte_end":80914,"line_start":164,"line_end":164,"column_start":20,"column_end":31},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1161},"to":{"krate":2,"index":1770}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\ref.rs","byte_start":81125,"byte_end":81136,"line_start":172,"line_end":172,"column_start":15,"column_end":26},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1161},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":22527,"byte_end":22544,"line_start":142,"line_end":142,"column_start":6,"column_end":23},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1167},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":22809,"byte_end":22826,"line_start":152,"line_end":152,"column_start":16,"column_end":33},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1167},"to":{"krate":2,"index":1742}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":23365,"byte_end":23382,"line_start":174,"line_end":174,"column_start":15,"column_end":32},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1167},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":23844,"byte_end":23852,"line_start":192,"line_end":192,"column_start":21,"column_end":29},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":233},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":24025,"byte_end":24033,"line_start":199,"line_end":199,"column_start":6,"column_end":14},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":233},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":44434,"byte_end":44448,"line_start":785,"line_end":785,"column_start":6,"column_end":20},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1177},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\instance\\mod.rs","byte_start":59727,"byte_end":59741,"line_start":1178,"line_end":1178,"column_start":14,"column_end":28},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1177},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\memory.rs","byte_start":86415,"byte_end":86426,"line_start":86,"line_end":86,"column_start":6,"column_end":17},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1224},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\memory.rs","byte_start":86803,"byte_end":86808,"line_start":99,"line_end":99,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":2,"index":6606},"to":{"krate":0,"index":386}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\memory.rs","byte_start":86811,"byte_end":86815,"line_start":99,"line_end":99,"column_start":32,"column_end":36},"kind":"SuperTrait","from":{"krate":2,"index":2045},"to":{"krate":0,"index":386}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\memory.rs","byte_start":86818,"byte_end":86822,"line_start":99,"line_end":99,"column_start":39,"column_end":43},"kind":"SuperTrait","from":{"krate":2,"index":2057},"to":{"krate":0,"index":386}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\memory.rs","byte_start":89282,"byte_end":89294,"line_start":165,"line_end":165,"column_start":22,"column_end":34},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1359},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\memory.rs","byte_start":89397,"byte_end":89409,"line_start":168,"line_end":168,"column_start":22,"column_end":34},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1359},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\memory.rs","byte_start":89603,"byte_end":89615,"line_start":178,"line_end":178,"column_start":6,"column_end":18},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1359},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\memory.rs","byte_start":94555,"byte_end":94567,"line_start":304,"line_end":304,"column_start":17,"column_end":29},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1359},"to":{"krate":0,"index":386}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\mmap.rs","byte_start":99421,"byte_end":99425,"line_start":30,"line_end":30,"column_start":6,"column_end":10},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1383},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\mmap.rs","byte_start":107323,"byte_end":107327,"line_start":261,"line_end":261,"column_start":15,"column_end":19},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1383},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":109314,"byte_end":109322,"line_start":27,"line_end":27,"column_start":6,"column_end":14},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1388},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":109416,"byte_end":109424,"line_start":33,"line_end":33,"column_start":18,"column_end":26},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1388},"to":{"krate":2,"index":2033}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":112244,"byte_end":112254,"line_start":118,"line_end":118,"column_start":6,"column_end":16},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1394},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":120648,"byte_end":120658,"line_start":333,"line_end":333,"column_start":23,"column_end":33},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1394},"to":{"krate":2,"index":6611}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":121145,"byte_end":121160,"line_start":349,"line_end":349,"column_start":68,"column_end":83},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":524},"to":{"krate":2,"index":5265}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":121334,"byte_end":121349,"line_start":356,"line_end":356,"column_start":46,"column_end":61},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":524},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":122605,"byte_end":122620,"line_start":387,"line_end":387,"column_start":59,"column_end":74},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":524},"to":{"krate":2,"index":5311}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":123003,"byte_end":123018,"line_start":401,"line_end":401,"column_start":68,"column_end":83},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":549},"to":{"krate":2,"index":5265}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":123192,"byte_end":123207,"line_start":408,"line_end":408,"column_start":46,"column_end":61},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":549},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\module.rs","byte_start":124598,"byte_end":124613,"line_start":443,"line_end":443,"column_start":59,"column_end":74},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":549},"to":{"krate":2,"index":5311}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\sig_registry.rs","byte_start":128633,"byte_end":128650,"line_start":34,"line_end":34,"column_start":6,"column_end":23},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1508},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\table.rs","byte_start":131168,"byte_end":131173,"line_start":27,"line_end":27,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":6606},"to":{"krate":0,"index":611}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\table.rs","byte_start":131176,"byte_end":131180,"line_start":27,"line_end":27,"column_start":31,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":2045},"to":{"krate":0,"index":611}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\table.rs","byte_start":131183,"byte_end":131187,"line_start":27,"line_end":27,"column_start":38,"column_end":42},"kind":"SuperTrait","from":{"krate":2,"index":2057},"to":{"krate":0,"index":611}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\table.rs","byte_start":134792,"byte_end":134803,"line_start":132,"line_end":132,"column_start":22,"column_end":33},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1572},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\table.rs","byte_start":134905,"byte_end":134916,"line_start":134,"line_end":134,"column_start":22,"column_end":33},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1572},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\table.rs","byte_start":134926,"byte_end":134937,"line_start":136,"line_end":136,"column_start":6,"column_end":17},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1572},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\table.rs","byte_start":138436,"byte_end":138447,"line_start":223,"line_end":223,"column_start":16,"column_end":27},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1572},"to":{"krate":0,"index":611}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\trapcode.rs","byte_start":143846,"byte_end":143854,"line_start":80,"line_end":80,"column_start":6,"column_end":14},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1589},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\trapcode.rs","byte_start":145117,"byte_end":145125,"line_start":105,"line_end":105,"column_start":18,"column_end":26},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1589},"to":{"krate":2,"index":6611}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\trapcode.rs","byte_start":146185,"byte_end":146193,"line_start":130,"line_end":130,"column_start":18,"column_end":26},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1589},"to":{"krate":2,"index":8578}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":168196,"byte_end":168200,"line_start":449,"line_end":449,"column_start":6,"column_end":10},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1734},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":172359,"byte_end":172374,"line_start":586,"line_end":586,"column_start":6,"column_end":21},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":705},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":177484,"byte_end":177499,"line_start":727,"line_end":727,"column_start":15,"column_end":30},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":705},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\trap\\traphandlers.rs","byte_start":178487,"byte_end":178492,"line_start":753,"line_end":753,"column_start":32,"column_end":37},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":750},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":183633,"byte_end":183654,"line_start":31,"line_end":31,"column_start":6,"column_end":27},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1751},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":183827,"byte_end":183848,"line_start":38,"line_end":38,"column_start":26,"column_end":47},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1751},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":184094,"byte_end":184115,"line_start":46,"line_end":46,"column_start":30,"column_end":51},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1751},"to":{"krate":2,"index":1770}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":186212,"byte_end":186236,"line_start":111,"line_end":111,"column_start":46,"column_end":70},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":797},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":186415,"byte_end":186439,"line_start":114,"line_end":114,"column_start":46,"column_end":70},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":797},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":186494,"byte_end":186518,"line_start":116,"line_end":116,"column_start":48,"column_end":72},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":797},"to":{"krate":2,"index":1742}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":191642,"byte_end":191656,"line_start":281,"line_end":281,"column_start":22,"column_end":36},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1792},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":191990,"byte_end":192004,"line_start":287,"line_end":287,"column_start":22,"column_end":36},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1792},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":193361,"byte_end":193379,"line_start":331,"line_end":331,"column_start":22,"column_end":40},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1799},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":193706,"byte_end":193724,"line_start":337,"line_end":337,"column_start":22,"column_end":40},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1799},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":193734,"byte_end":193752,"line_start":339,"line_end":339,"column_start":6,"column_end":24},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1799},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":198619,"byte_end":198644,"line_start":494,"line_end":494,"column_start":21,"column_end":46},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1815},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":200401,"byte_end":200419,"line_start":547,"line_end":547,"column_start":6,"column_end":24},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1828},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":206930,"byte_end":206952,"line_start":737,"line_end":737,"column_start":6,"column_end":28},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1834},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":207085,"byte_end":207107,"line_start":744,"line_end":744,"column_start":18,"column_end":40},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1834},"to":{"krate":2,"index":2033}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":208734,"byte_end":208756,"line_start":795,"line_end":795,"column_start":18,"column_end":40},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1852},"to":{"krate":2,"index":2033}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":209118,"byte_end":209140,"line_start":811,"line_end":811,"column_start":6,"column_end":28},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1860},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":211658,"byte_end":211681,"line_start":887,"line_end":887,"column_start":6,"column_end":29},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":867},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmcontext.rs","byte_start":214389,"byte_end":214398,"line_start":949,"line_end":949,"column_start":6,"column_end":15},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1869},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":217388,"byte_end":217397,"line_start":58,"line_end":58,"column_start":6,"column_end":15},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1872},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":218859,"byte_end":218868,"line_start":96,"line_end":96,"column_start":6,"column_end":15},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1872},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":219555,"byte_end":219564,"line_start":120,"line_end":120,"column_start":6,"column_end":15},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1872},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":220236,"byte_end":220245,"line_start":142,"line_end":142,"column_start":6,"column_end":15},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1872},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":220530,"byte_end":220539,"line_start":153,"line_end":153,"column_start":6,"column_end":15},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1872},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":221197,"byte_end":221206,"line_start":177,"line_end":177,"column_start":6,"column_end":15},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1872},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":222034,"byte_end":222043,"line_start":206,"line_end":206,"column_start":6,"column_end":15},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1872},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":222704,"byte_end":222713,"line_start":230,"line_end":230,"column_start":6,"column_end":15},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1872},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":223540,"byte_end":223549,"line_start":259,"line_end":259,"column_start":6,"column_end":15},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1872},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":224297,"byte_end":224306,"line_start":284,"line_end":284,"column_start":6,"column_end":15},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1872},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":224835,"byte_end":224844,"line_start":299,"line_end":299,"column_start":6,"column_end":15},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1872},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":225197,"byte_end":225206,"line_start":311,"line_end":311,"column_start":6,"column_end":15},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1872},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":226046,"byte_end":226055,"line_start":340,"line_end":340,"column_start":6,"column_end":15},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1872},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\vmoffsets.rs","byte_start":238230,"byte_end":238256,"line_start":674,"line_end":674,"column_start":6,"column_end":32},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1886},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":250350,"byte_end":250357,"line_start":442,"line_end":442,"column_start":6,"column_end":13},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1894},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\libcalls.rs","byte_start":252051,"byte_end":252058,"line_start":481,"line_end":481,"column_start":23,"column_end":30},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1894},"to":{"krate":2,"index":6611}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\lib.rs","byte_start":1985,"byte_end":2000,"line_start":68,"line_end":68,"column_start":26,"column_end":41},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":1990},"to":{"krate":2,"index":2242}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\lib.rs","byte_start":2288,"byte_end":2303,"line_start":79,"line_end":79,"column_start":22,"column_end":37},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1990},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\lib.rs","byte_start":2486,"byte_end":2501,"line_start":83,"line_end":83,"column_start":22,"column_end":37},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":1990},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-vm-1.0.2\\src\\lib.rs","byte_start":2655,"byte_end":2669,"line_start":90,"line_end":90,"column_start":26,"column_end":40},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":1998},"to":{"krate":2,"index":2242}}]}