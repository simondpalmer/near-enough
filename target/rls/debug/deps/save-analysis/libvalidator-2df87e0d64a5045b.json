{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1","program":"C:\\Users\\Simon Palmer\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","validator","--edition=2018","C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata,link","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=2df87e0d64a5045b","-C","extra-filename=-2df87e0d64a5045b","--out-dir","c:\\Users\\Simon Palmer\\Documents\\Programming\\near_enough\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\Simon Palmer\\Documents\\Programming\\near_enough\\target\\rls\\debug\\deps","--extern","idna=c:\\Users\\Simon Palmer\\Documents\\Programming\\near_enough\\target\\rls\\debug\\deps\\libidna-ef7a7f44ed6072ee.rmeta","--extern","lazy_static=c:\\Users\\Simon Palmer\\Documents\\Programming\\near_enough\\target\\rls\\debug\\deps\\liblazy_static-a5fdf74fcdafbee9.rmeta","--extern","regex=c:\\Users\\Simon Palmer\\Documents\\Programming\\near_enough\\target\\rls\\debug\\deps\\libregex-08abe1219e15dc73.rmeta","--extern","serde=c:\\Users\\Simon Palmer\\Documents\\Programming\\near_enough\\target\\rls\\debug\\deps\\libserde-b7446586dbaddb65.rmeta","--extern","serde_derive=c:\\Users\\Simon Palmer\\Documents\\Programming\\near_enough\\target\\rls\\debug\\deps\\serde_derive-2d3748193a934370.dll","--extern","serde_json=c:\\Users\\Simon Palmer\\Documents\\Programming\\near_enough\\target\\rls\\debug\\deps\\libserde_json-64f4dd82a62ddda1.rmeta","--extern","url=c:\\Users\\Simon Palmer\\Documents\\Programming\\near_enough\\target\\rls\\debug\\deps\\liburl-b8e403eadb5e5b31.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\Simon Palmer\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\Simon Palmer\\Documents\\Programming\\near_enough\\target\\rls\\debug\\deps\\libvalidator-2df87e0d64a5045b.rmeta"},"prelude":{"crate_id":{"name":"validator","disambiguator":[12990867351025325801,12664414873224571918]},"crate_root":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src","external_crates":[{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[2134305066550747688,1377703208702874155]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[1322159461575500717,8297198428669169011]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[2376346800744392852,12342541482992122530]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[14946502858004023242,6637215598610016319]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[5305136910335682758,6890491777619641650]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[8079093424489733033,9678018066858265018]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[8191054904896780843,65190916132359678]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[17454577518104061478,8473922882117178851]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[14702801963282246562,3385633331338644346]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[4483555191844012602,617965746000623535]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[6496369475756502088,8603909216288097824]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\lib.rs","num":12,"id":{"name":"panic_unwind","disambiguator":[8790568169648576788,8899032378407077408]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\types.rs","num":13,"id":{"name":"serde","disambiguator":[8657281438905347929,3967742918256439497]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\types.rs","num":14,"id":{"name":"serde_derive","disambiguator":[9842309209684279102,18288336910812146633]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\types.rs","num":15,"id":{"name":"serde_json","disambiguator":[14100901658073083275,14819449139970835562]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\types.rs","num":16,"id":{"name":"indexmap","disambiguator":[14275982715635705292,10070205752693888714]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\types.rs","num":17,"id":{"name":"hashbrown","disambiguator":[15007102403095652209,17988084238175206733]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\types.rs","num":18,"id":{"name":"itoa","disambiguator":[7073323370060007520,3956313474721251472]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\types.rs","num":19,"id":{"name":"ryu","disambiguator":[8338412981568211629,9444239110820674695]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\validation\\email.rs","num":20,"id":{"name":"idna","disambiguator":[11951227131036930836,8552049079226360914]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\validation\\email.rs","num":21,"id":{"name":"matches","disambiguator":[18166729205647306562,6661490919305965932]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\validation\\email.rs","num":22,"id":{"name":"unicode_bidi","disambiguator":[9944096946392947546,15628602400342093580]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\validation\\email.rs","num":23,"id":{"name":"unicode_normalization","disambiguator":[15593293147095823537,12978388144692107780]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\validation\\email.rs","num":24,"id":{"name":"tinyvec","disambiguator":[7540653059975211549,545799168311232342]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\validation\\email.rs","num":25,"id":{"name":"tinyvec_macros","disambiguator":[11882558988605278527,16467582896284667381]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\validation\\email.rs","num":26,"id":{"name":"lazy_static","disambiguator":[3859688642052445506,3338238453980340550]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\validation\\email.rs","num":27,"id":{"name":"regex","disambiguator":[11142045069753223032,9328937549452080915]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\validation\\email.rs","num":28,"id":{"name":"regex_syntax","disambiguator":[12872951256423339329,17465557160968208526]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\validation\\email.rs","num":29,"id":{"name":"aho_corasick","disambiguator":[8501959943359527767,13300315929670603087]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\validation\\email.rs","num":30,"id":{"name":"memchr","disambiguator":[9145434810360750396,8362005625021305429]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\validation\\urls.rs","num":31,"id":{"name":"url","disambiguator":[7739823273929968577,10699627785651919110]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\validation\\urls.rs","num":32,"id":{"name":"form_urlencoded","disambiguator":[14172067861291205946,15436483119657316849]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\validation\\urls.rs","num":33,"id":{"name":"percent_encoding","disambiguator":[1174449804076505368,14028011916183377850]}}],"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\lib.rs","byte_start":0,"byte_end":827,"line_start":1,"line_end":22,"column_start":1,"column_end":74}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":109},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\lib.rs","byte_start":144,"byte_end":161,"line_start":7,"line_end":7,"column_start":31,"column_end":48},"alias_span":null,"name":"validate_contains","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":117},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\lib.rs","byte_start":190,"byte_end":204,"line_start":8,"line_end":8,"column_start":28,"column_end":42},"alias_span":null,"name":"validate_email","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":131},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\lib.rs","byte_start":231,"byte_end":242,"line_start":9,"line_end":9,"column_start":26,"column_end":37},"alias_span":null,"name":"validate_ip","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":125},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\lib.rs","byte_start":244,"byte_end":258,"line_start":9,"line_end":9,"column_start":39,"column_end":53},"alias_span":null,"name":"validate_ip_v4","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":128},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\lib.rs","byte_start":260,"byte_end":274,"line_start":9,"line_end":9,"column_start":55,"column_end":69},"alias_span":null,"name":"validate_ip_v6","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":137},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\lib.rs","byte_start":305,"byte_end":320,"line_start":10,"line_end":10,"column_start":29,"column_end":44},"alias_span":null,"name":"validate_length","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":140},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\lib.rs","byte_start":354,"byte_end":373,"line_start":11,"line_end":11,"column_start":33,"column_end":52},"alias_span":null,"name":"validate_must_match","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":144},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\lib.rs","byte_start":571,"byte_end":585,"line_start":16,"line_end":16,"column_start":28,"column_end":42},"alias_span":null,"name":"validate_range","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":146},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\lib.rs","byte_start":617,"byte_end":634,"line_start":17,"line_end":17,"column_start":31,"column_end":48},"alias_span":null,"name":"validate_required","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":151},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\lib.rs","byte_start":662,"byte_end":674,"line_start":18,"line_end":18,"column_start":27,"column_end":39},"alias_span":null,"name":"validate_url","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":315},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\lib.rs","byte_start":696,"byte_end":705,"line_start":19,"line_end":19,"column_start":21,"column_end":30},"alias_span":null,"name":"Validator","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":27},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\lib.rs","byte_start":725,"byte_end":733,"line_start":21,"line_end":21,"column_start":18,"column_end":26},"alias_span":null,"name":"Contains","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\lib.rs","byte_start":735,"byte_end":741,"line_start":21,"line_end":21,"column_start":28,"column_end":34},"alias_span":null,"name":"HasLen","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":49},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\lib.rs","byte_start":743,"byte_end":751,"line_start":21,"line_end":21,"column_start":36,"column_end":44},"alias_span":null,"name":"Validate","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":176},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\lib.rs","byte_start":770,"byte_end":785,"line_start":22,"line_end":22,"column_start":17,"column_end":32},"alias_span":null,"name":"ValidationError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":263},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\lib.rs","byte_start":787,"byte_end":803,"line_start":22,"line_end":22,"column_start":34,"column_end":50},"alias_span":null,"name":"ValidationErrors","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":239},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\lib.rs","byte_start":805,"byte_end":825,"line_start":22,"line_end":22,"column_start":52,"column_end":72},"alias_span":null,"name":"ValidationErrorsKind","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\lib.rs","byte_start":0,"byte_end":827,"line_start":1,"line_end":22,"column_start":1,"column_end":74},"name":"","qualname":"::","value":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":54},{"krate":0,"index":106},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":7},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\traits.rs","byte_start":1073,"byte_end":1079,"line_start":10,"line_end":10,"column_start":11,"column_end":17},"name":"HasLen","qualname":"::traits::HasLen","value":"HasLen","parent":null,"children":[{"krate":0,"index":8}],"decl_id":null,"docs":" Trait to implement if one wants to make the `length` validator\n work for more types","sig":null,"attributes":[{"value":"/ Trait to implement if one wants to make the `length` validator","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\traits.rs","byte_start":920,"byte_end":986,"line_start":6,"line_end":6,"column_start":1,"column_end":67}},{"value":"/ work for more types","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\traits.rs","byte_start":987,"byte_end":1010,"line_start":7,"line_end":7,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\traits.rs","byte_start":1011,"byte_end":1014,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ A bit sad it's not there by default in Rust","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\traits.rs","byte_start":1015,"byte_end":1062,"line_start":9,"line_end":9,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":8},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\traits.rs","byte_start":1089,"byte_end":1095,"line_start":11,"line_end":11,"column_start":8,"column_end":14},"name":"length","qualname":"::traits::HasLen::length","value":"pub fn length(&Self) -> u64","parent":{"krate":0,"index":7},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":27},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\traits.rs","byte_start":1823,"byte_end":1831,"line_start":51,"line_end":51,"column_start":11,"column_end":19},"name":"Contains","qualname":"::traits::Contains","value":"Contains","parent":null,"children":[{"krate":0,"index":28}],"decl_id":null,"docs":" Trait to implement if one wants to make the `contains` validator\n work for more types\n","sig":null,"attributes":[{"value":"/ Trait to implement if one wants to make the `contains` validator","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\traits.rs","byte_start":1720,"byte_end":1788,"line_start":49,"line_end":49,"column_start":1,"column_end":69}},{"value":"/ work for more types","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\traits.rs","byte_start":1789,"byte_end":1812,"line_start":50,"line_end":50,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\traits.rs","byte_start":1857,"byte_end":1868,"line_start":53,"line_end":53,"column_start":8,"column_end":19},"name":"has_element","qualname":"::traits::Contains::has_element","value":"pub fn has_element(&Self, &str) -> bool","parent":{"krate":0,"index":27},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\traits.rs","byte_start":1838,"byte_end":1849,"line_start":52,"line_end":52,"column_start":5,"column_end":16}}]},{"kind":"Trait","id":{"krate":0,"index":49},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\traits.rs","byte_start":2790,"byte_end":2798,"line_start":93,"line_end":93,"column_start":11,"column_end":19},"name":"Validate","qualname":"::traits::Validate","value":"Validate","parent":null,"children":[{"krate":0,"index":50}],"decl_id":null,"docs":" The trait that `validator_derive` implements\n","sig":null,"attributes":[{"value":"/ The trait that `validator_derive` implements","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\traits.rs","byte_start":2731,"byte_end":2779,"line_start":92,"line_end":92,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\traits.rs","byte_start":2808,"byte_end":2816,"line_start":94,"line_end":94,"column_start":8,"column_end":16},"name":"validate","qualname":"::traits::Validate::validate","value":"pub fn validate(&Self) -> Result<(), ValidationErrors>","parent":{"krate":0,"index":49},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":176},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\types.rs","byte_start":3279,"byte_end":3294,"line_start":10,"line_end":10,"column_start":12,"column_end":27},"name":"ValidationError","qualname":"::types::ValidationError","value":"ValidationError { code, message, params }","parent":null,"children":[{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":177},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\types.rs","byte_start":3305,"byte_end":3309,"line_start":11,"line_end":11,"column_start":9,"column_end":13},"name":"code","qualname":"::types::ValidationError::code","value":"std::borrow::Cow<'static, str>","parent":{"krate":0,"index":176},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":178},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\types.rs","byte_start":3338,"byte_end":3345,"line_start":12,"line_end":12,"column_start":9,"column_end":16},"name":"message","qualname":"::types::ValidationError::message","value":"std::option::Option<std::borrow::Cow<'static, str>>","parent":{"krate":0,"index":176},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":179},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\types.rs","byte_start":3382,"byte_end":3388,"line_start":13,"line_end":13,"column_start":9,"column_end":15},"name":"params","qualname":"::types::ValidationError::params","value":"std::collections::HashMap<std::borrow::Cow<'static, str>, serde_json::Value>","parent":{"krate":0,"index":176},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\types.rs","byte_start":3462,"byte_end":3465,"line_start":17,"line_end":17,"column_start":12,"column_end":15},"name":"new","qualname":"<ValidationError>::new","value":"pub fn new(&'static str) -> ValidationError","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\types.rs","byte_start":3614,"byte_end":3623,"line_start":21,"line_end":21,"column_start":12,"column_end":21},"name":"add_param","qualname":"<ValidationError>::add_param","value":"pub fn add_param<T: Serialize>(&mut Self, Cow, &T)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":240},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\types.rs","byte_start":4222,"byte_end":4228,"line_start":44,"line_end":44,"column_start":5,"column_end":11},"name":"Struct","qualname":"::types::ValidationErrorsKind::Struct","value":"ValidationErrorsKind::Struct(Box<ValidationErrors>)","parent":{"krate":0,"index":239},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":243},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\types.rs","byte_start":4257,"byte_end":4261,"line_start":45,"line_end":45,"column_start":5,"column_end":9},"name":"List","qualname":"::types::ValidationErrorsKind::List","value":"ValidationErrorsKind::List(BTreeMap<usize, Box<ValidationErrors>>)","parent":{"krate":0,"index":239},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":246},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\types.rs","byte_start":4307,"byte_end":4312,"line_start":46,"line_end":46,"column_start":5,"column_end":10},"name":"Field","qualname":"::types::ValidationErrorsKind::Field","value":"ValidationErrorsKind::Field(Vec<ValidationError>)","parent":{"krate":0,"index":239},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":239},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\types.rs","byte_start":4195,"byte_end":4215,"line_start":43,"line_end":43,"column_start":10,"column_end":30},"name":"ValidationErrorsKind","qualname":"::types::ValidationErrorsKind","value":"pub enum ValidationErrorsKind {\n    Struct(Box<ValidationErrors>),\n    List(BTreeMap<usize, Box<ValidationErrors>>),\n    Field(Vec<ValidationError>),\n}","parent":null,"children":[{"krate":0,"index":240},{"krate":0,"index":243},{"krate":0,"index":246}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(untagged)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\types.rs","byte_start":4167,"byte_end":4185,"line_start":42,"line_end":42,"column_start":1,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":263},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\types.rs","byte_start":4405,"byte_end":4421,"line_start":50,"line_end":50,"column_start":12,"column_end":28},"name":"ValidationErrors","qualname":"::types::ValidationErrors","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\types.rs","byte_start":4504,"byte_end":4507,"line_start":53,"line_end":53,"column_start":12,"column_end":15},"name":"new","qualname":"<ValidationErrors>::new","value":"pub fn new() -> ValidationErrors","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\types.rs","byte_start":4862,"byte_end":4871,"line_start":61,"line_end":61,"column_start":12,"column_end":21},"name":"has_error","qualname":"<ValidationErrors>::has_error","value":"pub fn has_error(&Result<(), ValidationErrors>, &'static str) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns a boolean indicating whether a validation result includes validation errors for a\n given field. May be used as a condition for performing nested struct validations on a field\n in the absence of field-level validation errors.\n","sig":null,"attributes":[{"value":"/ Returns a boolean indicating whether a validation result includes validation errors for a","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\types.rs","byte_start":4584,"byte_end":4677,"line_start":57,"line_end":57,"column_start":5,"column_end":98}},{"value":"/ given field. May be used as a condition for performing nested struct validations on a field","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\types.rs","byte_start":4682,"byte_end":4777,"line_start":58,"line_end":58,"column_start":5,"column_end":100}},{"value":"/ in the absence of field-level validation errors.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\types.rs","byte_start":4782,"byte_end":4834,"line_start":59,"line_end":59,"column_start":5,"column_end":57}},{"value":"must_use","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\types.rs","byte_start":4839,"byte_end":4850,"line_start":60,"line_end":60,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\types.rs","byte_start":5217,"byte_end":5222,"line_start":70,"line_end":70,"column_start":12,"column_end":17},"name":"merge","qualname":"<ValidationErrors>::merge","value":"pub fn merge(Result<(), ValidationErrors>, &'static str,\n             Result<(), ValidationErrors>) -> Result<(), ValidationErrors>","parent":null,"children":[],"decl_id":null,"docs":" Returns the combined outcome of a struct's validation result along with the nested\n validation result for one of its fields.\n","sig":null,"attributes":[{"value":"/ Returns the combined outcome of a struct's validation result along with the nested","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\types.rs","byte_start":5070,"byte_end":5156,"line_start":68,"line_end":68,"column_start":5,"column_end":91}},{"value":"/ validation result for one of its fields.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\types.rs","byte_start":5161,"byte_end":5205,"line_start":69,"line_end":69,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\types.rs","byte_start":5948,"byte_end":5957,"line_start":88,"line_end":88,"column_start":12,"column_end":21},"name":"merge_all","qualname":"<ValidationErrors>::merge_all","value":"pub fn merge_all(Result<(), ValidationErrors>, &'static str,\n                 Vec<Result<(), ValidationErrors>>)\n-> Result<(), ValidationErrors>","parent":null,"children":[],"decl_id":null,"docs":" Returns the combined outcome of a struct's validation result along with the nested\n validation result for one of its fields where that field is a vector of validating structs.\n","sig":null,"attributes":[{"value":"/ Returns the combined outcome of a struct's validation result along with the nested","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\types.rs","byte_start":5750,"byte_end":5836,"line_start":86,"line_end":86,"column_start":5,"column_end":91}},{"value":"/ validation result for one of its fields where that field is a vector of validating structs.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\types.rs","byte_start":5841,"byte_end":5936,"line_start":87,"line_end":87,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\types.rs","byte_start":6991,"byte_end":6997,"line_start":115,"line_end":115,"column_start":12,"column_end":18},"name":"errors","qualname":"<ValidationErrors>::errors","value":"pub fn errors(&Self) -> &HashMap<&'static str, ValidationErrorsKind>","parent":null,"children":[],"decl_id":null,"docs":" Returns a map of field-level validation errors found for the struct that was validated and\n any of it's nested structs that are tagged for validation.\n","sig":null,"attributes":[{"value":"/ Returns a map of field-level validation errors found for the struct that was validated and","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\types.rs","byte_start":6818,"byte_end":6912,"line_start":113,"line_end":113,"column_start":5,"column_end":99}},{"value":"/ any of it's nested structs that are tagged for validation.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\types.rs","byte_start":6917,"byte_end":6979,"line_start":114,"line_end":114,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\types.rs","byte_start":7155,"byte_end":7166,"line_start":120,"line_end":120,"column_start":12,"column_end":23},"name":"into_errors","qualname":"<ValidationErrors>::into_errors","value":"pub fn into_errors(Self) -> HashMap<&'static str, ValidationErrorsKind>","parent":null,"children":[],"decl_id":null,"docs":" Consume the struct, returning the validation errors found\n","sig":null,"attributes":[{"value":"/ Consume the struct, returning the validation errors found","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\types.rs","byte_start":7082,"byte_end":7143,"line_start":119,"line_end":119,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\types.rs","byte_start":7356,"byte_end":7368,"line_start":125,"line_end":125,"column_start":12,"column_end":24},"name":"field_errors","qualname":"<ValidationErrors>::field_errors","value":"pub fn field_errors(&Self) -> HashMap<&'static str, &Vec<ValidationError>>","parent":null,"children":[],"decl_id":null,"docs":" Returns a map of only field-level validation errors found for the struct that was validated.\n","sig":null,"attributes":[{"value":"/ Returns a map of only field-level validation errors found for the struct that was validated.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\types.rs","byte_start":7248,"byte_end":7344,"line_start":124,"line_end":124,"column_start":5,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\types.rs","byte_start":7741,"byte_end":7744,"line_start":138,"line_end":138,"column_start":12,"column_end":15},"name":"add","qualname":"<ValidationErrors>::add","value":"pub fn add(&mut Self, &'static str, ValidationError)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\types.rs","byte_start":8148,"byte_end":8156,"line_start":149,"line_end":149,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<ValidationErrors>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\types.rs","byte_start":8125,"byte_end":8136,"line_start":148,"line_end":148,"column_start":5,"column_end":16}}]},{"kind":"Function","id":{"krate":0,"index":109},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\validation\\contains.rs","byte_start":11385,"byte_end":11402,"line_start":7,"line_end":7,"column_start":8,"column_end":25},"name":"validate_contains","qualname":"::validation::contains::validate_contains","value":"pub fn validate_contains<T: Contains>(T, &str) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Validates whether the value contains the needle\n The value needs to implement the Contains trait, which is implement on String, str and Hashmap<String>\n by default.\n","sig":null,"attributes":[{"value":"/ Validates whether the value contains the needle","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\validation\\contains.rs","byte_start":11191,"byte_end":11242,"line_start":3,"line_end":3,"column_start":1,"column_end":52}},{"value":"/ The value needs to implement the Contains trait, which is implement on String, str and Hashmap<String>","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\validation\\contains.rs","byte_start":11243,"byte_end":11349,"line_start":4,"line_end":4,"column_start":1,"column_end":107}},{"value":"/ by default.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\validation\\contains.rs","byte_start":11350,"byte_end":11365,"line_start":5,"line_end":5,"column_start":1,"column_end":16}},{"value":"must_use","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\validation\\contains.rs","byte_start":11366,"byte_end":11377,"line_start":6,"line_end":6,"column_start":1,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":117},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\validation\\email.rs","byte_start":13661,"byte_end":13675,"line_start":22,"line_end":22,"column_start":8,"column_end":22},"name":"validate_email","qualname":"::validation::email::validate_email","value":"pub fn validate_email<'a, T>(T) -> bool where T: Into<Cow>","parent":null,"children":[],"decl_id":null,"docs":" Validates whether the given string is an email based on Django `EmailValidator` and HTML5 specs\n","sig":null,"attributes":[{"value":"/ Validates whether the given string is an email based on Django `EmailValidator` and HTML5 specs","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\validation\\email.rs","byte_start":13542,"byte_end":13641,"line_start":20,"line_end":20,"column_start":1,"column_end":100}},{"value":"must_use","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\validation\\email.rs","byte_start":13642,"byte_end":13653,"line_start":21,"line_end":21,"column_start":1,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":125},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\validation\\ip.rs","byte_start":18197,"byte_end":18211,"line_start":7,"line_end":7,"column_start":8,"column_end":22},"name":"validate_ip_v4","qualname":"::validation::ip::validate_ip_v4","value":"pub fn validate_ip_v4<'a, T>(T) -> bool where T: Into<Cow>","parent":null,"children":[],"decl_id":null,"docs":" Validates whether the given string is an IP V4\n","sig":null,"attributes":[{"value":"/ Validates whether the given string is an IP V4","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\validation\\ip.rs","byte_start":18127,"byte_end":18177,"line_start":5,"line_end":5,"column_start":1,"column_end":51}},{"value":"must_use","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\validation\\ip.rs","byte_start":18178,"byte_end":18189,"line_start":6,"line_end":6,"column_start":1,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":128},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\validation\\ip.rs","byte_start":18533,"byte_end":18547,"line_start":22,"line_end":22,"column_start":8,"column_end":22},"name":"validate_ip_v6","qualname":"::validation::ip::validate_ip_v6","value":"pub fn validate_ip_v6<'a, T>(T) -> bool where T: Into<Cow>","parent":null,"children":[],"decl_id":null,"docs":" Validates whether the given string is an IP V6\n","sig":null,"attributes":[{"value":"/ Validates whether the given string is an IP V6","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\validation\\ip.rs","byte_start":18463,"byte_end":18513,"line_start":20,"line_end":20,"column_start":1,"column_end":51}},{"value":"must_use","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\validation\\ip.rs","byte_start":18514,"byte_end":18525,"line_start":21,"line_end":21,"column_start":1,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":131},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\validation\\ip.rs","byte_start":18866,"byte_end":18877,"line_start":37,"line_end":37,"column_start":8,"column_end":19},"name":"validate_ip","qualname":"::validation::ip::validate_ip","value":"pub fn validate_ip<'a, T>(T) -> bool where T: Into<Cow>","parent":null,"children":[],"decl_id":null,"docs":" Validates whether the given string is an IP\n","sig":null,"attributes":[{"value":"/ Validates whether the given string is an IP","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\validation\\ip.rs","byte_start":18799,"byte_end":18846,"line_start":35,"line_end":35,"column_start":1,"column_end":48}},{"value":"must_use","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\validation\\ip.rs","byte_start":18847,"byte_end":18858,"line_start":36,"line_end":36,"column_start":1,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":137},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\validation\\length.rs","byte_start":22994,"byte_end":23009,"line_start":10,"line_end":10,"column_start":8,"column_end":23},"name":"validate_length","qualname":"::validation::length::validate_length","value":"pub fn validate_length<T: HasLen>(Validator, T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Validates the length of the value given.\n If the validator has `equal` set, it will ignore any `min` and `max` value.","sig":null,"attributes":[{"value":"/ Validates the length of the value given.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\validation\\length.rs","byte_start":22716,"byte_end":22760,"line_start":4,"line_end":4,"column_start":1,"column_end":45}},{"value":"/ If the validator has `equal` set, it will ignore any `min` and `max` value.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\validation\\length.rs","byte_start":22761,"byte_end":22840,"line_start":5,"line_end":5,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\validation\\length.rs","byte_start":22841,"byte_end":22844,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ If you apply it on String, don't forget that the length can be different","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\validation\\length.rs","byte_start":22845,"byte_end":22921,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ from the number of visual characters for Unicode","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\validation\\length.rs","byte_start":22922,"byte_end":22974,"line_start":8,"line_end":8,"column_start":1,"column_end":53}},{"value":"must_use","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\validation\\length.rs","byte_start":22975,"byte_end":22986,"line_start":9,"line_end":9,"column_start":1,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":140},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\validation\\must_match.rs","byte_start":25564,"byte_end":25583,"line_start":4,"line_end":4,"column_start":8,"column_end":27},"name":"validate_must_match","qualname":"::validation::must_match::validate_must_match","value":"pub fn validate_must_match<T: Eq>(T, T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Validates that the 2 given fields match.\n Both fields are optionals\n","sig":null,"attributes":[{"value":"/ Validates that the 2 given fields match.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\validation\\must_match.rs","byte_start":25470,"byte_end":25514,"line_start":1,"line_end":1,"column_start":1,"column_end":45}},{"value":"/ Both fields are optionals","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\validation\\must_match.rs","byte_start":25515,"byte_end":25544,"line_start":2,"line_end":2,"column_start":1,"column_end":30}},{"value":"must_use","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\validation\\must_match.rs","byte_start":25545,"byte_end":25556,"line_start":3,"line_end":3,"column_start":1,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":144},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\validation\\range.rs","byte_start":26487,"byte_end":26501,"line_start":7,"line_end":7,"column_start":8,"column_end":22},"name":"validate_range","qualname":"::validation::range::validate_range","value":"pub fn validate_range(Validator, f64) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Validates that a number is in the given range","sig":null,"attributes":[{"value":"/ Validates that a number is in the given range","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\validation\\range.rs","byte_start":26361,"byte_end":26410,"line_start":3,"line_end":3,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\validation\\range.rs","byte_start":26411,"byte_end":26414,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ TODO: see if can be generic over the number type","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\validation\\range.rs","byte_start":26415,"byte_end":26467,"line_start":5,"line_end":5,"column_start":1,"column_end":53}},{"value":"must_use","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\validation\\range.rs","byte_start":26468,"byte_end":26479,"line_start":6,"line_end":6,"column_start":1,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":146},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\validation\\required.rs","byte_start":28251,"byte_end":28268,"line_start":3,"line_end":3,"column_start":8,"column_end":25},"name":"validate_required","qualname":"::validation::required::validate_required","value":"pub fn validate_required<T>(&Option<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Validates whether the given Option is Some\n","sig":null,"attributes":[{"value":"/ Validates whether the given Option is Some","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\validation\\required.rs","byte_start":28185,"byte_end":28231,"line_start":1,"line_end":1,"column_start":1,"column_end":47}},{"value":"must_use","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\validation\\required.rs","byte_start":28232,"byte_end":28243,"line_start":2,"line_end":2,"column_start":1,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":151},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\validation\\urls.rs","byte_start":28424,"byte_end":28436,"line_start":6,"line_end":6,"column_start":8,"column_end":20},"name":"validate_url","qualname":"::validation::urls::validate_url","value":"pub fn validate_url<'a, T>(T) -> bool where T: Into<Cow>","parent":null,"children":[],"decl_id":null,"docs":" Validates whether the string given is a url\n","sig":null,"attributes":[{"value":"/ Validates whether the string given is a url","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\validation\\urls.rs","byte_start":28357,"byte_end":28404,"line_start":4,"line_end":4,"column_start":1,"column_end":48}},{"value":"must_use","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\validation\\urls.rs","byte_start":28405,"byte_end":28416,"line_start":5,"line_end":5,"column_start":1,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":316},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\validation\\mod.rs","byte_start":9537,"byte_end":9542,"line_start":22,"line_end":22,"column_start":5,"column_end":10},"name":"Email","qualname":"::validation::Validator::Email","value":"Validator::Email","parent":{"krate":0,"index":315},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":318},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\validation\\mod.rs","byte_start":9548,"byte_end":9551,"line_start":23,"line_end":23,"column_start":5,"column_end":8},"name":"Url","qualname":"::validation::Validator::Url","value":"Validator::Url","parent":{"krate":0,"index":315},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":320},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\validation\\mod.rs","byte_start":9599,"byte_end":9605,"line_start":25,"line_end":25,"column_start":5,"column_end":11},"name":"Custom","qualname":"::validation::Validator::Custom","value":"Validator::Custom(String)","parent":{"krate":0,"index":315},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":323},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\validation\\mod.rs","byte_start":9667,"byte_end":9676,"line_start":27,"line_end":27,"column_start":5,"column_end":14},"name":"MustMatch","qualname":"::validation::Validator::MustMatch","value":"Validator::MustMatch(String)","parent":{"krate":0,"index":315},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":326},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\validation\\mod.rs","byte_start":9738,"byte_end":9746,"line_start":29,"line_end":29,"column_start":5,"column_end":13},"name":"Contains","qualname":"::validation::Validator::Contains","value":"Validator::Contains(String)","parent":{"krate":0,"index":315},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":329},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\validation\\mod.rs","byte_start":9829,"byte_end":9834,"line_start":31,"line_end":31,"column_start":5,"column_end":10},"name":"Regex","qualname":"::validation::Validator::Regex","value":"Validator::Regex(String)","parent":{"krate":0,"index":315},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":332},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\validation\\mod.rs","byte_start":9848,"byte_end":9853,"line_start":32,"line_end":32,"column_start":5,"column_end":10},"name":"Range","qualname":"::validation::Validator::Range","value":"Validator::Range { min, max }","parent":{"krate":0,"index":315},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":335},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\validation\\mod.rs","byte_start":9982,"byte_end":9988,"line_start":37,"line_end":37,"column_start":5,"column_end":11},"name":"Length","qualname":"::validation::Validator::Length","value":"Validator::Length { min, max, equal }","parent":{"krate":0,"index":315},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":339},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\validation\\mod.rs","byte_start":10168,"byte_end":10174,"line_start":46,"line_end":46,"column_start":5,"column_end":11},"name":"Nested","qualname":"::validation::Validator::Nested","value":"Validator::Nested","parent":{"krate":0,"index":315},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":341},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\validation\\mod.rs","byte_start":10234,"byte_end":10242,"line_start":49,"line_end":49,"column_start":5,"column_end":13},"name":"Required","qualname":"::validation::Validator::Required","value":"Validator::Required","parent":{"krate":0,"index":315},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":343},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\validation\\mod.rs","byte_start":10248,"byte_end":10262,"line_start":50,"line_end":50,"column_start":5,"column_end":19},"name":"RequiredNested","qualname":"::validation::Validator::RequiredNested","value":"Validator::RequiredNested","parent":{"krate":0,"index":315},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":315},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\validation\\mod.rs","byte_start":9521,"byte_end":9530,"line_start":21,"line_end":21,"column_start":10,"column_end":19},"name":"Validator","qualname":"::validation::Validator","value":"pub enum Validator {\n    Email,\n    Url,\n    Custom(String),\n    MustMatch(String),\n    Contains(String),\n    Regex(String),\n    Range {\n        min: Option<f64>,\n        max: Option<f64>,\n    },\n    Length {\n        min: Option<u64>,\n        max: Option<u64>,\n        equal: Option<u64>,\n    },\n    Nested,\n    Required,\n    RequiredNested,\n}","parent":null,"children":[{"krate":0,"index":316},{"krate":0,"index":318},{"krate":0,"index":320},{"krate":0,"index":323},{"krate":0,"index":326},{"krate":0,"index":329},{"krate":0,"index":332},{"krate":0,"index":335},{"krate":0,"index":339},{"krate":0,"index":341},{"krate":0,"index":343}],"decl_id":null,"docs":" Contains all the validators that can be used","sig":null,"attributes":[{"value":"/ Contains all the validators that can be used","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\validation\\mod.rs","byte_start":9325,"byte_end":9373,"line_start":16,"line_end":16,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\validation\\mod.rs","byte_start":9374,"byte_end":9377,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ In this crate as it's not allowed to export more than the proc macro","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\validation\\mod.rs","byte_start":9378,"byte_end":9450,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"/ in a proc macro crate","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\validation\\mod.rs","byte_start":9451,"byte_end":9476,"line_start":19,"line_end":19,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\validation\\mod.rs","byte_start":10295,"byte_end":10299,"line_start":54,"line_end":54,"column_start":12,"column_end":16},"name":"code","qualname":"<Validator>::code","value":"pub fn code(&Self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\traits.rs","byte_start":1130,"byte_end":1136,"line_start":14,"line_end":14,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":10}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\traits.rs","byte_start":1447,"byte_end":1450,"line_start":32,"line_end":32,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":19}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\traits.rs","byte_start":1546,"byte_end":1549,"line_start":38,"line_end":38,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":22}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\traits.rs","byte_start":1920,"byte_end":1926,"line_start":56,"line_end":56,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":30}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\traits.rs","byte_start":2285,"byte_end":2288,"line_start":74,"line_end":74,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":39}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\traits.rs","byte_start":2439,"byte_end":2446,"line_start":80,"line_end":80,"column_start":51,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":43}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\types.rs","byte_start":3433,"byte_end":3448,"line_start":16,"line_end":16,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":71},{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\types.rs","byte_start":3774,"byte_end":3789,"line_start":26,"line_end":26,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\types.rs","byte_start":3964,"byte_end":3979,"line_start":32,"line_end":32,"column_start":28,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":77},{"krate":0,"index":78}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\types.rs","byte_start":4474,"byte_end":4490,"line_start":52,"line_end":52,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":85},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":95},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\types.rs","byte_start":8746,"byte_end":8762,"line_start":171,"line_end":171,"column_start":28,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":102},{"krate":0,"index":103}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\types.rs","byte_start":8935,"byte_end":8951,"line_start":180,"line_end":180,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":105}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\validation\\mod.rs","byte_start":10272,"byte_end":10281,"line_start":53,"line_end":53,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":155}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\traits.rs","byte_start":1130,"byte_end":1136,"line_start":14,"line_end":14,"column_start":17,"column_end":23},"kind":{"Impl":{"id":0}},"from":{"krate":5,"index":5501},"to":{"krate":0,"index":7}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\traits.rs","byte_start":1447,"byte_end":1450,"line_start":32,"line_end":32,"column_start":21,"column_end":24},"kind":{"Impl":{"id":1}},"from":{"krate":5,"index":405},"to":{"krate":0,"index":7}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\traits.rs","byte_start":1546,"byte_end":1549,"line_start":38,"line_end":38,"column_start":20,"column_end":23},"kind":{"Impl":{"id":2}},"from":{"krate":5,"index":4754},"to":{"krate":0,"index":7}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\traits.rs","byte_start":1920,"byte_end":1926,"line_start":56,"line_end":56,"column_start":19,"column_end":25},"kind":{"Impl":{"id":3}},"from":{"krate":5,"index":5501},"to":{"krate":0,"index":27}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\traits.rs","byte_start":2285,"byte_end":2288,"line_start":74,"line_end":74,"column_start":23,"column_end":26},"kind":{"Impl":{"id":4}},"from":{"krate":5,"index":405},"to":{"krate":0,"index":27}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\traits.rs","byte_start":2439,"byte_end":2446,"line_start":80,"line_end":80,"column_start":51,"column_end":58},"kind":{"Impl":{"id":5}},"from":{"krate":1,"index":6729},"to":{"krate":0,"index":27}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\types.rs","byte_start":3433,"byte_end":3448,"line_start":16,"line_end":16,"column_start":6,"column_end":21},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":176},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\types.rs","byte_start":3774,"byte_end":3789,"line_start":26,"line_end":26,"column_start":23,"column_end":38},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":176},"to":{"krate":2,"index":6611}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\types.rs","byte_start":3964,"byte_end":3979,"line_start":32,"line_end":32,"column_start":28,"column_end":43},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":176},"to":{"krate":1,"index":1725}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\types.rs","byte_start":4474,"byte_end":4490,"line_start":52,"line_end":52,"column_start":6,"column_end":22},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":263},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\types.rs","byte_start":8746,"byte_end":8762,"line_start":171,"line_end":171,"column_start":28,"column_end":44},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":263},"to":{"krate":1,"index":1725}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\types.rs","byte_start":8935,"byte_end":8951,"line_start":180,"line_end":180,"column_start":23,"column_end":39},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":263},"to":{"krate":2,"index":6611}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\validator-0.10.1\\src\\validation\\mod.rs","byte_start":10272,"byte_end":10281,"line_start":53,"line_end":53,"column_start":6,"column_end":15},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":315},"to":{"krate":4294967295,"index":4294967295}}]}