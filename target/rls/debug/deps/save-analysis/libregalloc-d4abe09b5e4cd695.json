{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30","program":"C:\\Users\\Simon Palmer\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","regalloc","--edition=2018","C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","-C","metadata=d4abe09b5e4cd695","-C","extra-filename=-d4abe09b5e4cd695","--out-dir","c:\\Users\\Simon Palmer\\Documents\\Programming\\near_enough\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\Simon Palmer\\Documents\\Programming\\near_enough\\target\\rls\\debug\\deps","--extern","log=c:\\Users\\Simon Palmer\\Documents\\Programming\\near_enough\\target\\rls\\debug\\deps\\liblog-c4a52490826b07e9.rmeta","--extern","rustc_hash=c:\\Users\\Simon Palmer\\Documents\\Programming\\near_enough\\target\\rls\\debug\\deps\\librustc_hash-2c7f4a1bb4750f6f.rmeta","--extern","smallvec=c:\\Users\\Simon Palmer\\Documents\\Programming\\near_enough\\target\\rls\\debug\\deps\\libsmallvec-452ea521d93babb4.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\Simon Palmer\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\Simon Palmer\\Documents\\Programming\\near_enough\\target\\rls\\debug\\deps\\libregalloc-d4abe09b5e4cd695.rmeta"},"prelude":{"crate_id":{"name":"regalloc","disambiguator":[5597458881460613215,3349224354220627536]},"crate_root":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src","external_crates":[{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[2134305066550747688,1377703208702874155]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\sparse_set.rs","num":2,"id":{"name":"core","disambiguator":[1322159461575500717,8297198428669169011]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[2376346800744392852,12342541482992122530]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[14946502858004023242,6637215598610016319]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[5305136910335682758,6890491777619641650]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[8079093424489733033,9678018066858265018]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[8191054904896780843,65190916132359678]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[17454577518104061478,8473922882117178851]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[14702801963282246562,3385633331338644346]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[4483555191844012602,617965746000623535]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[6496369475756502088,8603909216288097824]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","num":12,"id":{"name":"panic_unwind","disambiguator":[8790568169648576788,8899032378407077408]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\analysis_main.rs","num":13,"id":{"name":"log","disambiguator":[962470621801898396,17699645428444335091]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\analysis_main.rs","num":14,"id":{"name":"cfg_if","disambiguator":[12397753863589609571,14658349722023367951]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\analysis_control_flow.rs","num":15,"id":{"name":"smallvec","disambiguator":[586103597685265026,17635821128416778049]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\checker.rs","num":16,"id":{"name":"rustc_hash","disambiguator":[16119220747719338746,1082273402729766943]}}],"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":0,"byte_end":25977,"line_start":1,"line_end":614,"column_start":1,"column_end":37}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":711},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":1302,"byte_end":1305,"line_start":44,"line_end":44,"column_start":33,"column_end":36},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2028},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":1339,"byte_end":1342,"line_start":45,"line_end":45,"column_start":33,"column_end":36},"alias_span":null,"name":"Set","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2263},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":1398,"byte_end":1406,"line_start":49,"line_end":49,"column_start":33,"column_end":41},"alias_span":null,"name":"RegClass","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2293},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":1503,"byte_end":1506,"line_start":53,"line_end":53,"column_start":33,"column_end":36},"alias_span":null,"name":"Reg","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2316},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":1541,"byte_end":1548,"line_start":55,"line_end":55,"column_start":33,"column_end":40},"alias_span":null,"name":"RealReg","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2339},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":1582,"byte_end":1592,"line_start":56,"line_end":56,"column_start":33,"column_end":43},"alias_span":null,"name":"VirtualReg","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2362},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":1627,"byte_end":1635,"line_start":58,"line_end":58,"column_start":33,"column_end":41},"alias_span":null,"name":"Writable","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":826},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":1670,"byte_end":1685,"line_start":60,"line_end":60,"column_start":33,"column_end":48},"alias_span":null,"name":"NUM_REG_CLASSES","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2398},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":1736,"byte_end":1745,"line_start":64,"line_end":64,"column_start":33,"column_end":42},"alias_span":null,"name":"SpillSlot","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2448},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":6333,"byte_end":6348,"line_start":146,"line_end":146,"column_start":33,"column_end":48},"alias_span":null,"name":"RealRegUniverse","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2457},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":6382,"byte_end":6394,"line_start":147,"line_end":147,"column_start":33,"column_end":45},"alias_span":null,"name":"RegClassInfo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":905},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":6520,"byte_end":6537,"line_start":152,"line_end":152,"column_start":33,"column_end":50},"alias_span":null,"name":"RegUsageCollector","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":782},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":7578,"byte_end":7588,"line_start":176,"line_end":176,"column_start":33,"column_end":43},"alias_span":null,"name":"TypedIxVec","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2106},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":7623,"byte_end":7630,"line_start":177,"line_end":177,"column_start":34,"column_end":41},"alias_span":null,"name":"BlockIx","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2062},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":7632,"byte_end":7638,"line_start":177,"line_end":177,"column_start":43,"column_end":49},"alias_span":null,"name":"InstIx","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2034},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":7640,"byte_end":7645,"line_start":177,"line_end":177,"column_start":51,"column_end":56},"alias_span":null,"name":"Range","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1795},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":17109,"byte_end":17122,"line_start":393,"line_end":393,"column_start":31,"column_end":44},"alias_span":null,"name":"AnalysisError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1925},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":17149,"byte_end":17161,"line_start":394,"line_end":394,"column_start":26,"column_end":38},"alias_span":null,"name":"CheckerError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1919},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":17163,"byte_end":17176,"line_start":394,"line_end":394,"column_start":40,"column_end":53},"alias_span":null,"name":"CheckerErrors","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1875},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":17587,"byte_end":17606,"line_start":412,"line_end":412,"column_start":25,"column_end":44},"alias_span":null,"name":"BacktrackingOptions","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2852},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":17636,"byte_end":17653,"line_start":413,"line_end":413,"column_start":29,"column_end":46},"alias_span":null,"name":"LinearScanOptions","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2980},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":25966,"byte_end":25976,"line_start":614,"line_end":614,"column_start":26,"column_end":36},"alias_span":null,"name":"IRSnapshot","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":0,"byte_end":25977,"line_start":1,"line_end":614,"column_start":1,"column_end":37},"name":"","qualname":"::","value":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":59},{"krate":0,"index":124},{"krate":0,"index":225},{"krate":0,"index":253},{"krate":0,"index":323},{"krate":0,"index":389},{"krate":0,"index":425},{"krate":0,"index":544},{"krate":0,"index":592},{"krate":0,"index":622},{"krate":0,"index":692},{"krate":0,"index":1045},{"krate":0,"index":1092},{"krate":0,"index":1500},{"krate":0,"index":1544},{"krate":0,"index":1582},{"krate":0,"index":1648},{"krate":0,"index":1708},{"krate":0,"index":1709},{"krate":0,"index":1710},{"krate":0,"index":1711},{"krate":0,"index":1712},{"krate":0,"index":1713},{"krate":0,"index":1714},{"krate":0,"index":1715},{"krate":0,"index":1716},{"krate":0,"index":1717},{"krate":0,"index":1718},{"krate":0,"index":1719},{"krate":0,"index":1720},{"krate":0,"index":1721},{"krate":0,"index":1722},{"krate":0,"index":1723},{"krate":0,"index":1724},{"krate":0,"index":1725},{"krate":0,"index":1726},{"krate":0,"index":1727},{"krate":0,"index":1728},{"krate":0,"index":1732},{"krate":0,"index":1733},{"krate":0,"index":1734},{"krate":0,"index":1735},{"krate":0,"index":1736},{"krate":0,"index":1737},{"krate":0,"index":1762},{"krate":0,"index":3085},{"krate":0,"index":3099},{"krate":0,"index":3098},{"krate":0,"index":3096},{"krate":0,"index":3093},{"krate":0,"index":3094},{"krate":0,"index":3090},{"krate":0,"index":3091},{"krate":0,"index":1772},{"krate":0,"index":1773},{"krate":0,"index":1774},{"krate":0,"index":1775},{"krate":0,"index":3101},{"krate":0,"index":3119},{"krate":0,"index":3117},{"krate":0,"index":1776},{"krate":0,"index":1778},{"krate":0,"index":1779},{"krate":0,"index":3121},{"krate":0,"index":3128},{"krate":0,"index":1780},{"krate":0,"index":3130},{"krate":0,"index":3133},{"krate":0,"index":1782},{"krate":0,"index":1784},{"krate":0,"index":1786},{"krate":0,"index":1790},{"krate":0,"index":1792},{"krate":0,"index":1794}],"decl_id":null,"docs":" Main file / top-level module for regalloc library.","sig":null,"attributes":[{"value":"/ Main file / top-level module for regalloc library.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":0,"byte_end":54,"line_start":1,"line_end":1,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":55,"byte_end":58,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ We have tried hard to make the library's interface as simple as possible,","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":59,"byte_end":136,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"/ yet flexible enough that the allocators it implements can provide good","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":137,"byte_end":211,"line_start":4,"line_end":4,"column_start":1,"column_end":75}},{"value":"/ quality allocations in reasonable time.  Nevertheless, there is still","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":212,"byte_end":285,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/ significant semantic complexity in parts of the interface.  If you intend","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":286,"byte_end":363,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/ to use this library in your own code, you would be well advised to read","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":364,"byte_end":439,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ the comments in this file very carefully.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":440,"byte_end":485,"line_start":8,"line_end":8,"column_start":1,"column_end":46}}]},{"kind":"StructVariant","id":{"krate":0,"index":1796},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\analysis_main.rs","byte_start":27179,"byte_end":27191,"line_start":29,"line_end":29,"column_start":5,"column_end":17},"name":"CriticalEdge","qualname":"::analysis_main::AnalysisError::CriticalEdge","value":"AnalysisError::CriticalEdge { from, to }","parent":{"krate":0,"index":1795},"children":[],"decl_id":null,"docs":" A critical edge from \"from\" to \"to\" has been found, and should have been\n removed by the caller in the first place.\n","sig":null,"attributes":[{"value":"/ A critical edge from \"from\" to \"to\" has been found, and should have been","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\analysis_main.rs","byte_start":27048,"byte_end":27124,"line_start":27,"line_end":27,"column_start":5,"column_end":81}},{"value":"/ removed by the caller in the first place.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\analysis_main.rs","byte_start":27129,"byte_end":27174,"line_start":28,"line_end":28,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1799},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\analysis_main.rs","byte_start":27335,"byte_end":27352,"line_start":33,"line_end":33,"column_start":5,"column_end":22},"name":"EntryLiveinValues","qualname":"::analysis_main::AnalysisError::EntryLiveinValues","value":"AnalysisError::EntryLiveinValues(Vec<Reg>)","parent":{"krate":0,"index":1795},"children":[],"decl_id":null,"docs":" Some values in the entry block are live in to the function, but are not\n declared as such.\n","sig":null,"attributes":[{"value":"/ Some values in the entry block are live in to the function, but are not","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\analysis_main.rs","byte_start":27229,"byte_end":27304,"line_start":31,"line_end":31,"column_start":5,"column_end":80}},{"value":"/ declared as such.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\analysis_main.rs","byte_start":27309,"byte_end":27330,"line_start":32,"line_end":32,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1802},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\analysis_main.rs","byte_start":27946,"byte_end":27960,"line_start":43,"line_end":43,"column_start":5,"column_end":19},"name":"IllegalRealReg","qualname":"::analysis_main::AnalysisError::IllegalRealReg","value":"AnalysisError::IllegalRealReg(RealReg)","parent":{"krate":0,"index":1795},"children":[],"decl_id":null,"docs":" The incoming code has an explicit or implicit mention (use, def or mod)\n of a real register, which either (1) isn't listed in the universe at\n all, or (2) is one of the `suggested_scratch` registers in the universe.\n (1) isn't allowed because the client must mention *all* real registers\n in the universe.  (2) isn't allowed because the client promises to us\n that the `suggested_scratch` registers really are completely unused in\n the incoming code, so that the allocator can use them at literally any\n point it wants.\n","sig":null,"attributes":[{"value":"/ The incoming code has an explicit or implicit mention (use, def or mod)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\analysis_main.rs","byte_start":27369,"byte_end":27444,"line_start":35,"line_end":35,"column_start":5,"column_end":80}},{"value":"/ of a real register, which either (1) isn't listed in the universe at","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\analysis_main.rs","byte_start":27449,"byte_end":27521,"line_start":36,"line_end":36,"column_start":5,"column_end":77}},{"value":"/ all, or (2) is one of the `suggested_scratch` registers in the universe.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\analysis_main.rs","byte_start":27526,"byte_end":27602,"line_start":37,"line_end":37,"column_start":5,"column_end":81}},{"value":"/ (1) isn't allowed because the client must mention *all* real registers","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\analysis_main.rs","byte_start":27607,"byte_end":27681,"line_start":38,"line_end":38,"column_start":5,"column_end":79}},{"value":"/ in the universe.  (2) isn't allowed because the client promises to us","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\analysis_main.rs","byte_start":27686,"byte_end":27759,"line_start":39,"line_end":39,"column_start":5,"column_end":78}},{"value":"/ that the `suggested_scratch` registers really are completely unused in","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\analysis_main.rs","byte_start":27764,"byte_end":27838,"line_start":40,"line_end":40,"column_start":5,"column_end":79}},{"value":"/ the incoming code, so that the allocator can use them at literally any","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\analysis_main.rs","byte_start":27843,"byte_end":27917,"line_start":41,"line_end":41,"column_start":5,"column_end":79}},{"value":"/ point it wants.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\analysis_main.rs","byte_start":27922,"byte_end":27941,"line_start":42,"line_end":42,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1805},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\analysis_main.rs","byte_start":28012,"byte_end":28029,"line_start":46,"line_end":46,"column_start":5,"column_end":22},"name":"UnreachableBlocks","qualname":"::analysis_main::AnalysisError::UnreachableBlocks","value":"AnalysisError::UnreachableBlocks","parent":{"krate":0,"index":1795},"children":[],"decl_id":null,"docs":" At least one block is dead.\n","sig":null,"attributes":[{"value":"/ At least one block is dead.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\analysis_main.rs","byte_start":27976,"byte_end":28007,"line_start":45,"line_end":45,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1807},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\analysis_main.rs","byte_start":28195,"byte_end":28223,"line_start":50,"line_end":50,"column_start":5,"column_end":33},"name":"ImplementationLimitsExceeded","qualname":"::analysis_main::AnalysisError::ImplementationLimitsExceeded","value":"AnalysisError::ImplementationLimitsExceeded","parent":{"krate":0,"index":1795},"children":[],"decl_id":null,"docs":" Implementation limits exceeded.  The incoming function is too big.  It\n may contain at most 1 million basic blocks and 16 million instructions.\n","sig":null,"attributes":[{"value":"/ Implementation limits exceeded.  The incoming function is too big.  It","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\analysis_main.rs","byte_start":28036,"byte_end":28110,"line_start":48,"line_end":48,"column_start":5,"column_end":79}},{"value":"/ may contain at most 1 million basic blocks and 16 million instructions.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\analysis_main.rs","byte_start":28115,"byte_end":28190,"line_start":49,"line_end":49,"column_start":5,"column_end":80}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1809},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\analysis_main.rs","byte_start":28338,"byte_end":28357,"line_start":54,"line_end":54,"column_start":5,"column_end":24},"name":"LSRACantDoStackmaps","qualname":"::analysis_main::AnalysisError::LSRACantDoStackmaps","value":"AnalysisError::LSRACantDoStackmaps","parent":{"krate":0,"index":1795},"children":[],"decl_id":null,"docs":" Currently LSRA can't generate stackmaps, but the client has requested LSRA *and*\n stackmaps.\n","sig":null,"attributes":[{"value":"/ Currently LSRA can't generate stackmaps, but the client has requested LSRA *and*","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\analysis_main.rs","byte_start":28230,"byte_end":28314,"line_start":52,"line_end":52,"column_start":5,"column_end":89}},{"value":"/ stackmaps.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\analysis_main.rs","byte_start":28319,"byte_end":28333,"line_start":53,"line_end":53,"column_start":5,"column_end":19}}]},{"kind":"Enum","id":{"krate":0,"index":1795},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\analysis_main.rs","byte_start":27028,"byte_end":27041,"line_start":26,"line_end":26,"column_start":10,"column_end":23},"name":"AnalysisError","qualname":"::analysis_main::AnalysisError","value":"pub enum AnalysisError {\n\n    /// A critical edge from \"from\" to \"to\" has been found, and should have been\n    /// removed by the caller in the first place.\n    CriticalEdge {\n        from: BlockIx,\n        to: BlockIx,\n    },\n\n    /// Some values in the entry block are live in to the function, but are not\n    /// declared as such.\n    EntryLiveinValues(Vec<Reg>),\n\n    /// The incoming code has an explicit or implicit mention (use, def or mod)\n    /// of a real register, which either (1) isn't listed in the universe at\n    /// all, or (2) is one of the `suggested_scratch` registers in the universe.\n    /// (1) isn't allowed because the client must mention *all* real registers\n    /// in the universe.  (2) isn't allowed because the client promises to us\n    /// that the `suggested_scratch` registers really are completely unused in\n    /// the incoming code, so that the allocator can use them at literally any\n    /// point it wants.\n    IllegalRealReg(RealReg),\n\n    /// At least one block is dead.\n    UnreachableBlocks,\n\n    /// Implementation limits exceeded.  The incoming function is too big.  It\n    /// may contain at most 1 million basic blocks and 16 million instructions.\n    ImplementationLimitsExceeded,\n\n    /// Currently LSRA can't generate stackmaps, but the client has requested LSRA *and*\n    /// stackmaps.\n    LSRACantDoStackmaps,\n}","parent":null,"children":[{"krate":0,"index":1796},{"krate":0,"index":1799},{"krate":0,"index":1802},{"krate":0,"index":1805},{"krate":0,"index":1807},{"krate":0,"index":1809}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1875},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\bt_main.rs","byte_start":242011,"byte_end":242030,"line_start":32,"line_end":32,"column_start":12,"column_end":31},"name":"BacktrackingOptions","qualname":"::bt_main::BacktrackingOptions","value":"BacktrackingOptions { request_block_annotations }","parent":null,"children":[{"krate":0,"index":1876}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1876},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\bt_main.rs","byte_start":242107,"byte_end":242132,"line_start":34,"line_end":34,"column_start":9,"column_end":34},"name":"request_block_annotations","qualname":"::bt_main::BacktrackingOptions::request_block_annotations","value":"bool","parent":{"krate":0,"index":1875},"children":[],"decl_id":null,"docs":" Should the register allocator generate block annotations?\n","sig":null,"attributes":[{"value":"/ Should the register allocator generate block annotations?","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\bt_main.rs","byte_start":242037,"byte_end":242098,"line_start":33,"line_end":33,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":1919},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\checker.rs","byte_start":354933,"byte_end":354946,"line_start":75,"line_end":75,"column_start":12,"column_end":25},"name":"CheckerErrors","qualname":"::checker::CheckerErrors","value":"CheckerErrors {  }","parent":null,"children":[{"krate":0,"index":1920}],"decl_id":null,"docs":" A set of errors detected by the regalloc checker.\n","sig":null,"attributes":[{"value":"/ A set of errors detected by the regalloc checker.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\checker.rs","byte_start":354844,"byte_end":354897,"line_start":73,"line_end":73,"column_start":1,"column_end":54}}]},{"kind":"StructVariant","id":{"krate":0,"index":1926},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\checker.rs","byte_start":355088,"byte_end":355111,"line_start":82,"line_end":82,"column_start":5,"column_end":28},"name":"MissingAllocationForReg","qualname":"::checker::CheckerError::MissingAllocationForReg","value":"CheckerError::MissingAllocationForReg { reg, inst }","parent":{"krate":0,"index":1925},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1929},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\checker.rs","byte_start":355172,"byte_end":355189,"line_start":86,"line_end":86,"column_start":5,"column_end":22},"name":"UnknownValueInReg","qualname":"::checker::CheckerError::UnknownValueInReg","value":"CheckerError::UnknownValueInReg { real_reg, inst }","parent":{"krate":0,"index":1925},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1932},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\checker.rs","byte_start":355252,"byte_end":355271,"line_start":90,"line_end":90,"column_start":5,"column_end":24},"name":"IncorrectValueInReg","qualname":"::checker::CheckerError::IncorrectValueInReg","value":"CheckerError::IncorrectValueInReg { actual, expected, real_reg, inst }","parent":{"krate":0,"index":1925},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1937},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\checker.rs","byte_start":355378,"byte_end":355396,"line_start":96,"line_end":96,"column_start":5,"column_end":23},"name":"UnknownValueInSlot","qualname":"::checker::CheckerError::UnknownValueInSlot","value":"CheckerError::UnknownValueInSlot { slot, expected, inst }","parent":{"krate":0,"index":1925},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1941},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\checker.rs","byte_start":355480,"byte_end":355500,"line_start":101,"line_end":101,"column_start":5,"column_end":25},"name":"IncorrectValueInSlot","qualname":"::checker::CheckerError::IncorrectValueInSlot","value":"CheckerError::IncorrectValueInSlot { slot, expected, actual, inst }","parent":{"krate":0,"index":1925},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1946},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\checker.rs","byte_start":355605,"byte_end":355632,"line_start":107,"line_end":107,"column_start":5,"column_end":32},"name":"StackMapSpecifiesNonRefSlot","qualname":"::checker::CheckerError::StackMapSpecifiesNonRefSlot","value":"CheckerError::StackMapSpecifiesNonRefSlot { inst, slot }","parent":{"krate":0,"index":1925},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1949},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\checker.rs","byte_start":355693,"byte_end":355723,"line_start":111,"line_end":111,"column_start":5,"column_end":35},"name":"StackMapSpecifiesUndefinedSlot","qualname":"::checker::CheckerError::StackMapSpecifiesUndefinedSlot","value":"CheckerError::StackMapSpecifiesUndefinedSlot { inst, slot }","parent":{"krate":0,"index":1925},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1925},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\checker.rs","byte_start":355069,"byte_end":355081,"line_start":81,"line_end":81,"column_start":10,"column_end":22},"name":"CheckerError","qualname":"::checker::CheckerError","value":"pub enum CheckerError {\n    MissingAllocationForReg {\n        reg: VirtualReg,\n        inst: InstIx,\n    },\n    UnknownValueInReg {\n        real_reg: RealReg,\n        inst: InstIx,\n    },\n    IncorrectValueInReg {\n        actual: Reg,\n        expected: Reg,\n        real_reg: RealReg,\n        inst: InstIx,\n    },\n    UnknownValueInSlot {\n        slot: SpillSlot,\n        expected: Reg,\n        inst: InstIx,\n    },\n    IncorrectValueInSlot {\n        slot: SpillSlot,\n        expected: Reg,\n        actual: Reg,\n        inst: InstIx,\n    },\n    StackMapSpecifiesNonRefSlot {\n        inst: InstIx,\n        slot: SpillSlot,\n    },\n    StackMapSpecifiesUndefinedSlot {\n        inst: InstIx,\n        slot: SpillSlot,\n    },\n}","parent":null,"children":[{"krate":0,"index":1926},{"krate":0,"index":1929},{"krate":0,"index":1932},{"krate":0,"index":1937},{"krate":0,"index":1941},{"krate":0,"index":1946},{"krate":0,"index":1949}],"decl_id":null,"docs":" A single error detected by the regalloc checker.\n","sig":null,"attributes":[{"value":"/ A single error detected by the regalloc checker.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\checker.rs","byte_start":354983,"byte_end":355035,"line_start":79,"line_end":79,"column_start":1,"column_end":53}}]},{"kind":"Type","id":{"krate":0,"index":711},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":378086,"byte_end":378089,"line_start":33,"line_end":33,"column_start":10,"column_end":13},"name":"Map","qualname":"::data_structures::Map","value":"FxHashMap<K, V>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2028},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":378353,"byte_end":378356,"line_start":41,"line_end":41,"column_start":12,"column_end":15},"name":"Set","qualname":"::data_structures::Set","value":"Set {  }","parent":null,"children":[{"krate":0,"index":2030}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":716},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":378485,"byte_end":378490,"line_start":47,"line_end":47,"column_start":12,"column_end":17},"name":"empty","qualname":"<Set<T>>::empty","value":"pub fn empty() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(never)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":378457,"byte_end":378473,"line_start":46,"line_end":46,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":717},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":378611,"byte_end":378615,"line_start":54,"line_end":54,"column_start":12,"column_end":16},"name":"unit","qualname":"<Set<T>>::unit","value":"pub fn unit(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(never)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":378583,"byte_end":378599,"line_start":53,"line_end":53,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":718},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":378743,"byte_end":378746,"line_start":61,"line_end":61,"column_start":12,"column_end":15},"name":"two","qualname":"<Set<T>>::two","value":"pub fn two(T, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(never)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":378715,"byte_end":378731,"line_start":60,"line_end":60,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":719},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":378911,"byte_end":378915,"line_start":69,"line_end":69,"column_start":12,"column_end":16},"name":"card","qualname":"<Set<T>>::card","value":"pub fn card(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(never)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":378883,"byte_end":378899,"line_start":68,"line_end":68,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":720},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":378996,"byte_end":379002,"line_start":74,"line_end":74,"column_start":12,"column_end":18},"name":"insert","qualname":"<Set<T>>::insert","value":"pub fn insert(&mut Self, T)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(never)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":378968,"byte_end":378984,"line_start":73,"line_end":73,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":721},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":379095,"byte_end":379101,"line_start":79,"line_end":79,"column_start":12,"column_end":18},"name":"delete","qualname":"<Set<T>>::delete","value":"pub fn delete(&mut Self, T)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(never)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":379067,"byte_end":379083,"line_start":78,"line_end":78,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":722},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":379195,"byte_end":379203,"line_start":84,"line_end":84,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Set<T>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(never)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":379167,"byte_end":379183,"line_start":83,"line_end":83,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":723},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":379288,"byte_end":379296,"line_start":89,"line_end":89,"column_start":12,"column_end":20},"name":"contains","qualname":"<Set<T>>::contains","value":"pub fn contains(&Self, T) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(never)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":379260,"byte_end":379276,"line_start":88,"line_end":88,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":724},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":379395,"byte_end":379404,"line_start":94,"line_end":94,"column_start":12,"column_end":21},"name":"intersect","qualname":"<Set<T>>::intersect","value":"pub fn intersect(&mut Self, &Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(never)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":379367,"byte_end":379383,"line_start":93,"line_end":93,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":725},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":379683,"byte_end":379688,"line_start":105,"line_end":105,"column_start":12,"column_end":17},"name":"union","qualname":"<Set<T>>::union","value":"pub fn union(&mut Self, &Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(never)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":379655,"byte_end":379671,"line_start":104,"line_end":104,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":726},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":379840,"byte_end":379846,"line_start":112,"line_end":112,"column_start":12,"column_end":18},"name":"remove","qualname":"<Set<T>>::remove","value":"pub fn remove(&mut Self, &Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(never)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":379812,"byte_end":379828,"line_start":111,"line_end":111,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":727},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":379997,"byte_end":380007,"line_start":119,"line_end":119,"column_start":12,"column_end":22},"name":"intersects","qualname":"<Set<T>>::intersects","value":"pub fn intersects(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(never)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":379969,"byte_end":379985,"line_start":118,"line_end":118,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":728},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":380120,"byte_end":380132,"line_start":124,"line_end":124,"column_start":12,"column_end":24},"name":"is_subset_of","qualname":"<Set<T>>::is_subset_of","value":"pub fn is_subset_of(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(never)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":380092,"byte_end":380108,"line_start":123,"line_end":123,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":729},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":380242,"byte_end":380248,"line_start":129,"line_end":129,"column_start":12,"column_end":18},"name":"to_vec","qualname":"<Set<T>>::to_vec","value":"pub fn to_vec(&Self) -> Vec<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(never)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":380214,"byte_end":380230,"line_start":128,"line_end":128,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":730},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":380511,"byte_end":380519,"line_start":140,"line_end":140,"column_start":12,"column_end":20},"name":"from_vec","qualname":"<Set<T>>::from_vec","value":"pub fn from_vec(Vec<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(never)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":380483,"byte_end":380499,"line_start":139,"line_end":139,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":731},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":380695,"byte_end":380701,"line_start":149,"line_end":149,"column_start":12,"column_end":18},"name":"equals","qualname":"<Set<T>>::equals","value":"pub fn equals(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(never)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":380667,"byte_end":380683,"line_start":148,"line_end":148,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":732},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":380802,"byte_end":380808,"line_start":154,"line_end":154,"column_start":12,"column_end":18},"name":"retain","qualname":"<Set<T>>::retain","value":"pub fn retain<F>(&mut Self, F) where F: FnMut(&T) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(never)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":380774,"byte_end":380790,"line_start":153,"line_end":153,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":734},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":380941,"byte_end":380944,"line_start":162,"line_end":162,"column_start":12,"column_end":15},"name":"map","qualname":"<Set<T>>::map","value":"pub fn map<F, U>(&Self, F) -> Set<U> where F: Fn(&T) -> U, U: Eq + Ord +\nHash + Copy + fmt::Debug","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(never)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":380913,"byte_end":380929,"line_start":161,"line_end":161,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":737},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":381176,"byte_end":381186,"line_start":173,"line_end":173,"column_start":12,"column_end":22},"name":"filter_map","qualname":"<Set<T>>::filter_map","value":"pub fn filter_map<F, U>(&Self, F) -> Set<U> where F: Fn(&T) -> Option<U>,\nU: Eq + Ord + Hash + Copy + fmt::Debug","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(never)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":381148,"byte_end":381164,"line_start":172,"line_end":172,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":740},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":381412,"byte_end":381417,"line_start":183,"line_end":183,"column_start":12,"column_end":17},"name":"clear","qualname":"<Set<T>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":744},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":382255,"byte_end":382262,"line_start":208,"line_end":208,"column_start":12,"column_end":19},"name":"SetIter","qualname":"::data_structures::SetIter","value":"SetIter {  }","parent":null,"children":[{"krate":0,"index":747}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":750},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":382368,"byte_end":382372,"line_start":212,"line_end":212,"column_start":12,"column_end":16},"name":"iter","qualname":"<Set<T>>::iter","value":"pub fn iter(&Self) -> SetIter<, T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":756},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":383124,"byte_end":383128,"line_start":239,"line_end":239,"column_start":11,"column_end":15},"name":"Zero","qualname":"::data_structures::Zero","value":"Zero","parent":null,"children":[{"krate":0,"index":757}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":757},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":383138,"byte_end":383142,"line_start":240,"line_end":240,"column_start":8,"column_end":12},"name":"zero","qualname":"::data_structures::Zero::zero","value":"pub fn zero() -> Self","parent":{"krate":0,"index":756},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":758},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":383167,"byte_end":383172,"line_start":243,"line_end":243,"column_start":11,"column_end":16},"name":"PlusN","qualname":"::data_structures::PlusN","value":"PlusN","parent":null,"children":[{"krate":0,"index":759}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":759},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":383182,"byte_end":383188,"line_start":244,"line_end":244,"column_start":8,"column_end":14},"name":"plus_n","qualname":"::data_structures::PlusN::plus_n","value":"pub fn plus_n(&Self, usize) -> Self","parent":{"krate":0,"index":758},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2034},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":383322,"byte_end":383327,"line_start":249,"line_end":249,"column_start":12,"column_end":17},"name":"Range","qualname":"::data_structures::Range","value":"Range {  }","parent":null,"children":[{"krate":0,"index":2036},{"krate":0,"index":2037}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":767},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":383711,"byte_end":383714,"line_start":267,"line_end":267,"column_start":12,"column_end":15},"name":"new","qualname":"<Range<T>>::new","value":"pub fn new(T, usize) -> Range<T>","parent":null,"children":[],"decl_id":null,"docs":" Create a new range object.\n","sig":null,"attributes":[{"value":"/ Create a new range object.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":383669,"byte_end":383699,"line_start":266,"line_end":266,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":768},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":383803,"byte_end":383808,"line_start":271,"line_end":271,"column_start":12,"column_end":17},"name":"start","qualname":"<Range<T>>::start","value":"pub fn start(&Self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":769},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":383860,"byte_end":383865,"line_start":275,"line_end":275,"column_start":12,"column_end":17},"name":"first","qualname":"<Range<T>>::first","value":"pub fn first(&Self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":770},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":383952,"byte_end":383956,"line_start":280,"line_end":280,"column_start":12,"column_end":16},"name":"last","qualname":"<Range<T>>::last","value":"pub fn last(&Self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":771},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":384066,"byte_end":384076,"line_start":285,"line_end":285,"column_start":12,"column_end":22},"name":"last_plus1","qualname":"<Range<T>>::last_plus1","value":"pub fn last_plus1(&Self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":772},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":384149,"byte_end":384152,"line_start":289,"line_end":289,"column_start":12,"column_end":15},"name":"len","qualname":"<Range<T>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":773},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":384206,"byte_end":384214,"line_start":293,"line_end":293,"column_start":12,"column_end":20},"name":"contains","qualname":"<Range<T>>::contains","value":"pub fn contains(&Self, T) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":774},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":384317,"byte_end":384327,"line_start":298,"line_end":298,"column_start":12,"column_end":22},"name":"MyIterator","qualname":"::data_structures::MyIterator","value":"MyIterator {  }","parent":null,"children":[{"krate":0,"index":776},{"krate":0,"index":777}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":782},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":384947,"byte_end":384957,"line_start":319,"line_end":319,"column_start":12,"column_end":22},"name":"TypedIxVec","qualname":"::data_structures::TypedIxVec","value":"TypedIxVec {  }","parent":null,"children":[{"krate":0,"index":785},{"krate":0,"index":786}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":790},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":385145,"byte_end":385148,"line_start":329,"line_end":329,"column_start":12,"column_end":15},"name":"new","qualname":"<TypedIxVec<TyIx, Ty>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":791},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":385272,"byte_end":385280,"line_start":335,"line_end":335,"column_start":12,"column_end":20},"name":"from_vec","qualname":"<TypedIxVec<TyIx, Ty>>::from_vec","value":"pub fn from_vec(Vec<Ty>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":792},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":385404,"byte_end":385410,"line_start":341,"line_end":341,"column_start":12,"column_end":18},"name":"append","qualname":"<TypedIxVec<TyIx, Ty>>::append","value":"pub fn append(&mut Self, &mut TypedIxVec<TyIx, Ty>)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":793},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":385557,"byte_end":385561,"line_start":345,"line_end":345,"column_start":12,"column_end":16},"name":"iter","qualname":"<TypedIxVec<TyIx, Ty>>::iter","value":"pub fn iter(&Self) -> Iter<, Ty>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":794},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":385624,"byte_end":385632,"line_start":348,"line_end":348,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<TypedIxVec<TyIx, Ty>>::iter_mut","value":"pub fn iter_mut(&mut Self) -> IterMut<, Ty>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":795},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":385706,"byte_end":385709,"line_start":351,"line_end":351,"column_start":12,"column_end":15},"name":"len","qualname":"<TypedIxVec<TyIx, Ty>>::len","value":"pub fn len(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":796},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":385814,"byte_end":385818,"line_start":355,"line_end":355,"column_start":12,"column_end":16},"name":"push","qualname":"<TypedIxVec<TyIx, Ty>>::push","value":"pub fn push(&mut Self, Ty)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":797},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":385929,"byte_end":385935,"line_start":359,"line_end":359,"column_start":12,"column_end":18},"name":"resize","qualname":"<TypedIxVec<TyIx, Ty>>::resize","value":"pub fn resize(&mut Self, u32, Ty)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":798},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":386041,"byte_end":386048,"line_start":362,"line_end":362,"column_start":12,"column_end":19},"name":"reserve","qualname":"<TypedIxVec<TyIx, Ty>>::reserve","value":"pub fn reserve(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":799},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":386136,"byte_end":386141,"line_start":365,"line_end":365,"column_start":12,"column_end":17},"name":"elems","qualname":"<TypedIxVec<TyIx, Ty>>::elems","value":"pub fn elems(&Self) -> &[Ty]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":800},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":386199,"byte_end":386208,"line_start":368,"line_end":368,"column_start":12,"column_end":21},"name":"elems_mut","qualname":"<TypedIxVec<TyIx, Ty>>::elems_mut","value":"pub fn elems_mut(&mut Self) -> &mut [Ty]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":801},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":386278,"byte_end":386283,"line_start":371,"line_end":371,"column_start":12,"column_end":17},"name":"range","qualname":"<TypedIxVec<TyIx, Ty>>::range","value":"pub fn range(&Self) -> Range<TyIx>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":802},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":386379,"byte_end":386385,"line_start":374,"line_end":374,"column_start":12,"column_end":18},"name":"remove","qualname":"<TypedIxVec<TyIx, Ty>>::remove","value":"pub fn remove(&mut Self, TyIx) -> Ty","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":803},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":386478,"byte_end":386485,"line_start":377,"line_end":377,"column_start":12,"column_end":19},"name":"sort_by","qualname":"<TypedIxVec<TyIx, Ty>>::sort_by","value":"pub fn sort_by<F: FnMut(&Ty, &Ty) -> Ordering>(&mut Self, F)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":805},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":386594,"byte_end":386610,"line_start":380,"line_end":380,"column_start":12,"column_end":28},"name":"sort_unstable_by","qualname":"<TypedIxVec<TyIx, Ty>>::sort_unstable_by","value":"pub fn sort_unstable_by<F: FnMut(&Ty, &Ty) -> Ordering>(&mut Self, F)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":807},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":386728,"byte_end":386733,"line_start":383,"line_end":383,"column_start":12,"column_end":17},"name":"clear","qualname":"<TypedIxVec<TyIx, Ty>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2063},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":390880,"byte_end":390886,"line_start":521,"line_end":521,"column_start":23,"column_end":29},"name":"InstIx","qualname":"::data_structures::InstIx::InstIx","value":"InstIx::InstIx(u32)","parent":{"krate":0,"index":2062},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2062},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":390880,"byte_end":390886,"line_start":521,"line_end":521,"column_start":23,"column_end":29},"name":"InstIx","qualname":"::data_structures::InstIx","value":"pub enum InstIx { InstIx(u32), }","parent":null,"children":[{"krate":0,"index":2063}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2107},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":390923,"byte_end":390930,"line_start":523,"line_end":523,"column_start":23,"column_end":30},"name":"BlockIx","qualname":"::data_structures::BlockIx::BlockIx","value":"BlockIx::BlockIx(u32)","parent":{"krate":0,"index":2106},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2106},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":390923,"byte_end":390930,"line_start":523,"line_end":523,"column_start":23,"column_end":30},"name":"BlockIx","qualname":"::data_structures::BlockIx","value":"pub enum BlockIx { BlockIx(u32), }","parent":null,"children":[{"krate":0,"index":2107}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2264},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":391962,"byte_end":391965,"line_start":549,"line_end":549,"column_start":5,"column_end":8},"name":"I32","qualname":"::data_structures::RegClass::I32","value":"RegClass::I32","parent":{"krate":0,"index":2263},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2267},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":391975,"byte_end":391978,"line_start":550,"line_end":550,"column_start":5,"column_end":8},"name":"F32","qualname":"::data_structures::RegClass::F32","value":"RegClass::F32","parent":{"krate":0,"index":2263},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2270},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":391988,"byte_end":391991,"line_start":551,"line_end":551,"column_start":5,"column_end":8},"name":"I64","qualname":"::data_structures::RegClass::I64","value":"RegClass::I64","parent":{"krate":0,"index":2263},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2273},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":392001,"byte_end":392004,"line_start":552,"line_end":552,"column_start":5,"column_end":8},"name":"F64","qualname":"::data_structures::RegClass::F64","value":"RegClass::F64","parent":{"krate":0,"index":2263},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2276},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":392014,"byte_end":392018,"line_start":553,"line_end":553,"column_start":5,"column_end":9},"name":"V128","qualname":"::data_structures::RegClass::V128","value":"RegClass::V128","parent":{"krate":0,"index":2263},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2279},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":392028,"byte_end":392035,"line_start":554,"line_end":554,"column_start":5,"column_end":12},"name":"INVALID","qualname":"::data_structures::RegClass::INVALID","value":"RegClass::INVALID","parent":{"krate":0,"index":2263},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2263},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":391947,"byte_end":391955,"line_start":548,"line_end":548,"column_start":10,"column_end":18},"name":"RegClass","qualname":"::data_structures::RegClass","value":"pub enum RegClass { I32 = , F32 = , I64 = , F64 = , V128 = , INVALID = , }","parent":null,"children":[{"krate":0,"index":2264},{"krate":0,"index":2267},{"krate":0,"index":2270},{"krate":0,"index":2273},{"krate":0,"index":2276},{"krate":0,"index":2279}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":826},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":392178,"byte_end":392193,"line_start":559,"line_end":559,"column_start":11,"column_end":26},"name":"NUM_REG_CLASSES","qualname":"::data_structures::NUM_REG_CLASSES","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The number of register classes that exist.\n N.B.: must be <= 7 (fit into 3 bits) for 32-bit VReg/RReg packed format!\n","sig":null,"attributes":[{"value":"/ The number of register classes that exist.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":392044,"byte_end":392090,"line_start":557,"line_end":557,"column_start":1,"column_end":47}},{"value":"/ N.B.: must be <= 7 (fit into 3 bits) for 32-bit VReg/RReg packed format!","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":392091,"byte_end":392167,"line_start":558,"line_end":558,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":828},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":392305,"byte_end":392314,"line_start":564,"line_end":564,"column_start":12,"column_end":21},"name":"rc_to_u32","qualname":"<RegClass>::rc_to_u32","value":"pub fn rc_to_u32(Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Convert a register class to a u32 index.\n","sig":null,"attributes":[{"value":"/ Convert a register class to a u32 index.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":392227,"byte_end":392271,"line_start":562,"line_end":562,"column_start":5,"column_end":49}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":392276,"byte_end":392293,"line_start":563,"line_end":563,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":829},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":392440,"byte_end":392451,"line_start":569,"line_end":569,"column_start":12,"column_end":23},"name":"rc_to_usize","qualname":"<RegClass>::rc_to_usize","value":"pub fn rc_to_usize(Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Convert a register class to a usize index.\n","sig":null,"attributes":[{"value":"/ Convert a register class to a usize index.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":392360,"byte_end":392406,"line_start":567,"line_end":567,"column_start":5,"column_end":51}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":392411,"byte_end":392428,"line_start":568,"line_end":568,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":830},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":392577,"byte_end":392588,"line_start":574,"line_end":574,"column_start":12,"column_end":23},"name":"rc_from_u32","qualname":"<RegClass>::rc_from_u32","value":"pub fn rc_from_u32(u32) -> RegClass","parent":null,"children":[],"decl_id":null,"docs":" Construct a register class from a u32.\n","sig":null,"attributes":[{"value":"/ Construct a register class from a u32.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":392501,"byte_end":392543,"line_start":572,"line_end":572,"column_start":5,"column_end":47}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":392548,"byte_end":392565,"line_start":573,"line_end":573,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":831},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":392870,"byte_end":392880,"line_start":585,"line_end":585,"column_start":12,"column_end":22},"name":"short_name","qualname":"<RegClass>::short_name","value":"pub fn short_name(Self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":832},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":393190,"byte_end":393199,"line_start":596,"line_end":596,"column_start":12,"column_end":21},"name":"long_name","qualname":"<RegClass>::long_name","value":"pub fn long_name(Self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2293},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":395029,"byte_end":395032,"line_start":641,"line_end":641,"column_start":12,"column_end":15},"name":"Reg","qualname":"::data_structures::Reg","value":"Reg {  }","parent":null,"children":[{"krate":0,"index":2294}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":835},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":395136,"byte_end":395146,"line_start":649,"line_end":649,"column_start":12,"column_end":22},"name":"is_virtual","qualname":"<Reg>::is_virtual","value":"pub fn is_virtual(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":395107,"byte_end":395124,"line_start":648,"line_end":648,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":836},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":395260,"byte_end":395267,"line_start":653,"line_end":653,"column_start":12,"column_end":19},"name":"is_real","qualname":"<Reg>::is_real","value":"pub fn is_real(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":395231,"byte_end":395248,"line_start":652,"line_end":652,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":837},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":395359,"byte_end":395367,"line_start":656,"line_end":656,"column_start":12,"column_end":20},"name":"new_real","qualname":"<Reg>::new_real","value":"pub fn new_real(RegClass, u8, u8) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":838},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":395551,"byte_end":395562,"line_start":660,"line_end":660,"column_start":12,"column_end":23},"name":"new_virtual","qualname":"<Reg>::new_virtual","value":"pub fn new_virtual(RegClass, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":839},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":395803,"byte_end":395810,"line_start":667,"line_end":667,"column_start":12,"column_end":19},"name":"invalid","qualname":"<Reg>::invalid","value":"pub fn invalid() -> Reg","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":840},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":395895,"byte_end":395905,"line_start":671,"line_end":671,"column_start":12,"column_end":22},"name":"is_invalid","qualname":"<Reg>::is_invalid","value":"pub fn is_invalid(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":395866,"byte_end":395883,"line_start":670,"line_end":670,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":841},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":395994,"byte_end":396002,"line_start":675,"line_end":675,"column_start":12,"column_end":20},"name":"is_valid","qualname":"<Reg>::is_valid","value":"pub fn is_valid(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":395965,"byte_end":395982,"line_start":674,"line_end":674,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":842},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":396063,"byte_end":396084,"line_start":678,"line_end":678,"column_start":12,"column_end":33},"name":"is_virtual_or_invalid","qualname":"<Reg>::is_virtual_or_invalid","value":"pub fn is_virtual_or_invalid(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":843},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":396165,"byte_end":396183,"line_start":681,"line_end":681,"column_start":12,"column_end":30},"name":"is_real_or_invalid","qualname":"<Reg>::is_real_or_invalid","value":"pub fn is_real_or_invalid(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":844},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":396283,"byte_end":396292,"line_start":685,"line_end":685,"column_start":12,"column_end":21},"name":"get_class","qualname":"<Reg>::get_class","value":"pub fn get_class(Self) -> RegClass","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":396254,"byte_end":396271,"line_start":684,"line_end":684,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":845},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":396447,"byte_end":396456,"line_start":690,"line_end":690,"column_start":12,"column_end":21},"name":"get_index","qualname":"<Reg>::get_index","value":"pub fn get_index(Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":396418,"byte_end":396435,"line_start":689,"line_end":689,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":846},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":396828,"byte_end":396841,"line_start":701,"line_end":701,"column_start":12,"column_end":25},"name":"get_index_u32","qualname":"<Reg>::get_index_u32","value":"pub fn get_index_u32(Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":396799,"byte_end":396816,"line_start":700,"line_end":700,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":847},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":397051,"byte_end":397066,"line_start":709,"line_end":709,"column_start":12,"column_end":27},"name":"get_hw_encoding","qualname":"<Reg>::get_hw_encoding","value":"pub fn get_hw_encoding(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":848},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":397323,"byte_end":397337,"line_start":717,"line_end":717,"column_start":12,"column_end":26},"name":"as_virtual_reg","qualname":"<Reg>::as_virtual_reg","value":"pub fn as_virtual_reg(Self) -> Option<VirtualReg>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":849},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":397561,"byte_end":397572,"line_start":725,"line_end":725,"column_start":12,"column_end":23},"name":"as_real_reg","qualname":"<Reg>::as_real_reg","value":"pub fn as_real_reg(Self) -> Option<RealReg>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":850},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":397784,"byte_end":397797,"line_start":733,"line_end":733,"column_start":12,"column_end":25},"name":"show_with_rru","qualname":"<Reg>::show_with_rru","value":"pub fn show_with_rru(Self, &RealRegUniverse) -> String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2316},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":398808,"byte_end":398815,"line_start":766,"line_end":766,"column_start":12,"column_end":19},"name":"RealReg","qualname":"::data_structures::RealReg","value":"RealReg {  }","parent":null,"children":[{"krate":0,"index":2317}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":854},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":398878,"byte_end":398889,"line_start":770,"line_end":770,"column_start":12,"column_end":23},"name":"to_real_reg","qualname":"<Reg>::to_real_reg","value":"pub fn to_real_reg(Self) -> RealReg","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":856},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":399102,"byte_end":399111,"line_start":779,"line_end":779,"column_start":12,"column_end":21},"name":"get_class","qualname":"<RealReg>::get_class","value":"pub fn get_class(Self) -> RegClass","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":857},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":399200,"byte_end":399209,"line_start":783,"line_end":783,"column_start":12,"column_end":21},"name":"get_index","qualname":"<RealReg>::get_index","value":"pub fn get_index(Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":399171,"byte_end":399188,"line_start":782,"line_end":782,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":858},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":399273,"byte_end":399288,"line_start":786,"line_end":786,"column_start":12,"column_end":27},"name":"get_hw_encoding","qualname":"<RealReg>::get_hw_encoding","value":"pub fn get_hw_encoding(Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":859},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":399389,"byte_end":399395,"line_start":790,"line_end":790,"column_start":12,"column_end":18},"name":"to_reg","qualname":"<RealReg>::to_reg","value":"pub fn to_reg(Self) -> Reg","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":399360,"byte_end":399377,"line_start":789,"line_end":789,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":860},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":399445,"byte_end":399452,"line_start":793,"line_end":793,"column_start":12,"column_end":19},"name":"invalid","qualname":"<RealReg>::invalid","value":"pub fn invalid() -> RealReg","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":861},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":399546,"byte_end":399554,"line_start":798,"line_end":798,"column_start":12,"column_end":20},"name":"is_valid","qualname":"<RealReg>::is_valid","value":"pub fn is_valid(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":862},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":399616,"byte_end":399626,"line_start":801,"line_end":801,"column_start":12,"column_end":22},"name":"is_invalid","qualname":"<RealReg>::is_invalid","value":"pub fn is_invalid(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":863},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":399690,"byte_end":399701,"line_start":804,"line_end":804,"column_start":12,"column_end":23},"name":"maybe_valid","qualname":"<RealReg>::maybe_valid","value":"pub fn maybe_valid(Self) -> Option<RealReg>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2339},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":400124,"byte_end":400134,"line_start":820,"line_end":820,"column_start":12,"column_end":22},"name":"VirtualReg","qualname":"::data_structures::VirtualReg","value":"VirtualReg {  }","parent":null,"children":[{"krate":0,"index":2340}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":867},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":400222,"byte_end":400236,"line_start":825,"line_end":825,"column_start":12,"column_end":26},"name":"to_virtual_reg","qualname":"<Reg>::to_virtual_reg","value":"pub fn to_virtual_reg(Self) -> VirtualReg","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":400193,"byte_end":400210,"line_start":824,"line_end":824,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":869},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":400458,"byte_end":400467,"line_start":834,"line_end":834,"column_start":12,"column_end":21},"name":"get_class","qualname":"<VirtualReg>::get_class","value":"pub fn get_class(Self) -> RegClass","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":870},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":400556,"byte_end":400565,"line_start":838,"line_end":838,"column_start":12,"column_end":21},"name":"get_index","qualname":"<VirtualReg>::get_index","value":"pub fn get_index(Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":400527,"byte_end":400544,"line_start":837,"line_end":837,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":871},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":400651,"byte_end":400657,"line_start":842,"line_end":842,"column_start":12,"column_end":18},"name":"to_reg","qualname":"<VirtualReg>::to_reg","value":"pub fn to_reg(Self) -> Reg","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":400622,"byte_end":400639,"line_start":841,"line_end":841,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":872},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":400707,"byte_end":400714,"line_start":845,"line_end":845,"column_start":12,"column_end":19},"name":"invalid","qualname":"<VirtualReg>::invalid","value":"pub fn invalid() -> VirtualReg","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":873},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":400814,"byte_end":400822,"line_start":850,"line_end":850,"column_start":12,"column_end":20},"name":"is_valid","qualname":"<VirtualReg>::is_valid","value":"pub fn is_valid(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":874},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":400884,"byte_end":400894,"line_start":853,"line_end":853,"column_start":12,"column_end":22},"name":"is_invalid","qualname":"<VirtualReg>::is_invalid","value":"pub fn is_invalid(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":875},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":400958,"byte_end":400969,"line_start":856,"line_end":856,"column_start":12,"column_end":23},"name":"maybe_valid","qualname":"<VirtualReg>::maybe_valid","value":"pub fn maybe_valid(Self) -> Option<VirtualReg>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":879},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":401382,"byte_end":401392,"line_start":873,"line_end":873,"column_start":12,"column_end":22},"name":"apply_uses","qualname":"<Reg>::apply_uses","value":"pub fn apply_uses<RUM: RegUsageMapper>(&mut Self, &RUM)","parent":null,"children":[],"decl_id":null,"docs":" Apply a vreg-rreg mapping to a Reg.  This is used for registers used in\n a read-role.\n","sig":null,"attributes":[{"value":"/ Apply a vreg-rreg mapping to a Reg.  This is used for registers used in","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":401274,"byte_end":401349,"line_start":871,"line_end":871,"column_start":5,"column_end":80}},{"value":"/ a read-role.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":401354,"byte_end":401370,"line_start":872,"line_end":872,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":882},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":401610,"byte_end":401620,"line_start":879,"line_end":879,"column_start":12,"column_end":22},"name":"apply_defs","qualname":"<Reg>::apply_defs","value":"pub fn apply_defs<RUM: RegUsageMapper>(&mut Self, &RUM)","parent":null,"children":[],"decl_id":null,"docs":" Apply a vreg-rreg mapping to a Reg.  This is used for registers used in\n a write-role.\n","sig":null,"attributes":[{"value":"/ Apply a vreg-rreg mapping to a Reg.  This is used for registers used in","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":401501,"byte_end":401576,"line_start":877,"line_end":877,"column_start":5,"column_end":80}},{"value":"/ a write-role.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":401581,"byte_end":401598,"line_start":878,"line_end":878,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":885},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":401839,"byte_end":401849,"line_start":885,"line_end":885,"column_start":12,"column_end":22},"name":"apply_mods","qualname":"<Reg>::apply_mods","value":"pub fn apply_mods<RUM: RegUsageMapper>(&mut Self, &RUM)","parent":null,"children":[],"decl_id":null,"docs":" Apply a vreg-rreg mapping to a Reg.  This is used for registers used in\n a modify-role.\n","sig":null,"attributes":[{"value":"/ Apply a vreg-rreg mapping to a Reg.  This is used for registers used in","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":401729,"byte_end":401804,"line_start":883,"line_end":883,"column_start":5,"column_end":80}},{"value":"/ a modify-role.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":401809,"byte_end":401827,"line_start":884,"line_end":884,"column_start":5,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":2362},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":403560,"byte_end":403568,"line_start":921,"line_end":921,"column_start":12,"column_end":20},"name":"Writable","qualname":"::data_structures::Writable","value":"Writable {  }","parent":null,"children":[{"krate":0,"index":2364}],"decl_id":null,"docs":" A \"writable register\". This is a zero-cost wrapper that can be used to\n create a distinction, at the Rust type level, between a plain \"register\"\n and a \"writable register\".","sig":null,"attributes":[{"value":"/ A \"writable register\". This is a zero-cost wrapper that can be used to","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":402345,"byte_end":402419,"line_start":901,"line_end":901,"column_start":1,"column_end":75}},{"value":"/ create a distinction, at the Rust type level, between a plain \"register\"","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":402420,"byte_end":402496,"line_start":902,"line_end":902,"column_start":1,"column_end":77}},{"value":"/ and a \"writable register\".","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":402497,"byte_end":402527,"line_start":903,"line_end":903,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":402528,"byte_end":402531,"line_start":904,"line_end":904,"column_start":1,"column_end":4}},{"value":"/ There is nothing that ensures that Writable<..> is only wrapped around Reg","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":402532,"byte_end":402610,"line_start":905,"line_end":905,"column_start":1,"column_end":79}},{"value":"/ and its variants (`RealReg`, `VirtualReg`).  That however is its intended","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":402611,"byte_end":402688,"line_start":906,"line_end":906,"column_start":1,"column_end":78}},{"value":"/ and currently its only use.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":402689,"byte_end":402720,"line_start":907,"line_end":907,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":402721,"byte_end":402724,"line_start":908,"line_end":908,"column_start":1,"column_end":4}},{"value":"/ Writable<..> can be used by the client to ensure that, internally, it only","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":402725,"byte_end":402803,"line_start":909,"line_end":909,"column_start":1,"column_end":79}},{"value":"/ generates instructions that write to registers that should be written. The","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":402804,"byte_end":402882,"line_start":910,"line_end":910,"column_start":1,"column_end":79}},{"value":"/ `InstRegUses` below, which must be implemented for every instruction,","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":402883,"byte_end":402956,"line_start":911,"line_end":911,"column_start":1,"column_end":74}},{"value":"/ requires a `Writable<Reg>` (not just `Reg`) in its `defined` and","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":402957,"byte_end":403025,"line_start":912,"line_end":912,"column_start":1,"column_end":69}},{"value":"/ `modified` sets. While we cannot hide the constructor for `Writable<..>`","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":403026,"byte_end":403102,"line_start":913,"line_end":913,"column_start":1,"column_end":77}},{"value":"/ from certain parts of the client while exposing it to others, the client","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":403103,"byte_end":403179,"line_start":914,"line_end":914,"column_start":1,"column_end":77}},{"value":"/ *can* adopt conventions to e.g. only ever call the Writable<..>","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":403180,"byte_end":403247,"line_start":915,"line_end":915,"column_start":1,"column_end":68}},{"value":"/ constructor from its central vreg-management logic, and decide that any","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":403248,"byte_end":403323,"line_start":916,"line_end":916,"column_start":1,"column_end":76}},{"value":"/ invocation of this constructor in a machine backend (for example) is an","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":403324,"byte_end":403399,"line_start":917,"line_end":917,"column_start":1,"column_end":76}},{"value":"/ error.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":403400,"byte_end":403410,"line_start":918,"line_end":918,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":892},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":403971,"byte_end":403979,"line_start":930,"line_end":930,"column_start":12,"column_end":20},"name":"from_reg","qualname":"<Writable<R>>::from_reg","value":"pub fn from_reg(R) -> Writable<R>","parent":null,"children":[],"decl_id":null,"docs":" Create a Writable<R> from an R. The client should carefully audit where\n it calls this constructor to ensure correctness (see `Writable<..>`\n struct documentation).\n","sig":null,"attributes":[{"value":"/ Create a Writable<R> from an R. The client should carefully audit where","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":403755,"byte_end":403830,"line_start":926,"line_end":926,"column_start":5,"column_end":80}},{"value":"/ it calls this constructor to ensure correctness (see `Writable<..>`","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":403835,"byte_end":403906,"line_start":927,"line_end":927,"column_start":5,"column_end":76}},{"value":"/ struct documentation).","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":403911,"byte_end":403937,"line_start":928,"line_end":928,"column_start":5,"column_end":31}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":403942,"byte_end":403959,"line_start":929,"line_end":929,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":893},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":404075,"byte_end":404081,"line_start":935,"line_end":935,"column_start":12,"column_end":18},"name":"to_reg","qualname":"<Writable<R>>::to_reg","value":"pub fn to_reg(&Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Get the inner Reg.\n","sig":null,"attributes":[{"value":"/ Get the inner Reg.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":404041,"byte_end":404063,"line_start":934,"line_end":934,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":894},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":404131,"byte_end":404134,"line_start":939,"line_end":939,"column_start":12,"column_end":15},"name":"map","qualname":"<Writable<R>>::map","value":"pub fn map<F, U>(&Self, F) -> Writable<U> where F: Fn(R) -> U, U: Copy +\nClone + PartialEq + Eq + Hash + PartialOrd + Ord + fmt::Debug","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2399},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":404422,"byte_end":404431,"line_start":950,"line_end":950,"column_start":5,"column_end":14},"name":"SpillSlot","qualname":"::data_structures::SpillSlot::SpillSlot","value":"SpillSlot::SpillSlot(u32)","parent":{"krate":0,"index":2398},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2398},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":404406,"byte_end":404415,"line_start":949,"line_end":949,"column_start":10,"column_end":19},"name":"SpillSlot","qualname":"::data_structures::SpillSlot","value":"pub enum SpillSlot { SpillSlot(u32), }","parent":null,"children":[{"krate":0,"index":2399}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":898},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":404490,"byte_end":404493,"line_start":954,"line_end":954,"column_start":12,"column_end":15},"name":"new","qualname":"<SpillSlot>::new","value":"pub fn new(u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":404461,"byte_end":404478,"line_start":953,"line_end":953,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":899},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":404583,"byte_end":404586,"line_start":958,"line_end":958,"column_start":12,"column_end":15},"name":"get","qualname":"<SpillSlot>::get","value":"pub fn get(Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":404554,"byte_end":404571,"line_start":957,"line_end":957,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":900},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":404714,"byte_end":404723,"line_start":964,"line_end":964,"column_start":12,"column_end":21},"name":"get_usize","qualname":"<SpillSlot>::get_usize","value":"pub fn get_usize(Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":404685,"byte_end":404702,"line_start":963,"line_end":963,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":901},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":404786,"byte_end":404794,"line_start":967,"line_end":967,"column_start":12,"column_end":20},"name":"round_up","qualname":"<SpillSlot>::round_up","value":"pub fn round_up(Self, u32) -> SpillSlot","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":902},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":404958,"byte_end":404961,"line_start":971,"line_end":971,"column_start":12,"column_end":15},"name":"inc","qualname":"<SpillSlot>::inc","value":"pub fn inc(Self, u32) -> SpillSlot","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":905},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":405569,"byte_end":405586,"line_start":988,"line_end":988,"column_start":12,"column_end":29},"name":"RegUsageCollector","qualname":"::data_structures::RegUsageCollector","value":"RegUsageCollector { reg_vecs }","parent":null,"children":[{"krate":0,"index":907}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":907},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":405601,"byte_end":405609,"line_start":989,"line_end":989,"column_start":9,"column_end":17},"name":"reg_vecs","qualname":"::data_structures::RegUsageCollector::reg_vecs","value":"&'a mut data_structures::RegVecs","parent":{"krate":0,"index":905},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":910},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":405675,"byte_end":405678,"line_start":993,"line_end":993,"column_start":12,"column_end":15},"name":"new","qualname":"<RegUsageCollector>::new","value":"pub fn new(&'a mut RegVecs) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":911},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":405759,"byte_end":405766,"line_start":996,"line_end":996,"column_start":12,"column_end":19},"name":"add_use","qualname":"<RegUsageCollector>::add_use","value":"pub fn add_use(&mut Self, Reg)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":912},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":405841,"byte_end":405849,"line_start":999,"line_end":999,"column_start":12,"column_end":20},"name":"add_uses","qualname":"<RegUsageCollector>::add_uses","value":"pub fn add_uses(&mut Self, &[Reg])","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":913},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":405942,"byte_end":405949,"line_start":1002,"line_end":1002,"column_start":12,"column_end":19},"name":"add_def","qualname":"<RegUsageCollector>::add_def","value":"pub fn add_def(&mut Self, Writable<Reg>)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":914},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":406043,"byte_end":406051,"line_start":1005,"line_end":1005,"column_start":12,"column_end":20},"name":"add_defs","qualname":"<RegUsageCollector>::add_defs","value":"pub fn add_defs(&mut Self, &[Writable<Reg>])","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":915},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":406237,"byte_end":406244,"line_start":1011,"line_end":1011,"column_start":12,"column_end":19},"name":"add_mod","qualname":"<RegUsageCollector>::add_mod","value":"pub fn add_mod(&mut Self, Writable<Reg>)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":916},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":406338,"byte_end":406346,"line_start":1014,"line_end":1014,"column_start":12,"column_end":20},"name":"add_mods","qualname":"<RegUsageCollector>::add_mods","value":"pub fn add_mods(&mut Self, &[Writable<Reg>])","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":917},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":406677,"byte_end":406717,"line_start":1023,"line_end":1023,"column_start":12,"column_end":52},"name":"get_use_def_mod_vecs_test_framework_only","qualname":"<RegUsageCollector>::get_use_def_mod_vecs_test_framework_only","value":"pub fn get_use_def_mod_vecs_test_framework_only(&Self)\n-> (Vec<Reg>, Vec<Reg>, Vec<Reg>)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":918},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":406919,"byte_end":406957,"line_start":1031,"line_end":1031,"column_start":12,"column_end":50},"name":"get_empty_reg_vecs_test_framework_only","qualname":"<RegUsageCollector>::get_empty_reg_vecs_test_framework_only","value":"pub fn get_empty_reg_vecs_test_framework_only(bool) -> RegVecs","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2423},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":407447,"byte_end":407454,"line_start":1044,"line_end":1044,"column_start":12,"column_end":19},"name":"RegVecs","qualname":"::data_structures::RegVecs","value":"RegVecs { uses, defs, mods }","parent":null,"children":[{"krate":0,"index":2424},{"krate":0,"index":2425},{"krate":0,"index":2426},{"krate":0,"index":2427}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2424},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":407465,"byte_end":407469,"line_start":1045,"line_end":1045,"column_start":9,"column_end":13},"name":"uses","qualname":"::data_structures::RegVecs::uses","value":"std::vec::Vec<data_structures::Reg>","parent":{"krate":0,"index":2423},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2425},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":407489,"byte_end":407493,"line_start":1046,"line_end":1046,"column_start":9,"column_end":13},"name":"defs","qualname":"::data_structures::RegVecs::defs","value":"std::vec::Vec<data_structures::Reg>","parent":{"krate":0,"index":2423},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2426},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":407513,"byte_end":407517,"line_start":1047,"line_end":1047,"column_start":9,"column_end":13},"name":"mods","qualname":"::data_structures::RegVecs::mods","value":"std::vec::Vec<data_structures::Reg>","parent":{"krate":0,"index":2423},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":920},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":407579,"byte_end":407582,"line_start":1052,"line_end":1052,"column_start":12,"column_end":15},"name":"new","qualname":"<RegVecs>::new","value":"pub fn new(bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":921},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":407753,"byte_end":407765,"line_start":1060,"line_end":1060,"column_start":12,"column_end":24},"name":"is_sanitized","qualname":"<RegVecs>::is_sanitized","value":"pub fn is_sanitized(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":922},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":407823,"byte_end":407836,"line_start":1063,"line_end":1063,"column_start":12,"column_end":25},"name":"set_sanitized","qualname":"<RegVecs>::set_sanitized","value":"pub fn set_sanitized(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":923},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":407920,"byte_end":407925,"line_start":1066,"line_end":1066,"column_start":12,"column_end":17},"name":"clear","qualname":"<RegVecs>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2448},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":412109,"byte_end":412124,"line_start":1195,"line_end":1195,"column_start":12,"column_end":27},"name":"RealRegUniverse","qualname":"::data_structures::RealRegUniverse","value":"RealRegUniverse { regs, allocable, allocable_by_class }","parent":null,"children":[{"krate":0,"index":2449},{"krate":0,"index":2450},{"krate":0,"index":2451}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2449},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":412378,"byte_end":412382,"line_start":1200,"line_end":1200,"column_start":9,"column_end":13},"name":"regs","qualname":"::data_structures::RealRegUniverse::regs","value":"std::vec::Vec<(data_structures::RealReg, std::string::String)>","parent":{"krate":0,"index":2448},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2450},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":412546,"byte_end":412555,"line_start":1204,"line_end":1204,"column_start":9,"column_end":18},"name":"allocable","qualname":"::data_structures::RealRegUniverse::allocable","value":"usize","parent":{"krate":0,"index":2448},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2451},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":413033,"byte_end":413051,"line_start":1212,"line_end":1212,"column_start":9,"column_end":27},"name":"allocable_by_class","qualname":"::data_structures::RealRegUniverse::allocable_by_class","value":"[std::option::Option<data_structures::RegClassInfo>; _]","parent":{"krate":0,"index":2448},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2457},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":413280,"byte_end":413292,"line_start":1218,"line_end":1218,"column_start":12,"column_end":24},"name":"RegClassInfo","qualname":"::data_structures::RegClassInfo","value":"RegClassInfo { first, last, suggested_scratch }","parent":null,"children":[{"krate":0,"index":2458},{"krate":0,"index":2459},{"krate":0,"index":2460}],"decl_id":null,"docs":" Information about a single register class in the `RealRegUniverse`.\n","sig":null,"attributes":[{"value":"/ Information about a single register class in the `RealRegUniverse`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":413097,"byte_end":413168,"line_start":1215,"line_end":1215,"column_start":1,"column_end":72}}]},{"kind":"Field","id":{"krate":0,"index":2458},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":414205,"byte_end":414210,"line_start":1238,"line_end":1238,"column_start":9,"column_end":14},"name":"first","qualname":"::data_structures::RegClassInfo::first","value":"usize","parent":{"krate":0,"index":2457},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2459},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":414227,"byte_end":414231,"line_start":1239,"line_end":1239,"column_start":9,"column_end":13},"name":"last","qualname":"::data_structures::RegClassInfo::last","value":"usize","parent":{"krate":0,"index":2457},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2460},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":414609,"byte_end":414626,"line_start":1246,"line_end":1246,"column_start":9,"column_end":26},"name":"suggested_scratch","qualname":"::data_structures::RegClassInfo::suggested_scratch","value":"std::option::Option<usize>","parent":{"krate":0,"index":2457},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":939},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":414713,"byte_end":414717,"line_start":1251,"line_end":1251,"column_start":12,"column_end":16},"name":"show","qualname":"<RealRegUniverse>::show","value":"pub fn show(&Self) -> Vec<String>","parent":null,"children":[],"decl_id":null,"docs":" Show it in a pretty way.\n","sig":null,"attributes":[{"value":"/ Show it in a pretty way.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":414673,"byte_end":414701,"line_start":1250,"line_end":1250,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":940},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":416433,"byte_end":416446,"line_start":1294,"line_end":1294,"column_start":12,"column_end":25},"name":"check_is_sane","qualname":"<RealRegUniverse>::check_is_sane","value":"pub fn check_is_sane(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Check that the given universe satisfies various invariants, and panic\n if not.  All the invariants are important.\n","sig":null,"attributes":[{"value":"/ Check that the given universe satisfies various invariants, and panic","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":416297,"byte_end":416370,"line_start":1292,"line_end":1292,"column_start":5,"column_end":78}},{"value":"/ if not.  All the invariants are important.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":416375,"byte_end":416421,"line_start":1293,"line_end":1293,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":2852},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\linear_scan\\mod.rs","byte_start":484074,"byte_end":484091,"line_start":80,"line_end":80,"column_start":12,"column_end":29},"name":"LinearScanOptions","qualname":"::linear_scan::LinearScanOptions","value":"LinearScanOptions {  }","parent":null,"children":[{"krate":0,"index":2853},{"krate":0,"index":2854},{"krate":0,"index":2855},{"krate":0,"index":2856},{"krate":0,"index":2857}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2960},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\snapshot.rs","byte_start":625688,"byte_end":625694,"line_start":31,"line_end":31,"column_start":12,"column_end":18},"name":"IRInst","qualname":"::snapshot::IRInst","value":"IRInst {  }","parent":null,"children":[{"krate":0,"index":2961},{"krate":0,"index":2962},{"krate":0,"index":2963},{"krate":0,"index":2964}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2969},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\snapshot.rs","byte_start":625912,"byte_end":625922,"line_start":40,"line_end":40,"column_start":12,"column_end":22},"name":"IRFunction","qualname":"::snapshot::IRFunction","value":"IRFunction {  }","parent":null,"children":[{"krate":0,"index":2970},{"krate":0,"index":2971},{"krate":0,"index":2972},{"krate":0,"index":2973},{"krate":0,"index":2974},{"krate":0,"index":2975},{"krate":0,"index":2976},{"krate":0,"index":2977}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2980},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\snapshot.rs","byte_start":626291,"byte_end":626301,"line_start":53,"line_end":53,"column_start":12,"column_end":22},"name":"IRSnapshot","qualname":"::snapshot::IRSnapshot","value":"IRSnapshot {  }","parent":null,"children":[{"krate":0,"index":2981},{"krate":0,"index":2982}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1553},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\snapshot.rs","byte_start":627297,"byte_end":627310,"line_start":89,"line_end":89,"column_start":12,"column_end":25},"name":"from_function","qualname":"<IRSnapshot>::from_function","value":"pub fn from_function<F: Function>(&F, &RealRegUniverse) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1557},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\snapshot.rs","byte_start":629721,"byte_end":629729,"line_start":160,"line_end":160,"column_start":12,"column_end":20},"name":"allocate","qualname":"<IRSnapshot>::allocate","value":"pub fn allocate(&mut Self, Options)\n-> Result<RegAllocResult<IRFunction>, RegAllocError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1594},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\sparse_set.rs","byte_start":635354,"byte_end":635358,"line_start":27,"line_end":27,"column_start":10,"column_end":14},"name":"Item","qualname":"::sparse_set::Array::Item","value":"type Item;","parent":{"krate":0,"index":1593},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1728},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":6886,"byte_end":6900,"line_start":159,"line_end":159,"column_start":11,"column_end":25},"name":"RegUsageMapper","qualname":"::RegUsageMapper","value":"RegUsageMapper: fmt::Debug","parent":null,"children":[{"krate":0,"index":1729},{"krate":0,"index":1730},{"krate":0,"index":1731}],"decl_id":null,"docs":" A trait for providing mapping results for a given instruction.","sig":null,"attributes":[{"value":"/ A trait for providing mapping results for a given instruction.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":6540,"byte_end":6606,"line_start":154,"line_end":154,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":6607,"byte_end":6610,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ This provides virtual to real register mappings for every mention in an instruction: use, mod","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":6611,"byte_end":6708,"line_start":156,"line_end":156,"column_start":1,"column_end":98}},{"value":"/ or def. The main purpose of this trait is to be used when re-writing the instruction stream","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":6709,"byte_end":6804,"line_start":157,"line_end":157,"column_start":1,"column_end":96}},{"value":"/ after register allocation happened; see also `Function::map_regs`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":6805,"byte_end":6875,"line_start":158,"line_end":158,"column_start":1,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1729},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":7038,"byte_end":7045,"line_start":162,"line_end":162,"column_start":8,"column_end":15},"name":"get_use","qualname":"::RegUsageMapper::get_use","value":"pub fn get_use(&Self, VirtualReg) -> Option<RealReg>","parent":{"krate":0,"index":1728},"children":[],"decl_id":null,"docs":" Return the `RealReg` if mapped, or `None`, for `vreg` occuring as a use\n on the current instruction.\n","sig":null,"attributes":[{"value":"/ Return the `RealReg` if mapped, or `None`, for `vreg` occuring as a use","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":6919,"byte_end":6994,"line_start":160,"line_end":160,"column_start":5,"column_end":80}},{"value":"/ on the current instruction.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":6999,"byte_end":7030,"line_start":161,"line_end":161,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1730},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":7215,"byte_end":7222,"line_start":166,"line_end":166,"column_start":8,"column_end":15},"name":"get_def","qualname":"::RegUsageMapper::get_def","value":"pub fn get_def(&Self, VirtualReg) -> Option<RealReg>","parent":{"krate":0,"index":1728},"children":[],"decl_id":null,"docs":" Return the `RealReg` if mapped, or `None`, for `vreg` occuring as a def\n on the current instruction.\n","sig":null,"attributes":[{"value":"/ Return the `RealReg` if mapped, or `None`, for `vreg` occuring as a def","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":7096,"byte_end":7171,"line_start":164,"line_end":164,"column_start":5,"column_end":80}},{"value":"/ on the current instruction.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":7176,"byte_end":7207,"line_start":165,"line_end":165,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1731},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":7394,"byte_end":7401,"line_start":170,"line_end":170,"column_start":8,"column_end":15},"name":"get_mod","qualname":"::RegUsageMapper::get_mod","value":"pub fn get_mod(&Self, VirtualReg) -> Option<RealReg>","parent":{"krate":0,"index":1728},"children":[],"decl_id":null,"docs":" Return the `RealReg` if mapped, or `None`, for a `vreg` occuring as a\n mod on the current instruction.\n","sig":null,"attributes":[{"value":"/ Return the `RealReg` if mapped, or `None`, for a `vreg` occuring as a","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":7273,"byte_end":7346,"line_start":168,"line_end":168,"column_start":5,"column_end":78}},{"value":"/ mod on the current instruction.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":7351,"byte_end":7386,"line_start":169,"line_end":169,"column_start":5,"column_end":40}}]},{"kind":"Trait","id":{"krate":0,"index":1737},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":7773,"byte_end":7781,"line_start":181,"line_end":181,"column_start":11,"column_end":19},"name":"Function","qualname":"::Function","value":"Function","parent":null,"children":[{"krate":0,"index":1738},{"krate":0,"index":1739},{"krate":0,"index":1740},{"krate":0,"index":1741},{"krate":0,"index":1742},{"krate":0,"index":1743},{"krate":0,"index":1744},{"krate":0,"index":1745},{"krate":0,"index":1746},{"krate":0,"index":1747},{"krate":0,"index":1748},{"krate":0,"index":1749},{"krate":0,"index":1750},{"krate":0,"index":1752},{"krate":0,"index":1753},{"krate":0,"index":1754},{"krate":0,"index":1755},{"krate":0,"index":1756},{"krate":0,"index":1757},{"krate":0,"index":1758},{"krate":0,"index":1759},{"krate":0,"index":1760},{"krate":0,"index":1761}],"decl_id":null,"docs":" A trait defined by the regalloc client to provide access to its\n machine-instruction / CFG representation.\n","sig":null,"attributes":[{"value":"/ A trait defined by the regalloc client to provide access to its","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":7649,"byte_end":7716,"line_start":179,"line_end":179,"column_start":1,"column_end":68}},{"value":"/ machine-instruction / CFG representation.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":7717,"byte_end":7762,"line_start":180,"line_end":180,"column_start":1,"column_end":46}}]},{"kind":"Type","id":{"krate":0,"index":1738},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":7893,"byte_end":7897,"line_start":184,"line_end":184,"column_start":10,"column_end":14},"name":"Inst","qualname":"::Function::Inst","value":"type Inst: Clone + fmt::Debug;","parent":{"krate":0,"index":1737},"children":[],"decl_id":null,"docs":" Regalloc is parameterized on F: Function and so can use the projected\n type F::Inst.\n","sig":null,"attributes":[{"value":"/ Regalloc is parameterized on F: Function and so can use the projected","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":7788,"byte_end":7861,"line_start":182,"line_end":182,"column_start":5,"column_end":78}},{"value":"/ type F::Inst.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":7866,"byte_end":7883,"line_start":183,"line_end":183,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1739},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":8054,"byte_end":8059,"line_start":191,"line_end":191,"column_start":8,"column_end":13},"name":"insns","qualname":"::Function::insns","value":"pub fn insns(&Self) -> &[Self::Inst]","parent":{"krate":0,"index":1737},"children":[],"decl_id":null,"docs":" Allow access to the underlying vector of instructions.\n","sig":null,"attributes":[{"value":"/ Allow access to the underlying vector of instructions.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":7988,"byte_end":8046,"line_start":190,"line_end":190,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1740},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":8151,"byte_end":8163,"line_start":194,"line_end":194,"column_start":8,"column_end":20},"name":"insn_indices","qualname":"::Function::insn_indices","value":"pub fn insn_indices(&Self) -> Range<InstIx>","parent":{"krate":0,"index":1737},"children":[],"decl_id":null,"docs":" Get all instruction indices as an iterable range.\n","sig":null,"attributes":[{"value":"/ Get all instruction indices as an iterable range.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":8090,"byte_end":8143,"line_start":193,"line_end":193,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1741},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":8330,"byte_end":8339,"line_start":199,"line_end":199,"column_start":8,"column_end":17},"name":"insns_mut","qualname":"::Function::insns_mut","value":"pub fn insns_mut(&mut Self) -> &mut [Self::Inst]","parent":{"krate":0,"index":1737},"children":[],"decl_id":null,"docs":" Allow mutable access to the underlying vector of instructions.\n","sig":null,"attributes":[{"value":"/ Allow mutable access to the underlying vector of instructions.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":8256,"byte_end":8322,"line_start":198,"line_end":198,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1742},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":8439,"byte_end":8447,"line_start":202,"line_end":202,"column_start":8,"column_end":16},"name":"get_insn","qualname":"::Function::get_insn","value":"pub fn get_insn(&Self, InstIx) -> &Self::Inst","parent":{"krate":0,"index":1737},"children":[],"decl_id":null,"docs":" Get an instruction with a type-safe InstIx index.\n","sig":null,"attributes":[{"value":"/ Get an instruction with a type-safe InstIx index.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":8378,"byte_end":8431,"line_start":201,"line_end":201,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1743},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":8587,"byte_end":8599,"line_start":206,"line_end":206,"column_start":8,"column_end":20},"name":"get_insn_mut","qualname":"::Function::get_insn_mut","value":"pub fn get_insn_mut(&mut Self, InstIx) -> &mut Self::Inst","parent":{"krate":0,"index":1737},"children":[],"decl_id":null,"docs":" Get a mutable borrow of an instruction with the given type-safe InstIx\n index.\n","sig":null,"attributes":[{"value":"/ Get a mutable borrow of an instruction with the given type-safe InstIx","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":8490,"byte_end":8564,"line_start":204,"line_end":204,"column_start":5,"column_end":79}},{"value":"/ index.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":8569,"byte_end":8579,"line_start":205,"line_end":205,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":1744},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":8719,"byte_end":8725,"line_start":209,"line_end":209,"column_start":8,"column_end":14},"name":"blocks","qualname":"::Function::blocks","value":"pub fn blocks(&Self) -> Range<BlockIx>","parent":{"krate":0,"index":1737},"children":[],"decl_id":null,"docs":" Allow iteration over basic blocks (in instruction order).\n","sig":null,"attributes":[{"value":"/ Allow iteration over basic blocks (in instruction order).","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":8650,"byte_end":8711,"line_start":208,"line_end":208,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1745},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":8802,"byte_end":8813,"line_start":212,"line_end":212,"column_start":8,"column_end":19},"name":"entry_block","qualname":"::Function::entry_block","value":"pub fn entry_block(&Self) -> BlockIx","parent":{"krate":0,"index":1737},"children":[],"decl_id":null,"docs":" Get the index of the entry block.\n","sig":null,"attributes":[{"value":"/ Get the index of the entry block.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":8757,"byte_end":8794,"line_start":211,"line_end":211,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1746},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":8915,"byte_end":8926,"line_start":215,"line_end":215,"column_start":8,"column_end":19},"name":"block_insns","qualname":"::Function::block_insns","value":"pub fn block_insns(&Self, BlockIx) -> Range<InstIx>","parent":{"krate":0,"index":1737},"children":[],"decl_id":null,"docs":" Provide the range of instruction indices contained in each block.\n","sig":null,"attributes":[{"value":"/ Provide the range of instruction indices contained in each block.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":8838,"byte_end":8907,"line_start":214,"line_end":214,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1747},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":9022,"byte_end":9033,"line_start":218,"line_end":218,"column_start":8,"column_end":19},"name":"block_succs","qualname":"::Function::block_succs","value":"pub fn block_succs(&Self, BlockIx) -> Cow<, [BlockIx]>","parent":{"krate":0,"index":1737},"children":[],"decl_id":null,"docs":" Get CFG successors for a given block.\n","sig":null,"attributes":[{"value":"/ Get CFG successors for a given block.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":8973,"byte_end":9014,"line_start":217,"line_end":217,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1748},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":9150,"byte_end":9156,"line_start":221,"line_end":221,"column_start":8,"column_end":14},"name":"is_ret","qualname":"::Function::is_ret","value":"pub fn is_ret(&Self, InstIx) -> bool","parent":{"krate":0,"index":1737},"children":[],"decl_id":null,"docs":" Determine whether an instruction is a return instruction.\n","sig":null,"attributes":[{"value":"/ Determine whether an instruction is a return instruction.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":9081,"byte_end":9142,"line_start":220,"line_end":220,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1749},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":9395,"byte_end":9403,"line_start":229,"line_end":229,"column_start":8,"column_end":16},"name":"get_regs","qualname":"::Function::get_regs","value":"pub fn get_regs(&Self::Inst, &mut RegUsageCollector)","parent":{"krate":0,"index":1737},"children":[],"decl_id":null,"docs":" Add to `collector` the used, defined, and modified registers for an\n instruction.\n","sig":null,"attributes":[{"value":"/ Add to `collector` the used, defined, and modified registers for an","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":9295,"byte_end":9366,"line_start":227,"line_end":227,"column_start":5,"column_end":76}},{"value":"/ instruction.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":9371,"byte_end":9387,"line_start":228,"line_end":228,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1750},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":10131,"byte_end":10139,"line_start":241,"line_end":241,"column_start":8,"column_end":16},"name":"map_regs","qualname":"::Function::map_regs","value":"pub fn map_regs<RUM: RegUsageMapper>(&mut Self::Inst, &RUM)","parent":{"krate":0,"index":1737},"children":[],"decl_id":null,"docs":" Map each register slot through a virtual-to-real mapping indexed\n by virtual register. The two separate maps in `maps.pre` and\n `maps.post` provide the mapping to use for uses (which semantically\n occur just prior to the instruction's effect) and defs (which\n semantically occur just after the instruction's effect). Regs that were\n \"modified\" can use either map; the vreg should be the same in both.","sig":null,"attributes":[{"value":"/ Map each register slot through a virtual-to-real mapping indexed","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":9464,"byte_end":9532,"line_start":231,"line_end":231,"column_start":5,"column_end":73}},{"value":"/ by virtual register. The two separate maps in `maps.pre` and","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":9537,"byte_end":9601,"line_start":232,"line_end":232,"column_start":5,"column_end":69}},{"value":"/ `maps.post` provide the mapping to use for uses (which semantically","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":9606,"byte_end":9677,"line_start":233,"line_end":233,"column_start":5,"column_end":76}},{"value":"/ occur just prior to the instruction's effect) and defs (which","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":9682,"byte_end":9747,"line_start":234,"line_end":234,"column_start":5,"column_end":70}},{"value":"/ semantically occur just after the instruction's effect). Regs that were","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":9752,"byte_end":9827,"line_start":235,"line_end":235,"column_start":5,"column_end":80}},{"value":"/ \"modified\" can use either map; the vreg should be the same in both.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":9832,"byte_end":9903,"line_start":236,"line_end":236,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":9908,"byte_end":9911,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ Note that this does not take a `self`, because we want to allow the","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":9916,"byte_end":9987,"line_start":238,"line_end":238,"column_start":5,"column_end":76}},{"value":"/ regalloc to have a mutable borrow of an insn (which borrows the whole","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":9992,"byte_end":10065,"line_start":239,"line_end":239,"column_start":5,"column_end":78}},{"value":"/ Function in turn) outstanding while calling this.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":10070,"byte_end":10123,"line_start":240,"line_end":240,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1752},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":10285,"byte_end":10292,"line_start":244,"line_end":244,"column_start":8,"column_end":15},"name":"is_move","qualname":"::Function::is_move","value":"pub fn is_move(&Self, &Self::Inst) -> Option<(Writable<Reg>, Reg)>","parent":{"krate":0,"index":1737},"children":[],"decl_id":null,"docs":" Allow the regalloc to query whether this is a move. Returns (dst, src).\n","sig":null,"attributes":[{"value":"/ Allow the regalloc to query whether this is a move. Returns (dst, src).","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":10202,"byte_end":10277,"line_start":243,"line_end":243,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":1753},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":10617,"byte_end":10630,"line_start":249,"line_end":249,"column_start":8,"column_end":21},"name":"get_num_vregs","qualname":"::Function::get_num_vregs","value":"pub fn get_num_vregs(&Self) -> usize","parent":{"krate":0,"index":1737},"children":[],"decl_id":null,"docs":" Get the precise number of `VirtualReg` in use in this function, to allow preallocating data\n structures. This number *must* be a correct lower-bound, otherwise invalid index failures\n may happen; it is of course better if it is exact.\n","sig":null,"attributes":[{"value":"/ Get the precise number of `VirtualReg` in use in this function, to allow preallocating data","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":10357,"byte_end":10452,"line_start":246,"line_end":246,"column_start":5,"column_end":100}},{"value":"/ structures. This number *must* be a correct lower-bound, otherwise invalid index failures","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":10457,"byte_end":10550,"line_start":247,"line_end":247,"column_start":5,"column_end":98}},{"value":"/ may happen; it is of course better if it is exact.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":10555,"byte_end":10609,"line_start":248,"line_end":248,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1754},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":11407,"byte_end":11425,"line_start":266,"line_end":266,"column_start":8,"column_end":26},"name":"get_spillslot_size","qualname":"::Function::get_spillslot_size","value":"pub fn get_spillslot_size(&Self, RegClass, VirtualReg) -> u32","parent":{"krate":0,"index":1737},"children":[],"decl_id":null,"docs":" How many logical spill slots does the given regclass require?  E.g., on a\n 64-bit machine, spill slots may nominally be 64-bit words, but a 128-bit\n vector value will require two slots.  The regalloc will always align on\n this size.","sig":null,"attributes":[{"value":"/ How many logical spill slots does the given regclass require?  E.g., on a","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":10720,"byte_end":10797,"line_start":255,"line_end":255,"column_start":5,"column_end":82}},{"value":"/ 64-bit machine, spill slots may nominally be 64-bit words, but a 128-bit","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":10802,"byte_end":10878,"line_start":256,"line_end":256,"column_start":5,"column_end":81}},{"value":"/ vector value will require two slots.  The regalloc will always align on","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":10883,"byte_end":10958,"line_start":257,"line_end":257,"column_start":5,"column_end":80}},{"value":"/ this size.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":10963,"byte_end":10977,"line_start":258,"line_end":258,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":10982,"byte_end":10985,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ This passes the associated virtual register to the client as well,","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":10990,"byte_end":11060,"line_start":260,"line_end":260,"column_start":5,"column_end":75}},{"value":"/ because the way in which we spill a real register may depend on the","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":11065,"byte_end":11136,"line_start":261,"line_end":261,"column_start":5,"column_end":76}},{"value":"/ value that we are using it for. E.g., if a machine has V128 registers","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":11141,"byte_end":11214,"line_start":262,"line_end":262,"column_start":5,"column_end":78}},{"value":"/ but we also use them for F32 and F64 values, we may use a different","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":11219,"byte_end":11290,"line_start":263,"line_end":263,"column_start":5,"column_end":76}},{"value":"/ store-slot size and smaller-operand store/load instructions for an F64","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":11295,"byte_end":11369,"line_start":264,"line_end":264,"column_start":5,"column_end":79}},{"value":"/ than for a true V128.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":11374,"byte_end":11399,"line_start":265,"line_end":265,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1755},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":11974,"byte_end":11983,"line_start":274,"line_end":274,"column_start":8,"column_end":17},"name":"gen_spill","qualname":"::Function::gen_spill","value":"pub fn gen_spill(&Self, SpillSlot, RealReg, Option<VirtualReg>) -> Self::Inst","parent":{"krate":0,"index":1737},"children":[],"decl_id":null,"docs":" Generate a spill instruction for insertion into the instruction\n sequence. The associated virtual register (whose value is being spilled)\n is passed, if it exists, so that the client may make decisions about the\n instruction to generate based on the type of value in question.  Because\n the register allocator will insert spill instructions at arbitrary points,\n the returned instruction here must not modify the machine's condition codes.\n","sig":null,"attributes":[{"value":"/ Generate a spill instruction for insertion into the instruction","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":11488,"byte_end":11555,"line_start":268,"line_end":268,"column_start":5,"column_end":72}},{"value":"/ sequence. The associated virtual register (whose value is being spilled)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":11560,"byte_end":11636,"line_start":269,"line_end":269,"column_start":5,"column_end":81}},{"value":"/ is passed, if it exists, so that the client may make decisions about the","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":11641,"byte_end":11717,"line_start":270,"line_end":270,"column_start":5,"column_end":81}},{"value":"/ instruction to generate based on the type of value in question.  Because","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":11722,"byte_end":11798,"line_start":271,"line_end":271,"column_start":5,"column_end":81}},{"value":"/ the register allocator will insert spill instructions at arbitrary points,","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":11803,"byte_end":11881,"line_start":272,"line_end":272,"column_start":5,"column_end":83}},{"value":"/ the returned instruction here must not modify the machine's condition codes.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":11886,"byte_end":11966,"line_start":273,"line_end":273,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1756},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":12397,"byte_end":12407,"line_start":285,"line_end":285,"column_start":8,"column_end":18},"name":"gen_reload","qualname":"::Function::gen_reload","value":"pub fn gen_reload(&Self, Writable<RealReg>, SpillSlot, Option<VirtualReg>)\n-> Self::Inst","parent":{"krate":0,"index":1737},"children":[],"decl_id":null,"docs":" Generate a reload instruction for insertion into the instruction\n sequence. The associated virtual register (whose value is being loaded)\n is passed as well, if it exists.  The returned instruction must not modify\n the machine's condition codes.\n","sig":null,"attributes":[{"value":"/ Generate a reload instruction for insertion into the instruction","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":12119,"byte_end":12187,"line_start":281,"line_end":281,"column_start":5,"column_end":73}},{"value":"/ sequence. The associated virtual register (whose value is being loaded)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":12192,"byte_end":12267,"line_start":282,"line_end":282,"column_start":5,"column_end":80}},{"value":"/ is passed as well, if it exists.  The returned instruction must not modify","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":12272,"byte_end":12350,"line_start":283,"line_end":283,"column_start":5,"column_end":83}},{"value":"/ the machine's condition codes.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":12355,"byte_end":12389,"line_start":284,"line_end":284,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1757},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":12786,"byte_end":12794,"line_start":295,"line_end":295,"column_start":8,"column_end":16},"name":"gen_move","qualname":"::Function::gen_move","value":"pub fn gen_move(&Self, Writable<RealReg>, RealReg, VirtualReg) -> Self::Inst","parent":{"krate":0,"index":1737},"children":[],"decl_id":null,"docs":" Generate a register-to-register move for insertion into the instruction\n sequence. The associated virtual register is passed as well.  The\n returned instruction must not modify the machine's condition codes.\n","sig":null,"attributes":[{"value":"/ Generate a register-to-register move for insertion into the instruction","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":12553,"byte_end":12628,"line_start":292,"line_end":292,"column_start":5,"column_end":80}},{"value":"/ sequence. The associated virtual register is passed as well.  The","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":12633,"byte_end":12702,"line_start":293,"line_end":293,"column_start":5,"column_end":74}},{"value":"/ returned instruction must not modify the machine's condition codes.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":12707,"byte_end":12778,"line_start":294,"line_end":294,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":1758},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":13002,"byte_end":13018,"line_start":303,"line_end":303,"column_start":8,"column_end":24},"name":"gen_zero_len_nop","qualname":"::Function::gen_zero_len_nop","value":"pub fn gen_zero_len_nop(&Self) -> Self::Inst","parent":{"krate":0,"index":1737},"children":[],"decl_id":null,"docs":" Generate an instruction which is a no-op and has zero length.\n","sig":null,"attributes":[{"value":"/ Generate an instruction which is a no-op and has zero length.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":12929,"byte_end":12994,"line_start":302,"line_end":302,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1759},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":13660,"byte_end":13679,"line_start":316,"line_end":316,"column_start":8,"column_end":27},"name":"maybe_direct_reload","qualname":"::Function::maybe_direct_reload","value":"pub fn maybe_direct_reload(&Self, &Self::Inst, VirtualReg, SpillSlot)\n-> Option<Self::Inst>","parent":{"krate":0,"index":1737},"children":[],"decl_id":null,"docs":" Try to alter an existing instruction to use a value directly in a\n spillslot (accessing memory directly) instead of the given register. May\n be useful on ISAs that have mem/reg ops, like x86.","sig":null,"attributes":[{"value":"/ Try to alter an existing instruction to use a value directly in a","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":13046,"byte_end":13115,"line_start":305,"line_end":305,"column_start":5,"column_end":74}},{"value":"/ spillslot (accessing memory directly) instead of the given register. May","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":13120,"byte_end":13196,"line_start":306,"line_end":306,"column_start":5,"column_end":81}},{"value":"/ be useful on ISAs that have mem/reg ops, like x86.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":13201,"byte_end":13255,"line_start":307,"line_end":307,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":13260,"byte_end":13263,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ Note that this is not *quite* just fusing a load with the op; if the","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":13268,"byte_end":13340,"line_start":309,"line_end":309,"column_start":5,"column_end":77}},{"value":"/ value is def'd or modified, it should be written back to the spill slot","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":13345,"byte_end":13420,"line_start":310,"line_end":310,"column_start":5,"column_end":80}},{"value":"/ as well. In other words, it is just using the spillslot as if it were a","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":13425,"byte_end":13500,"line_start":311,"line_end":311,"column_start":5,"column_end":80}},{"value":"/ real register, for reads and/or writes.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":13505,"byte_end":13548,"line_start":312,"line_end":312,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":13553,"byte_end":13556,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ FIXME JRS 2020Feb06: state precisely the constraints on condition code","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":13561,"byte_end":13635,"line_start":314,"line_end":314,"column_start":5,"column_end":79}},{"value":"/ changes.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":13640,"byte_end":13652,"line_start":315,"line_end":315,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":1760},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":14249,"byte_end":14261,"line_start":331,"line_end":331,"column_start":8,"column_end":20},"name":"func_liveins","qualname":"::Function::func_liveins","value":"pub fn func_liveins(&Self) -> Set<RealReg>","parent":{"krate":0,"index":1737},"children":[],"decl_id":null,"docs":" Return the set of registers that should be considered live at the\n beginning of the function. This is semantically equivalent to an\n instruction at the top of the entry block def'ing all registers in this\n set.\n","sig":null,"attributes":[{"value":"/ Return the set of registers that should be considered live at the","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":14006,"byte_end":14075,"line_start":327,"line_end":327,"column_start":5,"column_end":74}},{"value":"/ beginning of the function. This is semantically equivalent to an","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":14080,"byte_end":14148,"line_start":328,"line_end":328,"column_start":5,"column_end":73}},{"value":"/ instruction at the top of the entry block def'ing all registers in this","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":14153,"byte_end":14228,"line_start":329,"line_end":329,"column_start":5,"column_end":80}},{"value":"/ set.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":14233,"byte_end":14241,"line_start":330,"line_end":330,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":1761},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":14564,"byte_end":14577,"line_start":337,"line_end":337,"column_start":8,"column_end":21},"name":"func_liveouts","qualname":"::Function::func_liveouts","value":"pub fn func_liveouts(&Self) -> Set<RealReg>","parent":{"krate":0,"index":1737},"children":[],"decl_id":null,"docs":" Return the set of registers that should be considered live at the\n end of the function (after every return instruction). This is\n semantically equivalent to an instruction at each block with no successors\n that uses each of these registers.\n","sig":null,"attributes":[{"value":"/ Return the set of registers that should be considered live at the","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":14291,"byte_end":14360,"line_start":333,"line_end":333,"column_start":5,"column_end":74}},{"value":"/ end of the function (after every return instruction). This is","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":14365,"byte_end":14430,"line_start":334,"line_end":334,"column_start":5,"column_end":70}},{"value":"/ semantically equivalent to an instruction at each block with no successors","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":14435,"byte_end":14513,"line_start":335,"line_end":335,"column_start":5,"column_end":83}},{"value":"/ that uses each of these registers.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":14518,"byte_end":14556,"line_start":336,"line_end":336,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":1762},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":14687,"byte_end":14701,"line_start":341,"line_end":341,"column_start":12,"column_end":26},"name":"RegAllocResult","qualname":"::RegAllocResult","value":"RegAllocResult { insns, target_map, orig_insn_map, clobbered_registers, num_spill_slots, block_annotations, stackmaps, new_safepoint_insns }","parent":null,"children":[{"krate":0,"index":1764},{"krate":0,"index":1765},{"krate":0,"index":1766},{"krate":0,"index":1767},{"krate":0,"index":1768},{"krate":0,"index":1769},{"krate":0,"index":1770},{"krate":0,"index":1771}],"decl_id":null,"docs":" The result of register allocation.  Note that allocation can fail!\n","sig":null,"attributes":[{"value":"/ The result of register allocation.  Note that allocation can fail!","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":14605,"byte_end":14675,"line_start":340,"line_end":340,"column_start":1,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":1764},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":14902,"byte_end":14907,"line_start":345,"line_end":345,"column_start":9,"column_end":14},"name":"insns","qualname":"::RegAllocResult::insns","value":"std::vec::Vec<<F as Function>::Inst>","parent":{"krate":0,"index":1762},"children":[],"decl_id":null,"docs":" A new sequence of instructions with all register slots filled with real\n registers, and spills/fills/moves possibly inserted (and unneeded moves\n elided).\n","sig":null,"attributes":[{"value":"/ A new sequence of instructions with all register slots filled with real","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":14721,"byte_end":14796,"line_start":342,"line_end":342,"column_start":5,"column_end":80}},{"value":"/ registers, and spills/fills/moves possibly inserted (and unneeded moves","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":14801,"byte_end":14876,"line_start":343,"line_end":343,"column_start":5,"column_end":80}},{"value":"/ elided).","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":14881,"byte_end":14893,"line_start":344,"line_end":344,"column_start":5,"column_end":17}}]},{"kind":"Field","id":{"krate":0,"index":1765},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":15129,"byte_end":15139,"line_start":350,"line_end":350,"column_start":9,"column_end":19},"name":"target_map","qualname":"::RegAllocResult::target_map","value":"data_structures::TypedIxVec<data_structures::BlockIx, data_structures::InstIx>","parent":{"krate":0,"index":1762},"children":[],"decl_id":null,"docs":" Basic-block start indices for the new instruction list, indexed by the\n original basic block indices. May be used by the client to, e.g., remap\n branch targets appropriately.\n","sig":null,"attributes":[{"value":"/ Basic-block start indices for the new instruction list, indexed by the","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":14928,"byte_end":15002,"line_start":347,"line_end":347,"column_start":5,"column_end":79}},{"value":"/ original basic block indices. May be used by the client to, e.g., remap","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":15007,"byte_end":15082,"line_start":348,"line_end":348,"column_start":5,"column_end":80}},{"value":"/ branch targets appropriately.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":15087,"byte_end":15120,"line_start":349,"line_end":349,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":1766},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":15648,"byte_end":15661,"line_start":360,"line_end":360,"column_start":9,"column_end":22},"name":"orig_insn_map","qualname":"::RegAllocResult::orig_insn_map","value":"data_structures::TypedIxVec<data_structures::InstIx, data_structures::InstIx>","parent":{"krate":0,"index":1762},"children":[],"decl_id":null,"docs":" Full mapping from new instruction indices to original instruction\n indices. May be needed by the client to, for example, update metadata\n such as debug/source-location info as the instructions are spliced\n and reordered.","sig":null,"attributes":[{"value":"/ Full mapping from new instruction indices to original instruction","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":15175,"byte_end":15244,"line_start":352,"line_end":352,"column_start":5,"column_end":74}},{"value":"/ indices. May be needed by the client to, for example, update metadata","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":15249,"byte_end":15322,"line_start":353,"line_end":353,"column_start":5,"column_end":78}},{"value":"/ such as debug/source-location info as the instructions are spliced","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":15327,"byte_end":15397,"line_start":354,"line_end":354,"column_start":5,"column_end":75}},{"value":"/ and reordered.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":15402,"byte_end":15420,"line_start":355,"line_end":355,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":15425,"byte_end":15428,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ Each entry is an `InstIx`, but may be `InstIx::invalid_value()` if the","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":15433,"byte_end":15507,"line_start":357,"line_end":357,"column_start":5,"column_end":79}},{"value":"/ new instruction at this new index was inserted by the allocator","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":15512,"byte_end":15579,"line_start":358,"line_end":358,"column_start":5,"column_end":72}},{"value":"/ (i.e., if it is a load, spill or move instruction).","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":15584,"byte_end":15639,"line_start":359,"line_end":359,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":1767},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":16098,"byte_end":16117,"line_start":367,"line_end":367,"column_start":9,"column_end":28},"name":"clobbered_registers","qualname":"::RegAllocResult::clobbered_registers","value":"data_structures::Set<data_structures::RealReg>","parent":{"krate":0,"index":1762},"children":[],"decl_id":null,"docs":" Which real registers were overwritten? This will contain all real regs\n that appear as defs or modifies in register slots of the output\n instruction list.  This will only list registers that are available to\n the allocator.  If one of the instructions clobbers a register which\n isn't available to the allocator, it won't be mentioned here.\n","sig":null,"attributes":[{"value":"/ Which real registers were overwritten? This will contain all real regs","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":15717,"byte_end":15791,"line_start":362,"line_end":362,"column_start":5,"column_end":79}},{"value":"/ that appear as defs or modifies in register slots of the output","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":15796,"byte_end":15863,"line_start":363,"line_end":363,"column_start":5,"column_end":72}},{"value":"/ instruction list.  This will only list registers that are available to","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":15868,"byte_end":15942,"line_start":364,"line_end":364,"column_start":5,"column_end":79}},{"value":"/ the allocator.  If one of the instructions clobbers a register which","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":15947,"byte_end":16019,"line_start":365,"line_end":365,"column_start":5,"column_end":77}},{"value":"/ isn't available to the allocator, it won't be mentioned here.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":16024,"byte_end":16089,"line_start":366,"line_end":366,"column_start":5,"column_end":70}}]},{"kind":"Field","id":{"krate":0,"index":1768},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":16182,"byte_end":16197,"line_start":370,"line_end":370,"column_start":9,"column_end":24},"name":"num_spill_slots","qualname":"::RegAllocResult::num_spill_slots","value":"u32","parent":{"krate":0,"index":1762},"children":[],"decl_id":null,"docs":" How many spill slots were used?\n","sig":null,"attributes":[{"value":"/ How many spill slots were used?","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":16138,"byte_end":16173,"line_start":369,"line_end":369,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":1769},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":16439,"byte_end":16456,"line_start":375,"line_end":375,"column_start":9,"column_end":26},"name":"block_annotations","qualname":"::RegAllocResult::block_annotations","value":"std::option::Option<data_structures::TypedIxVec<data_structures::BlockIx, std::vec::Vec<std::string::String>>>","parent":{"krate":0,"index":1762},"children":[],"decl_id":null,"docs":" Block annotation strings, for debugging.  Requires requesting in the\n call to `allocate_registers`.  Creating of these annotations is\n potentially expensive, so don't request them if you don't need them.\n","sig":null,"attributes":[{"value":"/ Block annotation strings, for debugging.  Requires requesting in the","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":16209,"byte_end":16281,"line_start":372,"line_end":372,"column_start":5,"column_end":77}},{"value":"/ call to `allocate_registers`.  Creating of these annotations is","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":16286,"byte_end":16353,"line_start":373,"line_end":373,"column_start":5,"column_end":72}},{"value":"/ potentially expensive, so don't request them if you don't need them.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":16358,"byte_end":16430,"line_start":374,"line_end":374,"column_start":5,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":1770},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":16640,"byte_end":16649,"line_start":379,"line_end":379,"column_start":9,"column_end":18},"name":"stackmaps","qualname":"::RegAllocResult::stackmaps","value":"std::vec::Vec<std::vec::Vec<data_structures::SpillSlot>>","parent":{"krate":0,"index":1762},"children":[],"decl_id":null,"docs":" If stackmap support was requested: one stackmap for each of the safepoint instructions\n declared.  Otherwise empty.\n","sig":null,"attributes":[{"value":"/ If stackmap support was requested: one stackmap for each of the safepoint instructions","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":16505,"byte_end":16595,"line_start":377,"line_end":377,"column_start":5,"column_end":95}},{"value":"/ declared.  Otherwise empty.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":16600,"byte_end":16631,"line_start":378,"line_end":378,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":1771},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":16873,"byte_end":16892,"line_start":383,"line_end":383,"column_start":9,"column_end":28},"name":"new_safepoint_insns","qualname":"::RegAllocResult::new_safepoint_insns","value":"std::vec::Vec<data_structures::InstIx>","parent":{"krate":0,"index":1762},"children":[],"decl_id":null,"docs":" If stackmap support was requested: one InstIx for each safepoint instruction declared,\n indicating the corresponding location in the final instruction stream.  Otherwise empty.\n","sig":null,"attributes":[{"value":"/ If stackmap support was requested: one InstIx for each safepoint instruction declared,","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":16677,"byte_end":16767,"line_start":381,"line_end":381,"column_start":5,"column_end":95}},{"value":"/ indicating the corresponding location in the final instruction stream.  Otherwise empty.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":16772,"byte_end":16864,"line_start":382,"line_end":382,"column_start":5,"column_end":97}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3086},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":17046,"byte_end":17058,"line_start":389,"line_end":389,"column_start":5,"column_end":17},"name":"Backtracking","qualname":"::AlgorithmWithDefaults::Backtracking","value":"AlgorithmWithDefaults::Backtracking","parent":{"krate":0,"index":3085},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3088},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":17064,"byte_end":17074,"line_start":390,"line_end":390,"column_start":5,"column_end":15},"name":"LinearScan","qualname":"::AlgorithmWithDefaults::LinearScan","value":"AlgorithmWithDefaults::LinearScan","parent":{"krate":0,"index":3085},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3085},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":17018,"byte_end":17039,"line_start":388,"line_end":388,"column_start":10,"column_end":31},"name":"AlgorithmWithDefaults","qualname":"::AlgorithmWithDefaults","value":"pub enum AlgorithmWithDefaults { Backtracking, LinearScan, }","parent":null,"children":[{"krate":0,"index":3086},{"krate":0,"index":3088}],"decl_id":null,"docs":" A choice of register allocation algorithm to run.\n","sig":null,"attributes":[{"value":"/ A choice of register allocation algorithm to run.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":16910,"byte_end":16963,"line_start":386,"line_end":386,"column_start":1,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3102},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":17275,"byte_end":17289,"line_start":399,"line_end":399,"column_start":5,"column_end":19},"name":"OutOfRegisters","qualname":"::RegAllocError::OutOfRegisters","value":"RegAllocError::OutOfRegisters(RegClass)","parent":{"krate":0,"index":3101},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3105},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":17305,"byte_end":17331,"line_start":400,"line_end":400,"column_start":5,"column_end":31},"name":"MissingSuggestedScratchReg","qualname":"::RegAllocError::MissingSuggestedScratchReg","value":"RegAllocError::MissingSuggestedScratchReg(RegClass)","parent":{"krate":0,"index":3101},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3108},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":17347,"byte_end":17355,"line_start":401,"line_end":401,"column_start":5,"column_end":13},"name":"Analysis","qualname":"::RegAllocError::Analysis","value":"RegAllocError::Analysis(AnalysisError)","parent":{"krate":0,"index":3101},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3111},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":17376,"byte_end":17386,"line_start":402,"line_end":402,"column_start":5,"column_end":15},"name":"RegChecker","qualname":"::RegAllocError::RegChecker","value":"RegAllocError::RegChecker(CheckerErrors)","parent":{"krate":0,"index":3101},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3114},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":17407,"byte_end":17412,"line_start":403,"line_end":403,"column_start":5,"column_end":10},"name":"Other","qualname":"::RegAllocError::Other","value":"RegAllocError::Other(String)","parent":{"krate":0,"index":3101},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3101},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":17255,"byte_end":17268,"line_start":398,"line_end":398,"column_start":10,"column_end":23},"name":"RegAllocError","qualname":"::RegAllocError","value":"pub enum RegAllocError {\n    OutOfRegisters(RegClass),\n    MissingSuggestedScratchReg(RegClass),\n    Analysis(AnalysisError),\n    RegChecker(CheckerErrors),\n    Other(String),\n}","parent":null,"children":[{"krate":0,"index":3102},{"krate":0,"index":3105},{"krate":0,"index":3108},{"krate":0,"index":3111},{"krate":0,"index":3114}],"decl_id":null,"docs":" An error from the register allocator.\n","sig":null,"attributes":[{"value":"/ An error from the register allocator.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":17180,"byte_end":17221,"line_start":396,"line_end":396,"column_start":1,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3122},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":17698,"byte_end":17708,"line_start":417,"line_end":417,"column_start":5,"column_end":15},"name":"LinearScan","qualname":"::Algorithm::LinearScan","value":"Algorithm::LinearScan(LinearScanOptions)","parent":{"krate":0,"index":3121},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3125},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":17733,"byte_end":17745,"line_start":418,"line_end":418,"column_start":5,"column_end":17},"name":"Backtracking","qualname":"::Algorithm::Backtracking","value":"Algorithm::Backtracking(BacktrackingOptions)","parent":{"krate":0,"index":3121},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3121},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":17682,"byte_end":17691,"line_start":416,"line_end":416,"column_start":10,"column_end":19},"name":"Algorithm","qualname":"::Algorithm","value":"pub enum Algorithm {\n    LinearScan(LinearScanOptions),\n    Backtracking(BacktrackingOptions),\n}","parent":null,"children":[{"krate":0,"index":3122},{"krate":0,"index":3125}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3130},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":18126,"byte_end":18133,"line_start":432,"line_end":432,"column_start":12,"column_end":19},"name":"Options","qualname":"::Options","value":"Options { run_checker, algorithm }","parent":null,"children":[{"krate":0,"index":3131},{"krate":0,"index":3132}],"decl_id":null,"docs":" Tweakable options shared by all the allocators.\n","sig":null,"attributes":[{"value":"/ Tweakable options shared by all the allocators.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":18046,"byte_end":18097,"line_start":430,"line_end":430,"column_start":1,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":3131},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":18291,"byte_end":18302,"line_start":435,"line_end":435,"column_start":9,"column_end":20},"name":"run_checker","qualname":"::Options::run_checker","value":"bool","parent":{"krate":0,"index":3130},"children":[],"decl_id":null,"docs":" Should the register allocator check that its results are valid? This adds runtime to the\n compiler, so this is disabled by default.\n","sig":null,"attributes":[{"value":"/ Should the register allocator check that its results are valid? This adds runtime to the","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":18140,"byte_end":18232,"line_start":433,"line_end":433,"column_start":5,"column_end":97}},{"value":"/ compiler, so this is disabled by default.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":18237,"byte_end":18282,"line_start":434,"line_end":434,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":3132},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":18488,"byte_end":18497,"line_start":439,"line_end":439,"column_start":9,"column_end":18},"name":"algorithm","qualname":"::Options::algorithm","value":"Algorithm","parent":{"krate":0,"index":3130},"children":[],"decl_id":null,"docs":" Which algorithm should be used for register allocation? By default, selects backtracking,\n which is slower to compile but creates code of better quality.\n","sig":null,"attributes":[{"value":"/ Which algorithm should be used for register allocation? By default, selects backtracking,","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":18315,"byte_end":18408,"line_start":437,"line_end":437,"column_start":5,"column_end":98}},{"value":"/ which is slower to compile but creates code of better quality.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":18413,"byte_end":18479,"line_start":438,"line_end":438,"column_start":5,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":1786},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":19024,"byte_end":19043,"line_start":462,"line_end":462,"column_start":12,"column_end":31},"name":"StackmapRequestInfo","qualname":"::StackmapRequestInfo","value":"StackmapRequestInfo { reftype_class, reftyped_vregs, safepoint_insns }","parent":null,"children":[{"krate":0,"index":1787},{"krate":0,"index":1788},{"krate":0,"index":1789}],"decl_id":null,"docs":" A structure with which callers can request stackmap information.\n","sig":null,"attributes":[{"value":"/ A structure with which callers can request stackmap information.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":18944,"byte_end":19012,"line_start":461,"line_end":461,"column_start":1,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":1787},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":19220,"byte_end":19233,"line_start":465,"line_end":465,"column_start":9,"column_end":22},"name":"reftype_class","qualname":"::StackmapRequestInfo::reftype_class","value":"data_structures::RegClass","parent":{"krate":0,"index":1786},"children":[],"decl_id":null,"docs":" The register class that holds reftypes.  This may only be RegClass::I32 or\n RegClass::I64, and it must equal the word size of the target architecture.\n","sig":null,"attributes":[{"value":"/ The register class that holds reftypes.  This may only be RegClass::I32 or","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":19050,"byte_end":19128,"line_start":463,"line_end":463,"column_start":5,"column_end":83}},{"value":"/ RegClass::I64, and it must equal the word size of the target architecture.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":19133,"byte_end":19211,"line_start":464,"line_end":464,"column_start":5,"column_end":83}}]},{"kind":"Field","id":{"krate":0,"index":1788},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":19437,"byte_end":19451,"line_start":469,"line_end":469,"column_start":9,"column_end":23},"name":"reftyped_vregs","qualname":"::StackmapRequestInfo::reftyped_vregs","value":"std::vec::Vec<data_structures::VirtualReg>","parent":{"krate":0,"index":1786},"children":[],"decl_id":null,"docs":" The virtual regs that hold reftyped values.  These must be provided in ascending order\n of register index and be duplicate-free.  They must have class `reftype_class`.\n","sig":null,"attributes":[{"value":"/ The virtual regs that hold reftyped values.  These must be provided in ascending order","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":19250,"byte_end":19340,"line_start":467,"line_end":467,"column_start":5,"column_end":95}},{"value":"/ of register index and be duplicate-free.  They must have class `reftype_class`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":19345,"byte_end":19428,"line_start":468,"line_end":468,"column_start":5,"column_end":88}}]},{"kind":"Field","id":{"krate":0,"index":1789},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":20129,"byte_end":20144,"line_start":478,"line_end":478,"column_start":9,"column_end":24},"name":"safepoint_insns","qualname":"::StackmapRequestInfo::safepoint_insns","value":"std::vec::Vec<data_structures::InstIx>","parent":{"krate":0,"index":1786},"children":[],"decl_id":null,"docs":" The indices of instructions for which the allocator will construct stackmaps.  These\n must be provided in ascending order and be duplicate-free.  The specified instructions\n may not be coalescable move instructions (as the allocator may remove those) and they\n may not modify any register carrying a reftyped value (they may \"def\" or \"use\" them,\n though).  The reason is that, at a safepoint, the client's garbage collector may change\n the values of all live references, so it would be meaningless for a safepoint\n instruction also to attempt to do that -- we'd end up with two competing new values.\n","sig":null,"attributes":[{"value":"/ The indices of instructions for which the allocator will construct stackmaps.  These","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":19475,"byte_end":19563,"line_start":471,"line_end":471,"column_start":5,"column_end":93}},{"value":"/ must be provided in ascending order and be duplicate-free.  The specified instructions","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":19568,"byte_end":19658,"line_start":472,"line_end":472,"column_start":5,"column_end":95}},{"value":"/ may not be coalescable move instructions (as the allocator may remove those) and they","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":19663,"byte_end":19752,"line_start":473,"line_end":473,"column_start":5,"column_end":94}},{"value":"/ may not modify any register carrying a reftyped value (they may \"def\" or \"use\" them,","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":19757,"byte_end":19845,"line_start":474,"line_end":474,"column_start":5,"column_end":93}},{"value":"/ though).  The reason is that, at a safepoint, the client's garbage collector may change","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":19850,"byte_end":19941,"line_start":475,"line_end":475,"column_start":5,"column_end":96}},{"value":"/ the values of all live references, so it would be meaningless for a safepoint","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":19946,"byte_end":20027,"line_start":476,"line_end":476,"column_start":5,"column_end":86}},{"value":"/ instruction also to attempt to do that -- we'd end up with two competing new values.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":20032,"byte_end":20120,"line_start":477,"line_end":477,"column_start":5,"column_end":93}}]},{"kind":"Function","id":{"krate":0,"index":1790},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":21063,"byte_end":21091,"line_start":496,"line_end":496,"column_start":8,"column_end":36},"name":"allocate_registers_with_opts","qualname":"::allocate_registers_with_opts","value":"pub fn allocate_registers_with_opts<F: Function>(&mut F, &RealRegUniverse,\n                                                 Option<&StackmapRequestInfo>,\n                                                 Options)\n-> Result<RegAllocResult<F>, RegAllocError>","parent":null,"children":[],"decl_id":null,"docs":" Allocate registers for a function's code, given a universe of real registers that we are\n allowed to use.  Optionally, stackmap support may be requested.","sig":null,"attributes":[{"value":"/ Allocate registers for a function's code, given a universe of real registers that we are","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":20162,"byte_end":20254,"line_start":481,"line_end":481,"column_start":1,"column_end":93}},{"value":"/ allowed to use.  Optionally, stackmap support may be requested.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":20255,"byte_end":20322,"line_start":482,"line_end":482,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":20323,"byte_end":20326,"line_start":483,"line_end":483,"column_start":1,"column_end":4}},{"value":"/ The control flow graph must not contain any critical edges, that is, any edge coming from a","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":20327,"byte_end":20422,"line_start":484,"line_end":484,"column_start":1,"column_end":96}},{"value":"/ block with multiple successors must not flow into a block with multiple predecessors. The","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":20423,"byte_end":20516,"line_start":485,"line_end":485,"column_start":1,"column_end":94}},{"value":"/ embedder must have split critical edges before handing over the function to this function.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":20517,"byte_end":20611,"line_start":486,"line_end":486,"column_start":1,"column_end":95}},{"value":"/ Otherwise, an error will be returned.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":20612,"byte_end":20653,"line_start":487,"line_end":487,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":20654,"byte_end":20657,"line_start":488,"line_end":488,"column_start":1,"column_end":4}},{"value":"/ Allocation may succeed, returning a `RegAllocResult` with the new instruction sequence, or","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":20658,"byte_end":20752,"line_start":489,"line_end":489,"column_start":1,"column_end":95}},{"value":"/ it may fail, returning an error.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":20753,"byte_end":20789,"line_start":490,"line_end":490,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":20790,"byte_end":20793,"line_start":491,"line_end":491,"column_start":1,"column_end":4}},{"value":"/ Runtime options can be passed to the allocators, through the use of [Options] for options","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":20794,"byte_end":20887,"line_start":492,"line_end":492,"column_start":1,"column_end":94}},{"value":"/ common to all the backends. The choice of algorithm is done by passing a given [Algorithm]","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":20888,"byte_end":20982,"line_start":493,"line_end":493,"column_start":1,"column_end":95}},{"value":"/ instance, with options tailored for each algorithm.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":20983,"byte_end":21038,"line_start":494,"line_end":494,"column_start":1,"column_end":56}},{"value":"inline(never)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":21039,"byte_end":21055,"line_start":495,"line_end":495,"column_start":1,"column_end":17}}]},{"kind":"Function","id":{"krate":0,"index":1792},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":25258,"byte_end":25276,"line_start":596,"line_end":596,"column_start":8,"column_end":26},"name":"allocate_registers","qualname":"::allocate_registers","value":"pub fn allocate_registers<F: Function>(&mut F, &RealRegUniverse,\n                                       Option<&StackmapRequestInfo>,\n                                       AlgorithmWithDefaults)\n-> Result<RegAllocResult<F>, RegAllocError>","parent":null,"children":[],"decl_id":null,"docs":" Allocate registers for a function's code, given a universe of real registers that we are\n allowed to use.","sig":null,"attributes":[{"value":"/ Allocate registers for a function's code, given a universe of real registers that we are","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":24531,"byte_end":24623,"line_start":582,"line_end":582,"column_start":1,"column_end":93}},{"value":"/ allowed to use.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":24624,"byte_end":24643,"line_start":583,"line_end":583,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":24644,"byte_end":24647,"line_start":584,"line_end":584,"column_start":1,"column_end":4}},{"value":"/ The control flow graph must not contain any critical edges, that is, any edge coming from a","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":24648,"byte_end":24743,"line_start":585,"line_end":585,"column_start":1,"column_end":96}},{"value":"/ block with multiple successors must not flow into a block with multiple predecessors. The","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":24744,"byte_end":24837,"line_start":586,"line_end":586,"column_start":1,"column_end":94}},{"value":"/ embedder must have split critical edges before handing over the function to this function.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":24838,"byte_end":24932,"line_start":587,"line_end":587,"column_start":1,"column_end":95}},{"value":"/ Otherwise, an error will be returned.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":24933,"byte_end":24974,"line_start":588,"line_end":588,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":24975,"byte_end":24978,"line_start":589,"line_end":589,"column_start":1,"column_end":4}},{"value":"/ Allocate may succeed, returning a `RegAllocResult` with the new instruction sequence, or it may","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":24979,"byte_end":25078,"line_start":590,"line_end":590,"column_start":1,"column_end":100}},{"value":"/ fail, returning an error.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":25079,"byte_end":25108,"line_start":591,"line_end":591,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":25109,"byte_end":25112,"line_start":592,"line_end":592,"column_start":1,"column_end":4}},{"value":"/ This is a convenient function that uses standard options for the allocator, according to the","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":25113,"byte_end":25209,"line_start":593,"line_end":593,"column_start":1,"column_end":97}},{"value":"/ selected algorithm.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":25210,"byte_end":25233,"line_start":594,"line_end":594,"column_start":1,"column_end":24}},{"value":"inline(never)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":25234,"byte_end":25250,"line_start":595,"line_end":595,"column_start":1,"column_end":17}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\analysis_main.rs","byte_start":28380,"byte_end":28393,"line_start":57,"line_end":57,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":42}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\analysis_control_flow.rs","byte_start":39186,"byte_end":39204,"line_start":35,"line_end":35,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":80},{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\analysis_control_flow.rs","byte_start":62069,"byte_end":62076,"line_start":653,"line_end":653,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\analysis_data_flow.rs","byte_start":95930,"byte_end":95944,"line_start":799,"line_end":799,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":194}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\avl_tree.rs","byte_start":152588,"byte_end":152595,"line_start":27,"line_end":27,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":258}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\avl_tree.rs","byte_start":153775,"byte_end":153782,"line_start":61,"line_end":61,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":268},{"krate":0,"index":269},{"krate":0,"index":270}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\avl_tree.rs","byte_start":157561,"byte_end":157568,"line_start":160,"line_end":160,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":273},{"krate":0,"index":274},{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\avl_tree.rs","byte_start":185168,"byte_end":185179,"line_start":804,"line_end":804,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":301},{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\avl_tree.rs","byte_start":185827,"byte_end":185838,"line_start":828,"line_end":828,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":307},{"krate":0,"index":308}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\avl_tree.rs","byte_start":186411,"byte_end":186418,"line_start":847,"line_end":847,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":311},{"krate":0,"index":313},{"krate":0,"index":315},{"krate":0,"index":317},{"krate":0,"index":320}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\bt_coalescing_analysis.rs","byte_start":207648,"byte_end":207652,"line_start":107,"line_end":107,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":357}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\bt_coalescing_analysis.rs","byte_start":207943,"byte_end":207957,"line_start":118,"line_end":118,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":359},{"krate":0,"index":360}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\bt_commitment_map.rs","byte_start":235850,"byte_end":235869,"line_start":45,"line_end":45,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":405}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\bt_commitment_map.rs","byte_start":235976,"byte_end":235995,"line_start":50,"line_end":50,"column_start":20,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":407}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\bt_commitment_map.rs","byte_start":236179,"byte_end":236198,"line_start":56,"line_end":56,"column_start":21,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":409}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\bt_commitment_map.rs","byte_start":236404,"byte_end":236423,"line_start":62,"line_end":62,"column_start":21,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":411}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\bt_commitment_map.rs","byte_start":237000,"byte_end":237013,"line_start":79,"line_end":79,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":415}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\bt_commitment_map.rs","byte_start":237156,"byte_end":237169,"line_start":86,"line_end":86,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":417},{"krate":0,"index":418},{"krate":0,"index":420},{"krate":0,"index":422},{"krate":0,"index":424}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\bt_main.rs","byte_start":242169,"byte_end":242188,"line_start":37,"line_end":37,"column_start":27,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":493}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\bt_main.rs","byte_start":242318,"byte_end":242337,"line_start":45,"line_end":45,"column_start":21,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":495}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\bt_main.rs","byte_start":243276,"byte_end":243286,"line_start":72,"line_end":72,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":500},{"krate":0,"index":501},{"krate":0,"index":502},{"krate":0,"index":503}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\bt_main.rs","byte_start":250042,"byte_end":250052,"line_start":242,"line_end":242,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":509},{"krate":0,"index":514},{"krate":0,"index":515}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\bt_main.rs","byte_start":264835,"byte_end":264845,"line_start":609,"line_end":609,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":519}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\bt_main.rs","byte_start":266132,"byte_end":266144,"line_start":641,"line_end":641,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":521}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\bt_spillslot_allocator.rs","byte_start":323008,"byte_end":323027,"line_start":41,"line_end":41,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":560}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\bt_spillslot_allocator.rs","byte_start":323991,"byte_end":324007,"line_start":65,"line_end":65,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":568},{"krate":0,"index":569},{"krate":0,"index":570},{"krate":0,"index":571},{"krate":0,"index":572},{"krate":0,"index":573}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\bt_spillslot_allocator.rs","byte_start":330383,"byte_end":330401,"line_start":221,"line_end":221,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":583},{"krate":0,"index":584},{"krate":0,"index":585},{"krate":0,"index":586},{"krate":0,"index":588},{"krate":0,"index":589},{"krate":0,"index":591}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\bt_vlr_priority_queue.rs","byte_start":348519,"byte_end":348540,"line_start":71,"line_end":71,"column_start":6,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":604}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\bt_vlr_priority_queue.rs","byte_start":348755,"byte_end":348776,"line_start":81,"line_end":81,"column_start":20,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":606}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\bt_vlr_priority_queue.rs","byte_start":348911,"byte_end":348932,"line_start":86,"line_end":86,"column_start":13,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\bt_vlr_priority_queue.rs","byte_start":348956,"byte_end":348977,"line_start":87,"line_end":87,"column_start":21,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":609}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\bt_vlr_priority_queue.rs","byte_start":349093,"byte_end":349114,"line_start":92,"line_end":92,"column_start":14,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":611}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\bt_vlr_priority_queue.rs","byte_start":349841,"byte_end":349858,"line_start":112,"line_end":112,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":616},{"krate":0,"index":617},{"krate":0,"index":618},{"krate":0,"index":619},{"krate":0,"index":620},{"krate":0,"index":621}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\checker.rs","byte_start":356608,"byte_end":356620,"line_start":136,"line_end":136,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":649}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\checker.rs","byte_start":356702,"byte_end":356714,"line_start":142,"line_end":142,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":651}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\checker.rs","byte_start":357643,"byte_end":357655,"line_start":167,"line_end":167,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":653}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\checker.rs","byte_start":358114,"byte_end":358126,"line_start":187,"line_end":187,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":657},{"krate":0,"index":658},{"krate":0,"index":659},{"krate":0,"index":660},{"krate":0,"index":661},{"krate":0,"index":662},{"krate":0,"index":663}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\checker.rs","byte_start":367809,"byte_end":367816,"line_start":464,"line_end":464,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":669},{"krate":0,"index":671},{"krate":0,"index":672},{"krate":0,"index":677},{"krate":0,"index":678},{"krate":0,"index":679}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\checker.rs","byte_start":373512,"byte_end":373526,"line_start":624,"line_end":624,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":684},{"krate":0,"index":688},{"krate":0,"index":691}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":378444,"byte_end":378447,"line_start":45,"line_end":45,"column_start":46,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":716},{"krate":0,"index":717},{"krate":0,"index":718},{"krate":0,"index":719},{"krate":0,"index":720},{"krate":0,"index":721},{"krate":0,"index":722},{"krate":0,"index":723},{"krate":0,"index":724},{"krate":0,"index":725},{"krate":0,"index":726},{"krate":0,"index":727},{"krate":0,"index":728},{"krate":0,"index":729},{"krate":0,"index":730},{"krate":0,"index":731},{"krate":0,"index":732},{"krate":0,"index":734},{"krate":0,"index":737},{"krate":0,"index":740}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":381526,"byte_end":381529,"line_start":188,"line_end":188,"column_start":61,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":743}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":382348,"byte_end":382351,"line_start":211,"line_end":211,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":750}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":382496,"byte_end":382503,"line_start":218,"line_end":218,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":754},{"krate":0,"index":755}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":383418,"byte_end":383423,"line_start":254,"line_end":254,"column_start":53,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":762},{"krate":0,"index":763},{"krate":0,"index":764}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":383654,"byte_end":383659,"line_start":265,"line_end":265,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":767},{"krate":0,"index":768},{"krate":0,"index":769},{"krate":0,"index":770},{"krate":0,"index":771},{"krate":0,"index":772},{"krate":0,"index":773}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":384417,"byte_end":384427,"line_start":302,"line_end":302,"column_start":49,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":780},{"krate":0,"index":781}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":385036,"byte_end":385046,"line_start":324,"line_end":324,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":790},{"krate":0,"index":791},{"krate":0,"index":792},{"krate":0,"index":793},{"krate":0,"index":794},{"krate":0,"index":795},{"krate":0,"index":796},{"krate":0,"index":797},{"krate":0,"index":798},{"krate":0,"index":799},{"krate":0,"index":800},{"krate":0,"index":801},{"krate":0,"index":802},{"krate":0,"index":803},{"krate":0,"index":805},{"krate":0,"index":807}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":386813,"byte_end":386823,"line_start":388,"line_end":388,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":811},{"krate":0,"index":812}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":387005,"byte_end":387015,"line_start":398,"line_end":398,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":816}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":387182,"byte_end":387192,"line_start":407,"line_end":407,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":820}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":391155,"byte_end":391165,"line_start":531,"line_end":531,"column_start":43,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":825}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":392212,"byte_end":392220,"line_start":561,"line_end":561,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":828},{"krate":0,"index":829},{"krate":0,"index":830},{"krate":0,"index":831},{"krate":0,"index":832}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":395097,"byte_end":395100,"line_start":647,"line_end":647,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":835},{"krate":0,"index":836},{"krate":0,"index":837},{"krate":0,"index":838},{"krate":0,"index":839},{"krate":0,"index":840},{"krate":0,"index":841},{"krate":0,"index":842},{"krate":0,"index":843},{"krate":0,"index":844},{"krate":0,"index":845},{"krate":0,"index":846},{"krate":0,"index":847},{"krate":0,"index":848},{"krate":0,"index":849},{"krate":0,"index":850}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":398117,"byte_end":398120,"line_start":744,"line_end":744,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":852}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":398839,"byte_end":398842,"line_start":769,"line_end":769,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":854}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":399081,"byte_end":399088,"line_start":778,"line_end":778,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":856},{"krate":0,"index":857},{"krate":0,"index":858},{"krate":0,"index":859},{"krate":0,"index":860},{"krate":0,"index":861},{"krate":0,"index":862},{"krate":0,"index":863}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":399864,"byte_end":399871,"line_start":812,"line_end":812,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":865}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":400158,"byte_end":400161,"line_start":823,"line_end":823,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":867}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":400434,"byte_end":400444,"line_start":833,"line_end":833,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":869},{"krate":0,"index":870},{"krate":0,"index":871},{"krate":0,"index":872},{"krate":0,"index":873},{"krate":0,"index":874},{"krate":0,"index":875}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":401138,"byte_end":401148,"line_start":864,"line_end":864,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":877}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":401264,"byte_end":401267,"line_start":870,"line_end":870,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":879},{"krate":0,"index":882},{"krate":0,"index":885},{"krate":0,"index":888}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":403737,"byte_end":403745,"line_start":925,"line_end":925,"column_start":79,"column_end":87},"value":"","parent":null,"children":[{"krate":0,"index":892},{"krate":0,"index":893},{"krate":0,"index":894}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":404445,"byte_end":404454,"line_start":952,"line_end":952,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":898},{"krate":0,"index":899},{"krate":0,"index":900},{"krate":0,"index":901},{"krate":0,"index":902}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":405074,"byte_end":405083,"line_start":975,"line_end":975,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":904}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":405640,"byte_end":405657,"line_start":992,"line_end":992,"column_start":10,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":910},{"krate":0,"index":911},{"krate":0,"index":912},{"krate":0,"index":913},{"krate":0,"index":914},{"krate":0,"index":915},{"krate":0,"index":916},{"krate":0,"index":917},{"krate":0,"index":918}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":407558,"byte_end":407565,"line_start":1051,"line_end":1051,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":920},{"krate":0,"index":921},{"krate":0,"index":922},{"krate":0,"index":923}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":408592,"byte_end":408604,"line_start":1089,"line_end":1089,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":925}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":409200,"byte_end":409216,"line_start":1112,"line_end":1112,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":930},{"krate":0,"index":931},{"krate":0,"index":932}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":410173,"byte_end":410180,"line_start":1140,"line_end":1140,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":934},{"krate":0,"index":935}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":410475,"byte_end":410491,"line_start":1155,"line_end":1155,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":937}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":414651,"byte_end":414666,"line_start":1249,"line_end":1249,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":939},{"krate":0,"index":940}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":421645,"byte_end":421650,"line_start":1421,"line_end":1421,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":943},{"krate":0,"index":944},{"krate":0,"index":945},{"krate":0,"index":946},{"krate":0,"index":947}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":422390,"byte_end":422395,"line_start":1456,"line_end":1456,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":949}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":423541,"byte_end":423550,"line_start":1488,"line_end":1488,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":951},{"krate":0,"index":952},{"krate":0,"index":953},{"krate":0,"index":954},{"krate":0,"index":955},{"krate":0,"index":956},{"krate":0,"index":957},{"krate":0,"index":958},{"krate":0,"index":959},{"krate":0,"index":960},{"krate":0,"index":961},{"krate":0,"index":962}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":425385,"byte_end":425394,"line_start":1557,"line_end":1557,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":964}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":427353,"byte_end":427362,"line_start":1606,"line_end":1606,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":966}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":427502,"byte_end":427511,"line_start":1612,"line_end":1612,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":968},{"krate":0,"index":969},{"krate":0,"index":970}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":429455,"byte_end":429464,"line_start":1672,"line_end":1672,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":974}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":430299,"byte_end":430312,"line_start":1691,"line_end":1691,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":976}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":432472,"byte_end":432488,"line_start":1737,"line_end":1737,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":978}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":433179,"byte_end":433197,"line_start":1760,"line_end":1760,"column_start":21,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":980}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":433306,"byte_end":433324,"line_start":1766,"line_end":1766,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":982},{"krate":0,"index":983},{"krate":0,"index":985},{"krate":0,"index":987},{"krate":0,"index":989}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":435718,"byte_end":435734,"line_start":1835,"line_end":1835,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":992}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":435840,"byte_end":435856,"line_start":1841,"line_end":1841,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":994},{"krate":0,"index":996},{"krate":0,"index":998},{"krate":0,"index":999}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":438618,"byte_end":438627,"line_start":1918,"line_end":1918,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1002}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":438858,"byte_end":438867,"line_start":1927,"line_end":1927,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1004},{"krate":0,"index":1005},{"krate":0,"index":1006},{"krate":0,"index":1007},{"krate":0,"index":1008},{"krate":0,"index":1009},{"krate":0,"index":1010},{"krate":0,"index":1011}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":443398,"byte_end":443407,"line_start":2045,"line_end":2045,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1013}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":443666,"byte_end":443675,"line_start":2057,"line_end":2057,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1015}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":444541,"byte_end":444553,"line_start":2085,"line_end":2085,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1017}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":444692,"byte_end":444704,"line_start":2091,"line_end":2091,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1019}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":448889,"byte_end":448896,"line_start":2179,"line_end":2179,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1036},{"krate":0,"index":1037},{"krate":0,"index":1038},{"krate":0,"index":1039},{"krate":0,"index":1040},{"krate":0,"index":1041},{"krate":0,"index":1042}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":449991,"byte_end":449998,"line_start":2220,"line_end":2220,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1044}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\inst_stream.rs","byte_start":459053,"byte_end":459065,"line_start":45,"line_end":45,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1070},{"krate":0,"index":1072}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\inst_stream.rs","byte_start":463153,"byte_end":463161,"line_start":159,"line_end":159,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1074}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\inst_stream.rs","byte_start":463854,"byte_end":463866,"line_start":182,"line_end":182,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1076},{"krate":0,"index":1077}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\inst_stream.rs","byte_start":464470,"byte_end":464493,"line_start":204,"line_end":204,"column_start":6,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1079}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\linear_scan\\analysis.rs","byte_start":505882,"byte_end":505891,"line_start":24,"line_end":24,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1171}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\linear_scan\\analysis.rs","byte_start":506028,"byte_end":506037,"line_start":30,"line_end":30,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1173},{"krate":0,"index":1175}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\linear_scan\\assign_registers.rs","byte_start":539392,"byte_end":539401,"line_start":35,"line_end":35,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1251}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\linear_scan\\assign_registers.rs","byte_start":540205,"byte_end":540220,"line_start":56,"line_end":56,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1256},{"krate":0,"index":1257},{"krate":0,"index":1258}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\linear_scan\\assign_registers.rs","byte_start":547224,"byte_end":547239,"line_start":259,"line_end":259,"column_start":15,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1266},{"krate":0,"index":1267},{"krate":0,"index":1268}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\linear_scan\\assign_registers.rs","byte_start":548529,"byte_end":548548,"line_start":305,"line_end":305,"column_start":43,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1278},{"krate":0,"index":1279}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\linear_scan\\assign_registers.rs","byte_start":549002,"byte_end":549017,"line_start":322,"line_end":322,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1282},{"krate":0,"index":1283}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\linear_scan\\assign_registers.rs","byte_start":549432,"byte_end":549447,"line_start":334,"line_end":334,"column_start":41,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1286}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\linear_scan\\assign_registers.rs","byte_start":550120,"byte_end":550133,"line_start":355,"line_end":355,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1293}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\linear_scan\\assign_registers.rs","byte_start":551060,"byte_end":551073,"line_start":384,"line_end":384,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1299}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\linear_scan\\assign_registers.rs","byte_start":551190,"byte_end":551203,"line_start":390,"line_end":390,"column_start":18,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\linear_scan\\assign_registers.rs","byte_start":551233,"byte_end":551246,"line_start":392,"line_end":392,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1302}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\linear_scan\\assign_registers.rs","byte_start":551539,"byte_end":551552,"line_start":401,"line_end":401,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1304}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\linear_scan\\assign_registers.rs","byte_start":551746,"byte_end":551764,"line_start":412,"line_end":412,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1308},{"krate":0,"index":1309},{"krate":0,"index":1310}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\linear_scan\\assign_registers.rs","byte_start":553211,"byte_end":553216,"line_start":459,"line_end":459,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1327},{"krate":0,"index":1328},{"krate":0,"index":1329},{"krate":0,"index":1330}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\linear_scan\\resolve_moves.rs","byte_start":586962,"byte_end":586971,"line_start":186,"line_end":186,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1393},{"krate":0,"index":1394},{"krate":0,"index":1397}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\linear_scan\\resolve_moves.rs","byte_start":600175,"byte_end":600186,"line_start":558,"line_end":558,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1410}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\linear_scan\\resolve_moves.rs","byte_start":600433,"byte_end":600439,"line_start":572,"line_end":572,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1418}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\linear_scan\\resolve_moves.rs","byte_start":600837,"byte_end":600843,"line_start":585,"line_end":585,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1420},{"krate":0,"index":1421},{"krate":0,"index":1422},{"krate":0,"index":1423}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\linear_scan\\mod.rs","byte_start":483084,"byte_end":483094,"line_start":45,"line_end":45,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1431}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\linear_scan\\mod.rs","byte_start":484264,"byte_end":484281,"line_start":88,"line_end":88,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1433}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\linear_scan\\mod.rs","byte_start":485401,"byte_end":485418,"line_start":120,"line_end":120,"column_start":21,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1435}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\linear_scan\\mod.rs","byte_start":485775,"byte_end":485780,"line_start":134,"line_end":134,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1438}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\linear_scan\\mod.rs","byte_start":486000,"byte_end":486013,"line_start":146,"line_end":146,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1440}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\linear_scan\\mod.rs","byte_start":486800,"byte_end":486815,"line_start":178,"line_end":178,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1442}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\linear_scan\\mod.rs","byte_start":487184,"byte_end":487199,"line_start":192,"line_end":192,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1444},{"krate":0,"index":1445},{"krate":0,"index":1446},{"krate":0,"index":1447}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\linear_scan\\mod.rs","byte_start":488132,"byte_end":488139,"line_start":228,"line_end":228,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1449}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\linear_scan\\mod.rs","byte_start":488689,"byte_end":488696,"line_start":252,"line_end":252,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1451},{"krate":0,"index":1452},{"krate":0,"index":1453},{"krate":0,"index":1454},{"krate":0,"index":1455},{"krate":0,"index":1456},{"krate":0,"index":1457},{"krate":0,"index":1458},{"krate":0,"index":1459},{"krate":0,"index":1460}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\linear_scan\\mod.rs","byte_start":489549,"byte_end":489557,"line_start":299,"line_end":299,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1464},{"krate":0,"index":1465},{"krate":0,"index":1466}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\linear_scan\\mod.rs","byte_start":490045,"byte_end":490053,"line_start":320,"line_end":320,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1468}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\linear_scan\\mod.rs","byte_start":490462,"byte_end":490471,"line_start":336,"line_end":336,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1473},{"krate":0,"index":1474},{"krate":0,"index":1475},{"krate":0,"index":1476},{"krate":0,"index":1477},{"krate":0,"index":1478},{"krate":0,"index":1479}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\reg_maps.rs","byte_start":612454,"byte_end":612474,"line_start":26,"line_end":26,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1508},{"krate":0,"index":1509},{"krate":0,"index":1510},{"krate":0,"index":1511},{"krate":0,"index":1513},{"krate":0,"index":1514},{"krate":0,"index":1515},{"krate":0,"index":1516},{"krate":0,"index":1517},{"krate":0,"index":1519}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\reg_maps.rs","byte_start":617005,"byte_end":617025,"line_start":145,"line_end":145,"column_start":25,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1523},{"krate":0,"index":1525},{"krate":0,"index":1528}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\reg_maps.rs","byte_start":623384,"byte_end":623405,"line_start":310,"line_end":310,"column_start":6,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1530},{"krate":0,"index":1531},{"krate":0,"index":1532},{"krate":0,"index":1535},{"krate":0,"index":1538},{"krate":0,"index":1539}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\reg_maps.rs","byte_start":624195,"byte_end":624216,"line_start":335,"line_end":335,"column_start":25,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1541},{"krate":0,"index":1542},{"krate":0,"index":1543}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\snapshot.rs","byte_start":626369,"byte_end":626379,"line_start":58,"line_end":58,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1549},{"krate":0,"index":1553},{"krate":0,"index":1557}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\snapshot.rs","byte_start":630006,"byte_end":630016,"line_start":170,"line_end":170,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1559},{"krate":0,"index":1560},{"krate":0,"index":1561},{"krate":0,"index":1562},{"krate":0,"index":1563},{"krate":0,"index":1564},{"krate":0,"index":1565},{"krate":0,"index":1566},{"krate":0,"index":1567},{"krate":0,"index":1568},{"krate":0,"index":1569},{"krate":0,"index":1570},{"krate":0,"index":1571},{"krate":0,"index":1572},{"krate":0,"index":1573},{"krate":0,"index":1574},{"krate":0,"index":1576},{"krate":0,"index":1577},{"krate":0,"index":1578},{"krate":0,"index":1579},{"krate":0,"index":1580},{"krate":0,"index":1581}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\sparse_set.rs","byte_start":636054,"byte_end":636064,"line_start":53,"line_end":53,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1606},{"krate":0,"index":1607},{"krate":0,"index":1608},{"krate":0,"index":1609}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\sparse_set.rs","byte_start":640925,"byte_end":640935,"line_start":197,"line_end":197,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1614},{"krate":0,"index":1615},{"krate":0,"index":1616},{"krate":0,"index":1617},{"krate":0,"index":1618},{"krate":0,"index":1619},{"krate":0,"index":1620},{"krate":0,"index":1621},{"krate":0,"index":1622},{"krate":0,"index":1623},{"krate":0,"index":1624}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\sparse_set.rs","byte_start":654577,"byte_end":654587,"line_start":575,"line_end":575,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1627}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\sparse_set.rs","byte_start":655428,"byte_end":655438,"line_start":599,"line_end":599,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1630}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\sparse_set.rs","byte_start":656196,"byte_end":656206,"line_start":629,"line_end":629,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1642}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\sparse_set.rs","byte_start":656608,"byte_end":656622,"line_start":643,"line_end":643,"column_start":33,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1646},{"krate":0,"index":1647}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\union_find.rs","byte_start":667543,"byte_end":667552,"line_start":83,"line_end":83,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1664},{"krate":0,"index":1665},{"krate":0,"index":1666},{"krate":0,"index":1667}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\union_find.rs","byte_start":675478,"byte_end":675487,"line_start":275,"line_end":275,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1676}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\union_find.rs","byte_start":682656,"byte_end":682677,"line_start":430,"line_end":430,"column_start":20,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1679}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\union_find.rs","byte_start":684216,"byte_end":684237,"line_start":468,"line_end":468,"column_start":20,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1687}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\union_find.rs","byte_start":685039,"byte_end":685067,"line_start":485,"line_end":485,"column_start":37,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":1692},{"krate":0,"index":1693}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\union_find.rs","byte_start":685853,"byte_end":685874,"line_start":511,"line_end":511,"column_start":20,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1701}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\union_find.rs","byte_start":686115,"byte_end":686145,"line_start":520,"line_end":520,"column_start":37,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":1706},{"krate":0,"index":1707}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":17447,"byte_end":17460,"line_start":406,"line_end":406,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1777}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":17791,"byte_end":17800,"line_start":421,"line_end":421,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1781}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":18539,"byte_end":18546,"line_start":442,"line_end":442,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1783}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":18730,"byte_end":18737,"line_start":451,"line_end":451,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1785}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\analysis_main.rs","byte_start":28380,"byte_end":28393,"line_start":57,"line_end":57,"column_start":19,"column_end":32},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1795},"to":{"krate":5,"index":4275}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\analysis_control_flow.rs","byte_start":39186,"byte_end":39204,"line_start":35,"line_end":35,"column_start":6,"column_end":24},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":77},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\analysis_control_flow.rs","byte_start":62069,"byte_end":62076,"line_start":653,"line_end":653,"column_start":6,"column_end":13},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":113},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\analysis_data_flow.rs","byte_start":95930,"byte_end":95944,"line_start":799,"line_end":799,"column_start":21,"column_end":35},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1815},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\avl_tree.rs","byte_start":152588,"byte_end":152595,"line_start":27,"line_end":27,"column_start":9,"column_end":16},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1837},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\avl_tree.rs","byte_start":153775,"byte_end":153782,"line_start":61,"line_end":61,"column_start":16,"column_end":23},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":260},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\avl_tree.rs","byte_start":157561,"byte_end":157568,"line_start":160,"line_end":160,"column_start":29,"column_end":36},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":260},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\avl_tree.rs","byte_start":185168,"byte_end":185179,"line_start":804,"line_end":804,"column_start":17,"column_end":28},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":291},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\avl_tree.rs","byte_start":185827,"byte_end":185838,"line_start":828,"line_end":828,"column_start":36,"column_end":47},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":291},"to":{"krate":2,"index":5311}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\avl_tree.rs","byte_start":186411,"byte_end":186418,"line_start":847,"line_end":847,"column_start":29,"column_end":36},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":260},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\bt_coalescing_analysis.rs","byte_start":207648,"byte_end":207652,"line_start":107,"line_end":107,"column_start":6,"column_end":10},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1859},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\bt_coalescing_analysis.rs","byte_start":207943,"byte_end":207957,"line_start":118,"line_end":118,"column_start":20,"column_end":34},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":2194},"to":{"krate":0,"index":1650}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\bt_commitment_map.rs","byte_start":235850,"byte_end":235869,"line_start":45,"line_end":45,"column_start":6,"column_end":25},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1870},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\bt_commitment_map.rs","byte_start":235976,"byte_end":235995,"line_start":50,"line_end":50,"column_start":20,"column_end":39},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1870},"to":{"krate":2,"index":1770}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\bt_commitment_map.rs","byte_start":236179,"byte_end":236198,"line_start":56,"line_end":56,"column_start":21,"column_end":40},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1870},"to":{"krate":2,"index":1807}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\bt_commitment_map.rs","byte_start":236404,"byte_end":236423,"line_start":62,"line_end":62,"column_start":21,"column_end":40},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1870},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\bt_commitment_map.rs","byte_start":237000,"byte_end":237013,"line_start":79,"line_end":79,"column_start":21,"column_end":34},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":412},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\bt_commitment_map.rs","byte_start":237156,"byte_end":237169,"line_start":86,"line_end":86,"column_start":6,"column_end":19},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":412},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\bt_main.rs","byte_start":242169,"byte_end":242188,"line_start":37,"line_end":37,"column_start":27,"column_end":46},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1875},"to":{"krate":2,"index":2033}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\bt_main.rs","byte_start":242318,"byte_end":242337,"line_start":45,"line_end":45,"column_start":21,"column_end":40},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1875},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\bt_main.rs","byte_start":243276,"byte_end":243286,"line_start":72,"line_end":72,"column_start":6,"column_end":16},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":496},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\bt_main.rs","byte_start":250042,"byte_end":250052,"line_start":242,"line_end":242,"column_start":6,"column_end":16},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":496},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\bt_main.rs","byte_start":264835,"byte_end":264845,"line_start":609,"line_end":609,"column_start":21,"column_end":31},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1879},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\bt_main.rs","byte_start":266132,"byte_end":266144,"line_start":641,"line_end":641,"column_start":21,"column_end":33},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1892},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\bt_spillslot_allocator.rs","byte_start":323008,"byte_end":323027,"line_start":41,"line_end":41,"column_start":6,"column_end":25},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1900},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\bt_spillslot_allocator.rs","byte_start":323991,"byte_end":324007,"line_start":65,"line_end":65,"column_start":6,"column_end":22},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":561},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\bt_spillslot_allocator.rs","byte_start":330383,"byte_end":330401,"line_start":221,"line_end":221,"column_start":6,"column_end":24},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":580},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\bt_vlr_priority_queue.rs","byte_start":348519,"byte_end":348540,"line_start":71,"line_end":71,"column_start":6,"column_end":27},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":599},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\bt_vlr_priority_queue.rs","byte_start":348755,"byte_end":348776,"line_start":81,"line_end":81,"column_start":20,"column_end":41},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":599},"to":{"krate":2,"index":1770}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\bt_vlr_priority_queue.rs","byte_start":348911,"byte_end":348932,"line_start":86,"line_end":86,"column_start":13,"column_end":34},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":599},"to":{"krate":2,"index":1775}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\bt_vlr_priority_queue.rs","byte_start":348956,"byte_end":348977,"line_start":87,"line_end":87,"column_start":21,"column_end":42},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":599},"to":{"krate":2,"index":1807}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\bt_vlr_priority_queue.rs","byte_start":349093,"byte_end":349114,"line_start":92,"line_end":92,"column_start":14,"column_end":35},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":599},"to":{"krate":2,"index":1796}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\bt_vlr_priority_queue.rs","byte_start":349841,"byte_end":349858,"line_start":112,"line_end":112,"column_start":6,"column_end":23},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":612},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\checker.rs","byte_start":356608,"byte_end":356620,"line_start":136,"line_end":136,"column_start":18,"column_end":30},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1956},"to":{"krate":2,"index":2033}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\checker.rs","byte_start":356702,"byte_end":356714,"line_start":142,"line_end":142,"column_start":6,"column_end":18},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1956},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\checker.rs","byte_start":357643,"byte_end":357655,"line_start":167,"line_end":167,"column_start":18,"column_end":30},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1977},"to":{"krate":2,"index":2033}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\checker.rs","byte_start":358114,"byte_end":358126,"line_start":187,"line_end":187,"column_start":6,"column_end":18},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1977},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\checker.rs","byte_start":367809,"byte_end":367816,"line_start":464,"line_end":464,"column_start":6,"column_end":13},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":2020},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\checker.rs","byte_start":373512,"byte_end":373526,"line_start":624,"line_end":624,"column_start":6,"column_end":20},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":680},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":378444,"byte_end":378447,"line_start":45,"line_end":45,"column_start":46,"column_end":49},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":2028},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":381526,"byte_end":381529,"line_start":188,"line_end":188,"column_start":61,"column_end":64},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":2028},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":382348,"byte_end":382351,"line_start":211,"line_end":211,"column_start":20,"column_end":23},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":2028},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":382496,"byte_end":382503,"line_start":218,"line_end":218,"column_start":26,"column_end":33},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":744},"to":{"krate":2,"index":5311}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":383418,"byte_end":383423,"line_start":254,"line_end":254,"column_start":53,"column_end":58},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":2034},"to":{"krate":2,"index":5217}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":383654,"byte_end":383659,"line_start":265,"line_end":265,"column_start":34,"column_end":39},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":2034},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":384417,"byte_end":384427,"line_start":302,"line_end":302,"column_start":49,"column_end":59},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":774},"to":{"krate":2,"index":5311}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":385036,"byte_end":385046,"line_start":324,"line_end":324,"column_start":16,"column_end":26},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":782},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":386813,"byte_end":386823,"line_start":388,"line_end":388,"column_start":32,"column_end":42},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":782},"to":{"krate":2,"index":2323}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":387005,"byte_end":387015,"line_start":398,"line_end":398,"column_start":35,"column_end":45},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":782},"to":{"krate":2,"index":2327}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":387182,"byte_end":387192,"line_start":407,"line_end":407,"column_start":26,"column_end":36},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":782},"to":{"krate":2,"index":1742}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":391155,"byte_end":391165,"line_start":531,"line_end":531,"column_start":43,"column_end":53},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":782},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":392212,"byte_end":392220,"line_start":561,"line_end":561,"column_start":6,"column_end":14},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":2263},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":395097,"byte_end":395100,"line_start":647,"line_end":647,"column_start":6,"column_end":9},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":2293},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":398117,"byte_end":398120,"line_start":744,"line_end":744,"column_start":21,"column_end":24},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":2293},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":398839,"byte_end":398842,"line_start":769,"line_end":769,"column_start":6,"column_end":9},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":2293},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":399081,"byte_end":399088,"line_start":778,"line_end":778,"column_start":6,"column_end":13},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":2316},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":399864,"byte_end":399871,"line_start":812,"line_end":812,"column_start":21,"column_end":28},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":2316},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":400158,"byte_end":400161,"line_start":823,"line_end":823,"column_start":6,"column_end":9},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":2293},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":400434,"byte_end":400444,"line_start":833,"line_end":833,"column_start":6,"column_end":16},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":2339},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":401138,"byte_end":401148,"line_start":864,"line_end":864,"column_start":21,"column_end":31},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":2339},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":401264,"byte_end":401267,"line_start":870,"line_end":870,"column_start":6,"column_end":9},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":2293},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":403737,"byte_end":403745,"line_start":925,"line_end":925,"column_start":79,"column_end":87},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":2362},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":404445,"byte_end":404454,"line_start":952,"line_end":952,"column_start":6,"column_end":15},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":2398},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":405074,"byte_end":405083,"line_start":975,"line_end":975,"column_start":21,"column_end":30},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":2398},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":405640,"byte_end":405657,"line_start":992,"line_end":992,"column_start":10,"column_end":27},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":905},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":407558,"byte_end":407565,"line_start":1051,"line_end":1051,"column_start":6,"column_end":13},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":2423},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":408592,"byte_end":408604,"line_start":1089,"line_end":1089,"column_start":6,"column_end":18},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":2430},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":409200,"byte_end":409216,"line_start":1112,"line_end":1112,"column_start":6,"column_end":22},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":926},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":410173,"byte_end":410180,"line_start":1140,"line_end":1140,"column_start":6,"column_end":13},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":2441},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":410475,"byte_end":410491,"line_start":1155,"line_end":1155,"column_start":6,"column_end":22},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":926},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":414651,"byte_end":414666,"line_start":1249,"line_end":1249,"column_start":6,"column_end":21},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":2448},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":421645,"byte_end":421650,"line_start":1421,"line_end":1421,"column_start":6,"column_end":11},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":2466},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":422390,"byte_end":422395,"line_start":1456,"line_end":1456,"column_start":21,"column_end":26},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":2466},"to":{"krate":2,"index":1807}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":423541,"byte_end":423550,"line_start":1488,"line_end":1488,"column_start":6,"column_end":15},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":2493},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":425385,"byte_end":425394,"line_start":1557,"line_end":1557,"column_start":21,"column_end":30},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":2493},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":427353,"byte_end":427362,"line_start":1606,"line_end":1606,"column_start":21,"column_end":30},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":2516},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":427502,"byte_end":427511,"line_start":1612,"line_end":1612,"column_start":6,"column_end":15},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":2516},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":429455,"byte_end":429464,"line_start":1672,"line_end":1672,"column_start":6,"column_end":15},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":2516},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":430299,"byte_end":430312,"line_start":1691,"line_end":1691,"column_start":21,"column_end":34},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":2543},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":432472,"byte_end":432488,"line_start":1737,"line_end":1737,"column_start":21,"column_end":37},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":2568},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":433179,"byte_end":433197,"line_start":1760,"line_end":1760,"column_start":21,"column_end":39},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":2578},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":433306,"byte_end":433324,"line_start":1766,"line_end":1766,"column_start":6,"column_end":24},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":2578},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":435718,"byte_end":435734,"line_start":1835,"line_end":1835,"column_start":21,"column_end":37},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":2583},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":435840,"byte_end":435856,"line_start":1841,"line_end":1841,"column_start":6,"column_end":22},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":2583},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":438618,"byte_end":438627,"line_start":1918,"line_end":1918,"column_start":21,"column_end":30},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":2588},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":438858,"byte_end":438867,"line_start":1927,"line_end":1927,"column_start":6,"column_end":15},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":2588},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":443398,"byte_end":443407,"line_start":2045,"line_end":2045,"column_start":21,"column_end":30},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":2597},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":443666,"byte_end":443675,"line_start":2057,"line_end":2057,"column_start":6,"column_end":15},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":2597},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":444541,"byte_end":444553,"line_start":2085,"line_end":2085,"column_start":6,"column_end":18},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":2603},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":444692,"byte_end":444704,"line_start":2091,"line_end":2091,"column_start":21,"column_end":33},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":2603},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":448889,"byte_end":448896,"line_start":2179,"line_end":2179,"column_start":6,"column_end":13},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":2613},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\data_structures.rs","byte_start":449991,"byte_end":449998,"line_start":2220,"line_end":2220,"column_start":21,"column_end":28},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":2613},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\inst_stream.rs","byte_start":459053,"byte_end":459065,"line_start":45,"line_end":45,"column_start":6,"column_end":18},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":2636},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\inst_stream.rs","byte_start":463153,"byte_end":463161,"line_start":159,"line_end":159,"column_start":6,"column_end":14},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":2658},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\inst_stream.rs","byte_start":463854,"byte_end":463866,"line_start":182,"line_end":182,"column_start":6,"column_end":18},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":2695},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\inst_stream.rs","byte_start":464470,"byte_end":464493,"line_start":204,"line_end":204,"column_start":6,"column_end":29},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":2724},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\linear_scan\\analysis.rs","byte_start":505882,"byte_end":505891,"line_start":24,"line_end":24,"column_start":21,"column_end":30},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":2729},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\linear_scan\\analysis.rs","byte_start":506028,"byte_end":506037,"line_start":30,"line_end":30,"column_start":6,"column_end":15},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":2729},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\linear_scan\\assign_registers.rs","byte_start":539392,"byte_end":539401,"line_start":35,"line_end":35,"column_start":21,"column_end":30},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":2762},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\linear_scan\\assign_registers.rs","byte_start":540205,"byte_end":540220,"line_start":56,"line_end":56,"column_start":6,"column_end":21},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1252},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\linear_scan\\assign_registers.rs","byte_start":547224,"byte_end":547239,"line_start":259,"line_end":259,"column_start":15,"column_end":30},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":2776},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\linear_scan\\assign_registers.rs","byte_start":548529,"byte_end":548548,"line_start":305,"line_end":305,"column_start":43,"column_end":62},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1270},"to":{"krate":2,"index":5311}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\linear_scan\\assign_registers.rs","byte_start":549002,"byte_end":549017,"line_start":322,"line_end":322,"column_start":38,"column_end":53},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":2776},"to":{"krate":2,"index":2323}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\linear_scan\\assign_registers.rs","byte_start":549432,"byte_end":549447,"line_start":334,"line_end":334,"column_start":41,"column_end":56},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":2776},"to":{"krate":2,"index":2327}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\linear_scan\\assign_registers.rs","byte_start":550120,"byte_end":550133,"line_start":355,"line_end":355,"column_start":6,"column_end":19},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1287},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\linear_scan\\assign_registers.rs","byte_start":551060,"byte_end":551073,"line_start":384,"line_end":384,"column_start":25,"column_end":38},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1294},"to":{"krate":2,"index":1770}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\linear_scan\\assign_registers.rs","byte_start":551190,"byte_end":551203,"line_start":390,"line_end":390,"column_start":18,"column_end":31},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1294},"to":{"krate":2,"index":1775}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\linear_scan\\assign_registers.rs","byte_start":551233,"byte_end":551246,"line_start":392,"line_end":392,"column_start":26,"column_end":39},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1294},"to":{"krate":2,"index":1807}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\linear_scan\\assign_registers.rs","byte_start":551539,"byte_end":551552,"line_start":401,"line_end":401,"column_start":19,"column_end":32},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1294},"to":{"krate":2,"index":1796}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\linear_scan\\assign_registers.rs","byte_start":551746,"byte_end":551764,"line_start":412,"line_end":412,"column_start":6,"column_end":24},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1305},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\linear_scan\\assign_registers.rs","byte_start":553211,"byte_end":553216,"line_start":459,"line_end":459,"column_start":23,"column_end":28},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1312},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\linear_scan\\resolve_moves.rs","byte_start":586962,"byte_end":586971,"line_start":186,"line_end":186,"column_start":6,"column_end":15},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":2795},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\linear_scan\\resolve_moves.rs","byte_start":600175,"byte_end":600186,"line_start":558,"line_end":558,"column_start":6,"column_end":17},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":2806},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\linear_scan\\resolve_moves.rs","byte_start":600433,"byte_end":600439,"line_start":572,"line_end":572,"column_start":21,"column_end":27},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1411},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\linear_scan\\resolve_moves.rs","byte_start":600837,"byte_end":600843,"line_start":585,"line_end":585,"column_start":6,"column_end":12},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":1411},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\linear_scan\\mod.rs","byte_start":483084,"byte_end":483094,"line_start":45,"line_end":45,"column_start":15,"column_end":25},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":2819},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\linear_scan\\mod.rs","byte_start":484264,"byte_end":484281,"line_start":88,"line_end":88,"column_start":27,"column_end":44},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":2852},"to":{"krate":2,"index":2033}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\linear_scan\\mod.rs","byte_start":485401,"byte_end":485418,"line_start":120,"line_end":120,"column_start":21,"column_end":38},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":2852},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\linear_scan\\mod.rs","byte_start":485775,"byte_end":485780,"line_start":134,"line_end":134,"column_start":21,"column_end":26},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":2860},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\linear_scan\\mod.rs","byte_start":486000,"byte_end":486013,"line_start":146,"line_end":146,"column_start":23,"column_end":36},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":2873},"to":{"krate":2,"index":6611}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\linear_scan\\mod.rs","byte_start":486800,"byte_end":486815,"line_start":178,"line_end":178,"column_start":23,"column_end":38},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":2878},"to":{"krate":2,"index":6611}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\linear_scan\\mod.rs","byte_start":487184,"byte_end":487199,"line_start":192,"line_end":192,"column_start":6,"column_end":21},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":2878},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\linear_scan\\mod.rs","byte_start":488132,"byte_end":488139,"line_start":228,"line_end":228,"column_start":21,"column_end":28},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":2890},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\linear_scan\\mod.rs","byte_start":488689,"byte_end":488696,"line_start":252,"line_end":252,"column_start":6,"column_end":13},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":2890},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\linear_scan\\mod.rs","byte_start":489549,"byte_end":489557,"line_start":299,"line_end":299,"column_start":6,"column_end":14},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":2914},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\linear_scan\\mod.rs","byte_start":490045,"byte_end":490053,"line_start":320,"line_end":320,"column_start":23,"column_end":31},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":2914},"to":{"krate":2,"index":6611}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\linear_scan\\mod.rs","byte_start":490462,"byte_end":490471,"line_start":336,"line_end":336,"column_start":6,"column_end":15},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":1469},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\reg_maps.rs","byte_start":612454,"byte_end":612474,"line_start":26,"line_end":26,"column_start":6,"column_end":26},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":2928},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\reg_maps.rs","byte_start":617005,"byte_end":617025,"line_start":145,"line_end":145,"column_start":25,"column_end":45},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":2928},"to":{"krate":0,"index":1728}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\reg_maps.rs","byte_start":623384,"byte_end":623405,"line_start":310,"line_end":310,"column_start":6,"column_end":27},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":2934},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\reg_maps.rs","byte_start":624195,"byte_end":624216,"line_start":335,"line_end":335,"column_start":25,"column_end":46},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":2934},"to":{"krate":0,"index":1728}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\snapshot.rs","byte_start":626369,"byte_end":626379,"line_start":58,"line_end":58,"column_start":6,"column_end":16},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":2980},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\snapshot.rs","byte_start":630006,"byte_end":630016,"line_start":170,"line_end":170,"column_start":19,"column_end":29},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":2969},"to":{"krate":0,"index":1737}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\sparse_set.rs","byte_start":636054,"byte_end":636064,"line_start":53,"line_end":53,"column_start":9,"column_end":19},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":1597},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\sparse_set.rs","byte_start":640925,"byte_end":640935,"line_start":197,"line_end":197,"column_start":9,"column_end":19},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":1597},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\sparse_set.rs","byte_start":654577,"byte_end":654587,"line_start":575,"line_end":575,"column_start":24,"column_end":34},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":1597},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\sparse_set.rs","byte_start":655428,"byte_end":655438,"line_start":599,"line_end":599,"column_start":19,"column_end":29},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":1597},"to":{"krate":2,"index":1742}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\sparse_set.rs","byte_start":656196,"byte_end":656206,"line_start":629,"line_end":629,"column_start":16,"column_end":26},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":1597},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\sparse_set.rs","byte_start":656608,"byte_end":656622,"line_start":643,"line_end":643,"column_start":33,"column_end":47},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":1631},"to":{"krate":2,"index":5311}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\union_find.rs","byte_start":667543,"byte_end":667552,"line_start":83,"line_end":83,"column_start":20,"column_end":29},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":1657},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\union_find.rs","byte_start":675478,"byte_end":675487,"line_start":275,"line_end":275,"column_start":20,"column_end":29},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":1657},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\union_find.rs","byte_start":682656,"byte_end":682677,"line_start":430,"line_end":430,"column_start":20,"column_end":41},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":1669},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\union_find.rs","byte_start":684216,"byte_end":684237,"line_start":468,"line_end":468,"column_start":20,"column_end":41},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":1669},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\union_find.rs","byte_start":685039,"byte_end":685067,"line_start":485,"line_end":485,"column_start":37,"column_end":65},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":1680},"to":{"krate":2,"index":5311}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\union_find.rs","byte_start":685853,"byte_end":685874,"line_start":511,"line_end":511,"column_start":20,"column_end":41},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":1669},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\union_find.rs","byte_start":686115,"byte_end":686145,"line_start":520,"line_end":520,"column_start":37,"column_end":67},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":1694},"to":{"krate":2,"index":5311}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":6907,"byte_end":6912,"line_start":159,"line_end":159,"column_start":32,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":6606},"to":{"krate":0,"index":1728}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":17447,"byte_end":17460,"line_start":406,"line_end":406,"column_start":23,"column_end":36},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":3101},"to":{"krate":2,"index":6611}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":17791,"byte_end":17800,"line_start":421,"line_end":421,"column_start":21,"column_end":30},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":3121},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":18539,"byte_end":18546,"line_start":442,"line_end":442,"column_start":27,"column_end":34},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":3130},"to":{"krate":2,"index":2033}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\regalloc-0.0.30\\src\\lib.rs","byte_start":18730,"byte_end":18737,"line_start":451,"line_end":451,"column_start":21,"column_end":28},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":3130},"to":{"krate":2,"index":6606}}]}