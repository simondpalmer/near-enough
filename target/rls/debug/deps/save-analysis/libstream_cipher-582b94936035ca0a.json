{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stream-cipher-0.3.2","program":"C:\\Users\\Simon Palmer\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","stream_cipher","C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stream-cipher-0.3.2\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=582b94936035ca0a","-C","extra-filename=-582b94936035ca0a","--out-dir","c:\\Users\\Simon Palmer\\Documents\\Programming\\near_enough\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\Simon Palmer\\Documents\\Programming\\near_enough\\target\\rls\\debug\\deps","--extern","generic_array=c:\\Users\\Simon Palmer\\Documents\\Programming\\near_enough\\target\\rls\\debug\\deps\\libgeneric_array-71491e6d66969a0d.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\Simon Palmer\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\Simon Palmer\\Documents\\Programming\\near_enough\\target\\rls\\debug\\deps\\libstream_cipher-582b94936035ca0a.rmeta"},"prelude":{"crate_id":{"name":"stream_cipher","disambiguator":[4570868669768130196,14678600782208099950]},"crate_root":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stream-cipher-0.3.2\\src","external_crates":[{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stream-cipher-0.3.2\\src\\lib.rs","num":1,"id":{"name":"core","disambiguator":[1322159461575500717,8297198428669169011]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stream-cipher-0.3.2\\src\\lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[2376346800744392852,12342541482992122530]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stream-cipher-0.3.2\\src\\lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[14946502858004023242,6637215598610016319]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stream-cipher-0.3.2\\src\\lib.rs","num":4,"id":{"name":"generic_array","disambiguator":[17590995694778393852,16627388552888634049]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stream-cipher-0.3.2\\src\\lib.rs","num":5,"id":{"name":"typenum","disambiguator":[8032749677989784741,11160132551178633337]}}],"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stream-cipher-0.3.2\\src\\lib.rs","byte_start":0,"byte_end":3553,"line_start":1,"line_end":112,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":36},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stream-cipher-0.3.2\\src\\lib.rs","byte_start":599,"byte_end":608,"line_start":22,"line_end":22,"column_start":18,"column_end":27},"alias_span":null,"name":"LoopError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":37},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stream-cipher-0.3.2\\src\\lib.rs","byte_start":599,"byte_end":608,"line_start":22,"line_end":22,"column_start":18,"column_end":27},"alias_span":null,"name":"LoopError","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":43},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stream-cipher-0.3.2\\src\\lib.rs","byte_start":610,"byte_end":631,"line_start":22,"line_end":22,"column_start":29,"column_end":50},"alias_span":null,"name":"InvalidKeyNonceLength","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":44},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stream-cipher-0.3.2\\src\\lib.rs","byte_start":610,"byte_end":631,"line_start":22,"line_end":22,"column_start":29,"column_end":50},"alias_span":null,"name":"InvalidKeyNonceLength","value":"","parent":{"krate":0,"index":17}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stream-cipher-0.3.2\\src\\lib.rs","byte_start":0,"byte_end":3553,"line_start":1,"line_end":112,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stream-cipher-0.3.2\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":58},{"krate":0,"index":17},{"krate":0,"index":60},{"krate":0,"index":18},{"krate":0,"index":23},{"krate":0,"index":26},{"krate":0,"index":29},{"krate":0,"index":32}],"decl_id":null,"docs":" This crate defines a set of traits which define functionality of\n stream ciphers.","sig":null,"attributes":[{"value":"/ This crate defines a set of traits which define functionality of","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stream-cipher-0.3.2\\src\\lib.rs","byte_start":0,"byte_end":68,"line_start":1,"line_end":1,"column_start":1,"column_end":69}},{"value":"/ stream ciphers.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stream-cipher-0.3.2\\src\\lib.rs","byte_start":69,"byte_end":88,"line_start":2,"line_end":2,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stream-cipher-0.3.2\\src\\lib.rs","byte_start":89,"byte_end":92,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ See [RustCrypto/stream-ciphers](https://github.com/RustCrypto/stream-ciphers)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stream-cipher-0.3.2\\src\\lib.rs","byte_start":93,"byte_end":174,"line_start":4,"line_end":4,"column_start":1,"column_end":82}},{"value":"/ for ciphers implementation.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stream-cipher-0.3.2\\src\\lib.rs","byte_start":175,"byte_end":206,"line_start":5,"line_end":5,"column_start":1,"column_end":32}},{"value":"no_std","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stream-cipher-0.3.2\\src\\lib.rs","byte_start":207,"byte_end":217,"line_start":6,"line_end":6,"column_start":1,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":36},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stream-cipher-0.3.2\\src\\errors.rs","byte_start":3732,"byte_end":3741,"line_start":7,"line_end":7,"column_start":12,"column_end":21},"name":"LoopError","qualname":"::errors::LoopError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error which notifies that stream cipher has reached the end of a keystream.\n","sig":null,"attributes":[{"value":"/ Error which notifies that stream cipher has reached the end of a keystream.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stream-cipher-0.3.2\\src\\errors.rs","byte_start":3611,"byte_end":3690,"line_start":5,"line_end":5,"column_start":1,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":43},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stream-cipher-0.3.2\\src\\errors.rs","byte_start":4184,"byte_end":4205,"line_start":25,"line_end":25,"column_start":12,"column_end":33},"name":"InvalidKeyNonceLength","qualname":"::errors::InvalidKeyNonceLength","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error which notifies that key or/and nonce used in stream cipher\n initialization had an invalid length.\n","sig":null,"attributes":[{"value":"/ Error which notifies that key or/and nonce used in stream cipher","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stream-cipher-0.3.2\\src\\errors.rs","byte_start":4032,"byte_end":4100,"line_start":22,"line_end":22,"column_start":1,"column_end":69}},{"value":"/ initialization had an invalid length.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stream-cipher-0.3.2\\src\\errors.rs","byte_start":4101,"byte_end":4142,"line_start":23,"line_end":23,"column_start":1,"column_end":42}}]},{"kind":"Trait","id":{"krate":0,"index":18},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stream-cipher-0.3.2\\src\\lib.rs","byte_start":756,"byte_end":771,"line_start":27,"line_end":27,"column_start":11,"column_end":26},"name":"NewStreamCipher","qualname":"::NewStreamCipher","value":"NewStreamCipher: Sized","parent":null,"children":[{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22}],"decl_id":null,"docs":" Stream cipher creation trait.","sig":null,"attributes":[{"value":"/ Stream cipher creation trait.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stream-cipher-0.3.2\\src\\lib.rs","byte_start":635,"byte_end":668,"line_start":24,"line_end":24,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stream-cipher-0.3.2\\src\\lib.rs","byte_start":669,"byte_end":672,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ It can be used for creation of synchronous and asynchronous ciphers.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stream-cipher-0.3.2\\src\\lib.rs","byte_start":673,"byte_end":745,"line_start":26,"line_end":26,"column_start":1,"column_end":73}}]},{"kind":"Type","id":{"krate":0,"index":19},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stream-cipher-0.3.2\\src\\lib.rs","byte_start":816,"byte_end":823,"line_start":29,"line_end":29,"column_start":10,"column_end":17},"name":"KeySize","qualname":"::NewStreamCipher::KeySize","value":"type KeySize: ArrayLength<u8>;","parent":{"krate":0,"index":18},"children":[],"decl_id":null,"docs":" Key size in bytes\n","sig":null,"attributes":[{"value":"/ Key size in bytes","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stream-cipher-0.3.2\\src\\lib.rs","byte_start":785,"byte_end":806,"line_start":28,"line_end":28,"column_start":5,"column_end":26}}]},{"kind":"Type","id":{"krate":0,"index":20},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stream-cipher-0.3.2\\src\\lib.rs","byte_start":879,"byte_end":888,"line_start":31,"line_end":31,"column_start":10,"column_end":19},"name":"NonceSize","qualname":"::NewStreamCipher::NonceSize","value":"type NonceSize: ArrayLength<u8>;","parent":{"krate":0,"index":18},"children":[],"decl_id":null,"docs":" Nonce size in bytes\n","sig":null,"attributes":[{"value":"/ Nonce size in bytes","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stream-cipher-0.3.2\\src\\lib.rs","byte_start":846,"byte_end":869,"line_start":30,"line_end":30,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":21},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stream-cipher-0.3.2\\src\\lib.rs","byte_start":993,"byte_end":996,"line_start":34,"line_end":34,"column_start":8,"column_end":11},"name":"new","qualname":"::NewStreamCipher::new","value":"pub fn new(&GenericArray<u8, Self::KeySize>,\n           &GenericArray<u8, Self::NonceSize>) -> Self","parent":{"krate":0,"index":18},"children":[],"decl_id":null,"docs":" Create new stream cipher instance from variable length key and nonce.\n","sig":null,"attributes":[{"value":"/ Create new stream cipher instance from variable length key and nonce.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stream-cipher-0.3.2\\src\\lib.rs","byte_start":912,"byte_end":985,"line_start":33,"line_end":33,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":22},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stream-cipher-0.3.2\\src\\lib.rs","byte_start":1211,"byte_end":1218,"line_start":41,"line_end":41,"column_start":8,"column_end":15},"name":"new_var","qualname":"::NewStreamCipher::new_var","value":"pub fn new_var(&[u8], &[u8]) -> Result<Self, InvalidKeyNonceLength>","parent":{"krate":0,"index":18},"children":[],"decl_id":null,"docs":" Create new stream cipher instance from variable length key and nonce.\n","sig":null,"attributes":[{"value":"/ Create new stream cipher instance from variable length key and nonce.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stream-cipher-0.3.2\\src\\lib.rs","byte_start":1116,"byte_end":1189,"line_start":39,"line_end":39,"column_start":5,"column_end":78}},{"value":"inline","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stream-cipher-0.3.2\\src\\lib.rs","byte_start":1194,"byte_end":1203,"line_start":40,"line_end":40,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":23},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stream-cipher-0.3.2\\src\\lib.rs","byte_start":1701,"byte_end":1717,"line_start":55,"line_end":55,"column_start":11,"column_end":27},"name":"SyncStreamCipher","qualname":"::SyncStreamCipher","value":"SyncStreamCipher","parent":null,"children":[{"krate":0,"index":24},{"krate":0,"index":25}],"decl_id":null,"docs":" Synchronous stream cipher core trait.\n","sig":null,"attributes":[{"value":"/ Synchronous stream cipher core trait.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stream-cipher-0.3.2\\src\\lib.rs","byte_start":1649,"byte_end":1690,"line_start":54,"line_end":54,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":24},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stream-cipher-0.3.2\\src\\lib.rs","byte_start":2060,"byte_end":2075,"line_start":65,"line_end":65,"column_start":8,"column_end":23},"name":"apply_keystream","qualname":"::SyncStreamCipher::apply_keystream","value":"pub fn apply_keystream(&mut Self, &mut [u8])","parent":{"krate":0,"index":23},"children":[],"decl_id":null,"docs":" Apply keystream to the data.","sig":null,"attributes":[{"value":"/ Apply keystream to the data.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stream-cipher-0.3.2\\src\\lib.rs","byte_start":1724,"byte_end":1756,"line_start":56,"line_end":56,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stream-cipher-0.3.2\\src\\lib.rs","byte_start":1761,"byte_end":1764,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ It will XOR generated keystream with the data, which can be both","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stream-cipher-0.3.2\\src\\lib.rs","byte_start":1769,"byte_end":1837,"line_start":58,"line_end":58,"column_start":5,"column_end":73}},{"value":"/ encryption and decryption.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stream-cipher-0.3.2\\src\\lib.rs","byte_start":1842,"byte_end":1872,"line_start":59,"line_end":59,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stream-cipher-0.3.2\\src\\lib.rs","byte_start":1877,"byte_end":1880,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stream-cipher-0.3.2\\src\\lib.rs","byte_start":1885,"byte_end":1897,"line_start":61,"line_end":61,"column_start":5,"column_end":17}},{"value":"/ If end of the keystream will be reached with the given data length,","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stream-cipher-0.3.2\\src\\lib.rs","byte_start":1902,"byte_end":1973,"line_start":62,"line_end":62,"column_start":5,"column_end":76}},{"value":"/ method will panic without modifying the provided `data`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stream-cipher-0.3.2\\src\\lib.rs","byte_start":1978,"byte_end":2038,"line_start":63,"line_end":63,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stream-cipher-0.3.2\\src\\lib.rs","byte_start":2043,"byte_end":2052,"line_start":64,"line_end":64,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":25},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stream-cipher-0.3.2\\src\\lib.rs","byte_start":2525,"byte_end":2544,"line_start":77,"line_end":77,"column_start":8,"column_end":27},"name":"try_apply_keystream","qualname":"::SyncStreamCipher::try_apply_keystream","value":"pub fn try_apply_keystream(&mut Self, &mut [u8]) -> Result<(), LoopError>","parent":{"krate":0,"index":23},"children":[],"decl_id":null,"docs":" Apply keystream to the data, but return an error if end of a keystream\n will be reached.","sig":null,"attributes":[{"value":"/ Apply keystream to the data, but return an error if end of a keystream","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stream-cipher-0.3.2\\src\\lib.rs","byte_start":2254,"byte_end":2328,"line_start":72,"line_end":72,"column_start":5,"column_end":79}},{"value":"/ will be reached.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stream-cipher-0.3.2\\src\\lib.rs","byte_start":2333,"byte_end":2353,"line_start":73,"line_end":73,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stream-cipher-0.3.2\\src\\lib.rs","byte_start":2358,"byte_end":2361,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ If end of the keystream will be achieved with the given data length,","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stream-cipher-0.3.2\\src\\lib.rs","byte_start":2366,"byte_end":2438,"line_start":75,"line_end":75,"column_start":5,"column_end":77}},{"value":"/ method will return `Err(LoopError)` without modifying provided `data`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stream-cipher-0.3.2\\src\\lib.rs","byte_start":2443,"byte_end":2517,"line_start":76,"line_end":76,"column_start":5,"column_end":79}}]},{"kind":"Trait","id":{"krate":0,"index":26},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stream-cipher-0.3.2\\src\\lib.rs","byte_start":2657,"byte_end":2677,"line_start":81,"line_end":81,"column_start":11,"column_end":31},"name":"SyncStreamCipherSeek","qualname":"::SyncStreamCipherSeek","value":"SyncStreamCipherSeek","parent":null,"children":[{"krate":0,"index":27},{"krate":0,"index":28}],"decl_id":null,"docs":" Synchronous stream cipher seeking trait.\n","sig":null,"attributes":[{"value":"/ Synchronous stream cipher seeking trait.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stream-cipher-0.3.2\\src\\lib.rs","byte_start":2602,"byte_end":2646,"line_start":80,"line_end":80,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stream-cipher-0.3.2\\src\\lib.rs","byte_start":2763,"byte_end":2774,"line_start":83,"line_end":83,"column_start":8,"column_end":19},"name":"current_pos","qualname":"::SyncStreamCipherSeek::current_pos","value":"pub fn current_pos(&Self) -> u64","parent":{"krate":0,"index":26},"children":[],"decl_id":null,"docs":" Return current position of a keystream in bytes from the beginning.\n","sig":null,"attributes":[{"value":"/ Return current position of a keystream in bytes from the beginning.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stream-cipher-0.3.2\\src\\lib.rs","byte_start":2684,"byte_end":2755,"line_start":82,"line_end":82,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stream-cipher-0.3.2\\src\\lib.rs","byte_start":2850,"byte_end":2854,"line_start":86,"line_end":86,"column_start":8,"column_end":12},"name":"seek","qualname":"::SyncStreamCipherSeek::seek","value":"pub fn seek(&mut Self, u64)","parent":{"krate":0,"index":26},"children":[],"decl_id":null,"docs":" Seek keystream to the given `pos` in bytes.\n","sig":null,"attributes":[{"value":"/ Seek keystream to the given `pos` in bytes.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stream-cipher-0.3.2\\src\\lib.rs","byte_start":2795,"byte_end":2842,"line_start":85,"line_end":85,"column_start":5,"column_end":52}}]},{"kind":"Trait","id":{"krate":0,"index":29},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stream-cipher-0.3.2\\src\\lib.rs","byte_start":3079,"byte_end":3091,"line_start":94,"line_end":94,"column_start":11,"column_end":23},"name":"StreamCipher","qualname":"::StreamCipher","value":"StreamCipher","parent":null,"children":[{"krate":0,"index":30},{"krate":0,"index":31}],"decl_id":null,"docs":" Stream cipher core trait which covers both synchronous and asynchronous\n ciphers.","sig":null,"attributes":[{"value":"/ Stream cipher core trait which covers both synchronous and asynchronous","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stream-cipher-0.3.2\\src\\lib.rs","byte_start":2880,"byte_end":2955,"line_start":89,"line_end":89,"column_start":1,"column_end":76}},{"value":"/ ciphers.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stream-cipher-0.3.2\\src\\lib.rs","byte_start":2956,"byte_end":2968,"line_start":90,"line_end":90,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stream-cipher-0.3.2\\src\\lib.rs","byte_start":2969,"byte_end":2972,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ Note that for synchronous ciphers `encrypt` and `decrypt` are equivalent to","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stream-cipher-0.3.2\\src\\lib.rs","byte_start":2973,"byte_end":3052,"line_start":92,"line_end":92,"column_start":1,"column_end":80}},{"value":"/ each other.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stream-cipher-0.3.2\\src\\lib.rs","byte_start":3053,"byte_end":3068,"line_start":93,"line_end":93,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stream-cipher-0.3.2\\src\\lib.rs","byte_start":3132,"byte_end":3139,"line_start":96,"line_end":96,"column_start":8,"column_end":15},"name":"encrypt","qualname":"::StreamCipher::encrypt","value":"pub fn encrypt(&mut Self, &mut [u8])","parent":{"krate":0,"index":29},"children":[],"decl_id":null,"docs":" Encrypt data in place.\n","sig":null,"attributes":[{"value":"/ Encrypt data in place.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stream-cipher-0.3.2\\src\\lib.rs","byte_start":3098,"byte_end":3124,"line_start":95,"line_end":95,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stream-cipher-0.3.2\\src\\lib.rs","byte_start":3208,"byte_end":3215,"line_start":99,"line_end":99,"column_start":8,"column_end":15},"name":"decrypt","qualname":"::StreamCipher::decrypt","value":"pub fn decrypt(&mut Self, &mut [u8])","parent":{"krate":0,"index":29},"children":[],"decl_id":null,"docs":" Decrypt data in place.\n","sig":null,"attributes":[{"value":"/ Decrypt data in place.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stream-cipher-0.3.2\\src\\lib.rs","byte_start":3174,"byte_end":3200,"line_start":98,"line_end":98,"column_start":5,"column_end":31}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stream-cipher-0.3.2\\src\\errors.rs","byte_start":3766,"byte_end":3775,"line_start":9,"line_end":9,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":12}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stream-cipher-0.3.2\\src\\errors.rs","byte_start":4230,"byte_end":4251,"line_start":27,"line_end":27,"column_start":23,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":14}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stream-cipher-0.3.2\\src\\lib.rs","byte_start":3291,"byte_end":3292,"line_start":102,"line_end":102,"column_start":44,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":34},{"krate":0,"index":35}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stream-cipher-0.3.2\\src\\errors.rs","byte_start":3766,"byte_end":3775,"line_start":9,"line_end":9,"column_start":23,"column_end":32},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":36},"to":{"krate":1,"index":6611}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stream-cipher-0.3.2\\src\\errors.rs","byte_start":4230,"byte_end":4251,"line_start":27,"line_end":27,"column_start":23,"column_end":44},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":43},"to":{"krate":1,"index":6611}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stream-cipher-0.3.2\\src\\lib.rs","byte_start":773,"byte_end":778,"line_start":27,"line_end":27,"column_start":28,"column_end":33},"kind":"SuperTrait","from":{"krate":1,"index":2050},"to":{"krate":0,"index":18}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stream-cipher-0.3.2\\src\\lib.rs","byte_start":3291,"byte_end":3292,"line_start":102,"line_end":102,"column_start":44,"column_end":45},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":33},"to":{"krate":0,"index":29}}]}