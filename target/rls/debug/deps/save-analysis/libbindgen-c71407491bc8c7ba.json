{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0","program":"C:\\Users\\Simon Palmer\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","bindgen","--edition=2018","C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata,link","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"clap\"","--cfg","feature=\"default\"","--cfg","feature=\"env_logger\"","--cfg","feature=\"log\"","--cfg","feature=\"logging\"","--cfg","feature=\"runtime\"","--cfg","feature=\"which\"","--cfg","feature=\"which-rustfmt\"","-C","metadata=c71407491bc8c7ba","-C","extra-filename=-c71407491bc8c7ba","--out-dir","c:\\Users\\Simon Palmer\\Documents\\Programming\\near_enough\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\Simon Palmer\\Documents\\Programming\\near_enough\\target\\rls\\debug\\deps","--extern","bitflags=c:\\Users\\Simon Palmer\\Documents\\Programming\\near_enough\\target\\rls\\debug\\deps\\libbitflags-808ca99e95faa8ae.rmeta","--extern","cexpr=c:\\Users\\Simon Palmer\\Documents\\Programming\\near_enough\\target\\rls\\debug\\deps\\libcexpr-c55bb3955b9b4ee4.rmeta","--extern","cfg_if=c:\\Users\\Simon Palmer\\Documents\\Programming\\near_enough\\target\\rls\\debug\\deps\\libcfg_if-5c9f73a40596541f.rmeta","--extern","clang_sys=c:\\Users\\Simon Palmer\\Documents\\Programming\\near_enough\\target\\rls\\debug\\deps\\libclang_sys-0f32367d9e16c695.rmeta","--extern","clap=c:\\Users\\Simon Palmer\\Documents\\Programming\\near_enough\\target\\rls\\debug\\deps\\libclap-aab9d35221af2c98.rmeta","--extern","env_logger=c:\\Users\\Simon Palmer\\Documents\\Programming\\near_enough\\target\\rls\\debug\\deps\\libenv_logger-9cc892c8dcda18be.rmeta","--extern","lazy_static=c:\\Users\\Simon Palmer\\Documents\\Programming\\near_enough\\target\\rls\\debug\\deps\\liblazy_static-a5fdf74fcdafbee9.rmeta","--extern","lazycell=c:\\Users\\Simon Palmer\\Documents\\Programming\\near_enough\\target\\rls\\debug\\deps\\liblazycell-9cee9e75041a7351.rmeta","--extern","log=c:\\Users\\Simon Palmer\\Documents\\Programming\\near_enough\\target\\rls\\debug\\deps\\liblog-32ee1782badfe805.rmeta","--extern","peeking_take_while=c:\\Users\\Simon Palmer\\Documents\\Programming\\near_enough\\target\\rls\\debug\\deps\\libpeeking_take_while-3a4d6b4d5d823261.rmeta","--extern","proc_macro2=c:\\Users\\Simon Palmer\\Documents\\Programming\\near_enough\\target\\rls\\debug\\deps\\libproc_macro2-fdd1b9b4a3a25853.rmeta","--extern","quote=c:\\Users\\Simon Palmer\\Documents\\Programming\\near_enough\\target\\rls\\debug\\deps\\libquote-745ca5327746ceee.rmeta","--extern","regex=c:\\Users\\Simon Palmer\\Documents\\Programming\\near_enough\\target\\rls\\debug\\deps\\libregex-08abe1219e15dc73.rmeta","--extern","rustc_hash=c:\\Users\\Simon Palmer\\Documents\\Programming\\near_enough\\target\\rls\\debug\\deps\\librustc_hash-26f160af6a179b45.rmeta","--extern","shlex=c:\\Users\\Simon Palmer\\Documents\\Programming\\near_enough\\target\\rls\\debug\\deps\\libshlex-bf41551ba36f599e.rmeta","--extern","which=c:\\Users\\Simon Palmer\\Documents\\Programming\\near_enough\\target\\rls\\debug\\deps\\libwhich-ed4475d93e18f49f.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\Simon Palmer\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\Simon Palmer\\Documents\\Programming\\near_enough\\target\\rls\\debug\\deps\\libbindgen-c71407491bc8c7ba.rmeta"},"prelude":{"crate_id":{"name":"bindgen","disambiguator":[11055549245808703280,16318153413169490309]},"crate_root":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src","external_crates":[{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","num":1,"id":{"name":"std","disambiguator":[2134305066550747688,1377703208702874155]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","num":2,"id":{"name":"core","disambiguator":[1322159461575500717,8297198428669169011]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[2376346800744392852,12342541482992122530]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[14946502858004023242,6637215598610016319]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[5305136910335682758,6890491777619641650]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[8079093424489733033,9678018066858265018]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[8191054904896780843,65190916132359678]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[17454577518104061478,8473922882117178851]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[14702801963282246562,3385633331338644346]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[4483555191844012602,617965746000623535]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[6496369475756502088,8603909216288097824]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","num":12,"id":{"name":"panic_unwind","disambiguator":[8790568169648576788,8899032378407077408]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","num":13,"id":{"name":"bitflags","disambiguator":[1392704293110907197,11391334008727450048]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","num":14,"id":{"name":"cfg_if","disambiguator":[4028620543521093247,9604136058939466007]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","num":15,"id":{"name":"lazy_static","disambiguator":[3859688642052445506,3338238453980340550]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","num":16,"id":{"name":"quote","disambiguator":[15379259958978490382,4663204807823798031]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","num":17,"id":{"name":"proc_macro","disambiguator":[464113763227836680,14938334670346201950]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\helpers.rs","num":18,"id":{"name":"proc_macro2","disambiguator":[16097759896510882660,18225847007030641798]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","num":19,"id":{"name":"unicode_xid","disambiguator":[7888800425705327329,12673675028785149434]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","num":20,"id":{"name":"log","disambiguator":[12208053068383589680,13765270911001947726]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","num":21,"id":{"name":"cfg_if","disambiguator":[17546772824681245586,11855302615571363660]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","num":22,"id":{"name":"cexpr","disambiguator":[2597284267338522872,4988288761858220026]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","num":23,"id":{"name":"nom","disambiguator":[11569779361485889730,20753869379267213]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","num":24,"id":{"name":"memchr","disambiguator":[9145434810360750396,8362005625021305429]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","num":25,"id":{"name":"clang_sys","disambiguator":[12149744303522415721,18075941969401002589]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","num":26,"id":{"name":"glob","disambiguator":[16918941557014016691,17538406895757302652]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","num":27,"id":{"name":"libc","disambiguator":[9664122069223230161,3589636597918261725]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","num":28,"id":{"name":"libloading","disambiguator":[15294391192627422396,5972416252618920842]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","num":29,"id":{"name":"winapi","disambiguator":[15321317202963029610,4617603017867125766]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\regex_set.rs","num":30,"id":{"name":"regex","disambiguator":[11142045069753223032,9328937549452080915]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\regex_set.rs","num":31,"id":{"name":"regex_syntax","disambiguator":[12872951256423339329,17465557160968208526]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\regex_set.rs","num":32,"id":{"name":"aho_corasick","disambiguator":[8501959943359527767,13300315929670603087]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","num":33,"id":{"name":"peeking_take_while","disambiguator":[9805489863050330875,10408366977236242839]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","num":34,"id":{"name":"lazycell","disambiguator":[10764371378934051131,3037743103745347342]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","num":35,"id":{"name":"rustc_hash","disambiguator":[2649792145332083554,15052959822837162930]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","num":36,"id":{"name":"shlex","disambiguator":[5730098591183432683,15314536881529044874]}},{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","num":37,"id":{"name":"which","disambiguator":[11369483311048265586,6117280586386491780]}}],"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":0,"byte_end":80792,"line_start":1,"line_end":2448,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":3797},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\callbacks.rs","byte_start":826767,"byte_end":826792,"line_start":3,"line_end":3,"column_start":30,"column_end":55},"alias_span":null,"name":"EnumVariantCustomBehavior","value":"","parent":{"krate":0,"index":2669}},{"kind":"Use","ref_id":{"krate":0,"index":3827},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\callbacks.rs","byte_start":826794,"byte_end":826810,"line_start":3,"line_end":3,"column_start":57,"column_end":73},"alias_span":null,"name":"EnumVariantValue","value":"","parent":{"krate":0,"index":2669}},{"kind":"Use","ref_id":{"krate":0,"index":3920},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\callbacks.rs","byte_start":826837,"byte_end":826844,"line_start":4,"line_end":4,"column_start":25,"column_end":32},"alias_span":null,"name":"IntKind","value":"","parent":{"krate":0,"index":2669}},{"kind":"Use","ref_id":{"krate":0,"index":3077},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":1996,"byte_end":2010,"line_start":75,"line_end":75,"column_start":26,"column_end":40},"alias_span":null,"name":"AliasVariation","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3053},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":2012,"byte_end":2025,"line_start":75,"line_end":75,"column_start":42,"column_end":55},"alias_span":null,"name":"EnumVariation","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3113},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":2094,"byte_end":2104,"line_start":78,"line_end":78,"column_start":5,"column_end":15},"alias_span":null,"name":"RustTarget","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":855},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":2106,"byte_end":2124,"line_start":78,"line_end":78,"column_start":17,"column_end":35},"alias_span":null,"name":"LATEST_STABLE_RUST","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3158},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":2126,"byte_end":2145,"line_start":78,"line_end":78,"column_start":37,"column_end":56},"alias_span":null,"name":"RUST_TARGET_STRINGS","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":0,"byte_end":80792,"line_start":1,"line_end":2448,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":12},{"krate":0,"index":303},{"krate":0,"index":849},{"krate":0,"index":859},{"krate":0,"index":2621},{"krate":0,"index":2638},{"krate":0,"index":2653},{"krate":0,"index":2669},{"krate":0,"index":2686},{"krate":0,"index":2687},{"krate":0,"index":2688},{"krate":0,"index":2689},{"krate":0,"index":2690},{"krate":0,"index":2691},{"krate":0,"index":2692},{"krate":0,"index":2693},{"krate":0,"index":2694},{"krate":0,"index":2695},{"krate":0,"index":2696},{"krate":0,"index":2697},{"krate":0,"index":2698},{"krate":0,"index":2699},{"krate":0,"index":2700},{"krate":0,"index":2701},{"krate":0,"index":2702},{"krate":0,"index":2703},{"krate":0,"index":2704},{"krate":0,"index":2705},{"krate":0,"index":2706},{"krate":0,"index":2707},{"krate":0,"index":2708},{"krate":0,"index":2709},{"krate":0,"index":2710},{"krate":0,"index":2711},{"krate":0,"index":2712},{"krate":0,"index":2713},{"krate":0,"index":2714},{"krate":0,"index":2715},{"krate":0,"index":2716},{"krate":0,"index":5803},{"krate":0,"index":2717},{"krate":0,"index":2718},{"krate":0,"index":2721},{"krate":0,"index":2723},{"krate":0,"index":2724},{"krate":0,"index":4397},{"krate":0,"index":4419},{"krate":0,"index":4415},{"krate":0,"index":4416},{"krate":0,"index":4412},{"krate":0,"index":4413},{"krate":0,"index":4410},{"krate":0,"index":4404},{"krate":0,"index":4402},{"krate":0,"index":4399},{"krate":0,"index":4420},{"krate":0,"index":4430},{"krate":0,"index":4432},{"krate":0,"index":4434},{"krate":0,"index":4436},{"krate":0,"index":4438},{"krate":0,"index":4450},{"krate":0,"index":4453},{"krate":0,"index":4455},{"krate":0,"index":4458},{"krate":0,"index":4460},{"krate":0,"index":4463},{"krate":0,"index":4465},{"krate":0,"index":4468},{"krate":0,"index":4470},{"krate":0,"index":4473},{"krate":0,"index":4476},{"krate":0,"index":2726},{"krate":0,"index":2733},{"krate":0,"index":4508},{"krate":0,"index":4514},{"krate":0,"index":4512},{"krate":0,"index":2735},{"krate":0,"index":2736},{"krate":0,"index":4516},{"krate":0,"index":4589},{"krate":0,"index":2879},{"krate":0,"index":2880},{"krate":0,"index":2884},{"krate":0,"index":2886},{"krate":0,"index":4602},{"krate":0,"index":4605},{"krate":0,"index":2887},{"krate":0,"index":2903},{"krate":0,"index":2904},{"krate":0,"index":2907},{"krate":0,"index":4608},{"krate":0,"index":4611},{"krate":0,"index":2913},{"krate":0,"index":4613},{"krate":0,"index":4615},{"krate":0,"index":2915}],"decl_id":null,"docs":" Generate Rust bindings for C and C++ libraries.","sig":null,"attributes":[{"value":"/ Generate Rust bindings for C and C++ libraries.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":0,"byte_end":51,"line_start":1,"line_end":1,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":52,"byte_end":55,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Provide a C/C++ header file, receive Rust FFI code to call into C/C++","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":56,"byte_end":129,"line_start":3,"line_end":3,"column_start":1,"column_end":74}},{"value":"/ functions and use types defined in the header.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":130,"byte_end":180,"line_start":4,"line_end":4,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":181,"byte_end":184,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ See the [`Builder`](./struct.Builder.html) struct for usage.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":185,"byte_end":249,"line_start":6,"line_end":6,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":250,"byte_end":253,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ See the [Users Guide](https://rust-lang.github.io/rust-bindgen/) for","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":254,"byte_end":326,"line_start":8,"line_end":8,"column_start":1,"column_end":73}},{"value":"/ additional documentation.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":327,"byte_end":356,"line_start":9,"line_end":9,"column_start":1,"column_end":30}},{"value":"deny(missing_docs)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":357,"byte_end":379,"line_start":10,"line_end":10,"column_start":1,"column_end":23}},{"value":"deny(unused_extern_crates)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":380,"byte_end":410,"line_start":11,"line_end":11,"column_start":1,"column_end":31}},{"value":"allow(non_upper_case_globals)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":498,"byte_end":531,"line_start":14,"line_end":14,"column_start":1,"column_end":34}},{"value":"recursion_limit = \"128\"","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":564,"byte_end":591,"line_start":16,"line_end":16,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":2917},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":82431,"byte_end":82437,"line_start":22,"line_end":22,"column_start":12,"column_end":18},"name":"Cursor","qualname":"::clang::Cursor","value":"Cursor {  }","parent":null,"children":[{"krate":0,"index":2918}],"decl_id":null,"docs":" A cursor into the Clang AST, pointing to an AST node.","sig":null,"attributes":[{"value":"/ A cursor into the Clang AST, pointing to an AST node.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":82260,"byte_end":82317,"line_start":18,"line_end":18,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":82318,"byte_end":82321,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ We call the AST node pointed to by the cursor the cursor's \"referent\".","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":82322,"byte_end":82396,"line_start":20,"line_end":20,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":82975,"byte_end":82978,"line_start":44,"line_end":44,"column_start":12,"column_end":15},"name":"usr","qualname":"<Cursor>::usr","value":"pub fn usr(&Self) -> Option<String>","parent":null,"children":[],"decl_id":null,"docs":" Get the Unified Symbol Resolution for this cursor's referent, if\n available.","sig":null,"attributes":[{"value":"/ Get the Unified Symbol Resolution for this cursor's referent, if","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":82794,"byte_end":82862,"line_start":40,"line_end":40,"column_start":5,"column_end":73}},{"value":"/ available.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":82867,"byte_end":82881,"line_start":41,"line_end":41,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":82886,"byte_end":82889,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ The USR can be used to compare entities across translation units.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":82894,"byte_end":82963,"line_start":43,"line_end":43,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":83240,"byte_end":83254,"line_start":54,"line_end":54,"column_start":12,"column_end":26},"name":"is_declaration","qualname":"<Cursor>::is_declaration","value":"pub fn is_declaration(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this cursor's referent a declaration?\n","sig":null,"attributes":[{"value":"/ Is this cursor's referent a declaration?","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":83184,"byte_end":83228,"line_start":53,"line_end":53,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":83394,"byte_end":83402,"line_start":59,"line_end":59,"column_start":12,"column_end":20},"name":"spelling","qualname":"<Cursor>::spelling","value":"pub fn spelling(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Get this cursor's referent's spelling.\n","sig":null,"attributes":[{"value":"/ Get this cursor's referent's spelling.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":83340,"byte_end":83382,"line_start":58,"line_end":58,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":83703,"byte_end":83715,"line_start":67,"line_end":67,"column_start":12,"column_end":24},"name":"display_name","qualname":"<Cursor>::display_name","value":"pub fn display_name(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Get this cursor's referent's display name.","sig":null,"attributes":[{"value":"/ Get this cursor's referent's display name.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":83506,"byte_end":83552,"line_start":63,"line_end":63,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":83557,"byte_end":83560,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ This is not necessarily a valid identifier. It includes extra","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":83565,"byte_end":83630,"line_start":65,"line_end":65,"column_start":5,"column_end":70}},{"value":"/ information, such as parameters for a function, etc.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":83635,"byte_end":83691,"line_start":66,"line_end":66,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":83885,"byte_end":83893,"line_start":72,"line_end":72,"column_start":12,"column_end":20},"name":"mangling","qualname":"<Cursor>::mangling","value":"pub fn mangling(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Get the mangled name of this cursor's referent.\n","sig":null,"attributes":[{"value":"/ Get the mangled name of this cursor's referent.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":83822,"byte_end":83873,"line_start":71,"line_end":71,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":84249,"byte_end":84262,"line_start":82,"line_end":82,"column_start":12,"column_end":25},"name":"cxx_manglings","qualname":"<Cursor>::cxx_manglings","value":"pub fn cxx_manglings(&Self) -> Result<Vec<String>, ()>","parent":null,"children":[],"decl_id":null,"docs":" Gets the C++ manglings for this cursor, or an error if the function is\n not loaded or the manglings are not available.\n","sig":null,"attributes":[{"value":"/ Gets the C++ manglings for this cursor, or an error if the function is","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":84108,"byte_end":84182,"line_start":80,"line_end":80,"column_start":5,"column_end":79}},{"value":"/ not loaded or the manglings are not available.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":84187,"byte_end":84237,"line_start":81,"line_end":81,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":85049,"byte_end":85059,"line_start":105,"line_end":105,"column_start":12,"column_end":22},"name":"is_builtin","qualname":"<Cursor>::is_builtin","value":"pub fn is_builtin(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the cursor refers to a built-in definition.\n","sig":null,"attributes":[{"value":"/ Returns whether the cursor refers to a built-in definition.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":84974,"byte_end":85037,"line_start":104,"line_end":104,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":85826,"byte_end":85840,"line_start":127,"line_end":127,"column_start":12,"column_end":26},"name":"lexical_parent","qualname":"<Cursor>::lexical_parent","value":"pub fn lexical_parent(&Self) -> Cursor","parent":null,"children":[],"decl_id":null,"docs":" Get the `Cursor` for this cursor's referent's lexical parent.","sig":null,"attributes":[{"value":"/ Get the `Cursor` for this cursor's referent's lexical parent.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":85176,"byte_end":85241,"line_start":110,"line_end":110,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":85246,"byte_end":85249,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ The lexical parent is the parent of the definition. The semantic parent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":85254,"byte_end":85329,"line_start":112,"line_end":112,"column_start":5,"column_end":80}},{"value":"/ is the parent of the declaration. Generally, the lexical parent doesn't","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":85334,"byte_end":85409,"line_start":113,"line_end":113,"column_start":5,"column_end":80}},{"value":"/ have any effect on semantics, while the semantic parent does.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":85414,"byte_end":85479,"line_start":114,"line_end":114,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":85484,"byte_end":85487,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ In the following snippet, the `Foo` class would be the semantic parent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":85492,"byte_end":85566,"line_start":116,"line_end":116,"column_start":5,"column_end":79}},{"value":"/ of the out-of-line `method` definition, while the lexical parent is the","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":85571,"byte_end":85646,"line_start":117,"line_end":117,"column_start":5,"column_end":80}},{"value":"/ translation unit.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":85651,"byte_end":85672,"line_start":118,"line_end":118,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":85677,"byte_end":85680,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ ```c++","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":85685,"byte_end":85695,"line_start":120,"line_end":120,"column_start":5,"column_end":15}},{"value":"/ class Foo {","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":85700,"byte_end":85715,"line_start":121,"line_end":121,"column_start":5,"column_end":20}},{"value":"/     void method();","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":85720,"byte_end":85742,"line_start":122,"line_end":122,"column_start":5,"column_end":27}},{"value":"/ };","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":85747,"byte_end":85753,"line_start":123,"line_end":123,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":85758,"byte_end":85761,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ void Foo::method() { /* ... */ }","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":85766,"byte_end":85802,"line_start":125,"line_end":125,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":85807,"byte_end":85814,"line_start":126,"line_end":126,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":86169,"byte_end":86193,"line_start":139,"line_end":139,"column_start":12,"column_end":36},"name":"fallible_semantic_parent","qualname":"<Cursor>::fallible_semantic_parent","value":"pub fn fallible_semantic_parent(&Self) -> Option<Cursor>","parent":null,"children":[],"decl_id":null,"docs":" Get the referent's semantic parent, if one is available.","sig":null,"attributes":[{"value":"/ Get the referent's semantic parent, if one is available.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":85990,"byte_end":86050,"line_start":135,"line_end":135,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":86055,"byte_end":86058,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ See documentation for `lexical_parent` for details on semantic vs","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":86063,"byte_end":86132,"line_start":137,"line_end":137,"column_start":5,"column_end":74}},{"value":"/ lexical parents.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":86137,"byte_end":86157,"line_start":138,"line_end":138,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":86615,"byte_end":86630,"line_start":155,"line_end":155,"column_start":12,"column_end":27},"name":"semantic_parent","qualname":"<Cursor>::semantic_parent","value":"pub fn semantic_parent(&Self) -> Cursor","parent":null,"children":[],"decl_id":null,"docs":" Get the referent's semantic parent.","sig":null,"attributes":[{"value":"/ Get the referent's semantic parent.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":86457,"byte_end":86496,"line_start":151,"line_end":151,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":86501,"byte_end":86504,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ See documentation for `lexical_parent` for details on semantic vs","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":86509,"byte_end":86578,"line_start":153,"line_end":153,"column_start":5,"column_end":74}},{"value":"/ lexical parents.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":86583,"byte_end":86603,"line_start":154,"line_end":154,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":87005,"byte_end":87022,"line_start":165,"line_end":165,"column_start":12,"column_end":29},"name":"num_template_args","qualname":"<Cursor>::num_template_args","value":"pub fn num_template_args(&Self) -> Option<u32>","parent":null,"children":[],"decl_id":null,"docs":" Return the number of template arguments used by this cursor's referent,\n if the referent is either a template instantiation. Returns `None`\n otherwise.","sig":null,"attributes":[{"value":"/ Return the number of template arguments used by this cursor's referent,","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":86710,"byte_end":86785,"line_start":159,"line_end":159,"column_start":5,"column_end":80}},{"value":"/ if the referent is either a template instantiation. Returns `None`","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":86790,"byte_end":86860,"line_start":160,"line_end":160,"column_start":5,"column_end":75}},{"value":"/ otherwise.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":86865,"byte_end":86879,"line_start":161,"line_end":161,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":86884,"byte_end":86887,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ NOTE: This may not return `Some` for partial template specializations,","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":86892,"byte_end":86966,"line_start":163,"line_end":163,"column_start":5,"column_end":79}},{"value":"/ see #193 and #194.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":86971,"byte_end":86993,"line_start":164,"line_end":164,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":88313,"byte_end":88329,"line_start":199,"line_end":199,"column_start":12,"column_end":28},"name":"translation_unit","qualname":"<Cursor>::translation_unit","value":"pub fn translation_unit(&Self) -> Cursor","parent":null,"children":[],"decl_id":null,"docs":" Get a cursor pointing to this referent's containing translation unit.","sig":null,"attributes":[{"value":"/ Get a cursor pointing to this referent's containing translation unit.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":87941,"byte_end":88014,"line_start":193,"line_end":193,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":88019,"byte_end":88022,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ Note that we shouldn't create a `TranslationUnit` struct here, because","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":88027,"byte_end":88101,"line_start":195,"line_end":195,"column_start":5,"column_end":79}},{"value":"/ bindgen assumes there will only be one of them alive at a time, and","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":88106,"byte_end":88177,"line_start":196,"line_end":196,"column_start":5,"column_end":76}},{"value":"/ disposes it on drop. That can change if this would be required, but I","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":88182,"byte_end":88255,"line_start":197,"line_end":197,"column_start":5,"column_end":78}},{"value":"/ think we can survive fine without it.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":88260,"byte_end":88301,"line_start":198,"line_end":198,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":88700,"byte_end":88711,"line_start":212,"line_end":212,"column_start":12,"column_end":23},"name":"is_toplevel","qualname":"<Cursor>::is_toplevel","value":"pub fn is_toplevel(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is the referent a top level construct?\n","sig":null,"attributes":[{"value":"/ Is the referent a top level construct?","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":88646,"byte_end":88688,"line_start":211,"line_end":211,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":89608,"byte_end":89624,"line_start":233,"line_end":233,"column_start":12,"column_end":28},"name":"is_template_like","qualname":"<Cursor>::is_template_like","value":"pub fn is_template_like(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" There are a few kinds of types that we need to treat specially, mainly\n not tracking the type declaration but the location of the cursor, given\n clang doesn't expose a proper declaration for these types.\n","sig":null,"attributes":[{"value":"/ There are a few kinds of types that we need to treat specially, mainly","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":89375,"byte_end":89449,"line_start":230,"line_end":230,"column_start":5,"column_end":79}},{"value":"/ not tracking the type declaration but the location of the cursor, given","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":89454,"byte_end":89529,"line_start":231,"line_end":231,"column_start":5,"column_end":80}},{"value":"/ clang doesn't expose a proper declaration for these types.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":89534,"byte_end":89596,"line_start":232,"line_end":232,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":89930,"byte_end":89934,"line_start":243,"line_end":243,"column_start":12,"column_end":16},"name":"kind","qualname":"<Cursor>::kind","value":"pub fn kind(&Self) -> CXCursorKind","parent":null,"children":[],"decl_id":null,"docs":" Get the kind of referent this cursor is pointing to.\n","sig":null,"attributes":[{"value":"/ Get the kind of referent this cursor is pointing to.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":89862,"byte_end":89918,"line_start":242,"line_end":242,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":90049,"byte_end":90062,"line_start":248,"line_end":248,"column_start":12,"column_end":25},"name":"is_definition","qualname":"<Cursor>::is_definition","value":"pub fn is_definition(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true is the cursor is a definition\n","sig":null,"attributes":[{"value":"/ Returns true is the cursor is a definition","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":89991,"byte_end":90037,"line_start":247,"line_end":247,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":90206,"byte_end":90232,"line_start":253,"line_end":253,"column_start":12,"column_end":38},"name":"is_template_specialization","qualname":"<Cursor>::is_template_specialization","value":"pub fn is_template_specialization(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is the referent a template specialization?\n","sig":null,"attributes":[{"value":"/ Is the referent a template specialization?","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":90148,"byte_end":90194,"line_start":252,"line_end":252,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":90428,"byte_end":90457,"line_start":259,"line_end":259,"column_start":12,"column_end":41},"name":"is_fully_specialized_template","qualname":"<Cursor>::is_fully_specialized_template","value":"pub fn is_fully_specialized_template(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is the referent a fully specialized template specialization without any\n remaining free template arguments?\n","sig":null,"attributes":[{"value":"/ Is the referent a fully specialized template specialization without any","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":90298,"byte_end":90373,"line_start":257,"line_end":257,"column_start":5,"column_end":80}},{"value":"/ remaining free template arguments?","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":90378,"byte_end":90416,"line_start":258,"line_end":258,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":90774,"byte_end":90810,"line_start":267,"line_end":267,"column_start":12,"column_end":48},"name":"is_in_non_fully_specialized_template","qualname":"<Cursor>::is_in_non_fully_specialized_template","value":"pub fn is_in_non_fully_specialized_template(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is the referent a template specialization that still has remaining free\n template arguments?\n","sig":null,"attributes":[{"value":"/ Is the referent a template specialization that still has remaining free","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":90659,"byte_end":90734,"line_start":265,"line_end":265,"column_start":5,"column_end":80}},{"value":"/ template arguments?","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":90739,"byte_end":90762,"line_start":266,"line_end":266,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":91237,"byte_end":91245,"line_start":285,"line_end":285,"column_start":12,"column_end":20},"name":"is_valid","qualname":"<Cursor>::is_valid","value":"pub fn is_valid(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this cursor pointing a valid referent?\n","sig":null,"attributes":[{"value":"/ Is this cursor pointing a valid referent?","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":91180,"byte_end":91225,"line_start":284,"line_end":284,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":91384,"byte_end":91392,"line_start":290,"line_end":290,"column_start":12,"column_end":20},"name":"location","qualname":"<Cursor>::location","value":"pub fn location(&Self) -> SourceLocation","parent":null,"children":[],"decl_id":null,"docs":" Get the source location for the referent.\n","sig":null,"attributes":[{"value":"/ Get the source location for the referent.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":91327,"byte_end":91372,"line_start":289,"line_end":289,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":91616,"byte_end":91622,"line_start":299,"line_end":299,"column_start":12,"column_end":18},"name":"extent","qualname":"<Cursor>::extent","value":"pub fn extent(&Self) -> CXSourceRange","parent":null,"children":[],"decl_id":null,"docs":" Get the source location range for the referent.\n","sig":null,"attributes":[{"value":"/ Get the source location range for the referent.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":91553,"byte_end":91604,"line_start":298,"line_end":298,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":91790,"byte_end":91801,"line_start":304,"line_end":304,"column_start":12,"column_end":23},"name":"raw_comment","qualname":"<Cursor>::raw_comment","value":"pub fn raw_comment(&Self) -> Option<String>","parent":null,"children":[],"decl_id":null,"docs":" Get the raw declaration comment for this referent, if one exists.\n","sig":null,"attributes":[{"value":"/ Get the raw declaration comment for this referent, if one exists.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":91709,"byte_end":91778,"line_start":303,"line_end":303,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":92089,"byte_end":92096,"line_start":316,"line_end":316,"column_start":12,"column_end":19},"name":"comment","qualname":"<Cursor>::comment","value":"pub fn comment(&Self) -> Comment","parent":null,"children":[],"decl_id":null,"docs":" Get the referent's parsed comment.\n","sig":null,"attributes":[{"value":"/ Get the referent's parsed comment.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":92039,"byte_end":92077,"line_start":315,"line_end":315,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":92289,"byte_end":92297,"line_start":325,"line_end":325,"column_start":12,"column_end":20},"name":"cur_type","qualname":"<Cursor>::cur_type","value":"pub fn cur_type(&Self) -> Type","parent":null,"children":[],"decl_id":null,"docs":" Get the referent's type.\n","sig":null,"attributes":[{"value":"/ Get the referent's type.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":92249,"byte_end":92277,"line_start":324,"line_end":324,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":92630,"byte_end":92640,"line_start":336,"line_end":336,"column_start":12,"column_end":22},"name":"definition","qualname":"<Cursor>::definition","value":"pub fn definition(&Self) -> Option<Cursor>","parent":null,"children":[],"decl_id":null,"docs":" Given that this cursor's referent is a reference to another type, or is\n a declaration, get the cursor pointing to the referenced type or type of\n the declared thing.\n","sig":null,"attributes":[{"value":"/ Given that this cursor's referent is a reference to another type, or is","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":92434,"byte_end":92509,"line_start":333,"line_end":333,"column_start":5,"column_end":80}},{"value":"/ a declaration, get the cursor pointing to the referenced type or type of","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":92514,"byte_end":92590,"line_start":334,"line_end":334,"column_start":5,"column_end":81}},{"value":"/ the declared thing.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":92595,"byte_end":92618,"line_start":335,"line_end":335,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":93083,"byte_end":93093,"line_start":352,"line_end":352,"column_start":12,"column_end":22},"name":"referenced","qualname":"<Cursor>::referenced","value":"pub fn referenced(&Self) -> Option<Cursor>","parent":null,"children":[],"decl_id":null,"docs":" Given that this cursor's referent is reference type, get the cursor\n pointing to the referenced type.\n","sig":null,"attributes":[{"value":"/ Given that this cursor's referent is reference type, get the cursor","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":92959,"byte_end":93030,"line_start":350,"line_end":350,"column_start":5,"column_end":76}},{"value":"/ pointing to the referenced type.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":93035,"byte_end":93071,"line_start":351,"line_end":351,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":93619,"byte_end":93628,"line_start":371,"line_end":371,"column_start":12,"column_end":21},"name":"canonical","qualname":"<Cursor>::canonical","value":"pub fn canonical(&Self) -> Cursor","parent":null,"children":[],"decl_id":null,"docs":" Get the canonical cursor for this referent.","sig":null,"attributes":[{"value":"/ Get the canonical cursor for this referent.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":93374,"byte_end":93421,"line_start":366,"line_end":366,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":93426,"byte_end":93429,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ Many types can be declared multiple times before finally being properly","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":93434,"byte_end":93509,"line_start":368,"line_end":368,"column_start":5,"column_end":80}},{"value":"/ defined. This method allows us to get the canonical cursor for the","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":93514,"byte_end":93584,"line_start":369,"line_end":369,"column_start":5,"column_end":75}},{"value":"/ referent type.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":93589,"byte_end":93607,"line_start":370,"line_end":370,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":93976,"byte_end":93987,"line_start":382,"line_end":382,"column_start":12,"column_end":23},"name":"specialized","qualname":"<Cursor>::specialized","value":"pub fn specialized(&Self) -> Option<Cursor>","parent":null,"children":[],"decl_id":null,"docs":" Given that this cursor points to either a template specialization or a\n template instantiation, get a cursor pointing to the template definition\n that is being specialized.\n","sig":null,"attributes":[{"value":"/ Given that this cursor points to either a template specialization or a","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":93774,"byte_end":93848,"line_start":379,"line_end":379,"column_start":5,"column_end":79}},{"value":"/ template instantiation, get a cursor pointing to the template definition","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":93853,"byte_end":93929,"line_start":380,"line_end":380,"column_start":5,"column_end":81}},{"value":"/ that is being specialized.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":93934,"byte_end":93964,"line_start":381,"line_end":381,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":94435,"byte_end":94448,"line_start":397,"line_end":397,"column_start":12,"column_end":25},"name":"template_kind","qualname":"<Cursor>::template_kind","value":"pub fn template_kind(&Self) -> CXCursorKind","parent":null,"children":[],"decl_id":null,"docs":" Assuming that this cursor's referent is a template declaration, get the\n kind of cursor that would be generated for its specializations.\n","sig":null,"attributes":[{"value":"/ Assuming that this cursor's referent is a template declaration, get the","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":94276,"byte_end":94351,"line_start":395,"line_end":395,"column_start":5,"column_end":80}},{"value":"/ kind of cursor that would be generated for its specializations.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":94356,"byte_end":94423,"line_start":396,"line_end":396,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":94673,"byte_end":94678,"line_start":404,"line_end":404,"column_start":12,"column_end":17},"name":"visit","qualname":"<Cursor>::visit","value":"pub fn visit<Visitor>(&Self, Visitor) where Visitor: FnMut(Cursor) ->\nCXChildVisitResult","parent":null,"children":[],"decl_id":null,"docs":" Traverse this cursor's referent and its children.","sig":null,"attributes":[{"value":"/ Traverse this cursor's referent and its children.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":94540,"byte_end":94593,"line_start":401,"line_end":401,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":94598,"byte_end":94601,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ Call the given function on each AST node traversed.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":94606,"byte_end":94661,"line_start":403,"line_end":403,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":95067,"byte_end":95083,"line_start":418,"line_end":418,"column_start":12,"column_end":28},"name":"collect_children","qualname":"<Cursor>::collect_children","value":"pub fn collect_children(&Self) -> Vec<Cursor>","parent":null,"children":[],"decl_id":null,"docs":" Collect all of this cursor's children into a vec and return them.\n","sig":null,"attributes":[{"value":"/ Collect all of this cursor's children into a vec and return them.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":94986,"byte_end":95055,"line_start":417,"line_end":417,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":95323,"byte_end":95335,"line_start":428,"line_end":428,"column_start":12,"column_end":24},"name":"has_children","qualname":"<Cursor>::has_children","value":"pub fn has_children(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Does this cursor have any children?\n","sig":null,"attributes":[{"value":"/ Does this cursor have any children?","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":95272,"byte_end":95311,"line_start":427,"line_end":427,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":95584,"byte_end":95609,"line_start":438,"line_end":438,"column_start":12,"column_end":37},"name":"has_at_least_num_children","qualname":"<Cursor>::has_at_least_num_children","value":"pub fn has_at_least_num_children(&Self, usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Does this cursor have at least `n` children?\n","sig":null,"attributes":[{"value":"/ Does this cursor have at least `n` children?","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":95524,"byte_end":95572,"line_start":437,"line_end":437,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":96100,"byte_end":96115,"line_start":455,"line_end":455,"column_start":12,"column_end":27},"name":"contains_cursor","qualname":"<Cursor>::contains_cursor","value":"pub fn contains_cursor(&Self, CXCursorKind) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the given location contains a cursor with the given\n kind in the first level of nesting underneath (doesn't look\n recursively).\n","sig":null,"attributes":[{"value":"/ Returns whether the given location contains a cursor with the given","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":95927,"byte_end":95998,"line_start":452,"line_end":452,"column_start":5,"column_end":76}},{"value":"/ kind in the first level of nesting underneath (doesn't look","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":96003,"byte_end":96066,"line_start":453,"line_end":453,"column_start":5,"column_end":68}},{"value":"/ recursively).","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":96071,"byte_end":96088,"line_start":454,"line_end":454,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":96472,"byte_end":96491,"line_start":471,"line_end":471,"column_start":12,"column_end":31},"name":"is_inlined_function","qualname":"<Cursor>::is_inlined_function","value":"pub fn is_inlined_function(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is the referent an inlined function?\n","sig":null,"attributes":[{"value":"/ Is the referent an inlined function?","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":96420,"byte_end":96460,"line_start":470,"line_end":470,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":96762,"byte_end":96771,"line_start":478,"line_end":478,"column_start":12,"column_end":21},"name":"bit_width","qualname":"<Cursor>::bit_width","value":"pub fn bit_width(&Self) -> Option<u32>","parent":null,"children":[],"decl_id":null,"docs":" Get the width of this cursor's referent bit field, or `None` if the\n referent is not a bit field.\n","sig":null,"attributes":[{"value":"/ Get the width of this cursor's referent bit field, or `None` if the","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":96642,"byte_end":96713,"line_start":476,"line_end":476,"column_start":5,"column_end":76}},{"value":"/ referent is not a bit field.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":96718,"byte_end":96750,"line_start":477,"line_end":477,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":97108,"byte_end":97117,"line_start":491,"line_end":491,"column_start":12,"column_end":21},"name":"enum_type","qualname":"<Cursor>::enum_type","value":"pub fn enum_type(&Self) -> Option<Type>","parent":null,"children":[],"decl_id":null,"docs":" Get the integer representation type used to hold this cursor's referent\n enum type.\n","sig":null,"attributes":[{"value":"/ Get the integer representation type used to hold this cursor's referent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":97002,"byte_end":97077,"line_start":489,"line_end":489,"column_start":5,"column_end":80}},{"value":"/ enum type.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":97082,"byte_end":97096,"line_start":490,"line_end":490,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":97554,"byte_end":97569,"line_start":507,"line_end":507,"column_start":12,"column_end":27},"name":"enum_val_signed","qualname":"<Cursor>::enum_val_signed","value":"pub fn enum_val_signed(&Self) -> Option<i64>","parent":null,"children":[],"decl_id":null,"docs":" Get the signed constant value for this cursor's enum variant referent.","sig":null,"attributes":[{"value":"/ Get the signed constant value for this cursor's enum variant referent.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":97390,"byte_end":97464,"line_start":504,"line_end":504,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":97469,"byte_end":97472,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ Returns None if the cursor's referent is not an enum variant.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":97477,"byte_end":97542,"line_start":506,"line_end":506,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":97980,"byte_end":97997,"line_start":520,"line_end":520,"column_start":12,"column_end":29},"name":"enum_val_unsigned","qualname":"<Cursor>::enum_val_unsigned","value":"pub fn enum_val_unsigned(&Self) -> Option<u64>","parent":null,"children":[],"decl_id":null,"docs":" Get the unsigned constant value for this cursor's enum variant referent.","sig":null,"attributes":[{"value":"/ Get the unsigned constant value for this cursor's enum variant referent.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":97814,"byte_end":97890,"line_start":517,"line_end":517,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":97895,"byte_end":97898,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ Returns None if the cursor's referent is not an enum variant.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":97903,"byte_end":97968,"line_start":519,"line_end":519,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":98325,"byte_end":98352,"line_start":531,"line_end":531,"column_start":12,"column_end":39},"name":"has_warn_unused_result_attr","qualname":"<Cursor>::has_warn_unused_result_attr","value":"pub fn has_warn_unused_result_attr(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether this cursor has the `warn_unused_result` attribute.\n","sig":null,"attributes":[{"value":"/ Whether this cursor has the `warn_unused_result` attribute.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":98250,"byte_end":98313,"line_start":530,"line_end":530,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":99488,"byte_end":99500,"line_start":563,"line_end":563,"column_start":12,"column_end":24},"name":"typedef_type","qualname":"<Cursor>::typedef_type","value":"pub fn typedef_type(&Self) -> Option<Type>","parent":null,"children":[],"decl_id":null,"docs":" Given that this cursor's referent is a `typedef`, get the `Type` that is\n being aliased.\n","sig":null,"attributes":[{"value":"/ Given that this cursor's referent is a `typedef`, get the `Type` that is","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":99377,"byte_end":99453,"line_start":561,"line_end":561,"column_start":5,"column_end":81}},{"value":"/ being aliased.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":99458,"byte_end":99476,"line_start":562,"line_end":562,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":99870,"byte_end":99877,"line_start":578,"line_end":578,"column_start":12,"column_end":19},"name":"linkage","qualname":"<Cursor>::linkage","value":"pub fn linkage(&Self) -> CXLinkageKind","parent":null,"children":[],"decl_id":null,"docs":" Get the linkage kind for this cursor's referent.","sig":null,"attributes":[{"value":"/ Get the linkage kind for this cursor's referent.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":99744,"byte_end":99796,"line_start":575,"line_end":575,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":99801,"byte_end":99804,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ This only applies to functions and variables.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":99809,"byte_end":99858,"line_start":577,"line_end":577,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":100026,"byte_end":100036,"line_start":583,"line_end":583,"column_start":12,"column_end":22},"name":"visibility","qualname":"<Cursor>::visibility","value":"pub fn visibility(&Self) -> CXVisibilityKind","parent":null,"children":[],"decl_id":null,"docs":" Get the visibility of this cursor's referent.\n","sig":null,"attributes":[{"value":"/ Get the visibility of this cursor's referent.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":99965,"byte_end":100014,"line_start":582,"line_end":582,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":100460,"byte_end":100464,"line_start":596,"line_end":596,"column_start":12,"column_end":16},"name":"args","qualname":"<Cursor>::args","value":"pub fn args(&Self) -> Option<Vec<Cursor>>","parent":null,"children":[],"decl_id":null,"docs":" Given that this cursor's referent is a function, return cursors to its\n parameters.","sig":null,"attributes":[{"value":"/ Given that this cursor's referent is a function, return cursors to its","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":100246,"byte_end":100320,"line_start":591,"line_end":591,"column_start":5,"column_end":79}},{"value":"/ parameters.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":100325,"byte_end":100340,"line_start":592,"line_end":592,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":100345,"byte_end":100348,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ Returns None if the cursor's referent is not a function/method call or","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":100353,"byte_end":100427,"line_start":594,"line_end":594,"column_start":5,"column_end":79}},{"value":"/ declaration.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":100432,"byte_end":100448,"line_start":595,"line_end":595,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":101090,"byte_end":101098,"line_start":614,"line_end":614,"column_start":12,"column_end":20},"name":"num_args","qualname":"<Cursor>::num_args","value":"pub fn num_args(&Self) -> Result<u32, ()>","parent":null,"children":[],"decl_id":null,"docs":" Given that this cursor's referent is a function/method call or\n declaration, return the number of arguments it takes.","sig":null,"attributes":[{"value":"/ Given that this cursor's referent is a function/method call or","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":100843,"byte_end":100909,"line_start":609,"line_end":609,"column_start":5,"column_end":71}},{"value":"/ declaration, return the number of arguments it takes.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":100914,"byte_end":100971,"line_start":610,"line_end":610,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":100976,"byte_end":100979,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ Returns Err if the cursor's referent is not a function/method call or","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":100984,"byte_end":101057,"line_start":612,"line_end":612,"column_start":5,"column_end":78}},{"value":"/ declaration.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":101062,"byte_end":101078,"line_start":613,"line_end":613,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":101404,"byte_end":101420,"line_start":626,"line_end":626,"column_start":12,"column_end":28},"name":"access_specifier","qualname":"<Cursor>::access_specifier","value":"pub fn access_specifier(&Self) -> CX_CXXAccessSpecifier","parent":null,"children":[],"decl_id":null,"docs":" Get the access specifier for this cursor's referent.\n","sig":null,"attributes":[{"value":"/ Get the access specifier for this cursor's referent.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":101336,"byte_end":101392,"line_start":625,"line_end":625,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":101619,"byte_end":101635,"line_start":632,"line_end":632,"column_start":12,"column_end":28},"name":"is_mutable_field","qualname":"<Cursor>::is_mutable_field","value":"pub fn is_mutable_field(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this cursor's referent a field declaration that is marked as\n `mutable`?\n","sig":null,"attributes":[{"value":"/ Is this cursor's referent a field declaration that is marked as","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":101521,"byte_end":101588,"line_start":630,"line_end":630,"column_start":5,"column_end":72}},{"value":"/ `mutable`?","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":101593,"byte_end":101607,"line_start":631,"line_end":631,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":101844,"byte_end":101859,"line_start":638,"line_end":638,"column_start":12,"column_end":27},"name":"offset_of_field","qualname":"<Cursor>::offset_of_field","value":"pub fn offset_of_field(&Self) -> Result<usize, LayoutError>","parent":null,"children":[],"decl_id":null,"docs":" Get the offset of the field represented by the Cursor.\n","sig":null,"attributes":[{"value":"/ Get the offset of the field represented by the Cursor.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":101774,"byte_end":101832,"line_start":637,"line_end":637,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":102316,"byte_end":102332,"line_start":653,"line_end":653,"column_start":12,"column_end":28},"name":"method_is_static","qualname":"<Cursor>::method_is_static","value":"pub fn method_is_static(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this cursor's referent a member function that is declared `static`?\n","sig":null,"attributes":[{"value":"/ Is this cursor's referent a member function that is declared `static`?","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":102230,"byte_end":102304,"line_start":652,"line_end":652,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":102503,"byte_end":102518,"line_start":658,"line_end":658,"column_start":12,"column_end":27},"name":"method_is_const","qualname":"<Cursor>::method_is_const","value":"pub fn method_is_const(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this cursor's referent a member function that is declared `const`?\n","sig":null,"attributes":[{"value":"/ Is this cursor's referent a member function that is declared `const`?","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":102418,"byte_end":102491,"line_start":657,"line_end":657,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":102679,"byte_end":102696,"line_start":663,"line_end":663,"column_start":12,"column_end":29},"name":"method_is_virtual","qualname":"<Cursor>::method_is_virtual","value":"pub fn method_is_virtual(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this cursor's referent a member function that is virtual?\n","sig":null,"attributes":[{"value":"/ Is this cursor's referent a member function that is virtual?","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":102603,"byte_end":102667,"line_start":662,"line_end":662,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":102864,"byte_end":102886,"line_start":668,"line_end":668,"column_start":12,"column_end":34},"name":"method_is_pure_virtual","qualname":"<Cursor>::method_is_pure_virtual","value":"pub fn method_is_pure_virtual(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this cursor's referent a member function that is pure virtual?\n","sig":null,"attributes":[{"value":"/ Is this cursor's referent a member function that is pure virtual?","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":102783,"byte_end":102852,"line_start":667,"line_end":667,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":103058,"byte_end":103073,"line_start":673,"line_end":673,"column_start":12,"column_end":27},"name":"is_virtual_base","qualname":"<Cursor>::is_virtual_base","value":"pub fn is_virtual_base(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this cursor's referent a struct or class with virtual members?\n","sig":null,"attributes":[{"value":"/ Is this cursor's referent a struct or class with virtual members?","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":102977,"byte_end":103046,"line_start":672,"line_end":672,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":103198,"byte_end":103206,"line_start":678,"line_end":678,"column_start":12,"column_end":20},"name":"evaluate","qualname":"<Cursor>::evaluate","value":"pub fn evaluate(&Self) -> Option<EvalResult>","parent":null,"children":[],"decl_id":null,"docs":" Try to evaluate this cursor.\n","sig":null,"attributes":[{"value":"/ Try to evaluate this cursor.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":103154,"byte_end":103186,"line_start":677,"line_end":677,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":103334,"byte_end":103342,"line_start":683,"line_end":683,"column_start":12,"column_end":20},"name":"ret_type","qualname":"<Cursor>::ret_type","value":"pub fn ret_type(&Self) -> Option<Type>","parent":null,"children":[],"decl_id":null,"docs":" Return the result type for this cursor\n","sig":null,"attributes":[{"value":"/ Return the result type for this cursor","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":103280,"byte_end":103322,"line_start":682,"line_end":682,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":103630,"byte_end":103636,"line_start":695,"line_end":695,"column_start":12,"column_end":18},"name":"tokens","qualname":"<Cursor>::tokens","value":"pub fn tokens(&Self) -> RawTokens","parent":null,"children":[],"decl_id":null,"docs":" Gets the tokens that correspond to that cursor.\n","sig":null,"attributes":[{"value":"/ Gets the tokens that correspond to that cursor.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":103567,"byte_end":103618,"line_start":694,"line_end":694,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":103781,"byte_end":103793,"line_start":700,"line_end":700,"column_start":12,"column_end":24},"name":"cexpr_tokens","qualname":"<Cursor>::cexpr_tokens","value":"pub fn cexpr_tokens(Self) -> Vec<cexpr::token::Token>","parent":null,"children":[],"decl_id":null,"docs":" Gets the tokens that correspond to that cursor as  `cexpr` tokens.\n","sig":null,"attributes":[{"value":"/ Gets the tokens that correspond to that cursor as  `cexpr` tokens.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":103699,"byte_end":103769,"line_start":699,"line_end":699,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":104988,"byte_end":105010,"line_start":731,"line_end":731,"column_start":12,"column_end":34},"name":"get_included_file_name","qualname":"<Cursor>::get_included_file_name","value":"pub fn get_included_file_name(&Self) -> Option<String>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the real path name of a cursor of InclusionDirective kind.","sig":null,"attributes":[{"value":"/ Obtain the real path name of a cursor of InclusionDirective kind.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":104808,"byte_end":104877,"line_start":728,"line_end":728,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":104882,"byte_end":104885,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ Returns None if the cursor does not include a file, otherwise the file's full name","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":104890,"byte_end":104976,"line_start":730,"line_end":730,"column_start":5,"column_end":91}}]},{"kind":"Struct","id":{"krate":0,"index":113},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":105381,"byte_end":105390,"line_start":744,"line_end":744,"column_start":12,"column_end":21},"name":"RawTokens","qualname":"::clang::RawTokens","value":"RawTokens {  }","parent":null,"children":[{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118}],"decl_id":null,"docs":" A struct that owns the tokenizer result from a given cursor.\n","sig":null,"attributes":[{"value":"/ A struct that owns the tokenizer result from a given cursor.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":105305,"byte_end":105369,"line_start":743,"line_end":743,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":106191,"byte_end":106195,"line_start":774,"line_end":774,"column_start":12,"column_end":16},"name":"iter","qualname":"<RawTokens>::iter","value":"pub fn iter(&Self) -> ClangTokenIterator","parent":null,"children":[],"decl_id":null,"docs":" Get an iterator over these tokens.\n","sig":null,"attributes":[{"value":"/ Get an iterator over these tokens.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":106141,"byte_end":106179,"line_start":773,"line_end":773,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":2922},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":106844,"byte_end":106854,"line_start":800,"line_end":800,"column_start":12,"column_end":22},"name":"ClangToken","qualname":"::clang::ClangToken","value":"ClangToken { kind }","parent":null,"children":[{"krate":0,"index":2923},{"krate":0,"index":2924}],"decl_id":null,"docs":" A raw clang token, that exposes only the kind and spelling. This is a\n slightly more convenient version of `CXToken` which owns the spelling\n string.\n","sig":null,"attributes":[{"value":"/ A raw clang token, that exposes only the kind and spelling. This is a","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":106656,"byte_end":106729,"line_start":796,"line_end":796,"column_start":1,"column_end":74}},{"value":"/ slightly more convenient version of `CXToken` which owns the spelling","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":106730,"byte_end":106803,"line_start":797,"line_end":797,"column_start":1,"column_end":74}},{"value":"/ string.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":106804,"byte_end":106815,"line_start":798,"line_end":798,"column_start":1,"column_end":12}}]},{"kind":"Field","id":{"krate":0,"index":2924},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":106980,"byte_end":106984,"line_start":804,"line_end":804,"column_start":9,"column_end":13},"name":"kind","qualname":"::clang::ClangToken::kind","value":"i32","parent":{"krate":0,"index":2922},"children":[],"decl_id":null,"docs":" The kind of token, this is the same as the relevant member from\n `CXToken`.\n","sig":null,"attributes":[{"value":"/ The kind of token, this is the same as the relevant member from","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":106885,"byte_end":106952,"line_start":802,"line_end":802,"column_start":5,"column_end":72}},{"value":"/ `CXToken`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":106957,"byte_end":106971,"line_start":803,"line_end":803,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":107097,"byte_end":107105,"line_start":809,"line_end":809,"column_start":12,"column_end":20},"name":"spelling","qualname":"<ClangToken>::spelling","value":"pub fn spelling(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Get the token spelling, without being converted to utf-8.\n","sig":null,"attributes":[{"value":"/ Get the token spelling, without being converted to utf-8.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":107024,"byte_end":107085,"line_start":808,"line_end":808,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":131},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":107434,"byte_end":107452,"line_start":824,"line_end":824,"column_start":12,"column_end":30},"name":"ClangTokenIterator","qualname":"::clang::ClangTokenIterator","value":"ClangTokenIterator {  }","parent":null,"children":[{"krate":0,"index":133},{"krate":0,"index":134}],"decl_id":null,"docs":" An iterator over a set of Tokens.\n","sig":null,"attributes":[{"value":"/ An iterator over a set of Tokens.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":107385,"byte_end":107422,"line_start":823,"line_end":823,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":2927},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":108960,"byte_end":108964,"line_start":884,"line_end":884,"column_start":12,"column_end":16},"name":"Type","qualname":"::clang::Type","value":"Type {  }","parent":null,"children":[{"krate":0,"index":2928}],"decl_id":null,"docs":" The type of a node in clang's AST.\n","sig":null,"attributes":[{"value":"/ The type of a node in clang's AST.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":108887,"byte_end":108925,"line_start":882,"line_end":882,"column_start":1,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2933},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":109708,"byte_end":109715,"line_start":914,"line_end":914,"column_start":5,"column_end":12},"name":"Invalid","qualname":"::clang::LayoutError::Invalid","value":"LayoutError::Invalid","parent":{"krate":0,"index":2932},"children":[],"decl_id":null,"docs":" Asked for the layout of an invalid type.\n","sig":null,"attributes":[{"value":"/ Asked for the layout of an invalid type.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":109659,"byte_end":109703,"line_start":913,"line_end":913,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2935},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":109773,"byte_end":109783,"line_start":916,"line_end":916,"column_start":5,"column_end":15},"name":"Incomplete","qualname":"::clang::LayoutError::Incomplete","value":"LayoutError::Incomplete","parent":{"krate":0,"index":2932},"children":[],"decl_id":null,"docs":" Asked for the layout of an incomplete type.\n","sig":null,"attributes":[{"value":"/ Asked for the layout of an incomplete type.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":109721,"byte_end":109768,"line_start":915,"line_end":915,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2937},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":109839,"byte_end":109848,"line_start":918,"line_end":918,"column_start":5,"column_end":14},"name":"Dependent","qualname":"::clang::LayoutError::Dependent","value":"LayoutError::Dependent","parent":{"krate":0,"index":2932},"children":[],"decl_id":null,"docs":" Asked for the layout of a dependent type.\n","sig":null,"attributes":[{"value":"/ Asked for the layout of a dependent type.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":109789,"byte_end":109834,"line_start":917,"line_end":917,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2939},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":109927,"byte_end":109942,"line_start":920,"line_end":920,"column_start":5,"column_end":20},"name":"NotConstantSize","qualname":"::clang::LayoutError::NotConstantSize","value":"LayoutError::NotConstantSize","parent":{"krate":0,"index":2932},"children":[],"decl_id":null,"docs":" Asked for the layout of a type that does not have constant size.\n","sig":null,"attributes":[{"value":"/ Asked for the layout of a type that does not have constant size.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":109854,"byte_end":109922,"line_start":919,"line_end":919,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2941},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":110039,"byte_end":110055,"line_start":923,"line_end":923,"column_start":5,"column_end":21},"name":"InvalidFieldName","qualname":"::clang::LayoutError::InvalidFieldName","value":"LayoutError::InvalidFieldName","parent":{"krate":0,"index":2932},"children":[],"decl_id":null,"docs":" Asked for the layout of a field in a type that does not have such a\n field.\n","sig":null,"attributes":[{"value":"/ Asked for the layout of a field in a type that does not have such a","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":109948,"byte_end":110019,"line_start":921,"line_end":921,"column_start":5,"column_end":76}},{"value":"/ field.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":110024,"byte_end":110034,"line_start":922,"line_end":922,"column_start":5,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2943},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":110094,"byte_end":110101,"line_start":925,"line_end":925,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::clang::LayoutError::Unknown","value":"LayoutError::Unknown","parent":{"krate":0,"index":2932},"children":[],"decl_id":null,"docs":" An unknown layout error.\n","sig":null,"attributes":[{"value":"/ An unknown layout error.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":110061,"byte_end":110089,"line_start":924,"line_end":924,"column_start":5,"column_end":33}}]},{"kind":"Enum","id":{"krate":0,"index":2932},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":109641,"byte_end":109652,"line_start":912,"line_end":912,"column_start":10,"column_end":21},"name":"LayoutError","qualname":"::clang::LayoutError","value":"pub enum LayoutError {\n\n    /// Asked for the layout of an invalid type.\n    Invalid,\n\n    /// Asked for the layout of an incomplete type.\n    Incomplete,\n\n    /// Asked for the layout of a dependent type.\n    Dependent,\n\n    /// Asked for the layout of a type that does not have constant size.\n    NotConstantSize,\n\n    /// Asked for the layout of a field in a type that does not have such a\n    /// field.\n    InvalidFieldName,\n\n    /// An unknown layout error.\n    Unknown,\n}","parent":null,"children":[{"krate":0,"index":2933},{"krate":0,"index":2935},{"krate":0,"index":2937},{"krate":0,"index":2939},{"krate":0,"index":2941},{"krate":0,"index":2943}],"decl_id":null,"docs":" An error about the layout of a struct, class, or type.\n","sig":null,"attributes":[{"value":"/ An error about the layout of a struct, class, or type.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":109522,"byte_end":109580,"line_start":910,"line_end":910,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":110634,"byte_end":110638,"line_start":945,"line_end":945,"column_start":12,"column_end":16},"name":"kind","qualname":"<Type>::kind","value":"pub fn kind(&Self) -> CXTypeKind","parent":null,"children":[],"decl_id":null,"docs":" Get this type's kind.\n","sig":null,"attributes":[{"value":"/ Get this type's kind.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":110597,"byte_end":110622,"line_start":944,"line_end":944,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":110758,"byte_end":110769,"line_start":950,"line_end":950,"column_start":12,"column_end":23},"name":"declaration","qualname":"<Type>::declaration","value":"pub fn declaration(&Self) -> Cursor","parent":null,"children":[],"decl_id":null,"docs":" Get a cursor pointing to this type's declaration.\n","sig":null,"attributes":[{"value":"/ Get a cursor pointing to this type's declaration.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":110693,"byte_end":110746,"line_start":949,"line_end":949,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":110994,"byte_end":111015,"line_start":959,"line_end":959,"column_start":12,"column_end":33},"name":"canonical_declaration","qualname":"<Type>::canonical_declaration","value":"pub fn canonical_declaration(&Self, Option<&Cursor>)\n-> Option<CanonicalTypeDeclaration>","parent":null,"children":[],"decl_id":null,"docs":" Get the canonical declaration of this type, if it is available.\n","sig":null,"attributes":[{"value":"/ Get the canonical declaration of this type, if it is available.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":110915,"byte_end":110982,"line_start":958,"line_end":958,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":111850,"byte_end":111858,"line_start":985,"line_end":985,"column_start":12,"column_end":20},"name":"spelling","qualname":"<Type>::spelling","value":"pub fn spelling(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Get a raw display name for this type.\n","sig":null,"attributes":[{"value":"/ Get a raw display name for this type.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":111797,"byte_end":111838,"line_start":984,"line_end":984,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":112330,"byte_end":112338,"line_start":999,"line_end":999,"column_start":12,"column_end":20},"name":"is_const","qualname":"<Type>::is_const","value":"pub fn is_const(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this type const qualified?\n","sig":null,"attributes":[{"value":"/ Is this type const qualified?","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":112285,"byte_end":112318,"line_start":998,"line_end":998,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":113770,"byte_end":113774,"line_start":1037,"line_end":1037,"column_start":12,"column_end":16},"name":"size","qualname":"<Type>::size","value":"pub fn size(&Self, &BindgenContext) -> usize","parent":null,"children":[],"decl_id":null,"docs":" What is the size of this type? Paper over invalid types by returning `0`\n for them.\n","sig":null,"attributes":[{"value":"/ What is the size of this type? Paper over invalid types by returning `0`","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":113664,"byte_end":113740,"line_start":1035,"line_end":1035,"column_start":5,"column_end":81}},{"value":"/ for them.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":113745,"byte_end":113758,"line_start":1036,"line_end":1036,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":114002,"byte_end":114015,"line_start":1047,"line_end":1047,"column_start":12,"column_end":25},"name":"fallible_size","qualname":"<Type>::fallible_size","value":"pub fn fallible_size(&Self, &BindgenContext) -> Result<usize, LayoutError>","parent":null,"children":[],"decl_id":null,"docs":" What is the size of this type?\n","sig":null,"attributes":[{"value":"/ What is the size of this type?","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":113956,"byte_end":113990,"line_start":1046,"line_end":1046,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":114380,"byte_end":114385,"line_start":1061,"line_end":1061,"column_start":12,"column_end":17},"name":"align","qualname":"<Type>::align","value":"pub fn align(&Self, &BindgenContext) -> usize","parent":null,"children":[],"decl_id":null,"docs":" What is the alignment of this type? Paper over invalid types by\n returning `0`.\n","sig":null,"attributes":[{"value":"/ What is the alignment of this type? Paper over invalid types by","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":114278,"byte_end":114345,"line_start":1059,"line_end":1059,"column_start":5,"column_end":72}},{"value":"/ returning `0`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":114350,"byte_end":114368,"line_start":1060,"line_end":1060,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":114619,"byte_end":114633,"line_start":1071,"line_end":1071,"column_start":12,"column_end":26},"name":"fallible_align","qualname":"<Type>::fallible_align","value":"pub fn fallible_align(&Self, &BindgenContext) -> Result<usize, LayoutError>","parent":null,"children":[],"decl_id":null,"docs":" What is the alignment of this type?\n","sig":null,"attributes":[{"value":"/ What is the alignment of this type?","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":114568,"byte_end":114607,"line_start":1070,"line_end":1070,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":115010,"byte_end":115025,"line_start":1085,"line_end":1085,"column_start":12,"column_end":27},"name":"fallible_layout","qualname":"<Type>::fallible_layout","value":"pub fn fallible_layout(&Self, &BindgenContext)\n-> Result<crate::ir::layout::Layout, LayoutError>","parent":null,"children":[],"decl_id":null,"docs":" Get the layout for this type, or an error describing why it does not\n have a valid layout.\n","sig":null,"attributes":[{"value":"/ Get the layout for this type, or an error describing why it does not","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":114897,"byte_end":114969,"line_start":1083,"line_end":1083,"column_start":5,"column_end":77}},{"value":"/ have a valid layout.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":114974,"byte_end":114998,"line_start":1084,"line_end":1084,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":115430,"byte_end":115447,"line_start":1097,"line_end":1097,"column_start":12,"column_end":29},"name":"num_template_args","qualname":"<Type>::num_template_args","value":"pub fn num_template_args(&Self) -> Option<u32>","parent":null,"children":[],"decl_id":null,"docs":" Get the number of template arguments this type has, or `None` if it is\n not some kind of template.\n","sig":null,"attributes":[{"value":"/ Get the number of template arguments this type has, or `None` if it is","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":115309,"byte_end":115383,"line_start":1095,"line_end":1095,"column_start":5,"column_end":79}},{"value":"/ not some kind of template.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":115388,"byte_end":115418,"line_start":1096,"line_end":1096,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":116127,"byte_end":116140,"line_start":1116,"line_end":1116,"column_start":12,"column_end":25},"name":"template_args","qualname":"<Type>::template_args","value":"pub fn template_args(&Self) -> Option<TypeTemplateArgIterator>","parent":null,"children":[],"decl_id":null,"docs":" If this type is a class template specialization, return its\n template arguments. Otherwise, return None.\n","sig":null,"attributes":[{"value":"/ If this type is a class template specialization, return its","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":116000,"byte_end":116063,"line_start":1114,"line_end":1114,"column_start":5,"column_end":68}},{"value":"/ template arguments. Otherwise, return None.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":116068,"byte_end":116115,"line_start":1115,"line_end":1115,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":116509,"byte_end":116513,"line_start":1127,"line_end":1127,"column_start":12,"column_end":16},"name":"args","qualname":"<Type>::args","value":"pub fn args(&Self) -> Option<Vec<Type>>","parent":null,"children":[],"decl_id":null,"docs":" Given that this type is a function prototype, return the types of its parameters.","sig":null,"attributes":[{"value":"/ Given that this type is a function prototype, return the types of its parameters.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":116342,"byte_end":116427,"line_start":1124,"line_end":1124,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":116432,"byte_end":116435,"line_start":1125,"line_end":1125,"column_start":5,"column_end":8}},{"value":"/ Returns None if the type is not a function prototype.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":116440,"byte_end":116497,"line_start":1126,"line_end":1126,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":116950,"byte_end":116958,"line_start":1140,"line_end":1140,"column_start":12,"column_end":20},"name":"num_args","qualname":"<Type>::num_args","value":"pub fn num_args(&Self) -> Result<u32, ()>","parent":null,"children":[],"decl_id":null,"docs":" Given that this type is a function prototype, return the number of arguments it takes.","sig":null,"attributes":[{"value":"/ Given that this type is a function prototype, return the number of arguments it takes.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":116779,"byte_end":116869,"line_start":1137,"line_end":1137,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":116874,"byte_end":116877,"line_start":1138,"line_end":1138,"column_start":5,"column_end":8}},{"value":"/ Returns Err if the type is not a function prototype.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":116882,"byte_end":116938,"line_start":1139,"line_end":1139,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":117286,"byte_end":117298,"line_start":1153,"line_end":1153,"column_start":12,"column_end":24},"name":"pointee_type","qualname":"<Type>::pointee_type","value":"pub fn pointee_type(&Self) -> Option<Type>","parent":null,"children":[],"decl_id":null,"docs":" Given that this type is a pointer type, return the type that it points\n to.\n","sig":null,"attributes":[{"value":"/ Given that this type is a pointer type, return the type that it points","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":117188,"byte_end":117262,"line_start":1151,"line_end":1151,"column_start":5,"column_end":79}},{"value":"/ to.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":117267,"byte_end":117274,"line_start":1152,"line_end":1152,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":117928,"byte_end":117937,"line_start":1173,"line_end":1173,"column_start":12,"column_end":21},"name":"elem_type","qualname":"<Type>::elem_type","value":"pub fn elem_type(&Self) -> Option<Type>","parent":null,"children":[],"decl_id":null,"docs":" Given that this type is an array, vector, or complex type, return the\n type of its elements.\n","sig":null,"attributes":[{"value":"/ Given that this type is an array, vector, or complex type, return the","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":117813,"byte_end":117886,"line_start":1171,"line_end":1171,"column_start":5,"column_end":78}},{"value":"/ type of its elements.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":117891,"byte_end":117916,"line_start":1172,"line_end":1172,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":118290,"byte_end":118302,"line_start":1186,"line_end":1186,"column_start":12,"column_end":24},"name":"num_elements","qualname":"<Type>::num_elements","value":"pub fn num_elements(&Self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Given that this type is an array or vector type, return its number of\n elements.\n","sig":null,"attributes":[{"value":"/ Given that this type is an array or vector type, return its number of","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":118187,"byte_end":118260,"line_start":1184,"line_end":1184,"column_start":5,"column_end":78}},{"value":"/ elements.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":118265,"byte_end":118278,"line_start":1185,"line_end":1185,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":118694,"byte_end":118708,"line_start":1197,"line_end":1197,"column_start":12,"column_end":26},"name":"canonical_type","qualname":"<Type>::canonical_type","value":"pub fn canonical_type(&Self) -> Type","parent":null,"children":[],"decl_id":null,"docs":" Get the canonical version of this type. This sees through `typedef`s and\n aliases to get the underlying, canonical type.\n","sig":null,"attributes":[{"value":"/ Get the canonical version of this type. This sees through `typedef`s and","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":118551,"byte_end":118627,"line_start":1195,"line_end":1195,"column_start":5,"column_end":81}},{"value":"/ aliases to get the underlying, canonical type.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":118632,"byte_end":118682,"line_start":1196,"line_end":1196,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":118902,"byte_end":118913,"line_start":1206,"line_end":1206,"column_start":12,"column_end":23},"name":"is_variadic","qualname":"<Type>::is_variadic","value":"pub fn is_variadic(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this type a variadic function type?\n","sig":null,"attributes":[{"value":"/ Is this type a variadic function type?","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":118848,"byte_end":118890,"line_start":1205,"line_end":1205,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":119101,"byte_end":119109,"line_start":1212,"line_end":1212,"column_start":12,"column_end":20},"name":"ret_type","qualname":"<Type>::ret_type","value":"pub fn ret_type(&Self) -> Option<Type>","parent":null,"children":[],"decl_id":null,"docs":" Given that this type is a function type, get the type of its return\n value.\n","sig":null,"attributes":[{"value":"/ Given that this type is a function type, get the type of its return","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":119003,"byte_end":119074,"line_start":1210,"line_end":1210,"column_start":5,"column_end":76}},{"value":"/ value.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":119079,"byte_end":119089,"line_start":1211,"line_end":1211,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":119489,"byte_end":119498,"line_start":1225,"line_end":1225,"column_start":12,"column_end":21},"name":"call_conv","qualname":"<Type>::call_conv","value":"pub fn call_conv(&Self) -> CXCallingConv","parent":null,"children":[],"decl_id":null,"docs":" Given that this type is a function type, get its calling convention. If\n this is not a function type, `CXCallingConv_Invalid` is returned.\n","sig":null,"attributes":[{"value":"/ Given that this type is a function type, get its calling convention. If","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":119328,"byte_end":119403,"line_start":1223,"line_end":1223,"column_start":5,"column_end":80}},{"value":"/ this is not a function type, `CXCallingConv_Invalid` is returned.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":119408,"byte_end":119477,"line_start":1224,"line_end":1224,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":119756,"byte_end":119761,"line_start":1231,"line_end":1231,"column_start":12,"column_end":17},"name":"named","qualname":"<Type>::named","value":"pub fn named(&Self) -> Type","parent":null,"children":[],"decl_id":null,"docs":" For elaborated types (types which use `class`, `struct`, or `union` to\n disambiguate types from local bindings), get the underlying type.\n","sig":null,"attributes":[{"value":"/ For elaborated types (types which use `class`, `struct`, or `union` to","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":119596,"byte_end":119670,"line_start":1229,"line_end":1229,"column_start":5,"column_end":79}},{"value":"/ disambiguate types from local bindings), get the underlying type.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":119675,"byte_end":119744,"line_start":1230,"line_end":1230,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":189},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":120071,"byte_end":120079,"line_start":1244,"line_end":1244,"column_start":12,"column_end":20},"name":"is_valid","qualname":"<Type>::is_valid","value":"pub fn is_valid(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a valid type?\n","sig":null,"attributes":[{"value":"/ Is this a valid type?","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":120034,"byte_end":120059,"line_start":1243,"line_end":1243,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":120195,"byte_end":120215,"line_start":1249,"line_end":1249,"column_start":12,"column_end":32},"name":"is_valid_and_exposed","qualname":"<Type>::is_valid_and_exposed","value":"pub fn is_valid_and_exposed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a valid and exposed type?\n","sig":null,"attributes":[{"value":"/ Is this a valid and exposed type?","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":120146,"byte_end":120183,"line_start":1248,"line_end":1248,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":191},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":120362,"byte_end":120392,"line_start":1254,"line_end":1254,"column_start":12,"column_end":42},"name":"is_fully_instantiated_template","qualname":"<Type>::is_fully_instantiated_template","value":"pub fn is_fully_instantiated_template(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this type a fully instantiated template?\n","sig":null,"attributes":[{"value":"/ Is this type a fully instantiated template?","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":120303,"byte_end":120350,"line_start":1253,"line_end":1253,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":121174,"byte_end":121192,"line_start":1276,"line_end":1276,"column_start":12,"column_end":30},"name":"is_associated_type","qualname":"<Type>::is_associated_type","value":"pub fn is_associated_type(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this type an associated template type? Eg `T::Associated` in\n this example:","sig":null,"attributes":[{"value":"/ Is this type an associated template type? Eg `T::Associated` in","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":120934,"byte_end":121001,"line_start":1267,"line_end":1267,"column_start":5,"column_end":72}},{"value":"/ this example:","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":121006,"byte_end":121023,"line_start":1268,"line_end":1268,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":121028,"byte_end":121031,"line_start":1269,"line_end":1269,"column_start":5,"column_end":8}},{"value":"/ ```c++","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":121036,"byte_end":121046,"line_start":1270,"line_end":1270,"column_start":5,"column_end":15}},{"value":"/ template <typename T>","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":121051,"byte_end":121076,"line_start":1271,"line_end":1271,"column_start":5,"column_end":30}},{"value":"/ class Foo {","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":121081,"byte_end":121096,"line_start":1272,"line_end":1272,"column_start":5,"column_end":20}},{"value":"/     typename T::Associated member;","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":121101,"byte_end":121139,"line_start":1273,"line_end":1273,"column_start":5,"column_end":43}},{"value":"/ };","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":121144,"byte_end":121150,"line_start":1274,"line_end":1274,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":121155,"byte_end":121162,"line_start":1275,"line_end":1275,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":2970},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":122220,"byte_end":122244,"line_start":1302,"line_end":1302,"column_start":12,"column_end":36},"name":"CanonicalTypeDeclaration","qualname":"::clang::CanonicalTypeDeclaration","value":"","parent":null,"children":[],"decl_id":null,"docs":" The `CanonicalTypeDeclaration` type exists as proof-by-construction that its\n cursor is the canonical declaration for its type. If you have a\n `CanonicalTypeDeclaration` instance, you know for sure that the type and\n cursor match up in a canonical declaration relationship, and it simply\n cannot be otherwise.\n","sig":null,"attributes":[{"value":"/ The `CanonicalTypeDeclaration` type exists as proof-by-construction that its","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":121838,"byte_end":121918,"line_start":1296,"line_end":1296,"column_start":1,"column_end":81}},{"value":"/ cursor is the canonical declaration for its type. If you have a","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":121919,"byte_end":121986,"line_start":1297,"line_end":1297,"column_start":1,"column_end":68}},{"value":"/ `CanonicalTypeDeclaration` instance, you know for sure that the type and","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":121987,"byte_end":122063,"line_start":1298,"line_end":1298,"column_start":1,"column_end":77}},{"value":"/ cursor match up in a canonical declaration relationship, and it simply","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":122064,"byte_end":122138,"line_start":1299,"line_end":1299,"column_start":1,"column_end":75}},{"value":"/ cannot be otherwise.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":122139,"byte_end":122163,"line_start":1300,"line_end":1300,"column_start":1,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":122326,"byte_end":122328,"line_start":1306,"line_end":1306,"column_start":12,"column_end":14},"name":"ty","qualname":"<CanonicalTypeDeclaration>::ty","value":"pub fn ty(&Self) -> &Type","parent":null,"children":[],"decl_id":null,"docs":" Get the type.\n","sig":null,"attributes":[{"value":"/ Get the type.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":122297,"byte_end":122314,"line_start":1305,"line_end":1305,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":122434,"byte_end":122440,"line_start":1311,"line_end":1311,"column_start":12,"column_end":18},"name":"cursor","qualname":"<CanonicalTypeDeclaration>::cursor","value":"pub fn cursor(&Self) -> &Cursor","parent":null,"children":[],"decl_id":null,"docs":" Get the type's canonical declaration cursor.\n","sig":null,"attributes":[{"value":"/ Get the type's canonical declaration cursor.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":122374,"byte_end":122422,"line_start":1310,"line_end":1310,"column_start":5,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":199},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":122546,"byte_end":122569,"line_start":1317,"line_end":1317,"column_start":12,"column_end":35},"name":"TypeTemplateArgIterator","qualname":"::clang::TypeTemplateArgIterator","value":"TypeTemplateArgIterator {  }","parent":null,"children":[{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":202}],"decl_id":null,"docs":" An iterator for a type's template arguments.\n","sig":null,"attributes":[{"value":"/ An iterator for a type's template arguments.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":122486,"byte_end":122534,"line_start":1316,"line_end":1316,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":208},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":123303,"byte_end":123317,"line_start":1347,"line_end":1347,"column_start":12,"column_end":26},"name":"SourceLocation","qualname":"::clang::SourceLocation","value":"SourceLocation {  }","parent":null,"children":[{"krate":0,"index":209}],"decl_id":null,"docs":" A `SourceLocation` is a file, line, column, and byte offset location for\n some source text.\n","sig":null,"attributes":[{"value":"/ A `SourceLocation` is a file, line, column, and byte offset location for","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":123193,"byte_end":123269,"line_start":1345,"line_end":1345,"column_start":1,"column_end":77}},{"value":"/ some source text.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":123270,"byte_end":123291,"line_start":1346,"line_end":1346,"column_start":1,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":123471,"byte_end":123479,"line_start":1354,"line_end":1354,"column_start":12,"column_end":20},"name":"location","qualname":"<SourceLocation>::location","value":"pub fn location(&Self) -> (File, usize, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Get the (file, line, column, byte offset) tuple for this source\n location.\n","sig":null,"attributes":[{"value":"/ Get the (file, line, column, byte offset) tuple for this source","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":123374,"byte_end":123441,"line_start":1352,"line_end":1352,"column_start":5,"column_end":72}},{"value":"/ location.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":123446,"byte_end":123459,"line_start":1353,"line_end":1353,"column_start":5,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":214},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":124318,"byte_end":124325,"line_start":1382,"line_end":1382,"column_start":12,"column_end":19},"name":"Comment","qualname":"::clang::Comment","value":"Comment {  }","parent":null,"children":[{"krate":0,"index":215}],"decl_id":null,"docs":" A comment in the source text.","sig":null,"attributes":[{"value":"/ A comment in the source text.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":124200,"byte_end":124233,"line_start":1379,"line_end":1379,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":124234,"byte_end":124237,"line_start":1380,"line_end":1380,"column_start":1,"column_end":4}},{"value":"/ Comments are sort of parsed by Clang, and have a tree structure.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":124238,"byte_end":124306,"line_start":1381,"line_end":1381,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":124413,"byte_end":124417,"line_start":1388,"line_end":1388,"column_start":12,"column_end":16},"name":"kind","qualname":"<Comment>::kind","value":"pub fn kind(&Self) -> CXCommentKind","parent":null,"children":[],"decl_id":null,"docs":" What kind of comment is this?\n","sig":null,"attributes":[{"value":"/ What kind of comment is this?","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":124368,"byte_end":124401,"line_start":1387,"line_end":1387,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":124555,"byte_end":124567,"line_start":1393,"line_end":1393,"column_start":12,"column_end":24},"name":"get_children","qualname":"<Comment>::get_children","value":"pub fn get_children(&Self) -> CommentChildrenIterator","parent":null,"children":[],"decl_id":null,"docs":" Get this comment's children comment\n","sig":null,"attributes":[{"value":"/ Get this comment's children comment","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":124504,"byte_end":124543,"line_start":1392,"line_end":1392,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":124879,"byte_end":124891,"line_start":1403,"line_end":1403,"column_start":12,"column_end":24},"name":"get_tag_name","qualname":"<Comment>::get_tag_name","value":"pub fn get_tag_name(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Given that this comment is the start or end of an HTML tag, get its tag\n name.\n","sig":null,"attributes":[{"value":"/ Given that this comment is the start or end of an HTML tag, get its tag","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":124778,"byte_end":124853,"line_start":1401,"line_end":1401,"column_start":5,"column_end":80}},{"value":"/ name.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":124858,"byte_end":124867,"line_start":1402,"line_end":1402,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":125084,"byte_end":125097,"line_start":1408,"line_end":1408,"column_start":12,"column_end":25},"name":"get_tag_attrs","qualname":"<Comment>::get_tag_attrs","value":"pub fn get_tag_attrs(&Self) -> CommentAttributesIterator","parent":null,"children":[],"decl_id":null,"docs":" Given that this comment is an HTML start tag, get its attributes.\n","sig":null,"attributes":[{"value":"/ Given that this comment is an HTML start tag, get its attributes.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":125003,"byte_end":125072,"line_start":1407,"line_end":1407,"column_start":5,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":221},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":125359,"byte_end":125382,"line_start":1418,"line_end":1418,"column_start":12,"column_end":35},"name":"CommentChildrenIterator","qualname":"::clang::CommentChildrenIterator","value":"CommentChildrenIterator {  }","parent":null,"children":[{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224}],"decl_id":null,"docs":" An iterator for a comment's children\n","sig":null,"attributes":[{"value":"/ An iterator for a comment's children","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":125307,"byte_end":125347,"line_start":1417,"line_end":1417,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":228},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":125882,"byte_end":125898,"line_start":1440,"line_end":1440,"column_start":12,"column_end":28},"name":"CommentAttribute","qualname":"::clang::CommentAttribute","value":"CommentAttribute { name, value }","parent":null,"children":[{"krate":0,"index":229},{"krate":0,"index":230}],"decl_id":null,"docs":" An HTML start tag comment attribute\n","sig":null,"attributes":[{"value":"/ An HTML start tag comment attribute","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":125831,"byte_end":125870,"line_start":1439,"line_end":1439,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":229},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":125947,"byte_end":125951,"line_start":1442,"line_end":1442,"column_start":9,"column_end":13},"name":"name","qualname":"::clang::CommentAttribute::name","value":"std::string::String","parent":{"krate":0,"index":228},"children":[],"decl_id":null,"docs":" HTML start tag attribute name\n","sig":null,"attributes":[{"value":"/ HTML start tag attribute name","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":125905,"byte_end":125938,"line_start":1441,"line_end":1441,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":230},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":126008,"byte_end":126013,"line_start":1444,"line_end":1444,"column_start":9,"column_end":14},"name":"value","qualname":"::clang::CommentAttribute::value","value":"std::string::String","parent":{"krate":0,"index":228},"children":[],"decl_id":null,"docs":" HTML start tag attribute value\n","sig":null,"attributes":[{"value":"/ HTML start tag attribute value","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":125965,"byte_end":125999,"line_start":1443,"line_end":1443,"column_start":5,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":231},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":126080,"byte_end":126105,"line_start":1448,"line_end":1448,"column_start":12,"column_end":37},"name":"CommentAttributesIterator","qualname":"::clang::CommentAttributesIterator","value":"CommentAttributesIterator {  }","parent":null,"children":[{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234}],"decl_id":null,"docs":" An iterator for a comment's attributes\n","sig":null,"attributes":[{"value":"/ An iterator for a comment's attributes","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":126026,"byte_end":126068,"line_start":1447,"line_end":1447,"column_start":1,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":238},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":126904,"byte_end":126908,"line_start":1479,"line_end":1479,"column_start":12,"column_end":16},"name":"File","qualname":"::clang::File","value":"File {  }","parent":null,"children":[{"krate":0,"index":239}],"decl_id":null,"docs":" A source file.\n","sig":null,"attributes":[{"value":"/ A source file.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":126874,"byte_end":126892,"line_start":1478,"line_end":1478,"column_start":1,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":126994,"byte_end":126998,"line_start":1485,"line_end":1485,"column_start":12,"column_end":16},"name":"name","qualname":"<File>::name","value":"pub fn name(&Self) -> Option<String>","parent":null,"children":[],"decl_id":null,"docs":" Get the name of this source file.\n","sig":null,"attributes":[{"value":"/ Get the name of this source file.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":126945,"byte_end":126982,"line_start":1484,"line_end":1484,"column_start":5,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":244},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":127693,"byte_end":127698,"line_start":1509,"line_end":1509,"column_start":12,"column_end":17},"name":"Index","qualname":"::clang::Index","value":"Index {  }","parent":null,"children":[{"krate":0,"index":245}],"decl_id":null,"docs":" An `Index` is an environment for a set of translation units that will\n typically end up linked together in one final binary.\n","sig":null,"attributes":[{"value":"/ An `Index` is an environment for a set of translation units that will","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":127550,"byte_end":127623,"line_start":1507,"line_end":1507,"column_start":1,"column_end":74}},{"value":"/ typically end up linked together in one final binary.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":127624,"byte_end":127681,"line_start":1508,"line_end":1508,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":128025,"byte_end":128028,"line_start":1520,"line_end":1520,"column_start":12,"column_end":15},"name":"new","qualname":"<Index>::new","value":"pub fn new(bool, bool) -> Index","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Index`.","sig":null,"attributes":[{"value":"/ Construct a new `Index`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":127737,"byte_end":127765,"line_start":1514,"line_end":1514,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":127770,"byte_end":127773,"line_start":1515,"line_end":1515,"column_start":5,"column_end":8}},{"value":"/ The `pch` parameter controls whether declarations in pre-compiled","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":127778,"byte_end":127847,"line_start":1516,"line_end":1516,"column_start":5,"column_end":74}},{"value":"/ headers are included when enumerating a translation unit's \"locals\".","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":127852,"byte_end":127924,"line_start":1517,"line_end":1517,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":127929,"byte_end":127932,"line_start":1518,"line_end":1518,"column_start":5,"column_end":8}},{"value":"/ The `diag` parameter controls whether debugging diagnostics are enabled.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":127937,"byte_end":128013,"line_start":1519,"line_end":1519,"column_start":5,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":252},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":128719,"byte_end":128734,"line_start":1553,"line_end":1553,"column_start":12,"column_end":27},"name":"TranslationUnit","qualname":"::clang::TranslationUnit","value":"TranslationUnit {  }","parent":null,"children":[{"krate":0,"index":253}],"decl_id":null,"docs":" A translation unit (or \"compilation unit\").\n","sig":null,"attributes":[{"value":"/ A translation unit (or \"compilation unit\").","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":128660,"byte_end":128707,"line_start":1552,"line_end":1552,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":257},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":129006,"byte_end":129011,"line_start":1565,"line_end":1565,"column_start":12,"column_end":17},"name":"parse","qualname":"<TranslationUnit>::parse","value":"pub fn parse(&Index, &str, &[String], &[UnsavedFile], CXTranslationUnit_Flags)\n-> Option<TranslationUnit>","parent":null,"children":[],"decl_id":null,"docs":" Parse a source file into a translation unit.\n","sig":null,"attributes":[{"value":"/ Parse a source file into a translation unit.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":128946,"byte_end":128994,"line_start":1564,"line_end":1564,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":261},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":130126,"byte_end":130131,"line_start":1601,"line_end":1601,"column_start":12,"column_end":17},"name":"diags","qualname":"<TranslationUnit>::diags","value":"pub fn diags(&Self) -> Vec<Diagnostic>","parent":null,"children":[],"decl_id":null,"docs":" Get the Clang diagnostic information associated with this translation\n unit.\n","sig":null,"attributes":[{"value":"/ Get the Clang diagnostic information associated with this translation","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":130027,"byte_end":130100,"line_start":1599,"line_end":1599,"column_start":5,"column_end":78}},{"value":"/ unit.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":130105,"byte_end":130114,"line_start":1600,"line_end":1600,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":130566,"byte_end":130572,"line_start":1615,"line_end":1615,"column_start":12,"column_end":18},"name":"cursor","qualname":"<TranslationUnit>::cursor","value":"pub fn cursor(&Self) -> Cursor","parent":null,"children":[],"decl_id":null,"docs":" Get a cursor pointing to the root of this translation unit's AST.\n","sig":null,"attributes":[{"value":"/ Get a cursor pointing to the root of this translation unit's AST.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":130485,"byte_end":130554,"line_start":1614,"line_end":1614,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":263},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":130774,"byte_end":130781,"line_start":1624,"line_end":1624,"column_start":12,"column_end":19},"name":"is_null","qualname":"<TranslationUnit>::is_null","value":"pub fn is_null(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this the null translation unit?\n","sig":null,"attributes":[{"value":"/ Is this the null translation unit?","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":130724,"byte_end":130762,"line_start":1623,"line_end":1623,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":266},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":131056,"byte_end":131066,"line_start":1638,"line_end":1638,"column_start":12,"column_end":22},"name":"Diagnostic","qualname":"::clang::Diagnostic","value":"Diagnostic {  }","parent":null,"children":[{"krate":0,"index":267}],"decl_id":null,"docs":" A diagnostic message generated while parsing a translation unit.\n","sig":null,"attributes":[{"value":"/ A diagnostic message generated while parsing a translation unit.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":130976,"byte_end":131044,"line_start":1637,"line_end":1637,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":269},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":131216,"byte_end":131222,"line_start":1645,"line_end":1645,"column_start":12,"column_end":18},"name":"format","qualname":"<Diagnostic>::format","value":"pub fn format(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Format this diagnostic message as a string, using the given option bit\n flags.\n","sig":null,"attributes":[{"value":"/ Format this diagnostic message as a string, using the given option bit","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":131115,"byte_end":131189,"line_start":1643,"line_end":1643,"column_start":5,"column_end":79}},{"value":"/ flags.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":131194,"byte_end":131204,"line_start":1644,"line_end":1644,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":270},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":131479,"byte_end":131487,"line_start":1653,"line_end":1653,"column_start":12,"column_end":20},"name":"severity","qualname":"<Diagnostic>::severity","value":"pub fn severity(&Self) -> CXDiagnosticSeverity","parent":null,"children":[],"decl_id":null,"docs":" What is the severity of this diagnostic message?\n","sig":null,"attributes":[{"value":"/ What is the severity of this diagnostic message?","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":131415,"byte_end":131467,"line_start":1652,"line_end":1652,"column_start":5,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":273},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":131815,"byte_end":131826,"line_start":1668,"line_end":1668,"column_start":12,"column_end":23},"name":"UnsavedFile","qualname":"::clang::UnsavedFile","value":"UnsavedFile { name }","parent":null,"children":[{"krate":0,"index":274},{"krate":0,"index":275},{"krate":0,"index":276}],"decl_id":null,"docs":" A file which has not been saved to disk.\n","sig":null,"attributes":[{"value":"/ A file which has not been saved to disk.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":131759,"byte_end":131803,"line_start":1667,"line_end":1667,"column_start":1,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":275},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":131970,"byte_end":131974,"line_start":1672,"line_end":1672,"column_start":9,"column_end":13},"name":"name","qualname":"::clang::UnsavedFile::name","value":"std::ffi::CString","parent":{"krate":0,"index":273},"children":[],"decl_id":null,"docs":" The name of the unsaved file. Kept here to avoid leaving dangling pointers in\n `CXUnsavedFile`.\n","sig":null,"attributes":[{"value":"/ The name of the unsaved file. Kept here to avoid leaving dangling pointers in","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":131855,"byte_end":131936,"line_start":1670,"line_end":1670,"column_start":5,"column_end":86}},{"value":"/ `CXUnsavedFile`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":131941,"byte_end":131961,"line_start":1671,"line_end":1671,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":278},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":132116,"byte_end":132119,"line_start":1678,"line_end":1678,"column_start":12,"column_end":15},"name":"new","qualname":"<UnsavedFile>::new","value":"pub fn new(&str, &str) -> UnsavedFile","parent":null,"children":[],"decl_id":null,"docs":" Construct a new unsaved file with the given `name` and `contents`.\n","sig":null,"attributes":[{"value":"/ Construct a new unsaved file with the given `name` and `contents`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":132034,"byte_end":132104,"line_start":1677,"line_end":1677,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":2991},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":140181,"byte_end":140191,"line_start":1951,"line_end":1951,"column_start":12,"column_end":22},"name":"EvalResult","qualname":"::clang::EvalResult","value":"EvalResult {  }","parent":null,"children":[{"krate":0,"index":2992}],"decl_id":null,"docs":" A wrapper for the result of evaluating an expression.\n","sig":null,"attributes":[{"value":"/ A wrapper for the result of evaluating an expression.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":140095,"byte_end":140152,"line_start":1949,"line_end":1949,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":140296,"byte_end":140299,"line_start":1957,"line_end":1957,"column_start":12,"column_end":15},"name":"new","qualname":"<EvalResult>::new","value":"pub fn new(Cursor) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Evaluate `cursor` and return the result.\n","sig":null,"attributes":[{"value":"/ Evaluate `cursor` and return the result.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":140240,"byte_end":140284,"line_start":1956,"line_end":1956,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":296},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":141371,"byte_end":141380,"line_start":1992,"line_end":1992,"column_start":12,"column_end":21},"name":"as_double","qualname":"<EvalResult>::as_double","value":"pub fn as_double(&Self) -> Option<f64>","parent":null,"children":[],"decl_id":null,"docs":" Try to get back the result as a double.\n","sig":null,"attributes":[{"value":"/ Try to get back the result as a double.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":141316,"byte_end":141359,"line_start":1991,"line_end":1991,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":297},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":141655,"byte_end":141661,"line_start":2002,"line_end":2002,"column_start":12,"column_end":18},"name":"as_int","qualname":"<EvalResult>::as_int","value":"pub fn as_int(&Self) -> Option<i64>","parent":null,"children":[],"decl_id":null,"docs":" Try to get back the result as an integer.\n","sig":null,"attributes":[{"value":"/ Try to get back the result as an integer.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":141598,"byte_end":141643,"line_start":2001,"line_end":2001,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":298},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":142721,"byte_end":142738,"line_start":2034,"line_end":2034,"column_start":12,"column_end":29},"name":"as_literal_string","qualname":"<EvalResult>::as_literal_string","value":"pub fn as_literal_string(&Self) -> Option<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Evaluates the expression as a literal string, that may or may not be\n valid utf-8.\n","sig":null,"attributes":[{"value":"/ Evaluates the expression as a literal string, that may or may not be","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":142616,"byte_end":142688,"line_start":2032,"line_end":2032,"column_start":5,"column_end":77}},{"value":"/ valid utf-8.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":142693,"byte_end":142709,"line_start":2033,"line_end":2033,"column_start":5,"column_end":21}}]},{"kind":"Type","id":{"krate":0,"index":379},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\impl_debug.rs","byte_start":302980,"byte_end":302985,"line_start":57,"line_end":57,"column_start":10,"column_end":15},"name":"Extra","qualname":"::codegen::impl_debug::ImplDebug::Extra","value":"type Extra;","parent":{"krate":0,"index":377},"children":[],"decl_id":null,"docs":" Any extra parameter required by this a particular `ImplDebug` implementation.\n","sig":null,"attributes":[{"value":"/ Any extra parameter required by this a particular `ImplDebug` implementation.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\impl_debug.rs","byte_start":302889,"byte_end":302970,"line_start":56,"line_end":56,"column_start":5,"column_end":86}}]},{"kind":"Type","id":{"krate":0,"index":573},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":153313,"byte_end":153318,"line_start":328,"line_end":328,"column_start":10,"column_end":15},"name":"Extra","qualname":"::codegen::CodeGenerator::Extra","value":"type Extra;","parent":{"krate":0,"index":572},"children":[],"decl_id":null,"docs":" Extra information from the caller.\n","sig":null,"attributes":[{"value":"/ Extra information from the caller.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":153265,"byte_end":153303,"line_start":327,"line_end":327,"column_start":5,"column_end":43}}]},{"kind":"Type","id":{"krate":0,"index":626},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":177564,"byte_end":177569,"line_start":1017,"line_end":1017,"column_start":10,"column_end":15},"name":"Extra","qualname":"::codegen::FieldCodegen::Extra","value":"type Extra;","parent":{"krate":0,"index":624},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3054},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":220294,"byte_end":220298,"line_start":2295,"line_end":2295,"column_start":5,"column_end":9},"name":"Rust","qualname":"::codegen::EnumVariation::Rust","value":"EnumVariation::Rust { non_exhaustive }","parent":{"krate":0,"index":3053},"children":[],"decl_id":null,"docs":" The code for this enum will use a Rust enum. Note that creating this in unsafe code\n (including FFI) with an invalid value will invoke undefined behaviour, whether or not\n its marked as non_exhaustive.\n","sig":null,"attributes":[{"value":"/ The code for this enum will use a Rust enum. Note that creating this in unsafe code","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":220070,"byte_end":220157,"line_start":2292,"line_end":2292,"column_start":5,"column_end":92}},{"value":"/ (including FFI) with an invalid value will invoke undefined behaviour, whether or not","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":220162,"byte_end":220251,"line_start":2293,"line_end":2293,"column_start":5,"column_end":94}},{"value":"/ its marked as non_exhaustive.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":220256,"byte_end":220289,"line_start":2294,"line_end":2294,"column_start":5,"column_end":38}}]},{"kind":"StructVariant","id":{"krate":0,"index":3056},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":220473,"byte_end":220480,"line_start":2300,"line_end":2300,"column_start":5,"column_end":12},"name":"NewType","qualname":"::codegen::EnumVariation::NewType","value":"EnumVariation::NewType { is_bitfield }","parent":{"krate":0,"index":3053},"children":[],"decl_id":null,"docs":" The code for this enum will use a newtype\n","sig":null,"attributes":[{"value":"/ The code for this enum will use a newtype","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":220423,"byte_end":220468,"line_start":2299,"line_end":2299,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3058},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":220638,"byte_end":220644,"line_start":2305,"line_end":2305,"column_start":5,"column_end":11},"name":"Consts","qualname":"::codegen::EnumVariation::Consts","value":"EnumVariation::Consts","parent":{"krate":0,"index":3053},"children":[],"decl_id":null,"docs":" The code for this enum will use consts\n","sig":null,"attributes":[{"value":"/ The code for this enum will use consts","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":220591,"byte_end":220633,"line_start":2304,"line_end":2304,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3060},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":220717,"byte_end":220729,"line_start":2307,"line_end":2307,"column_start":5,"column_end":17},"name":"ModuleConsts","qualname":"::codegen::EnumVariation::ModuleConsts","value":"EnumVariation::ModuleConsts","parent":{"krate":0,"index":3053},"children":[],"decl_id":null,"docs":" The code for this enum will use a module containing consts\n","sig":null,"attributes":[{"value":"/ The code for this enum will use a module containing consts","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":220650,"byte_end":220712,"line_start":2306,"line_end":2306,"column_start":5,"column_end":67}}]},{"kind":"Enum","id":{"krate":0,"index":3053},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":220050,"byte_end":220063,"line_start":2291,"line_end":2291,"column_start":10,"column_end":23},"name":"EnumVariation","qualname":"::codegen::EnumVariation","value":"pub enum EnumVariation {\n\n    /// The code for this enum will use a Rust enum. Note that creating this in unsafe code\n    /// (including FFI) with an invalid value will invoke undefined behaviour, whether or not\n    /// its marked as non_exhaustive.\n    Rust {\n        /// Indicates whether the generated struct should be `#[non_exhaustive]`\n        non_exhaustive: bool,\n    },\n\n    /// The code for this enum will use a newtype\n    NewType {\n        /// Indicates whether the newtype will have bitwise operators\n        is_bitfield: bool,\n    },\n\n    /// The code for this enum will use consts\n    Consts,\n\n    /// The code for this enum will use a module containing consts\n    ModuleConsts,\n}","parent":null,"children":[{"krate":0,"index":3054},{"krate":0,"index":3056},{"krate":0,"index":3058},{"krate":0,"index":3060}],"decl_id":null,"docs":" A helper type that represents different enum variations.\n","sig":null,"attributes":[{"value":"/ A helper type that represents different enum variations.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":219939,"byte_end":219999,"line_start":2289,"line_end":2289,"column_start":1,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3078},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":242669,"byte_end":242678,"line_start":2960,"line_end":2960,"column_start":5,"column_end":14},"name":"TypeAlias","qualname":"::codegen::AliasVariation::TypeAlias","value":"AliasVariation::TypeAlias","parent":{"krate":0,"index":3077},"children":[],"decl_id":null,"docs":" Convert to regular Rust alias\n","sig":null,"attributes":[{"value":"/ Convert to regular Rust alias","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":242631,"byte_end":242664,"line_start":2959,"line_end":2959,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3080},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":242778,"byte_end":242785,"line_start":2962,"line_end":2962,"column_start":5,"column_end":12},"name":"NewType","qualname":"::codegen::AliasVariation::NewType","value":"AliasVariation::NewType","parent":{"krate":0,"index":3077},"children":[],"decl_id":null,"docs":" Create a new type by wrapping the old type in a struct and using #[repr(transparent)]\n","sig":null,"attributes":[{"value":"/ Create a new type by wrapping the old type in a struct and using #[repr(transparent)]","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":242684,"byte_end":242773,"line_start":2961,"line_end":2961,"column_start":5,"column_end":94}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3082},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":242887,"byte_end":242899,"line_start":2964,"line_end":2964,"column_start":5,"column_end":17},"name":"NewTypeDeref","qualname":"::codegen::AliasVariation::NewTypeDeref","value":"AliasVariation::NewTypeDeref","parent":{"krate":0,"index":3077},"children":[],"decl_id":null,"docs":" Same as NewStruct but also impl Deref to be able to use the methods of the wrapped type\n","sig":null,"attributes":[{"value":"/ Same as NewStruct but also impl Deref to be able to use the methods of the wrapped type","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":242791,"byte_end":242882,"line_start":2963,"line_end":2963,"column_start":5,"column_end":96}}]},{"kind":"Enum","id":{"krate":0,"index":3077},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":242610,"byte_end":242624,"line_start":2958,"line_end":2958,"column_start":10,"column_end":24},"name":"AliasVariation","qualname":"::codegen::AliasVariation","value":"pub enum AliasVariation {\n\n    /// Convert to regular Rust alias\n    TypeAlias,\n\n    /// Create a new type by wrapping the old type in a struct and using #[repr(transparent)]\n    NewType,\n\n    /// Same as NewStruct but also impl Deref to be able to use the methods of the wrapped type\n    NewTypeDeref,\n}","parent":null,"children":[{"krate":0,"index":3078},{"krate":0,"index":3080},{"krate":0,"index":3082}],"decl_id":null,"docs":" Enum for how aliases should be translated.\n","sig":null,"attributes":[{"value":"/ Enum for how aliases should be translated.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":242513,"byte_end":242559,"line_start":2956,"line_end":2956,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":728},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":243000,"byte_end":243006,"line_start":2969,"line_end":2969,"column_start":12,"column_end":18},"name":"as_str","qualname":"<AliasVariation>::as_str","value":"pub fn as_str(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Convert an `AliasVariation` to its str representation.\n","sig":null,"attributes":[{"value":"/ Convert an `AliasVariation` to its str representation.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":242930,"byte_end":242988,"line_start":2968,"line_end":2968,"column_start":5,"column_end":63}}]},{"kind":"Type","id":{"krate":0,"index":735},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":244346,"byte_end":244351,"line_start":3010,"line_end":3010,"column_start":10,"column_end":15},"name":"Extra","qualname":"::codegen::TryToOpaque::Extra","value":"type Extra;","parent":{"krate":0,"index":734},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":746},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":246348,"byte_end":246353,"line_start":3066,"line_end":3066,"column_start":10,"column_end":15},"name":"Extra","qualname":"::codegen::TryToRustTy::Extra","value":"type Extra;","parent":{"krate":0,"index":745},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":749},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":246819,"byte_end":246824,"line_start":3081,"line_end":3081,"column_start":10,"column_end":15},"name":"Extra","qualname":"::codegen::TryToRustTyOrOpaque::Extra","value":"type Extra;","parent":{"krate":0,"index":748},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":758},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":248589,"byte_end":248594,"line_start":3129,"line_end":3129,"column_start":10,"column_end":15},"name":"Extra","qualname":"::codegen::ToRustTyOrOpaque::Extra","value":"type Extra;","parent":{"krate":0,"index":757},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":855},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\features.rs","byte_start":330864,"byte_end":330882,"line_start":137,"line_end":137,"column_start":11,"column_end":29},"name":"LATEST_STABLE_RUST","qualname":"::features::LATEST_STABLE_RUST","value":"RustTarget","parent":null,"children":[],"decl_id":null,"docs":" Latest stable release of Rust\n","sig":null,"attributes":[{"value":"/ Latest stable release of Rust","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\features.rs","byte_start":330820,"byte_end":330853,"line_start":136,"line_end":136,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":3192},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\template_params.rs","byte_start":355365,"byte_end":355387,"line_start":149,"line_end":149,"column_start":12,"column_end":34},"name":"UsedTemplateParameters","qualname":"::ir::analysis::template_params::UsedTemplateParameters","value":"UsedTemplateParameters {  }","parent":null,"children":[{"krate":0,"index":3194},{"krate":0,"index":3195},{"krate":0,"index":3196},{"krate":0,"index":3197}],"decl_id":null,"docs":" An analysis that finds for each IR item its set of template parameters that\n it uses.","sig":null,"attributes":[{"value":"/ An analysis that finds for each IR item its set of template parameters that","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\template_params.rs","byte_start":353192,"byte_end":353271,"line_start":99,"line_end":99,"column_start":1,"column_end":80}},{"value":"/ it uses.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\template_params.rs","byte_start":353272,"byte_end":353284,"line_start":100,"line_end":100,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\template_params.rs","byte_start":353285,"byte_end":353288,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ We use the monotone constraint function `template_param_usage`, defined as","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\template_params.rs","byte_start":353289,"byte_end":353367,"line_start":102,"line_end":102,"column_start":1,"column_end":79}},{"value":"/ follows:","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\template_params.rs","byte_start":353368,"byte_end":353380,"line_start":103,"line_end":103,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\template_params.rs","byte_start":353381,"byte_end":353384,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ * If `T` is a named template type parameter, it trivially uses itself:","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\template_params.rs","byte_start":353385,"byte_end":353459,"line_start":105,"line_end":105,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\template_params.rs","byte_start":353460,"byte_end":353463,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\template_params.rs","byte_start":353464,"byte_end":353477,"line_start":107,"line_end":107,"column_start":1,"column_end":14}},{"value":"/ template_param_usage(T) = { T }","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\template_params.rs","byte_start":353478,"byte_end":353513,"line_start":108,"line_end":108,"column_start":1,"column_end":36}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\template_params.rs","byte_start":353514,"byte_end":353521,"line_start":109,"line_end":109,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\template_params.rs","byte_start":353522,"byte_end":353525,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ * If `inst` is a template instantiation, `inst.args` are the template","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\template_params.rs","byte_start":353526,"byte_end":353599,"line_start":111,"line_end":111,"column_start":1,"column_end":74}},{"value":"/   instantiation's template arguments, `inst.def` is the template definition","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\template_params.rs","byte_start":353600,"byte_end":353679,"line_start":112,"line_end":112,"column_start":1,"column_end":80}},{"value":"/   being instantiated, and `inst.def.params` is the template definition's","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\template_params.rs","byte_start":353680,"byte_end":353756,"line_start":113,"line_end":113,"column_start":1,"column_end":77}},{"value":"/   template parameters, then the instantiation's usage is the union of each","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\template_params.rs","byte_start":353757,"byte_end":353835,"line_start":114,"line_end":114,"column_start":1,"column_end":79}},{"value":"/   of its arguments' usages *if* the corresponding template parameter is in","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\template_params.rs","byte_start":353836,"byte_end":353914,"line_start":115,"line_end":115,"column_start":1,"column_end":79}},{"value":"/   turn used by the template definition:","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\template_params.rs","byte_start":353915,"byte_end":353958,"line_start":116,"line_end":116,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\template_params.rs","byte_start":353959,"byte_end":353962,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\template_params.rs","byte_start":353963,"byte_end":353976,"line_start":118,"line_end":118,"column_start":1,"column_end":14}},{"value":"/ template_param_usage(inst) = union(","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\template_params.rs","byte_start":353977,"byte_end":354016,"line_start":119,"line_end":119,"column_start":1,"column_end":40}},{"value":"/     template_param_usage(inst.args[i])","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\template_params.rs","byte_start":354017,"byte_end":354059,"line_start":120,"line_end":120,"column_start":1,"column_end":43}},{"value":"/         for i in 0..length(inst.args.length)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\template_params.rs","byte_start":354060,"byte_end":354108,"line_start":121,"line_end":121,"column_start":1,"column_end":49}},{"value":"/             if inst.def.params[i] in template_param_usage(inst.def)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\template_params.rs","byte_start":354109,"byte_end":354180,"line_start":122,"line_end":122,"column_start":1,"column_end":72}},{"value":"/ )","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\template_params.rs","byte_start":354181,"byte_end":354186,"line_start":123,"line_end":123,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\template_params.rs","byte_start":354187,"byte_end":354194,"line_start":124,"line_end":124,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\template_params.rs","byte_start":354195,"byte_end":354198,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ * Finally, for all other IR item kinds, we use our lattice's `join`","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\template_params.rs","byte_start":354199,"byte_end":354270,"line_start":126,"line_end":126,"column_start":1,"column_end":72}},{"value":"/ operation: set union with each successor of the given item's template","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\template_params.rs","byte_start":354271,"byte_end":354344,"line_start":127,"line_end":127,"column_start":1,"column_end":74}},{"value":"/ parameter usage:","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\template_params.rs","byte_start":354345,"byte_end":354365,"line_start":128,"line_end":128,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\template_params.rs","byte_start":354366,"byte_end":354369,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\template_params.rs","byte_start":354370,"byte_end":354383,"line_start":130,"line_end":130,"column_start":1,"column_end":14}},{"value":"/ template_param_usage(v) =","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\template_params.rs","byte_start":354384,"byte_end":354413,"line_start":131,"line_end":131,"column_start":1,"column_end":30}},{"value":"/     union(template_param_usage(w) for w in successors(v))","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\template_params.rs","byte_start":354414,"byte_end":354475,"line_start":132,"line_end":132,"column_start":1,"column_end":62}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\template_params.rs","byte_start":354476,"byte_end":354483,"line_start":133,"line_end":133,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\template_params.rs","byte_start":354484,"byte_end":354487,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ Note that we ignore certain edges in the graph, such as edges from a","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\template_params.rs","byte_start":354488,"byte_end":354560,"line_start":135,"line_end":135,"column_start":1,"column_end":73}},{"value":"/ template declaration to its template parameters' definitions for this","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\template_params.rs","byte_start":354561,"byte_end":354634,"line_start":136,"line_end":136,"column_start":1,"column_end":74}},{"value":"/ analysis. If we didn't, then we would mistakenly determine that ever","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\template_params.rs","byte_start":354635,"byte_end":354707,"line_start":137,"line_end":137,"column_start":1,"column_end":73}},{"value":"/ template parameter is always used.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\template_params.rs","byte_start":354708,"byte_end":354746,"line_start":138,"line_end":138,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\template_params.rs","byte_start":354747,"byte_end":354750,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ The final wrinkle is handling of blacklisted types. Normally, we say that","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\template_params.rs","byte_start":354751,"byte_end":354828,"line_start":140,"line_end":140,"column_start":1,"column_end":78}},{"value":"/ the set of whitelisted items is the transitive closure of items explicitly","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\template_params.rs","byte_start":354829,"byte_end":354907,"line_start":141,"line_end":141,"column_start":1,"column_end":79}},{"value":"/ called out for whitelisting, *without* any items explicitly called out as","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\template_params.rs","byte_start":354908,"byte_end":354985,"line_start":142,"line_end":142,"column_start":1,"column_end":78}},{"value":"/ blacklisted. However, for the purposes of this analysis's correctness, we","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\template_params.rs","byte_start":354986,"byte_end":355063,"line_start":143,"line_end":143,"column_start":1,"column_end":78}},{"value":"/ simplify and consider run the analysis on the full transitive closure of","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\template_params.rs","byte_start":355064,"byte_end":355140,"line_start":144,"line_end":144,"column_start":1,"column_end":77}},{"value":"/ whitelisted items. We do, however, treat instantiations of blacklisted items","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\template_params.rs","byte_start":355141,"byte_end":355221,"line_start":145,"line_end":145,"column_start":1,"column_end":81}},{"value":"/ specially; see `constrain_instantiation_of_blacklisted_template` and its","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\template_params.rs","byte_start":355222,"byte_end":355298,"line_start":146,"line_end":146,"column_start":1,"column_end":77}},{"value":"/ documentation for details.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\template_params.rs","byte_start":355299,"byte_end":355329,"line_start":147,"line_end":147,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":3222},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\derive.rs","byte_start":374853,"byte_end":374865,"line_start":63,"line_end":63,"column_start":12,"column_end":24},"name":"CannotDerive","qualname":"::ir::analysis::derive::CannotDerive","value":"CannotDerive {  }","parent":null,"children":[{"krate":0,"index":3224},{"krate":0,"index":3225},{"krate":0,"index":3226},{"krate":0,"index":3227}],"decl_id":null,"docs":" An analysis that finds for each IR item whether a trait cannot be derived.","sig":null,"attributes":[{"value":"/ An analysis that finds for each IR item whether a trait cannot be derived.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\derive.rs","byte_start":373463,"byte_end":373541,"line_start":33,"line_end":33,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\derive.rs","byte_start":373542,"byte_end":373545,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ We use the monotone constraint function `cannot_derive`, defined as follows","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\derive.rs","byte_start":373546,"byte_end":373625,"line_start":35,"line_end":35,"column_start":1,"column_end":80}},{"value":"/ for type T:","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\derive.rs","byte_start":373626,"byte_end":373641,"line_start":36,"line_end":36,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\derive.rs","byte_start":373642,"byte_end":373645,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ * If T is Opaque and the layout of the type is known, get this layout as an","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\derive.rs","byte_start":373646,"byte_end":373725,"line_start":38,"line_end":38,"column_start":1,"column_end":80}},{"value":"/   opaquetype and check whether it can derive using trivial checks.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\derive.rs","byte_start":373726,"byte_end":373796,"line_start":39,"line_end":39,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\derive.rs","byte_start":373797,"byte_end":373800,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ * If T is Array, a trait cannot be derived if the array is incomplete,","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\derive.rs","byte_start":373801,"byte_end":373875,"line_start":41,"line_end":41,"column_start":1,"column_end":75}},{"value":"/   if the length of the array is larger than the limit (unless the trait","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\derive.rs","byte_start":373876,"byte_end":373951,"line_start":42,"line_end":42,"column_start":1,"column_end":76}},{"value":"/   allows it), or the trait cannot be derived for the type of data the array","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\derive.rs","byte_start":373952,"byte_end":374031,"line_start":43,"line_end":43,"column_start":1,"column_end":80}},{"value":"/   contains.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\derive.rs","byte_start":374032,"byte_end":374047,"line_start":44,"line_end":44,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\derive.rs","byte_start":374048,"byte_end":374051,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ * If T is Vector, a trait cannot be derived if the trait cannot be derived","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\derive.rs","byte_start":374052,"byte_end":374130,"line_start":46,"line_end":46,"column_start":1,"column_end":79}},{"value":"/   for the type of data the vector contains.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\derive.rs","byte_start":374131,"byte_end":374178,"line_start":47,"line_end":47,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\derive.rs","byte_start":374179,"byte_end":374182,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ * If T is a type alias, a templated alias or an indirection to another type,","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\derive.rs","byte_start":374183,"byte_end":374263,"line_start":49,"line_end":49,"column_start":1,"column_end":81}},{"value":"/   the trait cannot be derived if the trait cannot be derived for type T","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\derive.rs","byte_start":374264,"byte_end":374339,"line_start":50,"line_end":50,"column_start":1,"column_end":76}},{"value":"/   refers to.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\derive.rs","byte_start":374340,"byte_end":374356,"line_start":51,"line_end":51,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\derive.rs","byte_start":374357,"byte_end":374360,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ * If T is a compound type, the trait cannot be derived if the trait cannot","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\derive.rs","byte_start":374361,"byte_end":374439,"line_start":53,"line_end":53,"column_start":1,"column_end":79}},{"value":"/   be derived for any of its base members or fields.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\derive.rs","byte_start":374440,"byte_end":374495,"line_start":54,"line_end":54,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\derive.rs","byte_start":374496,"byte_end":374499,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ * If T is an instantiation of an abstract template definition, the trait","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\derive.rs","byte_start":374500,"byte_end":374576,"line_start":56,"line_end":56,"column_start":1,"column_end":77}},{"value":"/   cannot be derived if any of the template arguments or template definition","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\derive.rs","byte_start":374577,"byte_end":374656,"line_start":57,"line_end":57,"column_start":1,"column_end":80}},{"value":"/   cannot derive the trait.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\derive.rs","byte_start":374657,"byte_end":374687,"line_start":58,"line_end":58,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\derive.rs","byte_start":374688,"byte_end":374691,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ * For all other (simple) types, compiler and standard library limitations","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\derive.rs","byte_start":374692,"byte_end":374769,"line_start":60,"line_end":60,"column_start":1,"column_end":78}},{"value":"/   dictate whether the trait is implemented.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\derive.rs","byte_start":374770,"byte_end":374817,"line_start":61,"line_end":61,"column_start":1,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3236},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\has_vtable.rs","byte_start":398714,"byte_end":398716,"line_start":15,"line_end":15,"column_start":5,"column_end":7},"name":"No","qualname":"::ir::analysis::has_vtable::HasVtableResult::No","value":"HasVtableResult::No","parent":{"krate":0,"index":3235},"children":[],"decl_id":null,"docs":" The item does not have a vtable pointer.\n","sig":null,"attributes":[{"value":"/ The item does not have a vtable pointer.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\has_vtable.rs","byte_start":398665,"byte_end":398709,"line_start":14,"line_end":14,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3238},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\has_vtable.rs","byte_start":398804,"byte_end":398817,"line_start":18,"line_end":18,"column_start":5,"column_end":18},"name":"SelfHasVtable","qualname":"::ir::analysis::has_vtable::HasVtableResult::SelfHasVtable","value":"HasVtableResult::SelfHasVtable","parent":{"krate":0,"index":3235},"children":[],"decl_id":null,"docs":" The item has a vtable and the actual vtable pointer is within this item.\n","sig":null,"attributes":[{"value":"/ The item has a vtable and the actual vtable pointer is within this item.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\has_vtable.rs","byte_start":398723,"byte_end":398799,"line_start":17,"line_end":17,"column_start":5,"column_end":81}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3240},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\has_vtable.rs","byte_start":398914,"byte_end":398927,"line_start":22,"line_end":22,"column_start":5,"column_end":18},"name":"BaseHasVtable","qualname":"::ir::analysis::has_vtable::HasVtableResult::BaseHasVtable","value":"HasVtableResult::BaseHasVtable","parent":{"krate":0,"index":3235},"children":[],"decl_id":null,"docs":" The item has a vtable, but the actual vtable pointer is in a base\n member.\n","sig":null,"attributes":[{"value":"/ The item has a vtable, but the actual vtable pointer is in a base","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\has_vtable.rs","byte_start":398824,"byte_end":398893,"line_start":20,"line_end":20,"column_start":5,"column_end":74}},{"value":"/ member.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\has_vtable.rs","byte_start":398898,"byte_end":398909,"line_start":21,"line_end":21,"column_start":5,"column_end":16}}]},{"kind":"Enum","id":{"krate":0,"index":3235},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\has_vtable.rs","byte_start":398643,"byte_end":398658,"line_start":13,"line_end":13,"column_start":10,"column_end":25},"name":"HasVtableResult","qualname":"::ir::analysis::has_vtable::HasVtableResult","value":"pub enum HasVtableResult {\n\n    /// The item does not have a vtable pointer.\n    No,\n\n    /// The item has a vtable and the actual vtable pointer is within this item.\n    SelfHasVtable,\n\n    /// The item has a vtable, but the actual vtable pointer is in a base\n    /// member.\n    BaseHasVtable,\n}","parent":null,"children":[{"krate":0,"index":3236},{"krate":0,"index":3238},{"krate":0,"index":3240}],"decl_id":null,"docs":" The result of the `HasVtableAnalysis` for an individual item.\n","sig":null,"attributes":[{"value":"/ The result of the `HasVtableAnalysis` for an individual item.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\has_vtable.rs","byte_start":398506,"byte_end":398571,"line_start":11,"line_end":11,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1015},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\has_vtable.rs","byte_start":399121,"byte_end":399125,"line_start":33,"line_end":33,"column_start":12,"column_end":16},"name":"join","qualname":"<HasVtableResult>::join","value":"pub fn join(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Take the least upper bound of `self` and `rhs`.\n","sig":null,"attributes":[{"value":"/ Take the least upper bound of `self` and `rhs`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\has_vtable.rs","byte_start":399058,"byte_end":399109,"line_start":32,"line_end":32,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":3257},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\has_vtable.rs","byte_start":400079,"byte_end":400096,"line_start":63,"line_end":63,"column_start":12,"column_end":29},"name":"HasVtableAnalysis","qualname":"::ir::analysis::has_vtable::HasVtableAnalysis","value":"HasVtableAnalysis {  }","parent":null,"children":[{"krate":0,"index":3259},{"krate":0,"index":3260},{"krate":0,"index":3261}],"decl_id":null,"docs":" An analysis that finds for each IR item whether it has vtable or not","sig":null,"attributes":[{"value":"/ An analysis that finds for each IR item whether it has vtable or not","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\has_vtable.rs","byte_start":399483,"byte_end":399555,"line_start":52,"line_end":52,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\has_vtable.rs","byte_start":399556,"byte_end":399559,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ We use the monotone function `has vtable`, defined as follows:","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\has_vtable.rs","byte_start":399560,"byte_end":399626,"line_start":54,"line_end":54,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\has_vtable.rs","byte_start":399627,"byte_end":399630,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ * If T is a type alias, a templated alias, an indirection to another type,","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\has_vtable.rs","byte_start":399631,"byte_end":399709,"line_start":56,"line_end":56,"column_start":1,"column_end":79}},{"value":"/   or a reference of a type, T has vtable if the type T refers to has vtable.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\has_vtable.rs","byte_start":399710,"byte_end":399790,"line_start":57,"line_end":57,"column_start":1,"column_end":81}},{"value":"/ * If T is a compound type, T has vtable if we saw a virtual function when","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\has_vtable.rs","byte_start":399791,"byte_end":399868,"line_start":58,"line_end":58,"column_start":1,"column_end":78}},{"value":"/   parsing it or any of its base member has vtable.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\has_vtable.rs","byte_start":399869,"byte_end":399923,"line_start":59,"line_end":59,"column_start":1,"column_end":55}},{"value":"/ * If T is an instantiation of an abstract template definition, T has","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\has_vtable.rs","byte_start":399924,"byte_end":399996,"line_start":60,"line_end":60,"column_start":1,"column_end":73}},{"value":"/   vtable if template definition has vtable","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\has_vtable.rs","byte_start":399997,"byte_end":400043,"line_start":61,"line_end":61,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":3269},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\has_destructor.rs","byte_start":406982,"byte_end":407003,"line_start":25,"line_end":25,"column_start":12,"column_end":33},"name":"HasDestructorAnalysis","qualname":"::ir::analysis::has_destructor::HasDestructorAnalysis","value":"HasDestructorAnalysis {  }","parent":null,"children":[{"krate":0,"index":3271},{"krate":0,"index":3272},{"krate":0,"index":3273}],"decl_id":null,"docs":" An analysis that finds for each IR item whether it has a destructor or not","sig":null,"attributes":[{"value":"/ An analysis that finds for each IR item whether it has a destructor or not","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\has_destructor.rs","byte_start":406093,"byte_end":406171,"line_start":10,"line_end":10,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\has_destructor.rs","byte_start":406172,"byte_end":406175,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ We use the monotone function `has destructor`, defined as follows:","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\has_destructor.rs","byte_start":406176,"byte_end":406246,"line_start":12,"line_end":12,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\has_destructor.rs","byte_start":406247,"byte_end":406250,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ * If T is a type alias, a templated alias, or an indirection to another type,","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\has_destructor.rs","byte_start":406251,"byte_end":406332,"line_start":14,"line_end":14,"column_start":1,"column_end":82}},{"value":"/   T has a destructor if the type T refers to has a destructor.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\has_destructor.rs","byte_start":406333,"byte_end":406399,"line_start":15,"line_end":15,"column_start":1,"column_end":67}},{"value":"/ * If T is a compound type, T has a destructor if we saw a destructor when parsing it,","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\has_destructor.rs","byte_start":406400,"byte_end":406489,"line_start":16,"line_end":16,"column_start":1,"column_end":90}},{"value":"/   or if it's a struct, T has a destructor if any of its base members has a destructor,","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\has_destructor.rs","byte_start":406490,"byte_end":406580,"line_start":17,"line_end":17,"column_start":1,"column_end":91}},{"value":"/   or if any of its fields have a destructor.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\has_destructor.rs","byte_start":406581,"byte_end":406629,"line_start":18,"line_end":18,"column_start":1,"column_end":49}},{"value":"/ * If T is an instantiation of an abstract template definition, T has","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\has_destructor.rs","byte_start":406630,"byte_end":406702,"line_start":19,"line_end":19,"column_start":1,"column_end":73}},{"value":"/   a destructor if its template definition has a destructor,","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\has_destructor.rs","byte_start":406703,"byte_end":406766,"line_start":20,"line_end":20,"column_start":1,"column_end":64}},{"value":"/   or if any of the template arguments has a destructor.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\has_destructor.rs","byte_start":406767,"byte_end":406826,"line_start":21,"line_end":21,"column_start":1,"column_end":60}},{"value":"/ * If T is the type of a field, that field has a destructor if it's not a bitfield,","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\has_destructor.rs","byte_start":406827,"byte_end":406913,"line_start":22,"line_end":22,"column_start":1,"column_end":87}},{"value":"/   and if T has a destructor.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\has_destructor.rs","byte_start":406914,"byte_end":406946,"line_start":23,"line_end":23,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":3280},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\has_type_param_in_array.rs","byte_start":413236,"byte_end":413259,"line_start":25,"line_end":25,"column_start":12,"column_end":35},"name":"HasTypeParameterInArray","qualname":"::ir::analysis::has_type_param_in_array::HasTypeParameterInArray","value":"HasTypeParameterInArray {  }","parent":null,"children":[{"krate":0,"index":3282},{"krate":0,"index":3283},{"krate":0,"index":3284}],"decl_id":null,"docs":" An analysis that finds for each IR item whether it has array or not.","sig":null,"attributes":[{"value":"/ An analysis that finds for each IR item whether it has array or not.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\has_type_param_in_array.rs","byte_start":412532,"byte_end":412604,"line_start":11,"line_end":11,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\has_type_param_in_array.rs","byte_start":412605,"byte_end":412608,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ We use the monotone constraint function `has_type_parameter_in_array`,","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\has_type_param_in_array.rs","byte_start":412609,"byte_end":412683,"line_start":13,"line_end":13,"column_start":1,"column_end":75}},{"value":"/ defined as follows:","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\has_type_param_in_array.rs","byte_start":412684,"byte_end":412707,"line_start":14,"line_end":14,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\has_type_param_in_array.rs","byte_start":412708,"byte_end":412711,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * If T is Array type with type parameter, T trivially has.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\has_type_param_in_array.rs","byte_start":412712,"byte_end":412774,"line_start":16,"line_end":16,"column_start":1,"column_end":63}},{"value":"/ * If T is a type alias, a templated alias or an indirection to another type,","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\has_type_param_in_array.rs","byte_start":412775,"byte_end":412855,"line_start":17,"line_end":17,"column_start":1,"column_end":81}},{"value":"/   it has type parameter in array if the type T refers to has.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\has_type_param_in_array.rs","byte_start":412856,"byte_end":412921,"line_start":18,"line_end":18,"column_start":1,"column_end":66}},{"value":"/ * If T is a compound type, it has array if any of base memter or field","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\has_type_param_in_array.rs","byte_start":412922,"byte_end":412996,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/   has type paramter in array.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\has_type_param_in_array.rs","byte_start":412997,"byte_end":413030,"line_start":20,"line_end":20,"column_start":1,"column_end":34}},{"value":"/ * If T is an instantiation of an abstract template definition, T has","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\has_type_param_in_array.rs","byte_start":413031,"byte_end":413103,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/   type parameter in array if any of the template arguments or template definition","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\has_type_param_in_array.rs","byte_start":413104,"byte_end":413189,"line_start":22,"line_end":22,"column_start":1,"column_end":86}},{"value":"/   has.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\has_type_param_in_array.rs","byte_start":413190,"byte_end":413200,"line_start":23,"line_end":23,"column_start":1,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":3291},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\has_float.rs","byte_start":422121,"byte_end":422129,"line_start":25,"line_end":25,"column_start":12,"column_end":20},"name":"HasFloat","qualname":"::ir::analysis::has_float::HasFloat","value":"HasFloat {  }","parent":null,"children":[{"krate":0,"index":3293},{"krate":0,"index":3294},{"krate":0,"index":3295}],"decl_id":null,"docs":" An analysis that finds for each IR item whether it has float or not.","sig":null,"attributes":[{"value":"/ An analysis that finds for each IR item whether it has float or not.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\has_float.rs","byte_start":421502,"byte_end":421574,"line_start":11,"line_end":11,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\has_float.rs","byte_start":421575,"byte_end":421578,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ We use the monotone constraint function `has_float`,","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\has_float.rs","byte_start":421579,"byte_end":421635,"line_start":13,"line_end":13,"column_start":1,"column_end":57}},{"value":"/ defined as follows:","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\has_float.rs","byte_start":421636,"byte_end":421659,"line_start":14,"line_end":14,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\has_float.rs","byte_start":421660,"byte_end":421663,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * If T is float or complex float, T trivially has.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\has_float.rs","byte_start":421664,"byte_end":421718,"line_start":16,"line_end":16,"column_start":1,"column_end":55}},{"value":"/ * If T is a type alias, a templated alias or an indirection to another type,","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\has_float.rs","byte_start":421719,"byte_end":421799,"line_start":17,"line_end":17,"column_start":1,"column_end":81}},{"value":"/   it has float if the type T refers to has.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\has_float.rs","byte_start":421800,"byte_end":421847,"line_start":18,"line_end":18,"column_start":1,"column_end":48}},{"value":"/ * If T is a compound type, it has float if any of base memter or field","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\has_float.rs","byte_start":421848,"byte_end":421922,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/   has.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\has_float.rs","byte_start":421923,"byte_end":421933,"line_start":20,"line_end":20,"column_start":1,"column_end":11}},{"value":"/ * If T is an instantiation of an abstract template definition, T has","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\has_float.rs","byte_start":421934,"byte_end":422006,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/   float if any of the template arguments or template definition","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\has_float.rs","byte_start":422007,"byte_end":422074,"line_start":22,"line_end":22,"column_start":1,"column_end":68}},{"value":"/   has.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\has_float.rs","byte_start":422075,"byte_end":422085,"line_start":23,"line_end":23,"column_start":1,"column_end":11}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3303},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\sizedness.rs","byte_start":430966,"byte_end":430975,"line_start":34,"line_end":34,"column_start":5,"column_end":14},"name":"ZeroSized","qualname":"::ir::analysis::sizedness::SizednessResult::ZeroSized","value":"SizednessResult::ZeroSized","parent":{"krate":0,"index":3302},"children":[],"decl_id":null,"docs":" The type is zero-sized.","sig":null,"attributes":[{"value":"/ The type is zero-sized.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\sizedness.rs","byte_start":430724,"byte_end":430751,"line_start":29,"line_end":29,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\sizedness.rs","byte_start":430756,"byte_end":430759,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ This means that if it is a C++ type, and is not being used as a base","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\sizedness.rs","byte_start":430764,"byte_end":430836,"line_start":31,"line_end":31,"column_start":5,"column_end":77}},{"value":"/ member, then we must add an `_address` byte to enforce the","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\sizedness.rs","byte_start":430841,"byte_end":430903,"line_start":32,"line_end":32,"column_start":5,"column_end":67}},{"value":"/ unique-address-per-distinct-object-instance rule.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\sizedness.rs","byte_start":430908,"byte_end":430961,"line_start":33,"line_end":33,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3305},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\sizedness.rs","byte_start":431663,"byte_end":431681,"line_start":56,"line_end":56,"column_start":5,"column_end":23},"name":"DependsOnTypeParam","qualname":"::ir::analysis::sizedness::SizednessResult::DependsOnTypeParam","value":"SizednessResult::DependsOnTypeParam","parent":{"krate":0,"index":3302},"children":[],"decl_id":null,"docs":" Whether this type is zero-sized or not depends on whether a type\n parameter is zero-sized or not.","sig":null,"attributes":[{"value":"/ Whether this type is zero-sized or not depends on whether a type","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\sizedness.rs","byte_start":430982,"byte_end":431050,"line_start":36,"line_end":36,"column_start":5,"column_end":73}},{"value":"/ parameter is zero-sized or not.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\sizedness.rs","byte_start":431055,"byte_end":431090,"line_start":37,"line_end":37,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\sizedness.rs","byte_start":431095,"byte_end":431098,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ For example, given these definitions:","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\sizedness.rs","byte_start":431103,"byte_end":431144,"line_start":39,"line_end":39,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\sizedness.rs","byte_start":431149,"byte_end":431152,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ ```c++","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\sizedness.rs","byte_start":431157,"byte_end":431167,"line_start":41,"line_end":41,"column_start":5,"column_end":15}},{"value":"/ template<class T>","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\sizedness.rs","byte_start":431172,"byte_end":431193,"line_start":42,"line_end":42,"column_start":5,"column_end":26}},{"value":"/ class Flongo : public T {};","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\sizedness.rs","byte_start":431198,"byte_end":431229,"line_start":43,"line_end":43,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\sizedness.rs","byte_start":431234,"byte_end":431237,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ class Empty {};","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\sizedness.rs","byte_start":431242,"byte_end":431261,"line_start":45,"line_end":45,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\sizedness.rs","byte_start":431266,"byte_end":431269,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ class NonEmpty { int x; };","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\sizedness.rs","byte_start":431274,"byte_end":431304,"line_start":47,"line_end":47,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\sizedness.rs","byte_start":431309,"byte_end":431316,"line_start":48,"line_end":48,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\sizedness.rs","byte_start":431321,"byte_end":431324,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ Then `Flongo<Empty>` is zero-sized, and needs an `_address` byte","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\sizedness.rs","byte_start":431329,"byte_end":431397,"line_start":50,"line_end":50,"column_start":5,"column_end":73}},{"value":"/ inserted, while `Flongo<NonEmpty>` is *not* zero-sized, and should *not*","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\sizedness.rs","byte_start":431402,"byte_end":431478,"line_start":51,"line_end":51,"column_start":5,"column_end":81}},{"value":"/ have an `_address` byte inserted.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\sizedness.rs","byte_start":431483,"byte_end":431520,"line_start":52,"line_end":52,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\sizedness.rs","byte_start":431525,"byte_end":431528,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ We don't properly handle this situation correctly right now:","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\sizedness.rs","byte_start":431533,"byte_end":431597,"line_start":54,"line_end":54,"column_start":5,"column_end":69}},{"value":"/ https://github.com/rust-lang/rust-bindgen/issues/586","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\sizedness.rs","byte_start":431602,"byte_end":431658,"line_start":55,"line_end":55,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3307},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\sizedness.rs","byte_start":431939,"byte_end":431951,"line_start":62,"line_end":62,"column_start":5,"column_end":17},"name":"NonZeroSized","qualname":"::ir::analysis::sizedness::SizednessResult::NonZeroSized","value":"SizednessResult::NonZeroSized","parent":{"krate":0,"index":3302},"children":[],"decl_id":null,"docs":" Has some size that is known to be greater than zero. That doesn't mean\n it has a static size, but it is not zero sized for sure. In other words,\n it might contain an incomplete array or some other dynamically sized\n type.\n","sig":null,"attributes":[{"value":"/ Has some size that is known to be greater than zero. That doesn't mean","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\sizedness.rs","byte_start":431688,"byte_end":431762,"line_start":58,"line_end":58,"column_start":5,"column_end":79}},{"value":"/ it has a static size, but it is not zero sized for sure. In other words,","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\sizedness.rs","byte_start":431767,"byte_end":431843,"line_start":59,"line_end":59,"column_start":5,"column_end":81}},{"value":"/ it might contain an incomplete array or some other dynamically sized","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\sizedness.rs","byte_start":431848,"byte_end":431920,"line_start":60,"line_end":60,"column_start":5,"column_end":77}},{"value":"/ type.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\sizedness.rs","byte_start":431925,"byte_end":431934,"line_start":61,"line_end":61,"column_start":5,"column_end":14}}]},{"kind":"Enum","id":{"krate":0,"index":3302},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\sizedness.rs","byte_start":430702,"byte_end":430717,"line_start":28,"line_end":28,"column_start":10,"column_end":25},"name":"SizednessResult","qualname":"::ir::analysis::sizedness::SizednessResult","value":"pub enum SizednessResult {\n\n    /// The type is zero-sized.\n    ///\n    /// This means that if it is a C++ type, and is not being used as a base\n    /// member, then we must add an `_address` byte to enforce the\n    /// unique-address-per-distinct-object-instance rule.\n    ZeroSized,\n\n    /// Whether this type is zero-sized or not depends on whether a type\n    /// parameter is zero-sized or not.\n    ///\n    /// For example, given these definitions:\n    ///\n    /// ```c++\n    /// template<class T>\n    /// class Flongo : public T {};\n    ///\n    /// class Empty {};\n    ///\n    /// class NonEmpty { int x; };\n    /// ```\n    ///\n    /// Then `Flongo<Empty>` is zero-sized, and needs an `_address` byte\n    /// inserted, while `Flongo<NonEmpty>` is *not* zero-sized, and should *not*\n    /// have an `_address` byte inserted.\n    ///\n    /// We don't properly handle this situation correctly right now:\n    /// https://github.com/rust-lang/rust-bindgen/issues/586\n    DependsOnTypeParam,\n\n    /// Has some size that is known to be greater than zero. That doesn't mean\n    /// it has a static size, but it is not zero sized for sure. In other words,\n    /// it might contain an incomplete array or some other dynamically sized\n    /// type.\n    NonZeroSized,\n}","parent":null,"children":[{"krate":0,"index":3303},{"krate":0,"index":3305},{"krate":0,"index":3307}],"decl_id":null,"docs":" The result of the `Sizedness` analysis for an individual item.","sig":null,"attributes":[{"value":"/ The result of the `Sizedness` analysis for an individual item.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\sizedness.rs","byte_start":430197,"byte_end":430263,"line_start":13,"line_end":13,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\sizedness.rs","byte_start":430264,"byte_end":430267,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ This is a chain lattice of the form:","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\sizedness.rs","byte_start":430268,"byte_end":430308,"line_start":15,"line_end":15,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\sizedness.rs","byte_start":430309,"byte_end":430312,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\sizedness.rs","byte_start":430313,"byte_end":430326,"line_start":17,"line_end":17,"column_start":1,"column_end":14}},{"value":"/                   NonZeroSized","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\sizedness.rs","byte_start":430327,"byte_end":430361,"line_start":18,"line_end":18,"column_start":1,"column_end":35}},{"value":"/                        |","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\sizedness.rs","byte_start":430362,"byte_end":430390,"line_start":19,"line_end":19,"column_start":1,"column_end":29}},{"value":"/                DependsOnTypeParam","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\sizedness.rs","byte_start":430391,"byte_end":430428,"line_start":20,"line_end":20,"column_start":1,"column_end":38}},{"value":"/                        |","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\sizedness.rs","byte_start":430429,"byte_end":430457,"line_start":21,"line_end":21,"column_start":1,"column_end":29}},{"value":"/                     ZeroSized","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\sizedness.rs","byte_start":430458,"byte_end":430491,"line_start":22,"line_end":22,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\sizedness.rs","byte_start":430492,"byte_end":430499,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\sizedness.rs","byte_start":430500,"byte_end":430503,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ We initially assume that all types are `ZeroSized` and then update our","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\sizedness.rs","byte_start":430504,"byte_end":430578,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/ understanding as we learn more about each type.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\sizedness.rs","byte_start":430579,"byte_end":430630,"line_start":26,"line_end":26,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1185},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\sizedness.rs","byte_start":432152,"byte_end":432156,"line_start":73,"line_end":73,"column_start":12,"column_end":16},"name":"join","qualname":"<SizednessResult>::join","value":"pub fn join(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Take the least upper bound of `self` and `rhs`.\n","sig":null,"attributes":[{"value":"/ Take the least upper bound of `self` and `rhs`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\sizedness.rs","byte_start":432089,"byte_end":432140,"line_start":72,"line_end":72,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":3324},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\sizedness.rs","byte_start":432988,"byte_end":433005,"line_start":105,"line_end":105,"column_start":12,"column_end":29},"name":"SizednessAnalysis","qualname":"::ir::analysis::sizedness::SizednessAnalysis","value":"SizednessAnalysis {  }","parent":null,"children":[{"krate":0,"index":3326},{"krate":0,"index":3327},{"krate":0,"index":3328}],"decl_id":null,"docs":" An analysis that computes the sizedness of all types.","sig":null,"attributes":[{"value":"/ An analysis that computes the sizedness of all types.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\sizedness.rs","byte_start":432514,"byte_end":432571,"line_start":92,"line_end":92,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\sizedness.rs","byte_start":432572,"byte_end":432575,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ * For types with known sizes -- for example pointers, scalars, etc... --","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\sizedness.rs","byte_start":432576,"byte_end":432652,"line_start":94,"line_end":94,"column_start":1,"column_end":77}},{"value":"/ they are assigned `NonZeroSized`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\sizedness.rs","byte_start":432653,"byte_end":432690,"line_start":95,"line_end":95,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\sizedness.rs","byte_start":432691,"byte_end":432694,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ * For compound structure types with one or more fields, they are assigned","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\sizedness.rs","byte_start":432695,"byte_end":432772,"line_start":97,"line_end":97,"column_start":1,"column_end":78}},{"value":"/ `NonZeroSized`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\sizedness.rs","byte_start":432773,"byte_end":432792,"line_start":98,"line_end":98,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\sizedness.rs","byte_start":432793,"byte_end":432796,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ * For compound structure types without any fields, the results of the bases","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\sizedness.rs","byte_start":432797,"byte_end":432876,"line_start":100,"line_end":100,"column_start":1,"column_end":80}},{"value":"/ are `join`ed.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\sizedness.rs","byte_start":432877,"byte_end":432894,"line_start":101,"line_end":101,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\sizedness.rs","byte_start":432895,"byte_end":432898,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ * For type parameters, `DependsOnTypeParam` is assigned.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\sizedness.rs","byte_start":432899,"byte_end":432959,"line_start":103,"line_end":103,"column_start":1,"column_end":61}}]},{"kind":"Type","id":{"krate":0,"index":1233},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\mod.rs","byte_start":339042,"byte_end":339046,"line_start":81,"line_end":81,"column_start":10,"column_end":14},"name":"Node","qualname":"::ir::analysis::MonotoneFramework::Node","value":"type Node: Copy;","parent":{"krate":0,"index":1232},"children":[],"decl_id":null,"docs":" The type of node in our dependency graph.","sig":null,"attributes":[{"value":"/ The type of node in our dependency graph.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\mod.rs","byte_start":338836,"byte_end":338881,"line_start":77,"line_end":77,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\mod.rs","byte_start":338886,"byte_end":338889,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ This is just generic (and not `ItemId`) so that we can easily unit test","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\mod.rs","byte_start":338894,"byte_end":338969,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ without constructing real `Item`s and their `ItemId`s.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\mod.rs","byte_start":338974,"byte_end":339032,"line_start":80,"line_end":80,"column_start":5,"column_end":63}}]},{"kind":"Type","id":{"krate":0,"index":1234},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\mod.rs","byte_start":339327,"byte_end":339332,"line_start":88,"line_end":88,"column_start":10,"column_end":15},"name":"Extra","qualname":"::ir::analysis::MonotoneFramework::Extra","value":"type Extra: Sized;","parent":{"krate":0,"index":1232},"children":[],"decl_id":null,"docs":" Any extra data that is needed during computation.","sig":null,"attributes":[{"value":"/ Any extra data that is needed during computation.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\mod.rs","byte_start":339059,"byte_end":339112,"line_start":83,"line_end":83,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\mod.rs","byte_start":339117,"byte_end":339120,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ Again, this is just generic (and not `&BindgenContext`) so that we can","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\mod.rs","byte_start":339125,"byte_end":339199,"line_start":85,"line_end":85,"column_start":5,"column_end":79}},{"value":"/ easily unit test without constructing real `BindgenContext`s full of","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\mod.rs","byte_start":339204,"byte_end":339276,"line_start":86,"line_end":86,"column_start":5,"column_end":77}},{"value":"/ real `Item`s and real `ItemId`s.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\mod.rs","byte_start":339281,"byte_end":339317,"line_start":87,"line_end":87,"column_start":5,"column_end":41}}]},{"kind":"Type","id":{"krate":0,"index":1235},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\mod.rs","byte_start":339529,"byte_end":339535,"line_start":93,"line_end":93,"column_start":10,"column_end":16},"name":"Output","qualname":"::ir::analysis::MonotoneFramework::Output","value":"type Output: From<Self> + fmt::Debug;","parent":{"krate":0,"index":1232},"children":[],"decl_id":null,"docs":" The final output of this analysis. Once we have reached a fix-point, we\n convert `self` into this type, and return it as the final result of the\n analysis.\n","sig":null,"attributes":[{"value":"/ The final output of this analysis. Once we have reached a fix-point, we","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\mod.rs","byte_start":339346,"byte_end":339421,"line_start":90,"line_end":90,"column_start":5,"column_end":80}},{"value":"/ convert `self` into this type, and return it as the final result of the","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\mod.rs","byte_start":339426,"byte_end":339501,"line_start":91,"line_end":91,"column_start":5,"column_end":80}},{"value":"/ analysis.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\mod.rs","byte_start":339506,"byte_end":339519,"line_start":92,"line_end":92,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3350},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\annotations.rs","byte_start":441915,"byte_end":441919,"line_start":13,"line_end":13,"column_start":5,"column_end":9},"name":"None","qualname":"::ir::annotations::FieldAccessorKind::None","value":"FieldAccessorKind::None","parent":{"krate":0,"index":3349},"children":[],"decl_id":null,"docs":" No accessor.\n","sig":null,"attributes":[{"value":"/ No accessor.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\annotations.rs","byte_start":441894,"byte_end":441910,"line_start":12,"line_end":12,"column_start":5,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3352},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\annotations.rs","byte_start":441949,"byte_end":441956,"line_start":15,"line_end":15,"column_start":5,"column_end":12},"name":"Regular","qualname":"::ir::annotations::FieldAccessorKind::Regular","value":"FieldAccessorKind::Regular","parent":{"krate":0,"index":3349},"children":[],"decl_id":null,"docs":" Plain accessor.\n","sig":null,"attributes":[{"value":"/ Plain accessor.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\annotations.rs","byte_start":441925,"byte_end":441944,"line_start":14,"line_end":14,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3354},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\annotations.rs","byte_start":441987,"byte_end":441993,"line_start":17,"line_end":17,"column_start":5,"column_end":11},"name":"Unsafe","qualname":"::ir::annotations::FieldAccessorKind::Unsafe","value":"FieldAccessorKind::Unsafe","parent":{"krate":0,"index":3349},"children":[],"decl_id":null,"docs":" Unsafe accessor.\n","sig":null,"attributes":[{"value":"/ Unsafe accessor.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\annotations.rs","byte_start":441962,"byte_end":441982,"line_start":16,"line_end":16,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3356},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\annotations.rs","byte_start":442027,"byte_end":442036,"line_start":19,"line_end":19,"column_start":5,"column_end":14},"name":"Immutable","qualname":"::ir::annotations::FieldAccessorKind::Immutable","value":"FieldAccessorKind::Immutable","parent":{"krate":0,"index":3349},"children":[],"decl_id":null,"docs":" Immutable accessor.\n","sig":null,"attributes":[{"value":"/ Immutable accessor.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\annotations.rs","byte_start":441999,"byte_end":442022,"line_start":18,"line_end":18,"column_start":5,"column_end":28}}]},{"kind":"Enum","id":{"krate":0,"index":3349},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\annotations.rs","byte_start":441870,"byte_end":441887,"line_start":11,"line_end":11,"column_start":10,"column_end":27},"name":"FieldAccessorKind","qualname":"::ir::annotations::FieldAccessorKind","value":"pub enum FieldAccessorKind {\n\n    /// No accessor.\n    None,\n\n    /// Plain accessor.\n    Regular,\n\n    /// Unsafe accessor.\n    Unsafe,\n\n    /// Immutable accessor.\n    Immutable,\n}","parent":null,"children":[{"krate":0,"index":3350},{"krate":0,"index":3352},{"krate":0,"index":3354},{"krate":0,"index":3356}],"decl_id":null,"docs":" What kind of accessor should we provide for a field?\n","sig":null,"attributes":[{"value":"/ What kind of accessor should we provide for a field?","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\annotations.rs","byte_start":441763,"byte_end":441819,"line_start":9,"line_end":9,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":3366},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\annotations.rs","byte_start":442293,"byte_end":442304,"line_start":29,"line_end":29,"column_start":12,"column_end":23},"name":"Annotations","qualname":"::ir::annotations::Annotations","value":"Annotations {  }","parent":null,"children":[{"krate":0,"index":3367},{"krate":0,"index":3368},{"krate":0,"index":3369},{"krate":0,"index":3370},{"krate":0,"index":3371},{"krate":0,"index":3372},{"krate":0,"index":3373},{"krate":0,"index":3374}],"decl_id":null,"docs":" Annotations for a given item, or a field.","sig":null,"attributes":[{"value":"/ Annotations for a given item, or a field.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\annotations.rs","byte_start":442041,"byte_end":442086,"line_start":22,"line_end":22,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\annotations.rs","byte_start":442087,"byte_end":442090,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ You can see the kind of comments that are accepted in the Doxygen","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\annotations.rs","byte_start":442091,"byte_end":442160,"line_start":24,"line_end":24,"column_start":1,"column_end":70}},{"value":"/ documentation:","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\annotations.rs","byte_start":442161,"byte_end":442179,"line_start":25,"line_end":25,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\annotations.rs","byte_start":442180,"byte_end":442183,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ http://www.stack.nl/~dimitri/doxygen/manual/docblocks.html","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\annotations.rs","byte_start":442184,"byte_end":442246,"line_start":27,"line_end":27,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1260},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\annotations.rs","byte_start":444391,"byte_end":444394,"line_start":92,"line_end":92,"column_start":12,"column_end":15},"name":"new","qualname":"<Annotations>::new","value":"pub fn new(&clang::Cursor) -> Option<Annotations>","parent":null,"children":[],"decl_id":null,"docs":" Construct new annotations for the given cursor and its bindgen comments\n (if any).\n","sig":null,"attributes":[{"value":"/ Construct new annotations for the given cursor and its bindgen comments","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\annotations.rs","byte_start":444286,"byte_end":444361,"line_start":90,"line_end":90,"column_start":5,"column_end":80}},{"value":"/ (if any).","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\annotations.rs","byte_start":444366,"byte_end":444379,"line_start":91,"line_end":91,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1261},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\annotations.rs","byte_start":444732,"byte_end":444736,"line_start":105,"line_end":105,"column_start":12,"column_end":16},"name":"hide","qualname":"<Annotations>::hide","value":"pub fn hide(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Should this type be hidden?\n","sig":null,"attributes":[{"value":"/ Should this type be hidden?","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\annotations.rs","byte_start":444689,"byte_end":444720,"line_start":104,"line_end":104,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1262},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\annotations.rs","byte_start":444826,"byte_end":444832,"line_start":110,"line_end":110,"column_start":12,"column_end":18},"name":"opaque","qualname":"<Annotations>::opaque","value":"pub fn opaque(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Should this type be opaque?\n","sig":null,"attributes":[{"value":"/ Should this type be opaque?","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\annotations.rs","byte_start":444783,"byte_end":444814,"line_start":109,"line_end":109,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1263},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\annotations.rs","byte_start":445459,"byte_end":445473,"line_start":136,"line_end":136,"column_start":12,"column_end":26},"name":"use_instead_of","qualname":"<Annotations>::use_instead_of","value":"pub fn use_instead_of(&Self) -> Option<&[String]>","parent":null,"children":[],"decl_id":null,"docs":" For a given type, indicates the type it should replace.","sig":null,"attributes":[{"value":"/ For a given type, indicates the type it should replace.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\annotations.rs","byte_start":444881,"byte_end":444940,"line_start":114,"line_end":114,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\annotations.rs","byte_start":444945,"byte_end":444948,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ For example, in the following code:","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\annotations.rs","byte_start":444953,"byte_end":444992,"line_start":116,"line_end":116,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\annotations.rs","byte_start":444997,"byte_end":445000,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ ```cpp","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\annotations.rs","byte_start":445005,"byte_end":445015,"line_start":118,"line_end":118,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\annotations.rs","byte_start":445020,"byte_end":445023,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ /** <div rustbindgen replaces=\"Bar\"></div> */","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\annotations.rs","byte_start":445028,"byte_end":445077,"line_start":120,"line_end":120,"column_start":5,"column_end":54}},{"value":"/ struct Foo { int x; };","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\annotations.rs","byte_start":445082,"byte_end":445108,"line_start":121,"line_end":121,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\annotations.rs","byte_start":445113,"byte_end":445116,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ struct Bar { char foo; };","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\annotations.rs","byte_start":445121,"byte_end":445150,"line_start":123,"line_end":123,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\annotations.rs","byte_start":445155,"byte_end":445162,"line_start":124,"line_end":124,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\annotations.rs","byte_start":445167,"byte_end":445170,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ the generated code would look something like:","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\annotations.rs","byte_start":445175,"byte_end":445224,"line_start":126,"line_end":126,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\annotations.rs","byte_start":445229,"byte_end":445232,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\annotations.rs","byte_start":445237,"byte_end":445244,"line_start":128,"line_end":128,"column_start":5,"column_end":12}},{"value":"/ /** <div rustbindgen replaces=\"Bar\"></div> */","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\annotations.rs","byte_start":445249,"byte_end":445298,"line_start":129,"line_end":129,"column_start":5,"column_end":54}},{"value":"/ struct Bar {","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\annotations.rs","byte_start":445303,"byte_end":445319,"line_start":130,"line_end":130,"column_start":5,"column_end":21}},{"value":"/     x: ::std::os::raw::c_int,","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\annotations.rs","byte_start":445324,"byte_end":445357,"line_start":131,"line_end":131,"column_start":5,"column_end":38}},{"value":"/ };","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\annotations.rs","byte_start":445362,"byte_end":445368,"line_start":132,"line_end":132,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\annotations.rs","byte_start":445373,"byte_end":445380,"line_start":133,"line_end":133,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\annotations.rs","byte_start":445385,"byte_end":445388,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ That is, code for `Foo` is used to generate `Bar`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\annotations.rs","byte_start":445393,"byte_end":445447,"line_start":135,"line_end":135,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1265},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\annotations.rs","byte_start":445646,"byte_end":445653,"line_start":141,"line_end":141,"column_start":12,"column_end":19},"name":"derives","qualname":"<Annotations>::derives","value":"pub fn derives(&Self) -> &[String]","parent":null,"children":[],"decl_id":null,"docs":" The list of derives that have been specified in this annotation.\n","sig":null,"attributes":[{"value":"/ The list of derives that have been specified in this annotation.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\annotations.rs","byte_start":445566,"byte_end":445634,"line_start":140,"line_end":140,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1266},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\annotations.rs","byte_start":445771,"byte_end":445784,"line_start":146,"line_end":146,"column_start":12,"column_end":25},"name":"disallow_copy","qualname":"<Annotations>::disallow_copy","value":"pub fn disallow_copy(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Should we avoid implementing the `Copy` trait?\n","sig":null,"attributes":[{"value":"/ Should we avoid implementing the `Copy` trait?","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\annotations.rs","byte_start":445709,"byte_end":445759,"line_start":145,"line_end":145,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1267},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\annotations.rs","byte_start":445885,"byte_end":445899,"line_start":151,"line_end":151,"column_start":12,"column_end":26},"name":"private_fields","qualname":"<Annotations>::private_fields","value":"pub fn private_fields(&Self) -> Option<bool>","parent":null,"children":[],"decl_id":null,"docs":" Should the fields be private?\n","sig":null,"attributes":[{"value":"/ Should the fields be private?","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\annotations.rs","byte_start":445840,"byte_end":445873,"line_start":150,"line_end":150,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1268},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\annotations.rs","byte_start":446044,"byte_end":446057,"line_start":156,"line_end":156,"column_start":12,"column_end":25},"name":"accessor_kind","qualname":"<Annotations>::accessor_kind","value":"pub fn accessor_kind(&Self) -> Option<FieldAccessorKind>","parent":null,"children":[],"decl_id":null,"docs":" What kind of accessors should we provide for this type's fields?\n","sig":null,"attributes":[{"value":"/ What kind of accessors should we provide for this type's fields?","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\annotations.rs","byte_start":445964,"byte_end":446032,"line_start":155,"line_end":155,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1272},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\annotations.rs","byte_start":447646,"byte_end":447667,"line_start":199,"line_end":199,"column_start":12,"column_end":33},"name":"constify_enum_variant","qualname":"<Annotations>::constify_enum_variant","value":"pub fn constify_enum_variant(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether we've parsed a \"constant\" attribute.\n","sig":null,"attributes":[{"value":"/ Returns whether we've parsed a \"constant\" attribute.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\annotations.rs","byte_start":447578,"byte_end":447634,"line_start":198,"line_end":198,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3397},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":452134,"byte_end":452140,"line_start":26,"line_end":26,"column_start":5,"column_end":11},"name":"Struct","qualname":"::ir::comp::CompKind::Struct","value":"CompKind::Struct","parent":{"krate":0,"index":3396},"children":[],"decl_id":null,"docs":" A struct.\n","sig":null,"attributes":[{"value":"/ A struct.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":452116,"byte_end":452129,"line_start":25,"line_end":25,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3399},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":452163,"byte_end":452168,"line_start":28,"line_end":28,"column_start":5,"column_end":10},"name":"Union","qualname":"::ir::comp::CompKind::Union","value":"CompKind::Union","parent":{"krate":0,"index":3396},"children":[],"decl_id":null,"docs":" A union.\n","sig":null,"attributes":[{"value":"/ A union.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":452146,"byte_end":452158,"line_start":27,"line_end":27,"column_start":5,"column_end":17}}]},{"kind":"Enum","id":{"krate":0,"index":3396},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":452101,"byte_end":452109,"line_start":24,"line_end":24,"column_start":10,"column_end":18},"name":"CompKind","qualname":"::ir::comp::CompKind","value":"pub enum CompKind {\n\n    /// A struct.\n    Struct,\n\n    /// A union.\n    Union,\n}","parent":null,"children":[{"krate":0,"index":3397},{"krate":0,"index":3399}],"decl_id":null,"docs":" The kind of compound type.\n","sig":null,"attributes":[{"value":"/ The kind of compound type.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":452020,"byte_end":452050,"line_start":22,"line_end":22,"column_start":1,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3410},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":452369,"byte_end":452380,"line_start":36,"line_end":36,"column_start":5,"column_end":16},"name":"Constructor","qualname":"::ir::comp::MethodKind::Constructor","value":"MethodKind::Constructor","parent":{"krate":0,"index":3409},"children":[],"decl_id":null,"docs":" A constructor. We represent it as method for convenience, to avoid code\n duplication.\n","sig":null,"attributes":[{"value":"/ A constructor. We represent it as method for convenience, to avoid code","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":452268,"byte_end":452343,"line_start":34,"line_end":34,"column_start":5,"column_end":80}},{"value":"/ duplication.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":452348,"byte_end":452364,"line_start":35,"line_end":35,"column_start":5,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3412},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":452408,"byte_end":452418,"line_start":38,"line_end":38,"column_start":5,"column_end":15},"name":"Destructor","qualname":"::ir::comp::MethodKind::Destructor","value":"MethodKind::Destructor","parent":{"krate":0,"index":3409},"children":[],"decl_id":null,"docs":" A destructor.\n","sig":null,"attributes":[{"value":"/ A destructor.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":452386,"byte_end":452403,"line_start":37,"line_end":37,"column_start":5,"column_end":22}}]},{"kind":"StructVariant","id":{"krate":0,"index":3414},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":452454,"byte_end":452471,"line_start":40,"line_end":40,"column_start":5,"column_end":22},"name":"VirtualDestructor","qualname":"::ir::comp::MethodKind::VirtualDestructor","value":"MethodKind::VirtualDestructor { pure_virtual }","parent":{"krate":0,"index":3409},"children":[],"decl_id":null,"docs":" A virtual destructor.\n","sig":null,"attributes":[{"value":"/ A virtual destructor.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":452424,"byte_end":452449,"line_start":39,"line_end":39,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3416},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":452577,"byte_end":452583,"line_start":45,"line_end":45,"column_start":5,"column_end":11},"name":"Static","qualname":"::ir::comp::MethodKind::Static","value":"MethodKind::Static","parent":{"krate":0,"index":3409},"children":[],"decl_id":null,"docs":" A static method.\n","sig":null,"attributes":[{"value":"/ A static method.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":452552,"byte_end":452572,"line_start":44,"line_end":44,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3418},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":452614,"byte_end":452620,"line_start":47,"line_end":47,"column_start":5,"column_end":11},"name":"Normal","qualname":"::ir::comp::MethodKind::Normal","value":"MethodKind::Normal","parent":{"krate":0,"index":3409},"children":[],"decl_id":null,"docs":" A normal method.\n","sig":null,"attributes":[{"value":"/ A normal method.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":452589,"byte_end":452609,"line_start":46,"line_end":46,"column_start":5,"column_end":25}}]},{"kind":"StructVariant","id":{"krate":0,"index":3420},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":452652,"byte_end":452659,"line_start":49,"line_end":49,"column_start":5,"column_end":12},"name":"Virtual","qualname":"::ir::comp::MethodKind::Virtual","value":"MethodKind::Virtual { pure_virtual }","parent":{"krate":0,"index":3409},"children":[],"decl_id":null,"docs":" A virtual method.\n","sig":null,"attributes":[{"value":"/ A virtual method.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":452626,"byte_end":452647,"line_start":48,"line_end":48,"column_start":5,"column_end":26}}]},{"kind":"Enum","id":{"krate":0,"index":3409},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":452251,"byte_end":452261,"line_start":33,"line_end":33,"column_start":10,"column_end":20},"name":"MethodKind","qualname":"::ir::comp::MethodKind","value":"pub enum MethodKind {\n\n    /// A constructor. We represent it as method for convenience, to avoid code\n    /// duplication.\n    Constructor,\n\n    /// A destructor.\n    Destructor,\n\n    /// A virtual destructor.\n    VirtualDestructor {\n        /// Whether it's pure virtual.\n        pure_virtual: bool,\n    },\n\n    /// A static method.\n    Static,\n\n    /// A normal method.\n    Normal,\n\n    /// A virtual method.\n    Virtual {\n        /// Whether it's pure virtual.\n        pure_virtual: bool,\n    },\n}","parent":null,"children":[{"krate":0,"index":3410},{"krate":0,"index":3412},{"krate":0,"index":3414},{"krate":0,"index":3416},{"krate":0,"index":3418},{"krate":0,"index":3420}],"decl_id":null,"docs":" The kind of C++ method.\n","sig":null,"attributes":[{"value":"/ The kind of C++ method.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":452173,"byte_end":452200,"line_start":31,"line_end":31,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1321},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":452805,"byte_end":452818,"line_start":57,"line_end":57,"column_start":12,"column_end":25},"name":"is_destructor","qualname":"<MethodKind>::is_destructor","value":"pub fn is_destructor(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a destructor method?\n","sig":null,"attributes":[{"value":"/ Is this a destructor method?","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":452761,"byte_end":452793,"line_start":56,"line_end":56,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1322},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":453063,"byte_end":453078,"line_start":67,"line_end":67,"column_start":12,"column_end":27},"name":"is_pure_virtual","qualname":"<MethodKind>::is_pure_virtual","value":"pub fn is_pure_virtual(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a pure virtual method?\n","sig":null,"attributes":[{"value":"/ Is this a pure virtual method?","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":453017,"byte_end":453051,"line_start":66,"line_end":66,"column_start":5,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":3431},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":453391,"byte_end":453397,"line_start":78,"line_end":78,"column_start":12,"column_end":18},"name":"Method","qualname":"::ir::comp::Method","value":"Method {  }","parent":null,"children":[{"krate":0,"index":3432},{"krate":0,"index":3433},{"krate":0,"index":3434}],"decl_id":null,"docs":" A struct representing a C++ method, either static, normal, or virtual.\n","sig":null,"attributes":[{"value":"/ A struct representing a C++ method, either static, normal, or virtual.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":453288,"byte_end":453362,"line_start":76,"line_end":76,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1324},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":453717,"byte_end":453720,"line_start":90,"line_end":90,"column_start":12,"column_end":15},"name":"new","qualname":"<Method>::new","value":"pub fn new(MethodKind, FunctionId, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Method`.\n","sig":null,"attributes":[{"value":"/ Construct a new `Method`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":453676,"byte_end":453705,"line_start":89,"line_end":89,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1325},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":453964,"byte_end":453968,"line_start":103,"line_end":103,"column_start":12,"column_end":16},"name":"kind","qualname":"<Method>::kind","value":"pub fn kind(&Self) -> MethodKind","parent":null,"children":[],"decl_id":null,"docs":" What kind of method is this?\n","sig":null,"attributes":[{"value":"/ What kind of method is this?","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":453920,"byte_end":453952,"line_start":102,"line_end":102,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1326},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":454059,"byte_end":454073,"line_start":108,"line_end":108,"column_start":12,"column_end":26},"name":"is_constructor","qualname":"<Method>::is_constructor","value":"pub fn is_constructor(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a constructor?\n","sig":null,"attributes":[{"value":"/ Is this a constructor?","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":454021,"byte_end":454047,"line_start":107,"line_end":107,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1327},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":454188,"byte_end":454198,"line_start":113,"line_end":113,"column_start":12,"column_end":22},"name":"is_virtual","qualname":"<Method>::is_virtual","value":"pub fn is_virtual(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a virtual method?\n","sig":null,"attributes":[{"value":"/ Is this a virtual method?","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":454147,"byte_end":454176,"line_start":112,"line_end":112,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1328},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":454426,"byte_end":454435,"line_start":122,"line_end":122,"column_start":12,"column_end":21},"name":"is_static","qualname":"<Method>::is_static","value":"pub fn is_static(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a static method?\n","sig":null,"attributes":[{"value":"/ Is this a static method?","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":454386,"byte_end":454414,"line_start":121,"line_end":121,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1329},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":454576,"byte_end":454585,"line_start":127,"line_end":127,"column_start":12,"column_end":21},"name":"signature","qualname":"<Method>::signature","value":"pub fn signature(&Self) -> FunctionId","parent":null,"children":[],"decl_id":null,"docs":" Get the id for the `Function` signature for this method.\n","sig":null,"attributes":[{"value":"/ Get the id for the `Function` signature for this method.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":454504,"byte_end":454564,"line_start":126,"line_end":126,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1330},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":454692,"byte_end":454700,"line_start":132,"line_end":132,"column_start":12,"column_end":20},"name":"is_const","qualname":"<Method>::is_const","value":"pub fn is_const(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a const qualified method?\n","sig":null,"attributes":[{"value":"/ Is this a const qualified method?","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":454643,"byte_end":454680,"line_start":131,"line_end":131,"column_start":5,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":3437},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":455680,"byte_end":455692,"line_start":166,"line_end":166,"column_start":12,"column_end":24},"name":"BitfieldUnit","qualname":"::ir::comp::BitfieldUnit","value":"BitfieldUnit {  }","parent":null,"children":[{"krate":0,"index":3438},{"krate":0,"index":3439},{"krate":0,"index":3440}],"decl_id":null,"docs":" A contiguous set of logical bitfields that live within the same physical\n allocation unit. See 9.2.4 [class.bit] in the C++ standard and [section\n 2.4.II.1 in the Itanium C++\n ABI](http://itanium-cxx-abi.github.io/cxx-abi/abi.html#class-types).\n","sig":null,"attributes":[{"value":"/ A contiguous set of logical bitfields that live within the same physical","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":455394,"byte_end":455470,"line_start":161,"line_end":161,"column_start":1,"column_end":77}},{"value":"/ allocation unit. See 9.2.4 [class.bit] in the C++ standard and [section","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":455471,"byte_end":455546,"line_start":162,"line_end":162,"column_start":1,"column_end":76}},{"value":"/ 2.4.II.1 in the Itanium C++","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":455547,"byte_end":455578,"line_start":163,"line_end":163,"column_start":1,"column_end":32}},{"value":"/ ABI](http://itanium-cxx-abi.github.io/cxx-abi/abi.html#class-types).","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":455579,"byte_end":455651,"line_start":164,"line_end":164,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1340},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":455970,"byte_end":455973,"line_start":176,"line_end":176,"column_start":12,"column_end":15},"name":"nth","qualname":"<BitfieldUnit>::nth","value":"pub fn nth(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the 1-based index of this bitfield unit within its containing\n struct. Useful for generating a Rust struct's field name for this unit\n of bitfields.\n","sig":null,"attributes":[{"value":"/ Get the 1-based index of this bitfield unit within its containing","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":455788,"byte_end":455857,"line_start":173,"line_end":173,"column_start":5,"column_end":74}},{"value":"/ struct. Useful for generating a Rust struct's field name for this unit","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":455862,"byte_end":455936,"line_start":174,"line_end":174,"column_start":5,"column_end":79}},{"value":"/ of bitfields.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":455941,"byte_end":455958,"line_start":175,"line_end":175,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1341},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":456087,"byte_end":456093,"line_start":181,"line_end":181,"column_start":12,"column_end":18},"name":"layout","qualname":"<BitfieldUnit>::layout","value":"pub fn layout(&Self) -> Layout","parent":null,"children":[],"decl_id":null,"docs":" Get the layout within which these bitfields reside.\n","sig":null,"attributes":[{"value":"/ Get the layout within which these bitfields reside.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":456020,"byte_end":456075,"line_start":180,"line_end":180,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1342},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":456195,"byte_end":456204,"line_start":186,"line_end":186,"column_start":12,"column_end":21},"name":"bitfields","qualname":"<BitfieldUnit>::bitfields","value":"pub fn bitfields(&Self) -> &[Bitfield]","parent":null,"children":[],"decl_id":null,"docs":" Get the bitfields within this unit.\n","sig":null,"attributes":[{"value":"/ Get the bitfields within this unit.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":456144,"byte_end":456183,"line_start":185,"line_end":185,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3444},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":456369,"byte_end":456379,"line_start":195,"line_end":195,"column_start":5,"column_end":15},"name":"DataMember","qualname":"::ir::comp::Field::DataMember","value":"Field::DataMember(FieldData)","parent":{"krate":0,"index":3443},"children":[],"decl_id":null,"docs":" A normal data member.\n","sig":null,"attributes":[{"value":"/ A normal data member.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":456339,"byte_end":456364,"line_start":194,"line_end":194,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3447},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":456467,"byte_end":456476,"line_start":198,"line_end":198,"column_start":5,"column_end":14},"name":"Bitfields","qualname":"::ir::comp::Field::Bitfields","value":"Field::Bitfields(BitfieldUnit)","parent":{"krate":0,"index":3443},"children":[],"decl_id":null,"docs":" A physical allocation unit containing many logical bitfields.\n","sig":null,"attributes":[{"value":"/ A physical allocation unit containing many logical bitfields.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":456397,"byte_end":456462,"line_start":197,"line_end":197,"column_start":5,"column_end":70}}]},{"kind":"Enum","id":{"krate":0,"index":3443},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":456327,"byte_end":456332,"line_start":193,"line_end":193,"column_start":10,"column_end":15},"name":"Field","qualname":"::ir::comp::Field","value":"pub enum Field {\n\n    /// A normal data member.\n    DataMember(FieldData),\n\n    /// A physical allocation unit containing many logical bitfields.\n    Bitfields(BitfieldUnit),\n}","parent":null,"children":[{"krate":0,"index":3444},{"krate":0,"index":3447}],"decl_id":null,"docs":" A struct representing a C++ field.\n","sig":null,"attributes":[{"value":"/ A struct representing a C++ field.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":456262,"byte_end":456300,"line_start":191,"line_end":191,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1344},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":456552,"byte_end":456558,"line_start":203,"line_end":203,"column_start":12,"column_end":18},"name":"layout","qualname":"<Field>::layout","value":"pub fn layout(&Self, &BindgenContext) -> Option<Layout>","parent":null,"children":[],"decl_id":null,"docs":" Get this field's layout.\n","sig":null,"attributes":[{"value":"/ Get this field's layout.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":456512,"byte_end":456540,"line_start":202,"line_end":202,"column_start":5,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":3452},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":459436,"byte_end":459444,"line_start":312,"line_end":312,"column_start":12,"column_end":20},"name":"Bitfield","qualname":"::ir::comp::Bitfield","value":"Bitfield {  }","parent":null,"children":[{"krate":0,"index":3453},{"krate":0,"index":3454},{"krate":0,"index":3455},{"krate":0,"index":3456}],"decl_id":null,"docs":" A logical bitfield within some physical bitfield allocation unit.\n","sig":null,"attributes":[{"value":"/ A logical bitfield within some physical bitfield allocation unit.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":459338,"byte_end":459407,"line_start":310,"line_end":310,"column_start":1,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1360},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":460378,"byte_end":460394,"line_start":346,"line_end":346,"column_start":12,"column_end":28},"name":"offset_into_unit","qualname":"<Bitfield>::offset_into_unit","value":"pub fn offset_into_unit(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the index of the bit within this bitfield's allocation unit where\n this bitfield begins.\n","sig":null,"attributes":[{"value":"/ Get the index of the bit within this bitfield's allocation unit where","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":460263,"byte_end":460336,"line_start":344,"line_end":344,"column_start":5,"column_end":78}},{"value":"/ this bitfield begins.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":460341,"byte_end":460366,"line_start":345,"line_end":345,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1361},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":460580,"byte_end":460584,"line_start":352,"line_end":352,"column_start":12,"column_end":16},"name":"mask","qualname":"<Bitfield>::mask","value":"pub fn mask(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Get the mask value that when &'ed with this bitfield's allocation unit\n produces this bitfield's value.\n","sig":null,"attributes":[{"value":"/ Get the mask value that when &'ed with this bitfield's allocation unit","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":460454,"byte_end":460528,"line_start":350,"line_end":350,"column_start":5,"column_end":79}},{"value":"/ produces this bitfield's value.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":460533,"byte_end":460568,"line_start":351,"line_end":351,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1363},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":460948,"byte_end":460953,"line_start":366,"line_end":366,"column_start":12,"column_end":17},"name":"width","qualname":"<Bitfield>::width","value":"pub fn width(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Get the bit width of this bitfield.\n","sig":null,"attributes":[{"value":"/ Get the bit width of this bitfield.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":460897,"byte_end":460936,"line_start":365,"line_end":365,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1364},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":461209,"byte_end":461220,"line_start":374,"line_end":374,"column_start":12,"column_end":23},"name":"getter_name","qualname":"<Bitfield>::getter_name","value":"pub fn getter_name(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Name of the generated Rust getter for this bitfield.","sig":null,"attributes":[{"value":"/ Name of the generated Rust getter for this bitfield.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":461025,"byte_end":461081,"line_start":370,"line_end":370,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":461086,"byte_end":461089,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ Panics if called before assigning bitfield accessor names or if","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":461094,"byte_end":461161,"line_start":372,"line_end":372,"column_start":5,"column_end":72}},{"value":"/ this bitfield have no name.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":461166,"byte_end":461197,"line_start":373,"line_end":373,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1365},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":461727,"byte_end":461738,"line_start":389,"line_end":389,"column_start":12,"column_end":23},"name":"setter_name","qualname":"<Bitfield>::setter_name","value":"pub fn setter_name(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Name of the generated Rust setter for this bitfield.","sig":null,"attributes":[{"value":"/ Name of the generated Rust setter for this bitfield.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":461543,"byte_end":461599,"line_start":385,"line_end":385,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":461604,"byte_end":461607,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ Panics if called before assigning bitfield accessor names or if","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":461612,"byte_end":461679,"line_start":387,"line_end":387,"column_start":5,"column_end":72}},{"value":"/ this bitfield have no name.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":461684,"byte_end":461715,"line_start":388,"line_end":388,"column_start":5,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3475},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":477432,"byte_end":477441,"line_start":879,"line_end":879,"column_start":12,"column_end":21},"name":"FieldData","qualname":"::ir::comp::FieldData","value":"FieldData {  }","parent":null,"children":[{"krate":0,"index":3476},{"krate":0,"index":3477},{"krate":0,"index":3478},{"krate":0,"index":3479},{"krate":0,"index":3480},{"krate":0,"index":3481},{"krate":0,"index":3482}],"decl_id":null,"docs":" Common data shared across different field types.\n","sig":null,"attributes":[{"value":"/ Common data shared across different field types.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":477344,"byte_end":477396,"line_start":877,"line_end":877,"column_start":1,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3488},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":478763,"byte_end":478769,"line_start":940,"line_end":940,"column_start":5,"column_end":11},"name":"Normal","qualname":"::ir::comp::BaseKind::Normal","value":"BaseKind::Normal","parent":{"krate":0,"index":3487},"children":[],"decl_id":null,"docs":" Normal inheritance, like:","sig":null,"attributes":[{"value":"/ Normal inheritance, like:","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":478663,"byte_end":478692,"line_start":935,"line_end":935,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":478697,"byte_end":478700,"line_start":936,"line_end":936,"column_start":5,"column_end":8}},{"value":"/ ```cpp","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":478705,"byte_end":478715,"line_start":937,"line_end":937,"column_start":5,"column_end":15}},{"value":"/ class A : public B {};","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":478720,"byte_end":478746,"line_start":938,"line_end":938,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":478751,"byte_end":478758,"line_start":939,"line_end":939,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3490},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":478883,"byte_end":478890,"line_start":946,"line_end":946,"column_start":5,"column_end":12},"name":"Virtual","qualname":"::ir::comp::BaseKind::Virtual","value":"BaseKind::Virtual","parent":{"krate":0,"index":3487},"children":[],"decl_id":null,"docs":" Virtual inheritance, like:","sig":null,"attributes":[{"value":"/ Virtual inheritance, like:","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":478775,"byte_end":478805,"line_start":941,"line_end":941,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":478810,"byte_end":478813,"line_start":942,"line_end":942,"column_start":5,"column_end":8}},{"value":"/ ```cpp","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":478818,"byte_end":478828,"line_start":943,"line_end":943,"column_start":5,"column_end":15}},{"value":"/ class A: public virtual B {};","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":478833,"byte_end":478866,"line_start":944,"line_end":944,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":478871,"byte_end":478878,"line_start":945,"line_end":945,"column_start":5,"column_end":12}}]},{"kind":"Enum","id":{"krate":0,"index":3487},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":478648,"byte_end":478656,"line_start":934,"line_end":934,"column_start":10,"column_end":18},"name":"BaseKind","qualname":"::ir::comp::BaseKind","value":"pub enum BaseKind {\n\n    /// Normal inheritance, like:\n    ///\n    /// ```cpp\n    /// class A : public B {};\n    /// ```\n    Normal,\n\n    /// Virtual inheritance, like:\n    ///\n    /// ```cpp\n    /// class A: public virtual B {};\n    /// ```\n    Virtual,\n}","parent":null,"children":[{"krate":0,"index":3488},{"krate":0,"index":3490}],"decl_id":null,"docs":" The kind of inheritance a base class is using.\n","sig":null,"attributes":[{"value":"/ The kind of inheritance a base class is using.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":478549,"byte_end":478599,"line_start":932,"line_end":932,"column_start":1,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":3502},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":478948,"byte_end":478952,"line_start":951,"line_end":951,"column_start":12,"column_end":16},"name":"Base","qualname":"::ir::comp::Base","value":"Base { ty, kind, field_name }","parent":null,"children":[{"krate":0,"index":3503},{"krate":0,"index":3504},{"krate":0,"index":3505}],"decl_id":null,"docs":" A base class.\n","sig":null,"attributes":[{"value":"/ A base class.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":478895,"byte_end":478912,"line_start":949,"line_end":949,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":3503},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":479000,"byte_end":479002,"line_start":953,"line_end":953,"column_start":9,"column_end":11},"name":"ty","qualname":"::ir::comp::Base::ty","value":"ir::context::TypeId","parent":{"krate":0,"index":3502},"children":[],"decl_id":null,"docs":" The type of this base class.\n","sig":null,"attributes":[{"value":"/ The type of this base class.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":478959,"byte_end":478991,"line_start":952,"line_end":952,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":3504},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":479065,"byte_end":479069,"line_start":955,"line_end":955,"column_start":9,"column_end":13},"name":"kind","qualname":"::ir::comp::Base::kind","value":"ir::comp::BaseKind","parent":{"krate":0,"index":3502},"children":[],"decl_id":null,"docs":" The kind of inheritance we're doing.\n","sig":null,"attributes":[{"value":"/ The kind of inheritance we're doing.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":479016,"byte_end":479056,"line_start":954,"line_end":954,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":3505},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":479152,"byte_end":479162,"line_start":957,"line_end":957,"column_start":9,"column_end":19},"name":"field_name","qualname":"::ir::comp::Base::field_name","value":"std::string::String","parent":{"krate":0,"index":3502},"children":[],"decl_id":null,"docs":" Name of the field in which this base should be stored.\n","sig":null,"attributes":[{"value":"/ Name of the field in which this base should be stored.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":479085,"byte_end":479143,"line_start":956,"line_end":956,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1424},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":479255,"byte_end":479265,"line_start":962,"line_end":962,"column_start":12,"column_end":22},"name":"is_virtual","qualname":"<Base>::is_virtual","value":"pub fn is_virtual(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether this base class is inheriting virtually.\n","sig":null,"attributes":[{"value":"/ Whether this base class is inheriting virtually.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":479191,"byte_end":479243,"line_start":961,"line_end":961,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1425},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":479412,"byte_end":479428,"line_start":967,"line_end":967,"column_start":12,"column_end":28},"name":"requires_storage","qualname":"<Base>::requires_storage","value":"pub fn requires_storage(&Self, &BindgenContext) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether this base class should have it's own field for storage.\n","sig":null,"attributes":[{"value":"/ Whether this base class should have it's own field for storage.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":479333,"byte_end":479400,"line_start":966,"line_end":966,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":3510},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":480189,"byte_end":480197,"line_start":993,"line_end":993,"column_start":12,"column_end":20},"name":"CompInfo","qualname":"::ir::comp::CompInfo","value":"CompInfo {  }","parent":null,"children":[{"krate":0,"index":3511},{"krate":0,"index":3512},{"krate":0,"index":3513},{"krate":0,"index":3514},{"krate":0,"index":3515},{"krate":0,"index":3516},{"krate":0,"index":3517},{"krate":0,"index":3518},{"krate":0,"index":3519},{"krate":0,"index":3520},{"krate":0,"index":3521},{"krate":0,"index":3522},{"krate":0,"index":3523},{"krate":0,"index":3524},{"krate":0,"index":3525},{"krate":0,"index":3526}],"decl_id":null,"docs":" A compound type.","sig":null,"attributes":[{"value":"/ A compound type.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":479969,"byte_end":479989,"line_start":987,"line_end":987,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":479990,"byte_end":479993,"line_start":988,"line_end":988,"column_start":1,"column_end":4}},{"value":"/ Either a struct or union, a compound type is built up from the combination","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":479994,"byte_end":480072,"line_start":989,"line_end":989,"column_start":1,"column_end":79}},{"value":"/ of fields which also are associated with their own (potentially compound)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":480073,"byte_end":480150,"line_start":990,"line_end":990,"column_start":1,"column_end":78}},{"value":"/ type.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":480151,"byte_end":480160,"line_start":991,"line_end":991,"column_start":1,"column_end":10}}]},{"kind":"Method","id":{"krate":0,"index":1427},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":482706,"byte_end":482709,"line_start":1068,"line_end":1068,"column_start":12,"column_end":15},"name":"new","qualname":"<CompInfo>::new","value":"pub fn new(CompKind) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new compound type.\n","sig":null,"attributes":[{"value":"/ Construct a new compound type.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":482660,"byte_end":482694,"line_start":1067,"line_end":1067,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1428},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":483744,"byte_end":483750,"line_start":1097,"line_end":1097,"column_start":12,"column_end":18},"name":"layout","qualname":"<CompInfo>::layout","value":"pub fn layout(&Self, &BindgenContext) -> Option<Layout>","parent":null,"children":[],"decl_id":null,"docs":" Compute the layout of this type.","sig":null,"attributes":[{"value":"/ Compute the layout of this type.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":483345,"byte_end":483381,"line_start":1089,"line_end":1089,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":483386,"byte_end":483389,"line_start":1090,"line_end":1090,"column_start":5,"column_end":8}},{"value":"/ This is called as a fallback under some circumstances where LLVM doesn't","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":483394,"byte_end":483470,"line_start":1091,"line_end":1091,"column_start":5,"column_end":81}},{"value":"/ give us the correct layout.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":483475,"byte_end":483506,"line_start":1092,"line_end":1092,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":483511,"byte_end":483514,"line_start":1093,"line_end":1093,"column_start":5,"column_end":8}},{"value":"/ If we're a union without known layout, we try to compute it from our","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":483519,"byte_end":483591,"line_start":1094,"line_end":1094,"column_start":5,"column_end":77}},{"value":"/ members. This is not ideal, but clang fails to report the size for these","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":483596,"byte_end":483672,"line_start":1095,"line_end":1095,"column_start":5,"column_end":81}},{"value":"/ kind of unions, see test/headers/template_union.hpp","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":483677,"byte_end":483732,"line_start":1096,"line_end":1096,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1429},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":484713,"byte_end":484719,"line_start":1130,"line_end":1130,"column_start":12,"column_end":18},"name":"fields","qualname":"<CompInfo>::fields","value":"pub fn fields(&Self) -> &[Field]","parent":null,"children":[],"decl_id":null,"docs":" Get this type's set of fields.\n","sig":null,"attributes":[{"value":"/ Get this type's set of fields.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":484667,"byte_end":484701,"line_start":1129,"line_end":1129,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1431},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":485738,"byte_end":485765,"line_start":1158,"line_end":1158,"column_start":12,"column_end":39},"name":"has_too_large_bitfield_unit","qualname":"<CompInfo>::has_too_large_bitfield_unit","value":"pub fn has_too_large_bitfield_unit(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether we have a too large bitfield unit, in which case we may\n not be able to derive some of the things we should be able to normally\n derive.\n","sig":null,"attributes":[{"value":"/ Returns whether we have a too large bitfield unit, in which case we may","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":485556,"byte_end":485631,"line_start":1155,"line_end":1155,"column_start":5,"column_end":80}},{"value":"/ not be able to derive some of the things we should be able to normally","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":485636,"byte_end":485710,"line_start":1156,"line_end":1156,"column_start":5,"column_end":79}},{"value":"/ derive.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":485715,"byte_end":485726,"line_start":1157,"line_end":1157,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1433},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":486193,"byte_end":486221,"line_start":1172,"line_end":1172,"column_start":12,"column_end":40},"name":"has_non_type_template_params","qualname":"<CompInfo>::has_non_type_template_params","value":"pub fn has_non_type_template_params(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Does this type have any template parameters that aren't types\n (e.g. int)?\n","sig":null,"attributes":[{"value":"/ Does this type have any template parameters that aren't types","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":486096,"byte_end":486161,"line_start":1170,"line_end":1170,"column_start":5,"column_end":70}},{"value":"/ (e.g. int)?","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":486166,"byte_end":486181,"line_start":1171,"line_end":1171,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1434},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":486400,"byte_end":486422,"line_start":1178,"line_end":1178,"column_start":12,"column_end":34},"name":"has_own_virtual_method","qualname":"<CompInfo>::has_own_virtual_method","value":"pub fn has_own_virtual_method(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Do we see a virtual function during parsing?\n Get the has_own_virtual_method boolean.\n","sig":null,"attributes":[{"value":"/ Do we see a virtual function during parsing?","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":486292,"byte_end":486340,"line_start":1176,"line_end":1176,"column_start":5,"column_end":53}},{"value":"/ Get the has_own_virtual_method boolean.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":486345,"byte_end":486388,"line_start":1177,"line_end":1177,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1435},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":486550,"byte_end":486568,"line_start":1183,"line_end":1183,"column_start":12,"column_end":30},"name":"has_own_destructor","qualname":"<CompInfo>::has_own_destructor","value":"pub fn has_own_destructor(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Did we see a destructor when parsing this type?\n","sig":null,"attributes":[{"value":"/ Did we see a destructor when parsing this type?","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":486487,"byte_end":486538,"line_start":1182,"line_end":1182,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1436},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":486672,"byte_end":486679,"line_start":1188,"line_end":1188,"column_start":12,"column_end":19},"name":"methods","qualname":"<CompInfo>::methods","value":"pub fn methods(&Self) -> &[Method]","parent":null,"children":[],"decl_id":null,"docs":" Get this type's set of methods.\n","sig":null,"attributes":[{"value":"/ Get this type's set of methods.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":486625,"byte_end":486660,"line_start":1187,"line_end":1187,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1437},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":486787,"byte_end":486799,"line_start":1193,"line_end":1193,"column_start":12,"column_end":24},"name":"constructors","qualname":"<CompInfo>::constructors","value":"pub fn constructors(&Self) -> &[FunctionId]","parent":null,"children":[],"decl_id":null,"docs":" Get this type's set of constructors.\n","sig":null,"attributes":[{"value":"/ Get this type's set of constructors.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":486735,"byte_end":486775,"line_start":1192,"line_end":1192,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1438},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":486907,"byte_end":486917,"line_start":1198,"line_end":1198,"column_start":12,"column_end":22},"name":"destructor","qualname":"<CompInfo>::destructor","value":"pub fn destructor(&Self) -> Option<(MethodKind, FunctionId)>","parent":null,"children":[],"decl_id":null,"docs":" Get this type's destructor.\n","sig":null,"attributes":[{"value":"/ Get this type's destructor.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":486864,"byte_end":486895,"line_start":1197,"line_end":1197,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1439},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":487049,"byte_end":487053,"line_start":1203,"line_end":1203,"column_start":12,"column_end":16},"name":"kind","qualname":"<CompInfo>::kind","value":"pub fn kind(&Self) -> CompKind","parent":null,"children":[],"decl_id":null,"docs":" What kind of compound type is this?\n","sig":null,"attributes":[{"value":"/ What kind of compound type is this?","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":486998,"byte_end":487037,"line_start":1202,"line_end":1202,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1440},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":487136,"byte_end":487144,"line_start":1208,"line_end":1208,"column_start":12,"column_end":20},"name":"is_union","qualname":"<CompInfo>::is_union","value":"pub fn is_union(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a union?\n","sig":null,"attributes":[{"value":"/ Is this a union?","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":487104,"byte_end":487124,"line_start":1207,"line_end":1207,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":1441},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":487273,"byte_end":487285,"line_start":1213,"line_end":1213,"column_start":12,"column_end":24},"name":"base_members","qualname":"<CompInfo>::base_members","value":"pub fn base_members(&Self) -> &[Base]","parent":null,"children":[],"decl_id":null,"docs":" The set of types that this one inherits from.\n","sig":null,"attributes":[{"value":"/ The set of types that this one inherits from.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":487212,"byte_end":487261,"line_start":1212,"line_end":1212,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1442},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":487408,"byte_end":487415,"line_start":1218,"line_end":1218,"column_start":12,"column_end":19},"name":"from_ty","qualname":"<CompInfo>::from_ty","value":"pub fn from_ty(ItemId, &clang::Type, Option<clang::Cursor>,\n               &mut BindgenContext) -> Result<Self, ParseError>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new compound type from a Clang type.\n","sig":null,"attributes":[{"value":"/ Construct a new compound type from a Clang type.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":487344,"byte_end":487396,"line_start":1217,"line_end":1217,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1450},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":501575,"byte_end":501586,"line_start":1561,"line_end":1561,"column_start":12,"column_end":23},"name":"inner_types","qualname":"<CompInfo>::inner_types","value":"pub fn inner_types(&Self) -> &[TypeId]","parent":null,"children":[],"decl_id":null,"docs":" Get the set of types that were declared within this compound type\n (e.g. nested class definitions).\n","sig":null,"attributes":[{"value":"/ Get the set of types that were declared within this compound type","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":501453,"byte_end":501522,"line_start":1559,"line_end":1559,"column_start":5,"column_end":74}},{"value":"/ (e.g. nested class definitions).","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":501527,"byte_end":501563,"line_start":1560,"line_end":1560,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1451},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":501729,"byte_end":501739,"line_start":1566,"line_end":1566,"column_start":12,"column_end":22},"name":"inner_vars","qualname":"<CompInfo>::inner_vars","value":"pub fn inner_vars(&Self) -> &[VarId]","parent":null,"children":[],"decl_id":null,"docs":" Get the set of static variables declared within this compound type.\n","sig":null,"attributes":[{"value":"/ Get the set of static variables declared within this compound type.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":501646,"byte_end":501717,"line_start":1565,"line_end":1565,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":1452},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":501927,"byte_end":501945,"line_start":1572,"line_end":1572,"column_start":12,"column_end":30},"name":"found_unknown_attr","qualname":"<CompInfo>::found_unknown_attr","value":"pub fn found_unknown_attr(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Have we found a field with an opaque type that could potentially mess up\n the layout of this compound type?\n","sig":null,"attributes":[{"value":"/ Have we found a field with an opaque type that could potentially mess up","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":501797,"byte_end":501873,"line_start":1570,"line_end":1570,"column_start":5,"column_end":81}},{"value":"/ the layout of this compound type?","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":501878,"byte_end":501915,"line_start":1571,"line_end":1571,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1453},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":502051,"byte_end":502060,"line_start":1577,"line_end":1577,"column_start":12,"column_end":21},"name":"is_packed","qualname":"<CompInfo>::is_packed","value":"pub fn is_packed(&Self, &BindgenContext, &Option<Layout>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this compound type packed?\n","sig":null,"attributes":[{"value":"/ Is this compound type packed?","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":502006,"byte_end":502039,"line_start":1576,"line_end":1576,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1456},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":503277,"byte_end":503299,"line_start":1613,"line_end":1613,"column_start":12,"column_end":34},"name":"is_forward_declaration","qualname":"<CompInfo>::is_forward_declaration","value":"pub fn is_forward_declaration(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if compound type has been forward declared\n","sig":null,"attributes":[{"value":"/ Returns true if compound type has been forward declared","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":503206,"byte_end":503265,"line_start":1612,"line_end":1612,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1457},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":503440,"byte_end":503462,"line_start":1618,"line_end":1618,"column_start":12,"column_end":34},"name":"compute_bitfield_units","qualname":"<CompInfo>::compute_bitfield_units","value":"pub fn compute_bitfield_units(&mut Self, &BindgenContext)","parent":null,"children":[],"decl_id":null,"docs":" Compute this compound structure's bitfield allocation units.\n","sig":null,"attributes":[{"value":"/ Compute this compound structure's bitfield allocation units.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":503364,"byte_end":503428,"line_start":1617,"line_end":1617,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1458},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":503775,"byte_end":503793,"line_start":1625,"line_end":1625,"column_start":12,"column_end":30},"name":"deanonymize_fields","qualname":"<CompInfo>::deanonymize_fields","value":"pub fn deanonymize_fields(&mut Self, &BindgenContext)","parent":null,"children":[],"decl_id":null,"docs":" Assign for each anonymous field a generated name.\n","sig":null,"attributes":[{"value":"/ Assign for each anonymous field a generated name.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":503710,"byte_end":503763,"line_start":1624,"line_end":1624,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1459},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":504122,"byte_end":504139,"line_start":1634,"line_end":1634,"column_start":12,"column_end":29},"name":"can_be_rust_union","qualname":"<CompInfo>::can_be_rust_union","value":"pub fn can_be_rust_union(&Self, &BindgenContext) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the current union can be represented as a Rust `union`","sig":null,"attributes":[{"value":"/ Returns whether the current union can be represented as a Rust `union`","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":503900,"byte_end":503974,"line_start":1629,"line_end":1629,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":503979,"byte_end":503982,"line_start":1630,"line_end":1630,"column_start":5,"column_end":8}},{"value":"/ Requirements:","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":503987,"byte_end":504004,"line_start":1631,"line_end":1631,"column_start":5,"column_end":22}},{"value":"/     1. Current RustTarget allows for `untagged_union`","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":504009,"byte_end":504066,"line_start":1632,"line_end":1632,"column_start":5,"column_end":62}},{"value":"/     2. Each field can derive `Copy`","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":504071,"byte_end":504110,"line_start":1633,"line_end":1633,"column_start":5,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":3529},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":511024,"byte_end":511030,"line_start":38,"line_end":38,"column_start":12,"column_end":18},"name":"ItemId","qualname":"::ir::context::ItemId","value":"","parent":null,"children":[],"decl_id":null,"docs":" An identifier for some kind of IR item.\n","sig":null,"attributes":[{"value":"/ An identifier for some kind of IR item.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":510912,"byte_end":510955,"line_start":36,"line_end":36,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":3565},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":513254,"byte_end":513260,"line_start":116,"line_end":116,"column_start":16,"column_end":22},"name":"TypeId","qualname":"::ir::context::TypeId","value":"","parent":null,"children":[],"decl_id":null,"docs":" An identifier for an `Item` whose `ItemKind` is known to be\n `ItemKind::Type`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3562},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":513418,"byte_end":513428,"line_start":120,"line_end":120,"column_start":19,"column_end":29},"name":"as_type_id","qualname":"<ItemId>::as_type_id","value":"pub fn as_type_id(&Self, &BindgenContext) -> Option<TypeId>","parent":null,"children":[],"decl_id":null,"docs":" Convert this `ItemId` into a `TypeId` if its associated item is a type,\n otherwise return `None`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3563},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":513593,"byte_end":513607,"line_start":125,"line_end":125,"column_start":20,"column_end":34},"name":"expect_type_id","qualname":"<ItemId>::expect_type_id","value":"pub fn expect_type_id(&Self, &BindgenContext) -> TypeId","parent":null,"children":[],"decl_id":null,"docs":" Convert this `ItemId` into a `TypeId`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3564},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":513763,"byte_end":513783,"line_start":129,"line_end":129,"column_start":21,"column_end":41},"name":"as_type_id_unchecked","qualname":"<ItemId>::as_type_id_unchecked","value":"pub fn as_type_id_unchecked(&Self) -> TypeId","parent":null,"children":[],"decl_id":null,"docs":" Convert this `ItemId` into a `TypeId` without actually checking whether\n this id actually points to a `Type`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3601},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":513918,"byte_end":513926,"line_start":135,"line_end":135,"column_start":16,"column_end":24},"name":"ModuleId","qualname":"::ir::context::ModuleId","value":"","parent":null,"children":[],"decl_id":null,"docs":" An identifier for an `Item` whose `ItemKind` is known to be\n `ItemKind::Module`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3598},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":514088,"byte_end":514100,"line_start":139,"line_end":139,"column_start":19,"column_end":31},"name":"as_module_id","qualname":"<ItemId>::as_module_id","value":"pub fn as_module_id(&Self, &BindgenContext) -> Option<ModuleId>","parent":null,"children":[],"decl_id":null,"docs":" Convert this `ItemId` into a `ModuleId` if its associated item is a\n module, otherwise return `None`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3599},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":514271,"byte_end":514287,"line_start":144,"line_end":144,"column_start":20,"column_end":36},"name":"expect_module_id","qualname":"<ItemId>::expect_module_id","value":"pub fn expect_module_id(&Self, &BindgenContext) -> ModuleId","parent":null,"children":[],"decl_id":null,"docs":" Convert this `ItemId` into a `ModuleId`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3600},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":514447,"byte_end":514469,"line_start":148,"line_end":148,"column_start":21,"column_end":43},"name":"as_module_id_unchecked","qualname":"<ItemId>::as_module_id_unchecked","value":"pub fn as_module_id_unchecked(&Self) -> ModuleId","parent":null,"children":[],"decl_id":null,"docs":" Convert this `ItemId` into a `ModuleId` without actually checking\n whether this id actually points to a `Module`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3637},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":514601,"byte_end":514606,"line_start":154,"line_end":154,"column_start":16,"column_end":21},"name":"VarId","qualname":"::ir::context::VarId","value":"","parent":null,"children":[],"decl_id":null,"docs":" An identifier for an `Item` whose `ItemKind` is known to be\n `ItemKind::Var`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3634},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":514762,"byte_end":514771,"line_start":158,"line_end":158,"column_start":19,"column_end":28},"name":"as_var_id","qualname":"<ItemId>::as_var_id","value":"pub fn as_var_id(&Self, &BindgenContext) -> Option<VarId>","parent":null,"children":[],"decl_id":null,"docs":" Convert this `ItemId` into a `VarId` if its associated item is a var,\n otherwise return `None`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3635},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":514933,"byte_end":514946,"line_start":163,"line_end":163,"column_start":20,"column_end":33},"name":"expect_var_id","qualname":"<ItemId>::expect_var_id","value":"pub fn expect_var_id(&Self, &BindgenContext) -> VarId","parent":null,"children":[],"decl_id":null,"docs":" Convert this `ItemId` into a `VarId`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3636},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":515100,"byte_end":515119,"line_start":167,"line_end":167,"column_start":21,"column_end":40},"name":"as_var_id_unchecked","qualname":"<ItemId>::as_var_id_unchecked","value":"pub fn as_var_id_unchecked(&Self) -> VarId","parent":null,"children":[],"decl_id":null,"docs":" Convert this `ItemId` into a `VarId` without actually checking whether\n this id actually points to a `Var`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3673},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":515256,"byte_end":515266,"line_start":173,"line_end":173,"column_start":16,"column_end":26},"name":"FunctionId","qualname":"::ir::context::FunctionId","value":"","parent":null,"children":[],"decl_id":null,"docs":" An identifier for an `Item` whose `ItemKind` is known to be\n `ItemKind::Function`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3670},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":515432,"byte_end":515446,"line_start":177,"line_end":177,"column_start":19,"column_end":33},"name":"as_function_id","qualname":"<ItemId>::as_function_id","value":"pub fn as_function_id(&Self, &BindgenContext) -> Option<FunctionId>","parent":null,"children":[],"decl_id":null,"docs":" Convert this `ItemId` into a `FunctionId` if its associated item is a function,\n otherwise return `None`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3671},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":515623,"byte_end":515641,"line_start":182,"line_end":182,"column_start":20,"column_end":38},"name":"expect_function_id","qualname":"<ItemId>::expect_function_id","value":"pub fn expect_function_id(&Self, &BindgenContext) -> FunctionId","parent":null,"children":[],"decl_id":null,"docs":" Convert this `ItemId` into a `FunctionId`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3672},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":515805,"byte_end":515829,"line_start":186,"line_end":186,"column_start":21,"column_end":45},"name":"as_function_id_unchecked","qualname":"<ItemId>::as_function_id_unchecked","value":"pub fn as_function_id_unchecked(&Self) -> FunctionId","parent":null,"children":[],"decl_id":null,"docs":" Convert this `ItemId` into a `FunctionId` without actually checking whether\n this id actually points to a `Function`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1547},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":515995,"byte_end":516003,"line_start":197,"line_end":197,"column_start":12,"column_end":20},"name":"as_usize","qualname":"<ItemId>::as_usize","value":"pub fn as_usize(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get a numeric representation of this id.\n","sig":null,"attributes":[{"value":"/ Get a numeric representation of this id.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":515939,"byte_end":515983,"line_start":196,"line_end":196,"column_start":5,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":3714},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":518784,"byte_end":518798,"line_start":308,"line_end":308,"column_start":12,"column_end":26},"name":"BindgenContext","qualname":"::ir::context::BindgenContext","value":"BindgenContext {  }","parent":null,"children":[{"krate":0,"index":3715},{"krate":0,"index":3716},{"krate":0,"index":3717},{"krate":0,"index":3718},{"krate":0,"index":3719},{"krate":0,"index":3720},{"krate":0,"index":3721},{"krate":0,"index":3722},{"krate":0,"index":3723},{"krate":0,"index":3724},{"krate":0,"index":3725},{"krate":0,"index":3726},{"krate":0,"index":3727},{"krate":0,"index":3728},{"krate":0,"index":3729},{"krate":0,"index":3730},{"krate":0,"index":3731},{"krate":0,"index":3732},{"krate":0,"index":3733},{"krate":0,"index":3734},{"krate":0,"index":3735},{"krate":0,"index":3736},{"krate":0,"index":3737},{"krate":0,"index":3738},{"krate":0,"index":3739},{"krate":0,"index":3740},{"krate":0,"index":3741},{"krate":0,"index":3742},{"krate":0,"index":3743},{"krate":0,"index":3744},{"krate":0,"index":3745},{"krate":0,"index":3746}],"decl_id":null,"docs":" A context used during parsing and generation of structs.\n","sig":null,"attributes":[{"value":"/ A context used during parsing and generation of structs.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":518695,"byte_end":518755,"line_start":306,"line_end":306,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1594},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":530720,"byte_end":530725,"line_start":641,"line_end":641,"column_start":12,"column_end":17},"name":"timer","qualname":"<BindgenContext>::timer","value":"pub fn timer<'a>(&Self, &'a str) -> Timer","parent":null,"children":[],"decl_id":null,"docs":" Creates a timer for the current bindgen phase. If time_phases is `true`,\n the timer will print to stderr when it is dropped, otherwise it will do\n nothing.\n","sig":null,"attributes":[{"value":"/ Creates a timer for the current bindgen phase. If time_phases is `true`,","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":530535,"byte_end":530611,"line_start":638,"line_end":638,"column_start":5,"column_end":81}},{"value":"/ the timer will print to stderr when it is dropped, otherwise it will do","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":530616,"byte_end":530691,"line_start":639,"line_end":639,"column_start":5,"column_end":80}},{"value":"/ nothing.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":530696,"byte_end":530708,"line_start":640,"line_end":640,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":1596},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":530941,"byte_end":530960,"line_start":647,"line_end":647,"column_start":12,"column_end":31},"name":"target_pointer_size","qualname":"<BindgenContext>::target_pointer_size","value":"pub fn target_pointer_size(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the pointer width to use for the target for the current\n translation.\n","sig":null,"attributes":[{"value":"/ Returns the pointer width to use for the target for the current","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":530841,"byte_end":530908,"line_start":645,"line_end":645,"column_start":5,"column_end":72}},{"value":"/ translation.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":530913,"byte_end":530929,"line_start":646,"line_end":646,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1597},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":531225,"byte_end":531247,"line_start":656,"line_end":656,"column_start":12,"column_end":34},"name":"currently_parsed_types","qualname":"<BindgenContext>::currently_parsed_types","value":"pub fn currently_parsed_types(&Self) -> &[PartialType]","parent":null,"children":[],"decl_id":null,"docs":" Get the stack of partially parsed types that we are in the middle of\n parsing.\n","sig":null,"attributes":[{"value":"/ Get the stack of partially parsed types that we are in the middle of","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":531124,"byte_end":531196,"line_start":654,"line_end":654,"column_start":5,"column_end":77}},{"value":"/ parsing.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":531201,"byte_end":531213,"line_start":655,"line_end":655,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":1598},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":531533,"byte_end":531546,"line_start":663,"line_end":663,"column_start":12,"column_end":25},"name":"begin_parsing","qualname":"<BindgenContext>::begin_parsing","value":"pub fn begin_parsing(&mut Self, PartialType)","parent":null,"children":[],"decl_id":null,"docs":" Begin parsing the given partial type, and push it onto the\n `currently_parsed_types` stack so that we won't infinite recurse if we\n run into a reference to it while parsing it.\n","sig":null,"attributes":[{"value":"/ Begin parsing the given partial type, and push it onto the","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":531327,"byte_end":531389,"line_start":660,"line_end":660,"column_start":5,"column_end":67}},{"value":"/ `currently_parsed_types` stack so that we won't infinite recurse if we","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":531394,"byte_end":531468,"line_start":661,"line_end":661,"column_start":5,"column_end":79}},{"value":"/ run into a reference to it while parsing it.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":531473,"byte_end":531521,"line_start":662,"line_end":662,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1599},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":531776,"byte_end":531790,"line_start":669,"line_end":669,"column_start":12,"column_end":26},"name":"finish_parsing","qualname":"<BindgenContext>::finish_parsing","value":"pub fn finish_parsing(&mut Self) -> PartialType","parent":null,"children":[],"decl_id":null,"docs":" Finish parsing the current partial type, pop it off the\n `currently_parsed_types` stack, and return it.\n","sig":null,"attributes":[{"value":"/ Finish parsing the current partial type, pop it off the","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":531650,"byte_end":531709,"line_start":667,"line_end":667,"column_start":5,"column_end":64}},{"value":"/ `currently_parsed_types` stack, and return it.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":531714,"byte_end":531764,"line_start":668,"line_end":668,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1600},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":532037,"byte_end":532052,"line_start":676,"line_end":676,"column_start":12,"column_end":27},"name":"parse_callbacks","qualname":"<BindgenContext>::parse_callbacks","value":"pub fn parse_callbacks(&Self) -> Option<&ParseCallbacks>","parent":null,"children":[],"decl_id":null,"docs":" Get the user-provided callbacks by reference, if any.\n","sig":null,"attributes":[{"value":"/ Get the user-provided callbacks by reference, if any.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":531968,"byte_end":532025,"line_start":675,"line_end":675,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1602},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":532311,"byte_end":532319,"line_start":684,"line_end":684,"column_start":12,"column_end":20},"name":"add_item","qualname":"<BindgenContext>::add_item","value":"pub fn add_item(&mut Self, Item, Option<Cursor>, Option<Cursor>)","parent":null,"children":[],"decl_id":null,"docs":" Define a new item.","sig":null,"attributes":[{"value":"/ Define a new item.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":532166,"byte_end":532188,"line_start":680,"line_end":680,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":532193,"byte_end":532196,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ This inserts it into the internal items set, and its type into the","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":532201,"byte_end":532271,"line_start":682,"line_end":682,"column_start":5,"column_end":75}},{"value":"/ internal types set.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":532276,"byte_end":532299,"line_start":683,"line_end":683,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1604},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":536850,"byte_end":536864,"line_start":807,"line_end":807,"column_start":12,"column_end":26},"name":"add_type_param","qualname":"<BindgenContext>::add_type_param","value":"pub fn add_type_param(&mut Self, Item, clang::Cursor)","parent":null,"children":[],"decl_id":null,"docs":" Add a new named template type parameter to this context's item set.\n","sig":null,"attributes":[{"value":"/ Add a new named template type parameter to this context's item set.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":536767,"byte_end":536838,"line_start":806,"line_end":806,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":1605},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":537981,"byte_end":537995,"line_start":842,"line_end":842,"column_start":12,"column_end":26},"name":"get_type_param","qualname":"<BindgenContext>::get_type_param","value":"pub fn get_type_param(&Self, &clang::Cursor) -> Option<TypeId>","parent":null,"children":[],"decl_id":null,"docs":" Get the named type defined at the given cursor location, if we've\n already added one.\n","sig":null,"attributes":[{"value":"/ Get the named type defined at the given cursor location, if we've","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":537873,"byte_end":537942,"line_start":840,"line_end":840,"column_start":5,"column_end":74}},{"value":"/ already added one.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":537947,"byte_end":537969,"line_start":841,"line_end":841,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1606},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":538366,"byte_end":538377,"line_start":853,"line_end":853,"column_start":12,"column_end":23},"name":"rust_mangle","qualname":"<BindgenContext>::rust_mangle","value":"pub fn rust_mangle<'a>(&Self, &'a str) -> Cow","parent":null,"children":[],"decl_id":null,"docs":" Mangles a name so it doesn't conflict with any keyword.\n","sig":null,"attributes":[{"value":"/ Mangles a name so it doesn't conflict with any keyword.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":538295,"byte_end":538354,"line_start":852,"line_end":852,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1608},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":539619,"byte_end":539629,"line_start":882,"line_end":882,"column_start":12,"column_end":22},"name":"rust_ident","qualname":"<BindgenContext>::rust_ident","value":"pub fn rust_ident<S>(&Self, S) -> Ident where S: AsRef<str>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mangled name as a rust identifier.\n","sig":null,"attributes":[{"value":"/ Returns a mangled name as a rust identifier.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":539559,"byte_end":539607,"line_start":881,"line_end":881,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1610},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":539829,"byte_end":539843,"line_start":890,"line_end":890,"column_start":12,"column_end":26},"name":"rust_ident_raw","qualname":"<BindgenContext>::rust_ident_raw","value":"pub fn rust_ident_raw<T>(&Self, T) -> Ident where T: AsRef<str>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mangled name as a rust identifier.\n","sig":null,"attributes":[{"value":"/ Returns a mangled name as a rust identifier.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":539769,"byte_end":539817,"line_start":889,"line_end":889,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1612},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":540037,"byte_end":540042,"line_start":898,"line_end":898,"column_start":12,"column_end":17},"name":"items","qualname":"<BindgenContext>::items","value":"pub fn items(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Iterate over all items that have been defined.\n","sig":null,"attributes":[{"value":"/ Iterate over all items that have been defined.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":539975,"byte_end":540025,"line_start":897,"line_end":897,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1615},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":540330,"byte_end":540348,"line_start":906,"line_end":906,"column_start":12,"column_end":30},"name":"collected_typerefs","qualname":"<BindgenContext>::collected_typerefs","value":"pub fn collected_typerefs(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Have we collected all unresolved type references yet?\n","sig":null,"attributes":[{"value":"/ Have we collected all unresolved type references yet?","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":540261,"byte_end":540318,"line_start":905,"line_end":905,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1639},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":553997,"byte_end":554013,"line_start":1287,"line_end":1287,"column_start":12,"column_end":28},"name":"lookup_sizedness","qualname":"<BindgenContext>::lookup_sizedness","value":"pub fn lookup_sizedness(&Self, TypeId) -> SizednessResult","parent":null,"children":[],"decl_id":null,"docs":" Look up whether the type with the given id is sized or not.\n","sig":null,"attributes":[{"value":"/ Look up whether the type with the given id is sized or not.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":553922,"byte_end":553985,"line_start":1286,"line_end":1286,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1641},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":554686,"byte_end":554703,"line_start":1309,"line_end":1309,"column_start":12,"column_end":29},"name":"lookup_has_vtable","qualname":"<BindgenContext>::lookup_has_vtable","value":"pub fn lookup_has_vtable(&Self, TypeId) -> HasVtableResult","parent":null,"children":[],"decl_id":null,"docs":" Look up whether the item with `id` has vtable or not.\n","sig":null,"attributes":[{"value":"/ Look up whether the item with `id` has vtable or not.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":554617,"byte_end":554674,"line_start":1308,"line_end":1308,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1643},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":555496,"byte_end":555517,"line_start":1333,"line_end":1333,"column_start":12,"column_end":33},"name":"lookup_has_destructor","qualname":"<BindgenContext>::lookup_has_destructor","value":"pub fn lookup_has_destructor(&Self, TypeId) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Look up whether the item with `id` has a destructor.\n","sig":null,"attributes":[{"value":"/ Look up whether the item with `id` has a destructor.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":555428,"byte_end":555484,"line_start":1332,"line_end":1332,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1646},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":557479,"byte_end":557502,"line_start":1377,"line_end":1377,"column_start":12,"column_end":35},"name":"uses_template_parameter","qualname":"<BindgenContext>::uses_template_parameter","value":"pub fn uses_template_parameter(&Self, ItemId, TypeId) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if `item` uses the given `template_param`, `false`\n otherwise.","sig":null,"attributes":[{"value":"/ Return `true` if `item` uses the given `template_param`, `false`","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":556658,"byte_end":556726,"line_start":1363,"line_end":1363,"column_start":5,"column_end":73}},{"value":"/ otherwise.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":556731,"byte_end":556745,"line_start":1364,"line_end":1364,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":556750,"byte_end":556753,"line_start":1365,"line_end":1365,"column_start":5,"column_end":8}},{"value":"/ This method may only be called during the codegen phase, because the","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":556758,"byte_end":556830,"line_start":1366,"line_end":1366,"column_start":5,"column_end":77}},{"value":"/ template usage information is only computed as we enter the codegen","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":556835,"byte_end":556906,"line_start":1367,"line_end":1367,"column_start":5,"column_end":76}},{"value":"/ phase.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":556911,"byte_end":556921,"line_start":1368,"line_end":1368,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":556926,"byte_end":556929,"line_start":1369,"line_end":1369,"column_start":5,"column_end":8}},{"value":"/ If the item is blacklisted, then we say that it always uses the template","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":556934,"byte_end":557010,"line_start":1370,"line_end":1370,"column_start":5,"column_end":81}},{"value":"/ parameter. This is a little subtle. The template parameter usage","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":557015,"byte_end":557083,"line_start":1371,"line_end":1371,"column_start":5,"column_end":73}},{"value":"/ analysis only considers whitelisted items, and if any blacklisted item","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":557088,"byte_end":557162,"line_start":1372,"line_end":1372,"column_start":5,"column_end":79}},{"value":"/ shows up in the generated bindings, it is the user's responsibility to","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":557167,"byte_end":557241,"line_start":1373,"line_end":1373,"column_start":5,"column_end":79}},{"value":"/ manually provide a definition for them. To give them the most","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":557246,"byte_end":557311,"line_start":1374,"line_end":1374,"column_start":5,"column_end":70}},{"value":"/ flexibility when doing that, we assume that they use every template","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":557316,"byte_end":557387,"line_start":1375,"line_end":1375,"column_start":5,"column_end":76}},{"value":"/ parameter and always pass template arguments through in instantiations.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":557392,"byte_end":557467,"line_start":1376,"line_end":1376,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":1648},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":558477,"byte_end":558505,"line_start":1409,"line_end":1409,"column_start":12,"column_end":40},"name":"uses_any_template_parameters","qualname":"<BindgenContext>::uses_any_template_parameters","value":"pub fn uses_any_template_parameters(&Self, ItemId) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if `item` uses any unbound, generic template parameters,\n `false` otherwise.","sig":null,"attributes":[{"value":"/ Return `true` if `item` uses any unbound, generic template parameters,","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":558286,"byte_end":558360,"line_start":1405,"line_end":1405,"column_start":5,"column_end":79}},{"value":"/ `false` otherwise.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":558365,"byte_end":558387,"line_start":1406,"line_end":1406,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":558392,"byte_end":558395,"line_start":1407,"line_end":1407,"column_start":5,"column_end":8}},{"value":"/ Has the same restrictions that `uses_template_parameter` has.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":558400,"byte_end":558465,"line_start":1408,"line_end":1408,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1652},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":559932,"byte_end":559943,"line_start":1447,"line_end":1447,"column_start":12,"column_end":23},"name":"root_module","qualname":"<BindgenContext>::root_module","value":"pub fn root_module(&Self) -> ModuleId","parent":null,"children":[],"decl_id":null,"docs":" Get the root module.\n","sig":null,"attributes":[{"value":"/ Get the root module.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":559896,"byte_end":559920,"line_start":1446,"line_end":1446,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1653},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":560165,"byte_end":560177,"line_start":1455,"line_end":1455,"column_start":12,"column_end":24},"name":"resolve_type","qualname":"<BindgenContext>::resolve_type","value":"pub fn resolve_type(&Self, TypeId) -> &Type","parent":null,"children":[],"decl_id":null,"docs":" Resolve a type with the given id.","sig":null,"attributes":[{"value":"/ Resolve a type with the given id.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":560001,"byte_end":560038,"line_start":1451,"line_end":1451,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":560043,"byte_end":560046,"line_start":1452,"line_end":1452,"column_start":5,"column_end":8}},{"value":"/ Panics if there is no item for the given `TypeId` or if the resolved","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":560051,"byte_end":560123,"line_start":1453,"line_end":1453,"column_start":5,"column_end":77}},{"value":"/ item is not a `Type`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":560128,"byte_end":560153,"line_start":1454,"line_end":1454,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1654},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":560456,"byte_end":560468,"line_start":1463,"line_end":1463,"column_start":12,"column_end":24},"name":"resolve_func","qualname":"<BindgenContext>::resolve_func","value":"pub fn resolve_func(&Self, FunctionId) -> &Function","parent":null,"children":[],"decl_id":null,"docs":" Resolve a function with the given id.","sig":null,"attributes":[{"value":"/ Resolve a function with the given id.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":560280,"byte_end":560321,"line_start":1459,"line_end":1459,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":560326,"byte_end":560329,"line_start":1460,"line_end":1460,"column_start":5,"column_end":8}},{"value":"/ Panics if there is no item for the given `FunctionId` or if the resolved","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":560334,"byte_end":560410,"line_start":1461,"line_end":1461,"column_start":5,"column_end":81}},{"value":"/ item is not a `Function`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":560415,"byte_end":560444,"line_start":1462,"line_end":1462,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1655},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":560766,"byte_end":560783,"line_start":1471,"line_end":1471,"column_start":12,"column_end":29},"name":"safe_resolve_type","qualname":"<BindgenContext>::safe_resolve_type","value":"pub fn safe_resolve_type(&Self, TypeId) -> Option<&Type>","parent":null,"children":[],"decl_id":null,"docs":" Resolve the given `ItemId` as a type, or `None` if there is no item with\n the given id.","sig":null,"attributes":[{"value":"/ Resolve the given `ItemId` as a type, or `None` if there is no item with","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":560583,"byte_end":560659,"line_start":1467,"line_end":1467,"column_start":5,"column_end":81}},{"value":"/ the given id.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":560664,"byte_end":560681,"line_start":1468,"line_end":1468,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":560686,"byte_end":560689,"line_start":1469,"line_end":1469,"column_start":5,"column_end":8}},{"value":"/ Panics if the id resolves to an item that is not a type.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":560694,"byte_end":560754,"line_start":1470,"line_end":1470,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1657},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":561027,"byte_end":561048,"line_start":1478,"line_end":1478,"column_start":12,"column_end":33},"name":"resolve_item_fallible","qualname":"<BindgenContext>::resolve_item_fallible","value":"pub fn resolve_item_fallible<Id: Into<ItemId>>(&Self, Id) -> Option<&Item>","parent":null,"children":[],"decl_id":null,"docs":" Resolve the given `ItemId` into an `Item`, or `None` if no such item\n exists.\n","sig":null,"attributes":[{"value":"/ Resolve the given `ItemId` into an `Item`, or `None` if no such item","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":560927,"byte_end":560999,"line_start":1476,"line_end":1476,"column_start":5,"column_end":77}},{"value":"/ exists.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":561004,"byte_end":561015,"line_start":1477,"line_end":1477,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1659},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":561308,"byte_end":561320,"line_start":1488,"line_end":1488,"column_start":12,"column_end":24},"name":"resolve_item","qualname":"<BindgenContext>::resolve_item","value":"pub fn resolve_item<Id: Into<ItemId>>(&Self, Id) -> &Item","parent":null,"children":[],"decl_id":null,"docs":" Resolve the given `ItemId` into an `Item`.","sig":null,"attributes":[{"value":"/ Resolve the given `ItemId` into an `Item`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":561181,"byte_end":561227,"line_start":1485,"line_end":1485,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":561232,"byte_end":561235,"line_start":1486,"line_end":1486,"column_start":5,"column_end":8}},{"value":"/ Panics if the given id does not resolve to any item.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":561240,"byte_end":561296,"line_start":1487,"line_end":1487,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1661},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":561610,"byte_end":561624,"line_start":1497,"line_end":1497,"column_start":12,"column_end":26},"name":"current_module","qualname":"<BindgenContext>::current_module","value":"pub fn current_module(&Self) -> ModuleId","parent":null,"children":[],"decl_id":null,"docs":" Get the current module.\n","sig":null,"attributes":[{"value":"/ Get the current module.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":561571,"byte_end":561598,"line_start":1496,"line_end":1496,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1662},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":562060,"byte_end":562079,"line_start":1509,"line_end":1509,"column_start":12,"column_end":31},"name":"add_semantic_parent","qualname":"<BindgenContext>::add_semantic_parent","value":"pub fn add_semantic_parent(&mut Self, clang::Cursor, ItemId)","parent":null,"children":[],"decl_id":null,"docs":" Add a semantic parent for a given type definition.","sig":null,"attributes":[{"value":"/ Add a semantic parent for a given type definition.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":561685,"byte_end":561739,"line_start":1501,"line_end":1501,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":561744,"byte_end":561747,"line_start":1502,"line_end":1502,"column_start":5,"column_end":8}},{"value":"/ We do this from the type declaration, in order to be able to find the","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":561752,"byte_end":561825,"line_start":1503,"line_end":1503,"column_start":5,"column_end":78}},{"value":"/ correct type definition afterwards.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":561830,"byte_end":561869,"line_start":1504,"line_end":1504,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":561874,"byte_end":561877,"line_start":1505,"line_end":1505,"column_start":5,"column_end":8}},{"value":"/ TODO(emilio): We could consider doing this only when","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":561882,"byte_end":561938,"line_start":1506,"line_end":1506,"column_start":5,"column_end":61}},{"value":"/ declaration.lexical_parent() != definition.lexical_parent(), but it's","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":561943,"byte_end":562016,"line_start":1507,"line_end":1507,"column_start":5,"column_end":78}},{"value":"/ not sure it's worth it.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":562021,"byte_end":562048,"line_start":1508,"line_end":1508,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1663},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":562313,"byte_end":562334,"line_start":1518,"line_end":1518,"column_start":12,"column_end":33},"name":"known_semantic_parent","qualname":"<BindgenContext>::known_semantic_parent","value":"pub fn known_semantic_parent(&Self, clang::Cursor) -> Option<ItemId>","parent":null,"children":[],"decl_id":null,"docs":" Returns a known semantic parent for a given definition.\n","sig":null,"attributes":[{"value":"/ Returns a known semantic parent for a given definition.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":562242,"byte_end":562301,"line_start":1517,"line_end":1517,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1675},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":575267,"byte_end":575284,"line_start":1829,"line_end":1829,"column_start":12,"column_end":29},"name":"get_resolved_type","qualname":"<BindgenContext>::get_resolved_type","value":"pub fn get_resolved_type(&Self, &clang::CanonicalTypeDeclaration)\n-> Option<TypeId>","parent":null,"children":[],"decl_id":null,"docs":" If we have already resolved the type for the given type declaration,\n return its `ItemId`. Otherwise, return `None`.\n","sig":null,"attributes":[{"value":"/ If we have already resolved the type for the given type declaration,","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":575128,"byte_end":575200,"line_start":1827,"line_end":1827,"column_start":5,"column_end":77}},{"value":"/ return its `ItemId`. Otherwise, return `None`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":575205,"byte_end":575255,"line_start":1828,"line_end":1828,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1678},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":575786,"byte_end":575808,"line_start":1845,"line_end":1845,"column_start":12,"column_end":34},"name":"builtin_or_resolved_ty","qualname":"<BindgenContext>::builtin_or_resolved_ty","value":"pub fn builtin_or_resolved_ty(&mut Self, ItemId, Option<ItemId>, &clang::Type,\n                              Option<clang::Cursor>) -> Option<TypeId>","parent":null,"children":[],"decl_id":null,"docs":" Looks up for an already resolved type, either because it's builtin, or\n because we already have it in the map.\n","sig":null,"attributes":[{"value":"/ Looks up for an already resolved type, either because it's builtin, or","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":575653,"byte_end":575727,"line_start":1843,"line_end":1843,"column_start":5,"column_end":79}},{"value":"/ because we already have it in the map.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":575732,"byte_end":575774,"line_start":1844,"line_end":1844,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1683},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":578716,"byte_end":578732,"line_start":1915,"line_end":1915,"column_start":12,"column_end":28},"name":"build_ty_wrapper","qualname":"<BindgenContext>::build_ty_wrapper","value":"pub fn build_ty_wrapper(&mut Self, ItemId, TypeId, Option<ItemId>,\n                        &clang::Type) -> TypeId","parent":null,"children":[],"decl_id":null,"docs":" Make a new item that is a resolved type reference to the `wrapped_id`.","sig":null,"attributes":[{"value":"/ Make a new item that is a resolved type reference to the `wrapped_id`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":578342,"byte_end":578416,"line_start":1907,"line_end":1907,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":578421,"byte_end":578424,"line_start":1908,"line_end":1908,"column_start":5,"column_end":8}},{"value":"/ This is unfortunately a lot of bloat, but is needed to properly track","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":578429,"byte_end":578502,"line_start":1909,"line_end":1909,"column_start":5,"column_end":78}},{"value":"/ constness et al.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":578507,"byte_end":578527,"line_start":1910,"line_end":1910,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":578532,"byte_end":578535,"line_start":1911,"line_end":1911,"column_start":5,"column_end":8}},{"value":"/ We should probably make the constness tracking separate, so it doesn't","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":578540,"byte_end":578614,"line_start":1912,"line_end":1912,"column_start":5,"column_end":79}},{"value":"/ bloat that much, but hey, we already bloat the heck out of builtin","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":578619,"byte_end":578689,"line_start":1913,"line_end":1913,"column_start":5,"column_end":75}},{"value":"/ types.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":578694,"byte_end":578704,"line_start":1914,"line_end":1914,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":1684},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":579126,"byte_end":579145,"line_start":1928,"line_end":1928,"column_start":12,"column_end":31},"name":"build_const_wrapper","qualname":"<BindgenContext>::build_const_wrapper","value":"pub fn build_const_wrapper(&mut Self, ItemId, TypeId, Option<ItemId>,\n                           &clang::Type) -> TypeId","parent":null,"children":[],"decl_id":null,"docs":" A wrapper over a type that adds a const qualifier explicitly.","sig":null,"attributes":[{"value":"/ A wrapper over a type that adds a const qualifier explicitly.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":578974,"byte_end":579039,"line_start":1925,"line_end":1925,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":579044,"byte_end":579047,"line_start":1926,"line_end":1926,"column_start":5,"column_end":8}},{"value":"/ Needed to handle const methods in C++, wrapping the type .","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":579052,"byte_end":579114,"line_start":1927,"line_end":1927,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1686},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":580179,"byte_end":580191,"line_start":1964,"line_end":1964,"column_start":12,"column_end":24},"name":"next_item_id","qualname":"<BindgenContext>::next_item_id","value":"pub fn next_item_id(&mut Self) -> ItemId","parent":null,"children":[],"decl_id":null,"docs":" Returns the next item id to be used for an item.\n","sig":null,"attributes":[{"value":"/ Returns the next item id to be used for an item.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":580115,"byte_end":580167,"line_start":1963,"line_end":1963,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1689},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":583208,"byte_end":583224,"line_start":2032,"line_end":2032,"column_start":12,"column_end":28},"name":"translation_unit","qualname":"<BindgenContext>::translation_unit","value":"pub fn translation_unit(&Self) -> &clang::TranslationUnit","parent":null,"children":[],"decl_id":null,"docs":" Get the current Clang translation unit that is being processed.\n","sig":null,"attributes":[{"value":"/ Get the current Clang translation unit that is being processed.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":583129,"byte_end":583196,"line_start":2031,"line_end":2031,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1690},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":583371,"byte_end":583383,"line_start":2037,"line_end":2037,"column_start":12,"column_end":24},"name":"parsed_macro","qualname":"<BindgenContext>::parsed_macro","value":"pub fn parsed_macro(&Self, &[u8]) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Have we parsed the macro named `macro_name` already?\n","sig":null,"attributes":[{"value":"/ Have we parsed the macro named `macro_name` already?","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":583303,"byte_end":583359,"line_start":2036,"line_end":2036,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1691},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":583531,"byte_end":583544,"line_start":2042,"line_end":2042,"column_start":12,"column_end":25},"name":"parsed_macros","qualname":"<BindgenContext>::parsed_macros","value":"pub fn parsed_macros(&Self) -> &StdHashMap<Vec<u8>, cexpr::expr::EvalResult>","parent":null,"children":[],"decl_id":null,"docs":" Get the currently parsed macros.\n","sig":null,"attributes":[{"value":"/ Get the currently parsed macros.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":583483,"byte_end":583519,"line_start":2041,"line_end":2041,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1692},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":583766,"byte_end":583783,"line_start":2050,"line_end":2050,"column_start":12,"column_end":29},"name":"note_parsed_macro","qualname":"<BindgenContext>::note_parsed_macro","value":"pub fn note_parsed_macro(&mut Self, Vec<u8>, cexpr::expr::EvalResult)","parent":null,"children":[],"decl_id":null,"docs":" Mark the macro named `macro_name` as parsed.\n","sig":null,"attributes":[{"value":"/ Mark the macro named `macro_name` as parsed.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":583706,"byte_end":583754,"line_start":2049,"line_end":2049,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1693},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":583974,"byte_end":583990,"line_start":2059,"line_end":2059,"column_start":12,"column_end":28},"name":"in_codegen_phase","qualname":"<BindgenContext>::in_codegen_phase","value":"pub fn in_codegen_phase(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Are we in the codegen phase?\n","sig":null,"attributes":[{"value":"/ Are we in the codegen phase?","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":583930,"byte_end":583962,"line_start":2058,"line_end":2058,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1694},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":584290,"byte_end":584297,"line_start":2068,"line_end":2068,"column_start":12,"column_end":19},"name":"replace","qualname":"<BindgenContext>::replace","value":"pub fn replace(&mut Self, &[String], ItemId)","parent":null,"children":[],"decl_id":null,"docs":" Mark the type with the given `name` as replaced by the type with id\n `potential_ty`.","sig":null,"attributes":[{"value":"/ Mark the type with the given `name` as replaced by the type with id","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":584043,"byte_end":584114,"line_start":2063,"line_end":2063,"column_start":5,"column_end":76}},{"value":"/ `potential_ty`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":584119,"byte_end":584138,"line_start":2064,"line_end":2064,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":584143,"byte_end":584146,"line_start":2065,"line_end":2065,"column_start":5,"column_end":8}},{"value":"/ Replacement types are declared using the `replaces=\"xxx\"` annotation,","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":584151,"byte_end":584224,"line_start":2066,"line_end":2066,"column_start":5,"column_end":78}},{"value":"/ and implies that the original type is hidden.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":584229,"byte_end":584278,"line_start":2067,"line_end":2067,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1695},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":585097,"byte_end":585113,"line_start":2091,"line_end":2091,"column_start":12,"column_end":28},"name":"is_replaced_type","qualname":"<BindgenContext>::is_replaced_type","value":"pub fn is_replaced_type<Id: Into<ItemId>>(&Self, &[String], Id) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Has the item with the given `name` and `id` been replaced by another\n type?\n","sig":null,"attributes":[{"value":"/ Has the item with the given `name` and `id` been replaced by another","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":584999,"byte_end":585071,"line_start":2089,"line_end":2089,"column_start":5,"column_end":77}},{"value":"/ type?","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":585076,"byte_end":585085,"line_start":2090,"line_end":2090,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1697},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":585450,"byte_end":585464,"line_start":2104,"line_end":2104,"column_start":12,"column_end":26},"name":"opaque_by_name","qualname":"<BindgenContext>::opaque_by_name","value":"pub fn opaque_by_name(&Self, &[String]) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is the type with the given `name` marked as opaque?\n","sig":null,"attributes":[{"value":"/ Is the type with the given `name` marked as opaque?","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":585383,"byte_end":585438,"line_start":2103,"line_end":2103,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1700},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":589276,"byte_end":589282,"line_start":2201,"line_end":2201,"column_start":12,"column_end":18},"name":"module","qualname":"<BindgenContext>::module","value":"pub fn module(&mut Self, clang::Cursor) -> ModuleId","parent":null,"children":[],"decl_id":null,"docs":" Given a CXCursor_Namespace cursor, return the item id of the\n corresponding module, or create one on the fly.\n","sig":null,"attributes":[{"value":"/ Given a CXCursor_Namespace cursor, return the item id of the","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":589144,"byte_end":589208,"line_start":2199,"line_end":2199,"column_start":5,"column_end":69}},{"value":"/ corresponding module, or create one on the fly.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":589213,"byte_end":589264,"line_start":2200,"line_end":2200,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1702},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":590250,"byte_end":590261,"line_start":2231,"line_end":2231,"column_start":12,"column_end":23},"name":"with_module","qualname":"<BindgenContext>::with_module","value":"pub fn with_module<F>(&mut Self, ModuleId, F) where F: FnOnce(&mut Self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Start traversing the module with the given `module_id`, invoke the\n callback `cb`, and then return to traversing the original module.\n","sig":null,"attributes":[{"value":"/ Start traversing the module with the given `module_id`, invoke the","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":590094,"byte_end":590164,"line_start":2229,"line_end":2229,"column_start":5,"column_end":75}},{"value":"/ callback `cb`, and then return to traversing the original module.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":590169,"byte_end":590238,"line_start":2230,"line_end":2230,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1704},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":590779,"byte_end":590796,"line_start":2249,"line_end":2249,"column_start":12,"column_end":29},"name":"whitelisted_items","qualname":"<BindgenContext>::whitelisted_items","value":"pub fn whitelisted_items(&Self) -> &ItemSet","parent":null,"children":[],"decl_id":null,"docs":" Iterate over all (explicitly or transitively) whitelisted items.","sig":null,"attributes":[{"value":"/ Iterate over all (explicitly or transitively) whitelisted items.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":590592,"byte_end":590660,"line_start":2245,"line_end":2245,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":590665,"byte_end":590668,"line_start":2246,"line_end":2246,"column_start":5,"column_end":8}},{"value":"/ If no items are explicitly whitelisted, then all items are considered","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":590673,"byte_end":590746,"line_start":2247,"line_end":2247,"column_start":5,"column_end":78}},{"value":"/ whitelisted.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":590751,"byte_end":590767,"line_start":2248,"line_end":2248,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1705},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":591044,"byte_end":591057,"line_start":2257,"line_end":2257,"column_start":12,"column_end":25},"name":"codegen_items","qualname":"<BindgenContext>::codegen_items","value":"pub fn codegen_items(&Self) -> &ItemSet","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the set of items we should generate.\n","sig":null,"attributes":[{"value":"/ Get a reference to the set of items we should generate.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":590973,"byte_end":591032,"line_start":2256,"line_end":2256,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1711},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":598020,"byte_end":598032,"line_start":2415,"line_end":2415,"column_start":12,"column_end":24},"name":"trait_prefix","qualname":"<BindgenContext>::trait_prefix","value":"pub fn trait_prefix(&Self) -> Ident","parent":null,"children":[],"decl_id":null,"docs":" Convenient method for getting the prefix to use for most traits in\n codegen depending on the `use_core` option.\n","sig":null,"attributes":[{"value":"/ Convenient method for getting the prefix to use for most traits in","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":597886,"byte_end":597956,"line_start":2413,"line_end":2413,"column_start":5,"column_end":75}},{"value":"/ codegen depending on the `use_core` option.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":597961,"byte_end":598008,"line_start":2414,"line_end":2414,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1712},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":598259,"byte_end":598284,"line_start":2424,"line_end":2424,"column_start":12,"column_end":37},"name":"generated_bindgen_complex","qualname":"<BindgenContext>::generated_bindgen_complex","value":"pub fn generated_bindgen_complex(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Call if a bindgen complex is generated\n","sig":null,"attributes":[{"value":"/ Call if a bindgen complex is generated","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":598205,"byte_end":598247,"line_start":2423,"line_end":2423,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1713},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":598422,"byte_end":598447,"line_start":2429,"line_end":2429,"column_start":12,"column_end":37},"name":"need_bindgen_complex_type","qualname":"<BindgenContext>::need_bindgen_complex_type","value":"pub fn need_bindgen_complex_type(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether we need to generate the bindgen complex type\n","sig":null,"attributes":[{"value":"/ Whether we need to generate the bindgen complex type","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":598354,"byte_end":598410,"line_start":2428,"line_end":2428,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1715},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":599061,"byte_end":599084,"line_start":2448,"line_end":2448,"column_start":12,"column_end":35},"name":"lookup_can_derive_debug","qualname":"<BindgenContext>::lookup_can_derive_debug","value":"pub fn lookup_can_derive_debug<Id: Into<ItemId>>(&Self, Id) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Look up whether the item with `id` can\n derive debug or not.\n","sig":null,"attributes":[{"value":"/ Look up whether the item with `id` can","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":598978,"byte_end":599020,"line_start":2446,"line_end":2446,"column_start":5,"column_end":47}},{"value":"/ derive debug or not.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":599025,"byte_end":599049,"line_start":2447,"line_end":2447,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1718},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":600029,"byte_end":600054,"line_start":2475,"line_end":2475,"column_start":12,"column_end":37},"name":"lookup_can_derive_default","qualname":"<BindgenContext>::lookup_can_derive_default","value":"pub fn lookup_can_derive_default<Id: Into<ItemId>>(&Self, Id) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Look up whether the item with `id` can\n derive default or not.\n","sig":null,"attributes":[{"value":"/ Look up whether the item with `id` can","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":599944,"byte_end":599986,"line_start":2473,"line_end":2473,"column_start":5,"column_end":47}},{"value":"/ derive default or not.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":599991,"byte_end":600017,"line_start":2474,"line_end":2474,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1722},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":601363,"byte_end":601385,"line_start":2513,"line_end":2513,"column_start":12,"column_end":34},"name":"lookup_can_derive_hash","qualname":"<BindgenContext>::lookup_can_derive_hash","value":"pub fn lookup_can_derive_hash<Id: Into<ItemId>>(&Self, Id) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Look up whether the item with `id` can\n derive hash or not.\n","sig":null,"attributes":[{"value":"/ Look up whether the item with `id` can","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":601281,"byte_end":601323,"line_start":2511,"line_end":2511,"column_start":5,"column_end":47}},{"value":"/ derive hash or not.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":601328,"byte_end":601351,"line_start":2512,"line_end":2512,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1725},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":602499,"byte_end":602540,"line_start":2542,"line_end":2542,"column_start":12,"column_end":53},"name":"lookup_can_derive_partialeq_or_partialord","qualname":"<BindgenContext>::lookup_can_derive_partialeq_or_partialord","value":"pub fn lookup_can_derive_partialeq_or_partialord<Id: Into<ItemId>>(&Self, Id)\n-> CanDerive","parent":null,"children":[],"decl_id":null,"docs":" Look up whether the item with `id` can derive `Partial{Eq,Ord}`.\n","sig":null,"attributes":[{"value":"/ Look up whether the item with `id` can derive `Partial{Eq,Ord}`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":602419,"byte_end":602487,"line_start":2541,"line_end":2541,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1727},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":603167,"byte_end":603189,"line_start":2563,"line_end":2563,"column_start":12,"column_end":34},"name":"lookup_can_derive_copy","qualname":"<BindgenContext>::lookup_can_derive_copy","value":"pub fn lookup_can_derive_copy<Id: Into<ItemId>>(&Self, Id) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Look up whether the item with `id` can derive `Copy` or not.\n","sig":null,"attributes":[{"value":"/ Look up whether the item with `id` can derive `Copy` or not.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":603091,"byte_end":603155,"line_start":2562,"line_end":2562,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1730},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":604062,"byte_end":604092,"line_start":2586,"line_end":2586,"column_start":12,"column_end":42},"name":"lookup_has_type_param_in_array","qualname":"<BindgenContext>::lookup_has_type_param_in_array","value":"pub fn lookup_has_type_param_in_array<Id: Into<ItemId>>(&Self, Id) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Look up whether the item with `id` has type parameter in array or not.\n","sig":null,"attributes":[{"value":"/ Look up whether the item with `id` has type parameter in array or not.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":603976,"byte_end":604050,"line_start":2585,"line_end":2585,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":1733},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":604914,"byte_end":604930,"line_start":2613,"line_end":2613,"column_start":12,"column_end":28},"name":"lookup_has_float","qualname":"<BindgenContext>::lookup_has_float","value":"pub fn lookup_has_float<Id: Into<ItemId>>(&Self, Id) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Look up whether the item with `id` has array or not.\n","sig":null,"attributes":[{"value":"/ Look up whether the item with `id` has array or not.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":604846,"byte_end":604902,"line_start":2612,"line_end":2612,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1735},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":605345,"byte_end":605365,"line_start":2625,"line_end":2625,"column_start":12,"column_end":32},"name":"no_partialeq_by_name","qualname":"<BindgenContext>::no_partialeq_by_name","value":"pub fn no_partialeq_by_name(&Self, &Item) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if `--no-partialeq` flag is enabled for this item.\n","sig":null,"attributes":[{"value":"/ Check if `--no-partialeq` flag is enabled for this item.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":605273,"byte_end":605333,"line_start":2624,"line_end":2624,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1736},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":605600,"byte_end":605615,"line_start":2631,"line_end":2631,"column_start":12,"column_end":27},"name":"no_copy_by_name","qualname":"<BindgenContext>::no_copy_by_name","value":"pub fn no_copy_by_name(&Self, &Item) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if `--no-copy` flag is enabled for this item.\n","sig":null,"attributes":[{"value":"/ Check if `--no-copy` flag is enabled for this item.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":605533,"byte_end":605588,"line_start":2630,"line_end":2630,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1737},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":605845,"byte_end":605860,"line_start":2637,"line_end":2637,"column_start":12,"column_end":27},"name":"no_hash_by_name","qualname":"<BindgenContext>::no_hash_by_name","value":"pub fn no_hash_by_name(&Self, &Item) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if `--no-hash` flag is enabled for this item.\n","sig":null,"attributes":[{"value":"/ Check if `--no-hash` flag is enabled for this item.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":605778,"byte_end":605833,"line_start":2636,"line_end":2636,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":3751},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":606124,"byte_end":606136,"line_start":2645,"line_end":2645,"column_start":12,"column_end":24},"name":"ItemResolver","qualname":"::ir::context::ItemResolver","value":"ItemResolver {  }","parent":null,"children":[{"krate":0,"index":3752},{"krate":0,"index":3753},{"krate":0,"index":3754}],"decl_id":null,"docs":" A builder struct for configuring item resolution options.\n","sig":null,"attributes":[{"value":"/ A builder struct for configuring item resolution options.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":606021,"byte_end":606082,"line_start":2643,"line_end":2643,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1739},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":606296,"byte_end":606309,"line_start":2653,"line_end":2653,"column_start":12,"column_end":25},"name":"into_resolver","qualname":"<ItemId>::into_resolver","value":"pub fn into_resolver(Self) -> ItemResolver","parent":null,"children":[],"decl_id":null,"docs":" Create an `ItemResolver` from this item id.\n","sig":null,"attributes":[{"value":"/ Create an `ItemResolver` from this item id.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":606237,"byte_end":606284,"line_start":2652,"line_end":2652,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1744},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":606590,"byte_end":606593,"line_start":2669,"line_end":2669,"column_start":12,"column_end":15},"name":"new","qualname":"<ItemResolver>::new","value":"pub fn new<Id: Into<ItemId>>(Id) -> ItemResolver","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `ItemResolver` from the given id.\n","sig":null,"attributes":[{"value":"/ Construct a new `ItemResolver` from the given id.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":606525,"byte_end":606578,"line_start":2668,"line_end":2668,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1746},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":606870,"byte_end":606887,"line_start":2679,"line_end":2679,"column_start":12,"column_end":29},"name":"through_type_refs","qualname":"<ItemResolver>::through_type_refs","value":"pub fn through_type_refs(Self) -> ItemResolver","parent":null,"children":[],"decl_id":null,"docs":" Keep resolving through `Type::TypeRef` items.\n","sig":null,"attributes":[{"value":"/ Keep resolving through `Type::TypeRef` items.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":606809,"byte_end":606858,"line_start":2678,"line_end":2678,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1747},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":607038,"byte_end":607058,"line_start":2685,"line_end":2685,"column_start":12,"column_end":32},"name":"through_type_aliases","qualname":"<ItemResolver>::through_type_aliases","value":"pub fn through_type_aliases(Self) -> ItemResolver","parent":null,"children":[],"decl_id":null,"docs":" Keep resolving through `Type::Alias` items.\n","sig":null,"attributes":[{"value":"/ Keep resolving through `Type::Alias` items.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":606979,"byte_end":607026,"line_start":2684,"line_end":2684,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1748},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":607227,"byte_end":607234,"line_start":2691,"line_end":2691,"column_start":12,"column_end":19},"name":"resolve","qualname":"<ItemResolver>::resolve","value":"pub fn resolve(Self, &BindgenContext) -> &Item","parent":null,"children":[],"decl_id":null,"docs":" Finish configuring and perform the actual item resolution.\n","sig":null,"attributes":[{"value":"/ Finish configuring and perform the actual item resolution.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":607153,"byte_end":607215,"line_start":2690,"line_end":2690,"column_start":5,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":3760},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":608215,"byte_end":608226,"line_start":2720,"line_end":2720,"column_start":12,"column_end":23},"name":"PartialType","qualname":"::ir::context::PartialType","value":"PartialType {  }","parent":null,"children":[{"krate":0,"index":3761},{"krate":0,"index":3762}],"decl_id":null,"docs":" A type that we are in the middle of parsing.\n","sig":null,"attributes":[{"value":"/ A type that we are in the middle of parsing.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":608110,"byte_end":608158,"line_start":2718,"line_end":2718,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1751},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":608472,"byte_end":608475,"line_start":2729,"line_end":2729,"column_start":12,"column_end":15},"name":"new","qualname":"<PartialType>::new","value":"pub fn new(Cursor, ItemId) -> PartialType","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `PartialType`.\n","sig":null,"attributes":[{"value":"/ Construct a new `PartialType`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":608426,"byte_end":608460,"line_start":2728,"line_end":2728,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1752},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":608699,"byte_end":608703,"line_start":2735,"line_end":2735,"column_start":12,"column_end":16},"name":"decl","qualname":"<PartialType>::decl","value":"pub fn decl(&Self) -> &Cursor","parent":null,"children":[],"decl_id":null,"docs":" The cursor pointing to this partial type's declaration location.\n","sig":null,"attributes":[{"value":"/ The cursor pointing to this partial type's declaration location.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":608619,"byte_end":608687,"line_start":2734,"line_end":2734,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1753},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":608878,"byte_end":608880,"line_start":2741,"line_end":2741,"column_start":12,"column_end":14},"name":"id","qualname":"<PartialType>::id","value":"pub fn id(&Self) -> ItemId","parent":null,"children":[],"decl_id":null,"docs":" The item ID allocated for this type. This is *NOT* a key for an entry in\n the context's item set yet!\n","sig":null,"attributes":[{"value":"/ The item ID allocated for this type. This is *NOT* a key for an entry in","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":608754,"byte_end":608830,"line_start":2739,"line_end":2739,"column_start":5,"column_end":81}},{"value":"/ the context's item set yet!","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":608835,"byte_end":608866,"line_start":2740,"line_end":2740,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3776},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\derive.rs","byte_start":613484,"byte_end":613487,"line_start":98,"line_end":98,"column_start":5,"column_end":8},"name":"Yes","qualname":"::ir::derive::CanDerive::Yes","value":"CanDerive::Yes","parent":{"krate":0,"index":3775},"children":[],"decl_id":null,"docs":" Yes, we can derive automatically.\n","sig":null,"attributes":[{"value":"/ Yes, we can derive automatically.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\derive.rs","byte_start":613442,"byte_end":613479,"line_start":97,"line_end":97,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3778},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\derive.rs","byte_start":613708,"byte_end":613716,"line_start":104,"line_end":104,"column_start":5,"column_end":13},"name":"Manually","qualname":"::ir::derive::CanDerive::Manually","value":"CanDerive::Manually","parent":{"krate":0,"index":3775},"children":[],"decl_id":null,"docs":" The only thing that stops us from automatically deriving is that\n array with more than maximum number of elements is used.","sig":null,"attributes":[{"value":"/ The only thing that stops us from automatically deriving is that","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\derive.rs","byte_start":613494,"byte_end":613562,"line_start":100,"line_end":100,"column_start":5,"column_end":73}},{"value":"/ array with more than maximum number of elements is used.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\derive.rs","byte_start":613567,"byte_end":613627,"line_start":101,"line_end":101,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\derive.rs","byte_start":613632,"byte_end":613635,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ This means we probably can \"manually\" implement such trait.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\derive.rs","byte_start":613640,"byte_end":613703,"line_start":103,"line_end":103,"column_start":5,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3780},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\derive.rs","byte_start":613746,"byte_end":613748,"line_start":107,"line_end":107,"column_start":5,"column_end":7},"name":"No","qualname":"::ir::derive::CanDerive::No","value":"CanDerive::No","parent":{"krate":0,"index":3775},"children":[],"decl_id":null,"docs":" No, we cannot.\n","sig":null,"attributes":[{"value":"/ No, we cannot.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\derive.rs","byte_start":613723,"byte_end":613741,"line_start":106,"line_end":106,"column_start":5,"column_end":23}}]},{"kind":"Enum","id":{"krate":0,"index":3775},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\derive.rs","byte_start":613426,"byte_end":613435,"line_start":96,"line_end":96,"column_start":10,"column_end":19},"name":"CanDerive","qualname":"::ir::derive::CanDerive","value":"pub enum CanDerive {\n\n    /// Yes, we can derive automatically.\n    Yes,\n\n    /// The only thing that stops us from automatically deriving is that\n    /// array with more than maximum number of elements is used.\n    ///\n    /// This means we probably can \"manually\" implement such trait.\n    Manually,\n\n    /// No, we cannot.\n    No,\n}","parent":null,"children":[{"krate":0,"index":3776},{"krate":0,"index":3778},{"krate":0,"index":3780}],"decl_id":null,"docs":" Whether it is possible or not to automatically derive trait for an item.","sig":null,"attributes":[{"value":"/ Whether it is possible or not to automatically derive trait for an item.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\derive.rs","byte_start":613004,"byte_end":613080,"line_start":81,"line_end":81,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\derive.rs","byte_start":613081,"byte_end":613084,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\derive.rs","byte_start":613085,"byte_end":613098,"line_start":83,"line_end":83,"column_start":1,"column_end":14}},{"value":"/         No","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\derive.rs","byte_start":613099,"byte_end":613113,"line_start":84,"line_end":84,"column_start":1,"column_end":15}},{"value":"/          ^","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\derive.rs","byte_start":613114,"byte_end":613128,"line_start":85,"line_end":85,"column_start":1,"column_end":15}},{"value":"/          |","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\derive.rs","byte_start":613129,"byte_end":613143,"line_start":86,"line_end":86,"column_start":1,"column_end":15}},{"value":"/      Manually","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\derive.rs","byte_start":613144,"byte_end":613161,"line_start":87,"line_end":87,"column_start":1,"column_end":18}},{"value":"/          ^","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\derive.rs","byte_start":613162,"byte_end":613176,"line_start":88,"line_end":88,"column_start":1,"column_end":15}},{"value":"/          |","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\derive.rs","byte_start":613177,"byte_end":613191,"line_start":89,"line_end":89,"column_start":1,"column_end":15}},{"value":"/         Yes","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\derive.rs","byte_start":613192,"byte_end":613207,"line_start":90,"line_end":90,"column_start":1,"column_end":16}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\derive.rs","byte_start":613208,"byte_end":613215,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\derive.rs","byte_start":613216,"byte_end":613219,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ Initially we assume that we can derive trait for all types and then","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\derive.rs","byte_start":613220,"byte_end":613291,"line_start":93,"line_end":93,"column_start":1,"column_end":72}},{"value":"/ update our understanding as we learn more about each type.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\derive.rs","byte_start":613292,"byte_end":613354,"line_start":94,"line_end":94,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1781},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\derive.rs","byte_start":613930,"byte_end":613934,"line_start":118,"line_end":118,"column_start":12,"column_end":16},"name":"join","qualname":"<CanDerive>::join","value":"pub fn join(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Take the least upper bound of `self` and `rhs`.\n","sig":null,"attributes":[{"value":"/ Take the least upper bound of `self` and `rhs`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\derive.rs","byte_start":613867,"byte_end":613918,"line_start":117,"line_end":117,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3798},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\enum_ty.rs","byte_start":617282,"byte_end":617296,"line_start":17,"line_end":17,"column_start":5,"column_end":19},"name":"ModuleConstify","qualname":"::ir::enum_ty::EnumVariantCustomBehavior::ModuleConstify","value":"EnumVariantCustomBehavior::ModuleConstify","parent":{"krate":0,"index":3797},"children":[],"decl_id":null,"docs":" This variant will be a module containing constants.\n","sig":null,"attributes":[{"value":"/ This variant will be a module containing constants.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\enum_ty.rs","byte_start":617222,"byte_end":617277,"line_start":16,"line_end":16,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3800},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\enum_ty.rs","byte_start":617383,"byte_end":617391,"line_start":19,"line_end":19,"column_start":5,"column_end":13},"name":"Constify","qualname":"::ir::enum_ty::EnumVariantCustomBehavior::Constify","value":"EnumVariantCustomBehavior::Constify","parent":{"krate":0,"index":3797},"children":[],"decl_id":null,"docs":" This variant will be constified, that is, forced to generate a constant.\n","sig":null,"attributes":[{"value":"/ This variant will be constified, that is, forced to generate a constant.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\enum_ty.rs","byte_start":617302,"byte_end":617378,"line_start":18,"line_end":18,"column_start":5,"column_end":81}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3802},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\enum_ty.rs","byte_start":617467,"byte_end":617471,"line_start":21,"line_end":21,"column_start":5,"column_end":9},"name":"Hide","qualname":"::ir::enum_ty::EnumVariantCustomBehavior::Hide","value":"EnumVariantCustomBehavior::Hide","parent":{"krate":0,"index":3797},"children":[],"decl_id":null,"docs":" This variant will be hidden entirely from the resulting enum.\n","sig":null,"attributes":[{"value":"/ This variant will be hidden entirely from the resulting enum.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\enum_ty.rs","byte_start":617397,"byte_end":617462,"line_start":20,"line_end":20,"column_start":5,"column_end":70}}]},{"kind":"Enum","id":{"krate":0,"index":3797},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\enum_ty.rs","byte_start":617190,"byte_end":617215,"line_start":15,"line_end":15,"column_start":10,"column_end":35},"name":"EnumVariantCustomBehavior","qualname":"::ir::enum_ty::EnumVariantCustomBehavior","value":"pub enum EnumVariantCustomBehavior {\n\n    /// This variant will be a module containing constants.\n    ModuleConstify,\n\n    /// This variant will be constified, that is, forced to generate a constant.\n    Constify,\n\n    /// This variant will be hidden entirely from the resulting enum.\n    Hide,\n}","parent":null,"children":[{"krate":0,"index":3798},{"krate":0,"index":3800},{"krate":0,"index":3802}],"decl_id":null,"docs":" An enum representing custom handling that can be given to a variant.\n","sig":null,"attributes":[{"value":"/ An enum representing custom handling that can be given to a variant.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\enum_ty.rs","byte_start":617063,"byte_end":617135,"line_start":13,"line_end":13,"column_start":1,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":3815},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\enum_ty.rs","byte_start":617529,"byte_end":617533,"line_start":26,"line_end":26,"column_start":12,"column_end":16},"name":"Enum","qualname":"::ir::enum_ty::Enum","value":"Enum {  }","parent":null,"children":[{"krate":0,"index":3816},{"krate":0,"index":3817}],"decl_id":null,"docs":" A C/C++ enumeration.\n","sig":null,"attributes":[{"value":"/ A C/C++ enumeration.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\enum_ty.rs","byte_start":617476,"byte_end":617500,"line_start":24,"line_end":24,"column_start":1,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":1818},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\enum_ty.rs","byte_start":618004,"byte_end":618007,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<Enum>::new","value":"pub fn new(Option<TypeId>, Vec<EnumVariant>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Enum` with the given representation and variants.\n","sig":null,"attributes":[{"value":"/ Construct a new `Enum` with the given representation and variants.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\enum_ty.rs","byte_start":617922,"byte_end":617992,"line_start":39,"line_end":39,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1819},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\enum_ty.rs","byte_start":618165,"byte_end":618169,"line_start":45,"line_end":45,"column_start":12,"column_end":16},"name":"repr","qualname":"<Enum>::repr","value":"pub fn repr(&Self) -> Option<TypeId>","parent":null,"children":[],"decl_id":null,"docs":" Get this enumeration's representation.\n","sig":null,"attributes":[{"value":"/ Get this enumeration's representation.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\enum_ty.rs","byte_start":618111,"byte_end":618153,"line_start":44,"line_end":44,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1820},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\enum_ty.rs","byte_start":618274,"byte_end":618282,"line_start":50,"line_end":50,"column_start":12,"column_end":20},"name":"variants","qualname":"<Enum>::variants","value":"pub fn variants(&Self) -> &[EnumVariant]","parent":null,"children":[],"decl_id":null,"docs":" Get this enumeration's variants.\n","sig":null,"attributes":[{"value":"/ Get this enumeration's variants.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\enum_ty.rs","byte_start":618226,"byte_end":618262,"line_start":49,"line_end":49,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1821},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\enum_ty.rs","byte_start":618411,"byte_end":618418,"line_start":55,"line_end":55,"column_start":12,"column_end":19},"name":"from_ty","qualname":"<Enum>::from_ty","value":"pub fn from_ty(&clang::Type, &mut BindgenContext) -> Result<Self, ParseError>","parent":null,"children":[],"decl_id":null,"docs":" Construct an enumeration from the given Clang type.\n","sig":null,"attributes":[{"value":"/ Construct an enumeration from the given Clang type.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\enum_ty.rs","byte_start":618344,"byte_end":618399,"line_start":54,"line_end":54,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1833},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\enum_ty.rs","byte_start":622458,"byte_end":622481,"line_start":168,"line_end":168,"column_start":12,"column_end":35},"name":"computed_enum_variation","qualname":"<Enum>::computed_enum_variation","value":"pub fn computed_enum_variation(&Self, &BindgenContext, &Item) -> EnumVariation","parent":null,"children":[],"decl_id":null,"docs":" Returns the final representation of the enum.\n","sig":null,"attributes":[{"value":"/ Returns the final representation of the enum.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\enum_ty.rs","byte_start":622397,"byte_end":622446,"line_start":167,"line_end":167,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":3820},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\enum_ty.rs","byte_start":624001,"byte_end":624012,"line_start":220,"line_end":220,"column_start":12,"column_end":23},"name":"EnumVariant","qualname":"::ir::enum_ty::EnumVariant","value":"EnumVariant {  }","parent":null,"children":[{"krate":0,"index":3821},{"krate":0,"index":3822},{"krate":0,"index":3823},{"krate":0,"index":3824}],"decl_id":null,"docs":" A single enum variant, to be contained only in an enum.\n","sig":null,"attributes":[{"value":"/ A single enum variant, to be contained only in an enum.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\enum_ty.rs","byte_start":623913,"byte_end":623972,"line_start":218,"line_end":218,"column_start":1,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3828},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\enum_ty.rs","byte_start":624502,"byte_end":624508,"line_start":238,"line_end":238,"column_start":5,"column_end":11},"name":"Signed","qualname":"::ir::enum_ty::EnumVariantValue::Signed","value":"EnumVariantValue::Signed(i64)","parent":{"krate":0,"index":3827},"children":[],"decl_id":null,"docs":" A signed constant.\n","sig":null,"attributes":[{"value":"/ A signed constant.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\enum_ty.rs","byte_start":624475,"byte_end":624497,"line_start":237,"line_end":237,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3831},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\enum_ty.rs","byte_start":624550,"byte_end":624558,"line_start":241,"line_end":241,"column_start":5,"column_end":13},"name":"Unsigned","qualname":"::ir::enum_ty::EnumVariantValue::Unsigned","value":"EnumVariantValue::Unsigned(u64)","parent":{"krate":0,"index":3827},"children":[],"decl_id":null,"docs":" An unsigned constant.\n","sig":null,"attributes":[{"value":"/ An unsigned constant.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\enum_ty.rs","byte_start":624520,"byte_end":624545,"line_start":240,"line_end":240,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":3827},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\enum_ty.rs","byte_start":624452,"byte_end":624468,"line_start":236,"line_end":236,"column_start":10,"column_end":26},"name":"EnumVariantValue","qualname":"::ir::enum_ty::EnumVariantValue","value":"pub enum EnumVariantValue {\n\n    /// A signed constant.\n    Signed(i64),\n\n    /// An unsigned constant.\n    Unsigned(u64),\n}","parent":null,"children":[{"krate":0,"index":3828},{"krate":0,"index":3831}],"decl_id":null,"docs":" A constant value assigned to an enumeration variant.\n","sig":null,"attributes":[{"value":"/ A constant value assigned to an enumeration variant.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\enum_ty.rs","byte_start":624318,"byte_end":624374,"line_start":234,"line_end":234,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1835},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\enum_ty.rs","byte_start":624664,"byte_end":624667,"line_start":246,"line_end":246,"column_start":12,"column_end":15},"name":"new","qualname":"<EnumVariant>::new","value":"pub fn new(String, Option<String>, EnumVariantValue,\n           Option<EnumVariantCustomBehavior>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new enumeration variant from the given parts.\n","sig":null,"attributes":[{"value":"/ Construct a new enumeration variant from the given parts.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\enum_ty.rs","byte_start":624591,"byte_end":624652,"line_start":245,"line_end":245,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1836},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\enum_ty.rs","byte_start":624999,"byte_end":625003,"line_start":261,"line_end":261,"column_start":12,"column_end":16},"name":"name","qualname":"<EnumVariant>::name","value":"pub fn name(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Get this variant's name.\n","sig":null,"attributes":[{"value":"/ Get this variant's name.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\enum_ty.rs","byte_start":624959,"byte_end":624987,"line_start":260,"line_end":260,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1837},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\enum_ty.rs","byte_start":625092,"byte_end":625095,"line_start":266,"line_end":266,"column_start":12,"column_end":15},"name":"val","qualname":"<EnumVariant>::val","value":"pub fn val(&Self) -> EnumVariantValue","parent":null,"children":[],"decl_id":null,"docs":" Get this variant's value.\n","sig":null,"attributes":[{"value":"/ Get this variant's value.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\enum_ty.rs","byte_start":625051,"byte_end":625080,"line_start":265,"line_end":265,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1838},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\enum_ty.rs","byte_start":625202,"byte_end":625209,"line_start":271,"line_end":271,"column_start":12,"column_end":19},"name":"comment","qualname":"<EnumVariant>::comment","value":"pub fn comment(&Self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Get this variant's documentation.\n","sig":null,"attributes":[{"value":"/ Get this variant's documentation.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\enum_ty.rs","byte_start":625153,"byte_end":625190,"line_start":270,"line_end":270,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1840},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\enum_ty.rs","byte_start":625398,"byte_end":625418,"line_start":277,"line_end":277,"column_start":12,"column_end":32},"name":"force_constification","qualname":"<EnumVariant>::force_constification","value":"pub fn force_constification(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this variant should be enforced to be a constant by code\n generation.\n","sig":null,"attributes":[{"value":"/ Returns whether this variant should be enforced to be a constant by code","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\enum_ty.rs","byte_start":625290,"byte_end":625366,"line_start":275,"line_end":275,"column_start":5,"column_end":81}},{"value":"/ generation.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\enum_ty.rs","byte_start":625371,"byte_end":625386,"line_start":276,"line_end":276,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1842},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\enum_ty.rs","byte_start":625666,"byte_end":625672,"line_start":284,"line_end":284,"column_start":12,"column_end":18},"name":"hidden","qualname":"<EnumVariant>::hidden","value":"pub fn hidden(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the current variant should be hidden completely from the\n resulting rust enum.\n","sig":null,"attributes":[{"value":"/ Returns whether the current variant should be hidden completely from the","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\enum_ty.rs","byte_start":625549,"byte_end":625625,"line_start":282,"line_end":282,"column_start":5,"column_end":81}},{"value":"/ resulting rust enum.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\enum_ty.rs","byte_start":625630,"byte_end":625654,"line_start":283,"line_end":283,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3858},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\function.rs","byte_start":626473,"byte_end":626481,"line_start":25,"line_end":25,"column_start":5,"column_end":13},"name":"Function","qualname":"::ir::function::FunctionKind::Function","value":"FunctionKind::Function","parent":{"krate":0,"index":3857},"children":[],"decl_id":null,"docs":" A plain, free function.\n","sig":null,"attributes":[{"value":"/ A plain, free function.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\function.rs","byte_start":626441,"byte_end":626468,"line_start":24,"line_end":24,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3860},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\function.rs","byte_start":626518,"byte_end":626524,"line_start":27,"line_end":27,"column_start":5,"column_end":11},"name":"Method","qualname":"::ir::function::FunctionKind::Method","value":"FunctionKind::Method(MethodKind)","parent":{"krate":0,"index":3857},"children":[],"decl_id":null,"docs":" A method of some kind.\n","sig":null,"attributes":[{"value":"/ A method of some kind.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\function.rs","byte_start":626487,"byte_end":626513,"line_start":26,"line_end":26,"column_start":5,"column_end":31}}]},{"kind":"Enum","id":{"krate":0,"index":3857},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\function.rs","byte_start":626422,"byte_end":626434,"line_start":23,"line_end":23,"column_start":10,"column_end":22},"name":"FunctionKind","qualname":"::ir::function::FunctionKind","value":"pub enum FunctionKind {\n\n    /// A plain, free function.\n    Function,\n\n    /// A method of some kind.\n    Method(MethodKind),\n}","parent":null,"children":[{"krate":0,"index":3858},{"krate":0,"index":3860}],"decl_id":null,"docs":" What kind of a function are we looking at?\n","sig":null,"attributes":[{"value":"/ What kind of a function are we looking at?","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\function.rs","byte_start":626325,"byte_end":626371,"line_start":21,"line_end":21,"column_start":1,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3873},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\function.rs","byte_start":627952,"byte_end":627960,"line_start":67,"line_end":67,"column_start":5,"column_end":13},"name":"External","qualname":"::ir::function::Linkage::External","value":"Linkage::External","parent":{"krate":0,"index":3872},"children":[],"decl_id":null,"docs":" Externally visible and can be linked against\n","sig":null,"attributes":[{"value":"/ Externally visible and can be linked against","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\function.rs","byte_start":627899,"byte_end":627947,"line_start":66,"line_end":66,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3875},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\function.rs","byte_start":628055,"byte_end":628063,"line_start":69,"line_end":69,"column_start":5,"column_end":13},"name":"Internal","qualname":"::ir::function::Linkage::Internal","value":"Linkage::Internal","parent":{"krate":0,"index":3872},"children":[],"decl_id":null,"docs":" Not exposed externally. 'static inline' functions will have this kind of linkage\n","sig":null,"attributes":[{"value":"/ Not exposed externally. 'static inline' functions will have this kind of linkage","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\function.rs","byte_start":627966,"byte_end":628050,"line_start":68,"line_end":68,"column_start":5,"column_end":89}}]},{"kind":"Enum","id":{"krate":0,"index":3872},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\function.rs","byte_start":627885,"byte_end":627892,"line_start":65,"line_end":65,"column_start":10,"column_end":17},"name":"Linkage","qualname":"::ir::function::Linkage","value":"pub enum Linkage {\n\n    /// Externally visible and can be linked against\n    External,\n\n    /// Not exposed externally. 'static inline' functions will have this kind of linkage\n    Internal,\n}","parent":null,"children":[{"krate":0,"index":3873},{"krate":0,"index":3875}],"decl_id":null,"docs":" The style of linkage\n","sig":null,"attributes":[{"value":"/ The style of linkage","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\function.rs","byte_start":627821,"byte_end":627845,"line_start":63,"line_end":63,"column_start":1,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":3882},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\function.rs","byte_start":628265,"byte_end":628273,"line_start":77,"line_end":77,"column_start":12,"column_end":20},"name":"Function","qualname":"::ir::function::Function","value":"Function {  }","parent":null,"children":[{"krate":0,"index":3883},{"krate":0,"index":3884},{"krate":0,"index":3885},{"krate":0,"index":3886},{"krate":0,"index":3887},{"krate":0,"index":3888}],"decl_id":null,"docs":" A function declaration, with a signature, arguments, and argument names.","sig":null,"attributes":[{"value":"/ A function declaration, with a signature, arguments, and argument names.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\function.rs","byte_start":628068,"byte_end":628144,"line_start":72,"line_end":72,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\function.rs","byte_start":628145,"byte_end":628148,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ The argument names vector must be the same length as the ones in the","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\function.rs","byte_start":628149,"byte_end":628221,"line_start":74,"line_end":74,"column_start":1,"column_end":73}},{"value":"/ signature.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\function.rs","byte_start":628222,"byte_end":628236,"line_start":75,"line_end":75,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":1873},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\function.rs","byte_start":628760,"byte_end":628763,"line_start":99,"line_end":99,"column_start":12,"column_end":15},"name":"new","qualname":"<Function>::new","value":"pub fn new(String, Option<String>, TypeId, Option<String>, FunctionKind,\n           Linkage) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new function.\n","sig":null,"attributes":[{"value":"/ Construct a new function.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\function.rs","byte_start":628719,"byte_end":628748,"line_start":98,"line_end":98,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1874},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\function.rs","byte_start":629163,"byte_end":629167,"line_start":118,"line_end":118,"column_start":12,"column_end":16},"name":"name","qualname":"<Function>::name","value":"pub fn name(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Get this function's name.\n","sig":null,"attributes":[{"value":"/ Get this function's name.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\function.rs","byte_start":629122,"byte_end":629151,"line_start":117,"line_end":117,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1875},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\function.rs","byte_start":629256,"byte_end":629268,"line_start":123,"line_end":123,"column_start":12,"column_end":24},"name":"mangled_name","qualname":"<Function>::mangled_name","value":"pub fn mangled_name(&Self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Get this function's name.\n","sig":null,"attributes":[{"value":"/ Get this function's name.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\function.rs","byte_start":629215,"byte_end":629244,"line_start":122,"line_end":122,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1877},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\function.rs","byte_start":629405,"byte_end":629414,"line_start":128,"line_end":128,"column_start":12,"column_end":21},"name":"signature","qualname":"<Function>::signature","value":"pub fn signature(&Self) -> TypeId","parent":null,"children":[],"decl_id":null,"docs":" Get this function's signature type.\n","sig":null,"attributes":[{"value":"/ Get this function's signature type.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\function.rs","byte_start":629354,"byte_end":629393,"line_start":127,"line_end":127,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1878},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\function.rs","byte_start":629509,"byte_end":629513,"line_start":133,"line_end":133,"column_start":12,"column_end":16},"name":"kind","qualname":"<Function>::kind","value":"pub fn kind(&Self) -> FunctionKind","parent":null,"children":[],"decl_id":null,"docs":" Get this function's kind.\n","sig":null,"attributes":[{"value":"/ Get this function's kind.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\function.rs","byte_start":629468,"byte_end":629497,"line_start":132,"line_end":132,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1879},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\function.rs","byte_start":629612,"byte_end":629619,"line_start":138,"line_end":138,"column_start":12,"column_end":19},"name":"linkage","qualname":"<Function>::linkage","value":"pub fn linkage(&Self) -> Linkage","parent":null,"children":[],"decl_id":null,"docs":" Get this function's linkage.\n","sig":null,"attributes":[{"value":"/ Get this function's linkage.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\function.rs","byte_start":629568,"byte_end":629600,"line_start":137,"line_end":137,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3892},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\function.rs","byte_start":630321,"byte_end":630322,"line_start":170,"line_end":170,"column_start":5,"column_end":6},"name":"C","qualname":"::ir::function::Abi::C","value":"Abi::C","parent":{"krate":0,"index":3891},"children":[],"decl_id":null,"docs":" The default C ABI.\n","sig":null,"attributes":[{"value":"/ The default C ABI.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\function.rs","byte_start":630294,"byte_end":630316,"line_start":169,"line_end":169,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3894},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\function.rs","byte_start":630355,"byte_end":630362,"line_start":172,"line_end":172,"column_start":5,"column_end":12},"name":"Stdcall","qualname":"::ir::function::Abi::Stdcall","value":"Abi::Stdcall","parent":{"krate":0,"index":3891},"children":[],"decl_id":null,"docs":" The \"stdcall\" ABI.\n","sig":null,"attributes":[{"value":"/ The \"stdcall\" ABI.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\function.rs","byte_start":630328,"byte_end":630350,"line_start":171,"line_end":171,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3896},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\function.rs","byte_start":630396,"byte_end":630404,"line_start":174,"line_end":174,"column_start":5,"column_end":13},"name":"Fastcall","qualname":"::ir::function::Abi::Fastcall","value":"Abi::Fastcall","parent":{"krate":0,"index":3891},"children":[],"decl_id":null,"docs":" The \"fastcall\" ABI.\n","sig":null,"attributes":[{"value":"/ The \"fastcall\" ABI.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\function.rs","byte_start":630368,"byte_end":630391,"line_start":173,"line_end":173,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3898},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\function.rs","byte_start":630438,"byte_end":630446,"line_start":176,"line_end":176,"column_start":5,"column_end":13},"name":"ThisCall","qualname":"::ir::function::Abi::ThisCall","value":"Abi::ThisCall","parent":{"krate":0,"index":3891},"children":[],"decl_id":null,"docs":" The \"thiscall\" ABI.\n","sig":null,"attributes":[{"value":"/ The \"thiscall\" ABI.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\function.rs","byte_start":630410,"byte_end":630433,"line_start":175,"line_end":175,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3900},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\function.rs","byte_start":630477,"byte_end":630482,"line_start":178,"line_end":178,"column_start":5,"column_end":10},"name":"Aapcs","qualname":"::ir::function::Abi::Aapcs","value":"Abi::Aapcs","parent":{"krate":0,"index":3891},"children":[],"decl_id":null,"docs":" The \"aapcs\" ABI.\n","sig":null,"attributes":[{"value":"/ The \"aapcs\" ABI.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\function.rs","byte_start":630452,"byte_end":630472,"line_start":177,"line_end":177,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3902},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\function.rs","byte_start":630513,"byte_end":630518,"line_start":180,"line_end":180,"column_start":5,"column_end":10},"name":"Win64","qualname":"::ir::function::Abi::Win64","value":"Abi::Win64","parent":{"krate":0,"index":3891},"children":[],"decl_id":null,"docs":" The \"win64\" ABI.\n","sig":null,"attributes":[{"value":"/ The \"win64\" ABI.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\function.rs","byte_start":630488,"byte_end":630508,"line_start":179,"line_end":179,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3904},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\function.rs","byte_start":630559,"byte_end":630566,"line_start":182,"line_end":182,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::ir::function::Abi::Unknown","value":"Abi::Unknown(CXCallingConv)","parent":{"krate":0,"index":3891},"children":[],"decl_id":null,"docs":" An unknown or invalid ABI.\n","sig":null,"attributes":[{"value":"/ An unknown or invalid ABI.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\function.rs","byte_start":630524,"byte_end":630554,"line_start":181,"line_end":181,"column_start":5,"column_end":35}}]},{"kind":"Enum","id":{"krate":0,"index":3891},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\function.rs","byte_start":630284,"byte_end":630287,"line_start":168,"line_end":168,"column_start":10,"column_end":13},"name":"Abi","qualname":"::ir::function::Abi","value":"pub enum Abi {\n\n    /// The default C ABI.\n    C,\n\n    /// The \"stdcall\" ABI.\n    Stdcall,\n\n    /// The \"fastcall\" ABI.\n    Fastcall,\n\n    /// The \"thiscall\" ABI.\n    ThisCall,\n\n    /// The \"aapcs\" ABI.\n    Aapcs,\n\n    /// The \"win64\" ABI.\n    Win64,\n\n    /// An unknown or invalid ABI.\n    Unknown(CXCallingConv),\n}","parent":null,"children":[{"krate":0,"index":3892},{"krate":0,"index":3894},{"krate":0,"index":3896},{"krate":0,"index":3898},{"krate":0,"index":3900},{"krate":0,"index":3902},{"krate":0,"index":3904}],"decl_id":null,"docs":" An ABI extracted from a clang cursor.\n","sig":null,"attributes":[{"value":"/ An ABI extracted from a clang cursor.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\function.rs","byte_start":630203,"byte_end":630244,"line_start":166,"line_end":166,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":3912},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\function.rs","byte_start":631428,"byte_end":631439,"line_start":214,"line_end":214,"column_start":12,"column_end":23},"name":"FunctionSig","qualname":"::ir::function::FunctionSig","value":"FunctionSig {  }","parent":null,"children":[{"krate":0,"index":3913},{"krate":0,"index":3914},{"krate":0,"index":3915},{"krate":0,"index":3916},{"krate":0,"index":3917}],"decl_id":null,"docs":" A function signature.\n","sig":null,"attributes":[{"value":"/ A function signature.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\function.rs","byte_start":631374,"byte_end":631399,"line_start":212,"line_end":212,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1897},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\function.rs","byte_start":636080,"byte_end":636083,"line_start":349,"line_end":349,"column_start":12,"column_end":15},"name":"new","qualname":"<FunctionSig>::new","value":"pub fn new(TypeId, Vec<(Option<String>, TypeId)>, bool, bool, Abi) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new function signature.\n","sig":null,"attributes":[{"value":"/ Construct a new function signature.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\function.rs","byte_start":636029,"byte_end":636068,"line_start":348,"line_end":348,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1898},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\function.rs","byte_start":636496,"byte_end":636503,"line_start":366,"line_end":366,"column_start":12,"column_end":19},"name":"from_ty","qualname":"<FunctionSig>::from_ty","value":"pub fn from_ty(&clang::Type, &clang::Cursor, &mut BindgenContext)\n-> Result<Self, ParseError>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new function signature from the given Clang type.\n","sig":null,"attributes":[{"value":"/ Construct a new function signature from the given Clang type.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\function.rs","byte_start":636419,"byte_end":636484,"line_start":365,"line_end":365,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1902},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\function.rs","byte_start":642236,"byte_end":642247,"line_start":514,"line_end":514,"column_start":12,"column_end":23},"name":"return_type","qualname":"<FunctionSig>::return_type","value":"pub fn return_type(&Self) -> TypeId","parent":null,"children":[],"decl_id":null,"docs":" Get this function signature's return type.\n","sig":null,"attributes":[{"value":"/ Get this function signature's return type.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\function.rs","byte_start":642178,"byte_end":642224,"line_start":513,"line_end":513,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1903},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\function.rs","byte_start":642377,"byte_end":642391,"line_start":519,"line_end":519,"column_start":12,"column_end":26},"name":"argument_types","qualname":"<FunctionSig>::argument_types","value":"pub fn argument_types(&Self) -> &[(Option<String>, TypeId)]","parent":null,"children":[],"decl_id":null,"docs":" Get this function signature's argument (name, type) pairs.\n","sig":null,"attributes":[{"value":"/ Get this function signature's argument (name, type) pairs.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\function.rs","byte_start":642303,"byte_end":642365,"line_start":518,"line_end":518,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1904},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\function.rs","byte_start":642522,"byte_end":642525,"line_start":524,"line_end":524,"column_start":12,"column_end":15},"name":"abi","qualname":"<FunctionSig>::abi","value":"pub fn abi(&Self) -> Abi","parent":null,"children":[],"decl_id":null,"docs":" Get this function signature's ABI.\n","sig":null,"attributes":[{"value":"/ Get this function signature's ABI.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\function.rs","byte_start":642472,"byte_end":642510,"line_start":523,"line_end":523,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1905},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\function.rs","byte_start":642622,"byte_end":642633,"line_start":529,"line_end":529,"column_start":12,"column_end":23},"name":"is_variadic","qualname":"<FunctionSig>::is_variadic","value":"pub fn is_variadic(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this function signature variadic?\n","sig":null,"attributes":[{"value":"/ Is this function signature variadic?","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\function.rs","byte_start":642570,"byte_end":642610,"line_start":528,"line_end":528,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1906},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\function.rs","byte_start":642992,"byte_end":643000,"line_start":537,"line_end":537,"column_start":12,"column_end":20},"name":"must_use","qualname":"<FunctionSig>::must_use","value":"pub fn must_use(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Must this function's return value be used?\n","sig":null,"attributes":[{"value":"/ Must this function's return value be used?","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\function.rs","byte_start":642934,"byte_end":642980,"line_start":536,"line_end":536,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1907},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\function.rs","byte_start":643494,"byte_end":643522,"line_start":550,"line_end":550,"column_start":12,"column_end":40},"name":"function_pointers_can_derive","qualname":"<FunctionSig>::function_pointers_can_derive","value":"pub fn function_pointers_can_derive(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Are function pointers with this signature able to derive Rust traits?\n Rust only supports deriving traits for function pointers with a limited\n number of parameters and a couple ABIs.","sig":null,"attributes":[{"value":"/ Are function pointers with this signature able to derive Rust traits?","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\function.rs","byte_start":643051,"byte_end":643124,"line_start":541,"line_end":541,"column_start":5,"column_end":78}},{"value":"/ Rust only supports deriving traits for function pointers with a limited","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\function.rs","byte_start":643129,"byte_end":643204,"line_start":542,"line_end":542,"column_start":5,"column_end":80}},{"value":"/ number of parameters and a couple ABIs.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\function.rs","byte_start":643209,"byte_end":643252,"line_start":543,"line_end":543,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\function.rs","byte_start":643257,"byte_end":643260,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ For more details, see:","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\function.rs","byte_start":643265,"byte_end":643291,"line_start":545,"line_end":545,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\function.rs","byte_start":643296,"byte_end":643299,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ * https://github.com/rust-lang/rust-bindgen/issues/547,","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\function.rs","byte_start":643304,"byte_end":643363,"line_start":547,"line_end":547,"column_start":5,"column_end":64}},{"value":"/ * https://github.com/rust-lang/rust/issues/38848,","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\function.rs","byte_start":643368,"byte_end":643421,"line_start":548,"line_end":548,"column_start":5,"column_end":58}},{"value":"/ * and https://github.com/rust-lang/rust/issues/40158","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\function.rs","byte_start":643426,"byte_end":643482,"line_start":549,"line_end":549,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3921},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\int.rs","byte_start":646551,"byte_end":646555,"line_start":7,"line_end":7,"column_start":5,"column_end":9},"name":"Bool","qualname":"::ir::int::IntKind::Bool","value":"IntKind::Bool","parent":{"krate":0,"index":3920},"children":[],"decl_id":null,"docs":" A `bool`.\n","sig":null,"attributes":[{"value":"/ A `bool`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\int.rs","byte_start":646533,"byte_end":646546,"line_start":6,"line_end":6,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3923},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\int.rs","byte_start":646587,"byte_end":646592,"line_start":10,"line_end":10,"column_start":5,"column_end":10},"name":"SChar","qualname":"::ir::int::IntKind::SChar","value":"IntKind::SChar","parent":{"krate":0,"index":3920},"children":[],"decl_id":null,"docs":" A `signed char`.\n","sig":null,"attributes":[{"value":"/ A `signed char`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\int.rs","byte_start":646562,"byte_end":646582,"line_start":9,"line_end":9,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3925},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\int.rs","byte_start":646627,"byte_end":646632,"line_start":13,"line_end":13,"column_start":5,"column_end":10},"name":"UChar","qualname":"::ir::int::IntKind::UChar","value":"IntKind::UChar","parent":{"krate":0,"index":3920},"children":[],"decl_id":null,"docs":" An `unsigned char`.\n","sig":null,"attributes":[{"value":"/ An `unsigned char`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\int.rs","byte_start":646599,"byte_end":646622,"line_start":12,"line_end":12,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3927},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\int.rs","byte_start":646661,"byte_end":646666,"line_start":16,"line_end":16,"column_start":5,"column_end":10},"name":"WChar","qualname":"::ir::int::IntKind::WChar","value":"IntKind::WChar","parent":{"krate":0,"index":3920},"children":[],"decl_id":null,"docs":" An `wchar_t`.\n","sig":null,"attributes":[{"value":"/ An `wchar_t`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\int.rs","byte_start":646639,"byte_end":646656,"line_start":15,"line_end":15,"column_start":5,"column_end":22}}]},{"kind":"StructVariant","id":{"krate":0,"index":3929},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\int.rs","byte_start":646744,"byte_end":646748,"line_start":19,"line_end":19,"column_start":5,"column_end":9},"name":"Char","qualname":"::ir::int::IntKind::Char","value":"IntKind::Char { is_signed }","parent":{"krate":0,"index":3920},"children":[],"decl_id":null,"docs":" A platform-dependent `char` type, with the signedness support.\n","sig":null,"attributes":[{"value":"/ A platform-dependent `char` type, with the signedness support.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\int.rs","byte_start":646673,"byte_end":646739,"line_start":18,"line_end":18,"column_start":5,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3931},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\int.rs","byte_start":646871,"byte_end":646876,"line_start":25,"line_end":25,"column_start":5,"column_end":10},"name":"Short","qualname":"::ir::int::IntKind::Short","value":"IntKind::Short","parent":{"krate":0,"index":3920},"children":[],"decl_id":null,"docs":" A `short`.\n","sig":null,"attributes":[{"value":"/ A `short`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\int.rs","byte_start":646852,"byte_end":646866,"line_start":24,"line_end":24,"column_start":5,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3933},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\int.rs","byte_start":646912,"byte_end":646918,"line_start":28,"line_end":28,"column_start":5,"column_end":11},"name":"UShort","qualname":"::ir::int::IntKind::UShort","value":"IntKind::UShort","parent":{"krate":0,"index":3920},"children":[],"decl_id":null,"docs":" An `unsigned short`.\n","sig":null,"attributes":[{"value":"/ An `unsigned short`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\int.rs","byte_start":646883,"byte_end":646907,"line_start":27,"line_end":27,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3935},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\int.rs","byte_start":646943,"byte_end":646946,"line_start":31,"line_end":31,"column_start":5,"column_end":8},"name":"Int","qualname":"::ir::int::IntKind::Int","value":"IntKind::Int","parent":{"krate":0,"index":3920},"children":[],"decl_id":null,"docs":" An `int`.\n","sig":null,"attributes":[{"value":"/ An `int`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\int.rs","byte_start":646925,"byte_end":646938,"line_start":30,"line_end":30,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3937},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\int.rs","byte_start":646980,"byte_end":646984,"line_start":34,"line_end":34,"column_start":5,"column_end":9},"name":"UInt","qualname":"::ir::int::IntKind::UInt","value":"IntKind::UInt","parent":{"krate":0,"index":3920},"children":[],"decl_id":null,"docs":" An `unsigned int`.\n","sig":null,"attributes":[{"value":"/ An `unsigned int`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\int.rs","byte_start":646953,"byte_end":646975,"line_start":33,"line_end":33,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3939},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\int.rs","byte_start":647009,"byte_end":647013,"line_start":37,"line_end":37,"column_start":5,"column_end":9},"name":"Long","qualname":"::ir::int::IntKind::Long","value":"IntKind::Long","parent":{"krate":0,"index":3920},"children":[],"decl_id":null,"docs":" A `long`.\n","sig":null,"attributes":[{"value":"/ A `long`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\int.rs","byte_start":646991,"byte_end":647004,"line_start":36,"line_end":36,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3941},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\int.rs","byte_start":647048,"byte_end":647053,"line_start":40,"line_end":40,"column_start":5,"column_end":10},"name":"ULong","qualname":"::ir::int::IntKind::ULong","value":"IntKind::ULong","parent":{"krate":0,"index":3920},"children":[],"decl_id":null,"docs":" An `unsigned long`.\n","sig":null,"attributes":[{"value":"/ An `unsigned long`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\int.rs","byte_start":647020,"byte_end":647043,"line_start":39,"line_end":39,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3943},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\int.rs","byte_start":647083,"byte_end":647091,"line_start":43,"line_end":43,"column_start":5,"column_end":13},"name":"LongLong","qualname":"::ir::int::IntKind::LongLong","value":"IntKind::LongLong","parent":{"krate":0,"index":3920},"children":[],"decl_id":null,"docs":" A `long long`.\n","sig":null,"attributes":[{"value":"/ A `long long`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\int.rs","byte_start":647060,"byte_end":647078,"line_start":42,"line_end":42,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3945},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\int.rs","byte_start":647131,"byte_end":647140,"line_start":46,"line_end":46,"column_start":5,"column_end":14},"name":"ULongLong","qualname":"::ir::int::IntKind::ULongLong","value":"IntKind::ULongLong","parent":{"krate":0,"index":3920},"children":[],"decl_id":null,"docs":" An `unsigned long long`.\n","sig":null,"attributes":[{"value":"/ An `unsigned long long`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\int.rs","byte_start":647098,"byte_end":647126,"line_start":45,"line_end":45,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3947},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\int.rs","byte_start":647179,"byte_end":647181,"line_start":49,"line_end":49,"column_start":5,"column_end":7},"name":"I8","qualname":"::ir::int::IntKind::I8","value":"IntKind::I8","parent":{"krate":0,"index":3920},"children":[],"decl_id":null,"docs":" A 8-bit signed integer.\n","sig":null,"attributes":[{"value":"/ A 8-bit signed integer.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\int.rs","byte_start":647147,"byte_end":647174,"line_start":48,"line_end":48,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3949},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\int.rs","byte_start":647222,"byte_end":647224,"line_start":52,"line_end":52,"column_start":5,"column_end":7},"name":"U8","qualname":"::ir::int::IntKind::U8","value":"IntKind::U8","parent":{"krate":0,"index":3920},"children":[],"decl_id":null,"docs":" A 8-bit unsigned integer.\n","sig":null,"attributes":[{"value":"/ A 8-bit unsigned integer.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\int.rs","byte_start":647188,"byte_end":647217,"line_start":51,"line_end":51,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3951},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\int.rs","byte_start":647264,"byte_end":647267,"line_start":55,"line_end":55,"column_start":5,"column_end":8},"name":"I16","qualname":"::ir::int::IntKind::I16","value":"IntKind::I16","parent":{"krate":0,"index":3920},"children":[],"decl_id":null,"docs":" A 16-bit signed integer.\n","sig":null,"attributes":[{"value":"/ A 16-bit signed integer.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\int.rs","byte_start":647231,"byte_end":647259,"line_start":54,"line_end":54,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3953},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\int.rs","byte_start":647318,"byte_end":647321,"line_start":58,"line_end":58,"column_start":5,"column_end":8},"name":"U16","qualname":"::ir::int::IntKind::U16","value":"IntKind::U16","parent":{"krate":0,"index":3920},"children":[],"decl_id":null,"docs":" Either a `char16_t` or a `wchar_t`.\n","sig":null,"attributes":[{"value":"/ Either a `char16_t` or a `wchar_t`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\int.rs","byte_start":647274,"byte_end":647313,"line_start":57,"line_end":57,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3955},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\int.rs","byte_start":647361,"byte_end":647364,"line_start":61,"line_end":61,"column_start":5,"column_end":8},"name":"I32","qualname":"::ir::int::IntKind::I32","value":"IntKind::I32","parent":{"krate":0,"index":3920},"children":[],"decl_id":null,"docs":" A 32-bit signed integer.\n","sig":null,"attributes":[{"value":"/ A 32-bit signed integer.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\int.rs","byte_start":647328,"byte_end":647356,"line_start":60,"line_end":60,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3957},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\int.rs","byte_start":647406,"byte_end":647409,"line_start":64,"line_end":64,"column_start":5,"column_end":8},"name":"U32","qualname":"::ir::int::IntKind::U32","value":"IntKind::U32","parent":{"krate":0,"index":3920},"children":[],"decl_id":null,"docs":" A 32-bit unsigned integer.\n","sig":null,"attributes":[{"value":"/ A 32-bit unsigned integer.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\int.rs","byte_start":647371,"byte_end":647401,"line_start":63,"line_end":63,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3959},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\int.rs","byte_start":647449,"byte_end":647452,"line_start":67,"line_end":67,"column_start":5,"column_end":8},"name":"I64","qualname":"::ir::int::IntKind::I64","value":"IntKind::I64","parent":{"krate":0,"index":3920},"children":[],"decl_id":null,"docs":" A 64-bit signed integer.\n","sig":null,"attributes":[{"value":"/ A 64-bit signed integer.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\int.rs","byte_start":647416,"byte_end":647444,"line_start":66,"line_end":66,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3961},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\int.rs","byte_start":647494,"byte_end":647497,"line_start":70,"line_end":70,"column_start":5,"column_end":8},"name":"U64","qualname":"::ir::int::IntKind::U64","value":"IntKind::U64","parent":{"krate":0,"index":3920},"children":[],"decl_id":null,"docs":" A 64-bit unsigned integer.\n","sig":null,"attributes":[{"value":"/ A 64-bit unsigned integer.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\int.rs","byte_start":647459,"byte_end":647489,"line_start":69,"line_end":69,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3963},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\int.rs","byte_start":647526,"byte_end":647530,"line_start":73,"line_end":73,"column_start":5,"column_end":9},"name":"I128","qualname":"::ir::int::IntKind::I128","value":"IntKind::I128","parent":{"krate":0,"index":3920},"children":[],"decl_id":null,"docs":" An `int128_t`\n","sig":null,"attributes":[{"value":"/ An `int128_t`","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\int.rs","byte_start":647504,"byte_end":647521,"line_start":72,"line_end":72,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3965},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\int.rs","byte_start":647560,"byte_end":647564,"line_start":76,"line_end":76,"column_start":5,"column_end":9},"name":"U128","qualname":"::ir::int::IntKind::U128","value":"IntKind::U128","parent":{"krate":0,"index":3920},"children":[],"decl_id":null,"docs":" A `uint128_t`.\n","sig":null,"attributes":[{"value":"/ A `uint128_t`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\int.rs","byte_start":647537,"byte_end":647555,"line_start":75,"line_end":75,"column_start":5,"column_end":23}}]},{"kind":"StructVariant","id":{"krate":0,"index":3967},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\int.rs","byte_start":647663,"byte_end":647669,"line_start":80,"line_end":80,"column_start":5,"column_end":11},"name":"Custom","qualname":"::ir::int::IntKind::Custom","value":"IntKind::Custom { name, is_signed }","parent":{"krate":0,"index":3920},"children":[],"decl_id":null,"docs":" A custom integer type, used to allow custom macro types depending on\n range.\n","sig":null,"attributes":[{"value":"/ A custom integer type, used to allow custom macro types depending on","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\int.rs","byte_start":647571,"byte_end":647643,"line_start":78,"line_end":78,"column_start":5,"column_end":77}},{"value":"/ range.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\int.rs","byte_start":647648,"byte_end":647658,"line_start":79,"line_end":79,"column_start":5,"column_end":15}}]},{"kind":"Enum","id":{"krate":0,"index":3920},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\int.rs","byte_start":646519,"byte_end":646526,"line_start":5,"line_end":5,"column_start":10,"column_end":17},"name":"IntKind","qualname":"::ir::int::IntKind","value":"pub enum IntKind {\n\n    /// A `bool`.\n    Bool,\n\n    /// A `signed char`.\n    SChar,\n\n    /// An `unsigned char`.\n    UChar,\n\n    /// An `wchar_t`.\n    WChar,\n\n    /// A platform-dependent `char` type, with the signedness support.\n    Char {\n        /// Whether the char is signed for the target platform.\n        is_signed: bool,\n    },\n\n    /// A `short`.\n    Short,\n\n    /// An `unsigned short`.\n    UShort,\n\n    /// An `int`.\n    Int,\n\n    /// An `unsigned int`.\n    UInt,\n\n    /// A `long`.\n    Long,\n\n    /// An `unsigned long`.\n    ULong,\n\n    /// A `long long`.\n    LongLong,\n\n    /// An `unsigned long long`.\n    ULongLong,\n\n    /// A 8-bit signed integer.\n    I8,\n\n    /// A 8-bit unsigned integer.\n    U8,\n\n    /// A 16-bit signed integer.\n    I16,\n\n    /// Either a `char16_t` or a `wchar_t`.\n    U16,\n\n    /// A 32-bit signed integer.\n    I32,\n\n    /// A 32-bit unsigned integer.\n    U32,\n\n    /// A 64-bit signed integer.\n    I64,\n\n    /// A 64-bit unsigned integer.\n    U64,\n\n    /// An `int128_t`\n    I128,\n\n    /// A `uint128_t`.\n    U128,\n\n    /// A custom integer type, used to allow custom macro types depending on\n    /// range.\n    Custom {\n        /// The name of the type, which would be used without modification.\n        name: &'static str,\n        /// Whether the type is signed or not.\n        is_signed: bool,\n    },\n}","parent":null,"children":[{"krate":0,"index":3921},{"krate":0,"index":3923},{"krate":0,"index":3925},{"krate":0,"index":3927},{"krate":0,"index":3929},{"krate":0,"index":3931},{"krate":0,"index":3933},{"krate":0,"index":3935},{"krate":0,"index":3937},{"krate":0,"index":3939},{"krate":0,"index":3941},{"krate":0,"index":3943},{"krate":0,"index":3945},{"krate":0,"index":3947},{"krate":0,"index":3949},{"krate":0,"index":3951},{"krate":0,"index":3953},{"krate":0,"index":3955},{"krate":0,"index":3957},{"krate":0,"index":3959},{"krate":0,"index":3961},{"krate":0,"index":3963},{"krate":0,"index":3965},{"krate":0,"index":3967}],"decl_id":null,"docs":" Which integral type are we dealing with?\n","sig":null,"attributes":[{"value":"/ Which integral type are we dealing with?","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\int.rs","byte_start":646397,"byte_end":646441,"line_start":3,"line_end":3,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1917},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\int.rs","byte_start":647922,"byte_end":647931,"line_start":90,"line_end":90,"column_start":12,"column_end":21},"name":"is_signed","qualname":"<IntKind>::is_signed","value":"pub fn is_signed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this integral type signed?\n","sig":null,"attributes":[{"value":"/ Is this integral type signed?","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\int.rs","byte_start":647877,"byte_end":647910,"line_start":89,"line_end":89,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1919},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\int.rs","byte_start":648769,"byte_end":648779,"line_start":111,"line_end":111,"column_start":12,"column_end":22},"name":"known_size","qualname":"<IntKind>::known_size","value":"pub fn known_size(&Self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" If this type has a known size, return it (in bytes). This is to\n alleviate libclang sometimes not giving us a layout (like in the case\n when an enum is defined inside a class with template parameters).\n","sig":null,"attributes":[{"value":"/ If this type has a known size, return it (in bytes). This is to","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\int.rs","byte_start":648538,"byte_end":648605,"line_start":108,"line_end":108,"column_start":5,"column_end":72}},{"value":"/ alleviate libclang sometimes not giving us a layout (like in the case","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\int.rs","byte_start":648610,"byte_end":648683,"line_start":109,"line_end":109,"column_start":5,"column_end":78}},{"value":"/ when an enum is defined inside a class with template parameters).","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\int.rs","byte_start":648688,"byte_end":648757,"line_start":110,"line_end":110,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1921},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\int.rs","byte_start":649158,"byte_end":649176,"line_start":124,"line_end":124,"column_start":12,"column_end":30},"name":"signedness_matches","qualname":"<IntKind>::signedness_matches","value":"pub fn signedness_matches(&Self, i64) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether this type's signedness matches the value.\n","sig":null,"attributes":[{"value":"/ Whether this type's signedness matches the value.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\int.rs","byte_start":649093,"byte_end":649146,"line_start":123,"line_end":123,"column_start":5,"column_end":58}}]},{"kind":"Type","id":{"krate":0,"index":1985},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":651806,"byte_end":651811,"line_start":77,"line_end":77,"column_start":10,"column_end":15},"name":"Extra","qualname":"::ir::item::IsOpaque::Extra","value":"type Extra;","parent":{"krate":0,"index":1984},"children":[],"decl_id":null,"docs":" Extra context the IR thing needs to determine if it is opaque or not.\n","sig":null,"attributes":[{"value":"/ Extra context the IR thing needs to determine if it is opaque or not.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":651723,"byte_end":651796,"line_start":76,"line_end":76,"column_start":5,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":4003},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":660387,"byte_end":660391,"line_start":382,"line_end":382,"column_start":12,"column_end":16},"name":"Item","qualname":"::ir::item::Item","value":"Item {  }","parent":null,"children":[{"krate":0,"index":4004},{"krate":0,"index":4005},{"krate":0,"index":4006},{"krate":0,"index":4007},{"krate":0,"index":4008},{"krate":0,"index":4009},{"krate":0,"index":4010},{"krate":0,"index":4011},{"krate":0,"index":4012}],"decl_id":null,"docs":" An item is the base of the bindgen representation, it can be either a\n module, a type, a function, or a variable (see `ItemKind` for more\n information).","sig":null,"attributes":[{"value":"/ An item is the base of the bindgen representation, it can be either a","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":659557,"byte_end":659630,"line_start":364,"line_end":364,"column_start":1,"column_end":74}},{"value":"/ module, a type, a function, or a variable (see `ItemKind` for more","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":659631,"byte_end":659701,"line_start":365,"line_end":365,"column_start":1,"column_end":71}},{"value":"/ information).","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":659702,"byte_end":659719,"line_start":366,"line_end":366,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":659720,"byte_end":659723,"line_start":367,"line_end":367,"column_start":1,"column_end":4}},{"value":"/ Items refer to each other by `ItemId`. Every item has its parent's","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":659724,"byte_end":659794,"line_start":368,"line_end":368,"column_start":1,"column_end":71}},{"value":"/ id. Depending on the kind of item this is, it may also refer to other items,","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":659795,"byte_end":659875,"line_start":369,"line_end":369,"column_start":1,"column_end":81}},{"value":"/ such as a compound type item referring to other types. Collectively, these","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":659876,"byte_end":659954,"line_start":370,"line_end":370,"column_start":1,"column_end":79}},{"value":"/ references form a graph.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":659955,"byte_end":659983,"line_start":371,"line_end":371,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":659984,"byte_end":659987,"line_start":372,"line_end":372,"column_start":1,"column_end":4}},{"value":"/ The entry-point to this graph is the \"root module\": a meta-item used to hold","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":659988,"byte_end":660068,"line_start":373,"line_end":373,"column_start":1,"column_end":81}},{"value":"/ all top-level items.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":660069,"byte_end":660093,"line_start":374,"line_end":374,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":660094,"byte_end":660097,"line_start":375,"line_end":375,"column_start":1,"column_end":4}},{"value":"/ An item may have a comment, and annotations (see the `annotations` module).","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":660098,"byte_end":660177,"line_start":376,"line_end":376,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":660178,"byte_end":660181,"line_start":377,"line_end":377,"column_start":1,"column_end":4}},{"value":"/ Note that even though we parse all the types of annotations in comments, not","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":660182,"byte_end":660262,"line_start":378,"line_end":378,"column_start":1,"column_end":81}},{"value":"/ all of them apply to every item. Those rules are described in the","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":660263,"byte_end":660332,"line_start":379,"line_end":379,"column_start":1,"column_end":70}},{"value":"/ `annotations` module.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":660333,"byte_end":660358,"line_start":380,"line_end":380,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":2059},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":661945,"byte_end":661948,"line_start":431,"line_end":431,"column_start":12,"column_end":15},"name":"new","qualname":"<Item>::new","value":"pub fn new(ItemId, Option<String>, Option<Annotations>, ItemId, ItemKind)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Item`.\n","sig":null,"attributes":[{"value":"/ Construct a new `Item`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":661906,"byte_end":661933,"line_start":430,"line_end":430,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":2060},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":662606,"byte_end":662621,"line_start":453,"line_end":453,"column_start":12,"column_end":27},"name":"new_opaque_type","qualname":"<Item>::new_opaque_type","value":"pub fn new_opaque_type(ItemId, &clang::Type, &mut BindgenContext) -> TypeId","parent":null,"children":[],"decl_id":null,"docs":" Construct a new opaque item type.\n","sig":null,"attributes":[{"value":"/ Construct a new opaque item type.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":662557,"byte_end":662594,"line_start":452,"line_end":452,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2061},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":663036,"byte_end":663038,"line_start":466,"line_end":466,"column_start":12,"column_end":14},"name":"id","qualname":"<Item>::id","value":"pub fn id(&Self) -> ItemId","parent":null,"children":[],"decl_id":null,"docs":" Get this `Item`'s identifier.\n","sig":null,"attributes":[{"value":"/ Get this `Item`'s identifier.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":662991,"byte_end":663024,"line_start":465,"line_end":465,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2062},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":663207,"byte_end":663216,"line_start":473,"line_end":473,"column_start":12,"column_end":21},"name":"parent_id","qualname":"<Item>::parent_id","value":"pub fn parent_id(&Self) -> ItemId","parent":null,"children":[],"decl_id":null,"docs":" Get this `Item`'s parent's identifier.","sig":null,"attributes":[{"value":"/ Get this `Item`'s parent's identifier.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":663085,"byte_end":663127,"line_start":470,"line_end":470,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":663132,"byte_end":663135,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ For the root module, the parent's ID is its own ID.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":663140,"byte_end":663195,"line_start":472,"line_end":472,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2063},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":663398,"byte_end":663424,"line_start":480,"line_end":480,"column_start":12,"column_end":38},"name":"set_parent_for_replacement","qualname":"<Item>::set_parent_for_replacement","value":"pub fn set_parent_for_replacement<Id: Into<ItemId>>(&mut Self, Id)","parent":null,"children":[],"decl_id":null,"docs":" Set this item's parent id.","sig":null,"attributes":[{"value":"/ Set this item's parent id.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":663270,"byte_end":663300,"line_start":477,"line_end":477,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":663305,"byte_end":663308,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ This is only used so replacements get generated in the proper module.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":663313,"byte_end":663386,"line_start":479,"line_end":479,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":2065},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":663657,"byte_end":663670,"line_start":487,"line_end":487,"column_start":12,"column_end":25},"name":"codegen_depth","qualname":"<Item>::codegen_depth","value":"pub fn codegen_depth(&Self, &BindgenContext) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the depth this item is indented to.","sig":null,"attributes":[{"value":"/ Returns the depth this item is indented to.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":663511,"byte_end":663558,"line_start":484,"line_end":484,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":663563,"byte_end":663566,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ FIXME(emilio): This may need fixes for the enums within modules stuff.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":663571,"byte_end":663645,"line_start":486,"line_end":486,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":2068},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":664236,"byte_end":664243,"line_start":505,"line_end":505,"column_start":12,"column_end":19},"name":"comment","qualname":"<Item>::comment","value":"pub fn comment(&Self, &BindgenContext) -> Option<String>","parent":null,"children":[],"decl_id":null,"docs":" Get this `Item`'s comment, if it has any, already preprocessed and with\n the right indentation.\n","sig":null,"attributes":[{"value":"/ Get this `Item`'s comment, if it has any, already preprocessed and with","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":664118,"byte_end":664193,"line_start":503,"line_end":503,"column_start":5,"column_end":80}},{"value":"/ the right indentation.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":664198,"byte_end":664224,"line_start":504,"line_end":504,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2070},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":664551,"byte_end":664555,"line_start":516,"line_end":516,"column_start":12,"column_end":16},"name":"kind","qualname":"<Item>::kind","value":"pub fn kind(&Self) -> &ItemKind","parent":null,"children":[],"decl_id":null,"docs":" What kind of item is this?\n","sig":null,"attributes":[{"value":"/ What kind of item is this?","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":664509,"byte_end":664539,"line_start":515,"line_end":515,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":2071},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":664668,"byte_end":664676,"line_start":521,"line_end":521,"column_start":12,"column_end":20},"name":"kind_mut","qualname":"<Item>::kind_mut","value":"pub fn kind_mut(&mut Self) -> &mut ItemKind","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to this item's kind.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to this item's kind.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":664608,"byte_end":664656,"line_start":520,"line_end":520,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2072},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":665054,"byte_end":665062,"line_start":530,"line_end":530,"column_start":12,"column_end":20},"name":"local_id","qualname":"<Item>::local_id","value":"pub fn local_id(&Self, &BindgenContext) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get an identifier that differentiates this item from its siblings.","sig":null,"attributes":[{"value":"/ Get an identifier that differentiates this item from its siblings.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":664741,"byte_end":664811,"line_start":525,"line_end":525,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":664816,"byte_end":664819,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ This should stay relatively stable in the face of code motion outside or","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":664824,"byte_end":664900,"line_start":527,"line_end":527,"column_start":5,"column_end":81}},{"value":"/ below this item's lexical scope, meaning that this can be useful for","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":664905,"byte_end":664977,"line_start":528,"line_end":528,"column_start":5,"column_end":77}},{"value":"/ generating relatively stable identifiers within a scope.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":664982,"byte_end":665042,"line_start":529,"line_end":529,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":2074},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":665554,"byte_end":665573,"line_start":543,"line_end":543,"column_start":12,"column_end":31},"name":"next_child_local_id","qualname":"<Item>::next_child_local_id","value":"pub fn next_child_local_id(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get an identifier that differentiates a child of this item of other\n related items.","sig":null,"attributes":[{"value":"/ Get an identifier that differentiates a child of this item of other","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":665265,"byte_end":665336,"line_start":537,"line_end":537,"column_start":5,"column_end":76}},{"value":"/ related items.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":665341,"byte_end":665359,"line_start":538,"line_end":538,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":665364,"byte_end":665367,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ This is currently used for anonymous items, and template instantiation","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":665372,"byte_end":665446,"line_start":540,"line_end":540,"column_start":5,"column_end":79}},{"value":"/ tests, in both cases in order to reduce noise when system headers are at","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":665451,"byte_end":665527,"line_start":541,"line_end":541,"column_start":5,"column_end":81}},{"value":"/ place.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":665532,"byte_end":665542,"line_start":542,"line_end":542,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":2075},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":666371,"byte_end":666382,"line_start":567,"line_end":567,"column_start":12,"column_end":23},"name":"is_toplevel","qualname":"<Item>::is_toplevel","value":"pub fn is_toplevel(&Self, &BindgenContext) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this item is a top-level item, from the point of view of\n bindgen.","sig":null,"attributes":[{"value":"/ Returns whether this item is a top-level item, from the point of view of","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":665727,"byte_end":665803,"line_start":549,"line_end":549,"column_start":5,"column_end":81}},{"value":"/ bindgen.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":665808,"byte_end":665820,"line_start":550,"line_end":550,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":665825,"byte_end":665828,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ This point of view changes depending on whether namespaces are enabled","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":665833,"byte_end":665907,"line_start":552,"line_end":552,"column_start":5,"column_end":79}},{"value":"/ or not. That way, in the following example:","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":665912,"byte_end":665959,"line_start":553,"line_end":553,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":665964,"byte_end":665967,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ ```c++","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":665972,"byte_end":665982,"line_start":555,"line_end":555,"column_start":5,"column_end":15}},{"value":"/ namespace foo {","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":665987,"byte_end":666006,"line_start":556,"line_end":556,"column_start":5,"column_end":24}},{"value":"/     static int var;","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":666011,"byte_end":666034,"line_start":557,"line_end":557,"column_start":5,"column_end":28}},{"value":"/ }","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":666039,"byte_end":666044,"line_start":558,"line_end":558,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":666049,"byte_end":666056,"line_start":559,"line_end":559,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":666061,"byte_end":666064,"line_start":560,"line_end":560,"column_start":5,"column_end":8}},{"value":"/ `var` would be a toplevel item if namespaces are disabled, but won't if","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":666069,"byte_end":666144,"line_start":561,"line_end":561,"column_start":5,"column_end":80}},{"value":"/ they aren't.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":666149,"byte_end":666165,"line_start":562,"line_end":562,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":666170,"byte_end":666173,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ This function is used to determine when the codegen phase should call","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":666178,"byte_end":666251,"line_start":564,"line_end":564,"column_start":5,"column_end":78}},{"value":"/ `codegen` on an item, since any item that is not top-level will be","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":666256,"byte_end":666326,"line_start":565,"line_end":565,"column_start":5,"column_end":75}},{"value":"/ generated by its parent.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":666331,"byte_end":666359,"line_start":566,"line_end":566,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2076},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":667368,"byte_end":667379,"line_start":598,"line_end":598,"column_start":12,"column_end":23},"name":"expect_type","qualname":"<Item>::expect_type","value":"pub fn expect_type(&Self) -> &Type","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to this item's underlying `Type`. Panic if this is some\n other kind of item.\n","sig":null,"attributes":[{"value":"/ Get a reference to this item's underlying `Type`. Panic if this is some","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":667253,"byte_end":667328,"line_start":596,"line_end":596,"column_start":5,"column_end":80}},{"value":"/ other kind of item.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":667333,"byte_end":667356,"line_start":597,"line_end":597,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":2077},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":667562,"byte_end":667569,"line_start":604,"line_end":604,"column_start":12,"column_end":19},"name":"as_type","qualname":"<Item>::as_type","value":"pub fn as_type(&Self) -> Option<&Type>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to this item's underlying `Type`, or `None` if this is\n some other kind of item.\n","sig":null,"attributes":[{"value":"/ Get a reference to this item's underlying `Type`, or `None` if this is","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":667443,"byte_end":667517,"line_start":602,"line_end":602,"column_start":5,"column_end":79}},{"value":"/ some other kind of item.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":667522,"byte_end":667550,"line_start":603,"line_end":603,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2078},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":667756,"byte_end":667771,"line_start":610,"line_end":610,"column_start":12,"column_end":27},"name":"expect_function","qualname":"<Item>::expect_function","value":"pub fn expect_function(&Self) -> &Function","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to this item's underlying `Function`. Panic if this is\n some other kind of item.\n","sig":null,"attributes":[{"value":"/ Get a reference to this item's underlying `Function`. Panic if this is","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":667637,"byte_end":667711,"line_start":608,"line_end":608,"column_start":5,"column_end":79}},{"value":"/ some other kind of item.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":667716,"byte_end":667744,"line_start":609,"line_end":609,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2079},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":667881,"byte_end":667890,"line_start":615,"line_end":615,"column_start":12,"column_end":21},"name":"is_module","qualname":"<Item>::is_module","value":"pub fn is_module(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this item a module?\n","sig":null,"attributes":[{"value":"/ Is this item a module?","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":667843,"byte_end":667869,"line_start":614,"line_end":614,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2080},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":668065,"byte_end":668076,"line_start":623,"line_end":623,"column_start":12,"column_end":23},"name":"annotations","qualname":"<Item>::annotations","value":"pub fn annotations(&Self) -> &Annotations","parent":null,"children":[],"decl_id":null,"docs":" Get this item's annotations.\n","sig":null,"attributes":[{"value":"/ Get this item's annotations.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":668021,"byte_end":668053,"line_start":622,"line_end":622,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":2081},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":668284,"byte_end":668298,"line_start":630,"line_end":630,"column_start":12,"column_end":26},"name":"is_blacklisted","qualname":"<Item>::is_blacklisted","value":"pub fn is_blacklisted(&Self, &BindgenContext) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether this item should be blacklisted.","sig":null,"attributes":[{"value":"/ Whether this item should be blacklisted.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":668139,"byte_end":668183,"line_start":627,"line_end":627,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":668188,"byte_end":668191,"line_start":628,"line_end":628,"column_start":5,"column_end":8}},{"value":"/ This may be due to either annotations or to other kind of configuration.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":668196,"byte_end":668272,"line_start":629,"line_end":629,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":2082},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":669243,"byte_end":669254,"line_start":656,"line_end":656,"column_start":12,"column_end":23},"name":"is_type_ref","qualname":"<Item>::is_type_ref","value":"pub fn is_type_ref(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a reference to another type?\n","sig":null,"attributes":[{"value":"/ Is this a reference to another type?","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":669191,"byte_end":669231,"line_start":655,"line_end":655,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2084},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":669383,"byte_end":669389,"line_start":661,"line_end":661,"column_start":12,"column_end":18},"name":"is_var","qualname":"<Item>::is_var","value":"pub fn is_var(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this item a var type?\n","sig":null,"attributes":[{"value":"/ Is this item a var type?","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":669343,"byte_end":669371,"line_start":660,"line_end":660,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2085},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":669561,"byte_end":669565,"line_start":669,"line_end":669,"column_start":12,"column_end":16},"name":"name","qualname":"<Item>::name","value":"pub fn name<'a>(&'a Self, &'a BindgenContext) -> NameOptions","parent":null,"children":[],"decl_id":null,"docs":" Take out item NameOptions\n","sig":null,"attributes":[{"value":"/ Take out item NameOptions","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":669520,"byte_end":669549,"line_start":668,"line_end":668,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":2088},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":670750,"byte_end":670773,"line_start":703,"line_end":703,"column_start":12,"column_end":35},"name":"full_disambiguated_name","qualname":"<Item>::full_disambiguated_name","value":"pub fn full_disambiguated_name(&Self, &BindgenContext) -> String","parent":null,"children":[],"decl_id":null,"docs":" Create a fully disambiguated name for an item, including template\n parameters if it is a type\n","sig":null,"attributes":[{"value":"/ Create a fully disambiguated name for an item, including template","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":670634,"byte_end":670703,"line_start":701,"line_end":701,"column_start":5,"column_end":74}},{"value":"/ parameters if it is a type","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":670708,"byte_end":670738,"line_start":702,"line_end":702,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":2101},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":675406,"byte_end":675425,"line_start":827,"line_end":827,"column_start":12,"column_end":31},"name":"real_canonical_name","qualname":"<Item>::real_canonical_name","value":"pub fn real_canonical_name(&Self, &BindgenContext, &NameOptions) -> String","parent":null,"children":[],"decl_id":null,"docs":" Get the canonical name without taking into account the replaces\n annotation.","sig":null,"attributes":[{"value":"/ Get the canonical name without taking into account the replaces","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":674676,"byte_end":674743,"line_start":812,"line_end":812,"column_start":5,"column_end":72}},{"value":"/ annotation.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":674748,"byte_end":674763,"line_start":813,"line_end":813,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":674768,"byte_end":674771,"line_start":814,"line_end":814,"column_start":5,"column_end":8}},{"value":"/ This is the base logic used to implement hiding and replacing via","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":674776,"byte_end":674845,"line_start":815,"line_end":815,"column_start":5,"column_end":74}},{"value":"/ annotations, and also to implement proper name mangling.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":674850,"byte_end":674910,"line_start":816,"line_end":816,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":674915,"byte_end":674918,"line_start":817,"line_end":817,"column_start":5,"column_end":8}},{"value":"/ The idea is that each generated type in the same \"level\" (read: module","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":674923,"byte_end":674997,"line_start":818,"line_end":818,"column_start":5,"column_end":79}},{"value":"/ or namespace) has a unique canonical name.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":675002,"byte_end":675048,"line_start":819,"line_end":819,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":675053,"byte_end":675056,"line_start":820,"line_end":820,"column_start":5,"column_end":8}},{"value":"/ This name should be derived from the immutable state contained in the","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":675061,"byte_end":675134,"line_start":821,"line_end":821,"column_start":5,"column_end":78}},{"value":"/ type and the parent chain, since it should be consistent.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":675139,"byte_end":675200,"line_start":822,"line_end":822,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":675205,"byte_end":675208,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/ If `BindgenOptions::disable_nested_struct_naming` is true then returned","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":675213,"byte_end":675288,"line_start":824,"line_end":824,"column_start":5,"column_end":80}},{"value":"/ name is the inner most non-anonymous name plus all the anonymous base names","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":675293,"byte_end":675372,"line_start":825,"line_end":825,"column_start":5,"column_end":84}},{"value":"/ that follows.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":675377,"byte_end":675394,"line_start":826,"line_end":826,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2108},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":678377,"byte_end":678387,"line_start":923,"line_end":923,"column_start":12,"column_end":22},"name":"exposed_id","qualname":"<Item>::exposed_id","value":"pub fn exposed_id(&Self, &BindgenContext) -> String","parent":null,"children":[],"decl_id":null,"docs":" The exposed id that represents an unique id among the siblings of a\n given item.\n","sig":null,"attributes":[{"value":"/ The exposed id that represents an unique id among the siblings of a","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":678274,"byte_end":678345,"line_start":921,"line_end":921,"column_start":5,"column_end":76}},{"value":"/ given item.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":678350,"byte_end":678365,"line_start":922,"line_end":922,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2110},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":679238,"byte_end":679247,"line_start":944,"line_end":944,"column_start":12,"column_end":21},"name":"as_module","qualname":"<Item>::as_module","value":"pub fn as_module(&Self) -> Option<&Module>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to this item's `Module`, or `None` if this is not a\n `Module` item.\n","sig":null,"attributes":[{"value":"/ Get a reference to this item's `Module`, or `None` if this is not a","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":679132,"byte_end":679203,"line_start":942,"line_end":942,"column_start":5,"column_end":76}},{"value":"/ `Module` item.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":679208,"byte_end":679226,"line_start":943,"line_end":943,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":2111},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":679518,"byte_end":679531,"line_start":953,"line_end":953,"column_start":12,"column_end":25},"name":"as_module_mut","qualname":"<Item>::as_module_mut","value":"pub fn as_module_mut(&mut Self) -> Option<&mut Module>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to this item's `Module`, or `None` if this is\n not a `Module` item.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to this item's `Module`, or `None` if this is","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":679404,"byte_end":679477,"line_start":951,"line_end":951,"column_start":5,"column_end":78}},{"value":"/ not a `Module` item.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":679482,"byte_end":679506,"line_start":952,"line_end":952,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2113},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":681011,"byte_end":681033,"line_start":992,"line_end":992,"column_start":12,"column_end":34},"name":"is_enabled_for_codegen","qualname":"<Item>::is_enabled_for_codegen","value":"pub fn is_enabled_for_codegen(&Self, &BindgenContext) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this item of a kind that is enabled for code generation?\n","sig":null,"attributes":[{"value":"/ Is this item of a kind that is enabled for code generation?","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":680936,"byte_end":680999,"line_start":991,"line_end":991,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2114},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":682113,"byte_end":682134,"line_start":1018,"line_end":1018,"column_start":12,"column_end":33},"name":"path_for_whitelisting","qualname":"<Item>::path_for_whitelisting","value":"pub fn path_for_whitelisting(&Self, &BindgenContext) -> &Vec<String>","parent":null,"children":[],"decl_id":null,"docs":" Returns the path we should use for whitelisting / blacklisting, which\n doesn't include user-mangling.\n","sig":null,"attributes":[{"value":"/ Returns the path we should use for whitelisting / blacklisting, which","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":681989,"byte_end":682062,"line_start":1016,"line_end":1016,"column_start":5,"column_end":78}},{"value":"/ doesn't include user-mangling.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":682067,"byte_end":682101,"line_start":1017,"line_end":1017,"column_start":5,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":4039},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":712196,"byte_end":712207,"line_start":1934,"line_end":1934,"column_start":12,"column_end":23},"name":"NameOptions","qualname":"::ir::item::NameOptions","value":"NameOptions {  }","parent":null,"children":[{"krate":0,"index":4041},{"krate":0,"index":4042},{"krate":0,"index":4043},{"krate":0,"index":4044}],"decl_id":null,"docs":" Builder struct for naming variations, which hold inside different\n flags for naming options.\n","sig":null,"attributes":[{"value":"/ Builder struct for naming variations, which hold inside different","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":712068,"byte_end":712137,"line_start":1931,"line_end":1931,"column_start":1,"column_end":70}},{"value":"/ flags for naming options.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":712138,"byte_end":712167,"line_start":1932,"line_end":1932,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2197},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":712402,"byte_end":712405,"line_start":1943,"line_end":1943,"column_start":12,"column_end":15},"name":"new","qualname":"<NameOptions>::new","value":"pub fn new(&'a Item, &'a BindgenContext) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `NameOptions`\n","sig":null,"attributes":[{"value":"/ Construct a new `NameOptions`","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":712357,"byte_end":712390,"line_start":1942,"line_end":1942,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2198},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":712793,"byte_end":712810,"line_start":1954,"line_end":1954,"column_start":12,"column_end":29},"name":"within_namespaces","qualname":"<NameOptions>::within_namespaces","value":"pub fn within_namespaces(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Construct the name without the item's containing C++ namespaces mangled\n into it. In other words, the item's name within the item's namespace.\n","sig":null,"attributes":[{"value":"/ Construct the name without the item's containing C++ namespaces mangled","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":712628,"byte_end":712703,"line_start":1952,"line_end":1952,"column_start":5,"column_end":80}},{"value":"/ into it. In other words, the item's name within the item's namespace.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":712708,"byte_end":712781,"line_start":1953,"line_end":1953,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":2200},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":713076,"byte_end":713079,"line_start":1965,"line_end":1965,"column_start":12,"column_end":15},"name":"get","qualname":"<NameOptions>::get","value":"pub fn get(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Construct a name `String`\n","sig":null,"attributes":[{"value":"/ Construct a name `String`","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":713035,"byte_end":713064,"line_start":1964,"line_end":1964,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4049},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item_kind.rs","byte_start":713584,"byte_end":713590,"line_start":16,"line_end":16,"column_start":5,"column_end":11},"name":"Module","qualname":"::ir::item_kind::ItemKind::Module","value":"ItemKind::Module(Module)","parent":{"krate":0,"index":4048},"children":[],"decl_id":null,"docs":" A module, created implicitly once (the root module), or via C++\n namespaces.\n","sig":null,"attributes":[{"value":"/ A module, created implicitly once (the root module), or via C++","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item_kind.rs","byte_start":713492,"byte_end":713559,"line_start":14,"line_end":14,"column_start":5,"column_end":72}},{"value":"/ namespaces.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item_kind.rs","byte_start":713564,"byte_end":713579,"line_start":15,"line_end":15,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4052},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item_kind.rs","byte_start":713677,"byte_end":713681,"line_start":19,"line_end":19,"column_start":5,"column_end":9},"name":"Type","qualname":"::ir::item_kind::ItemKind::Type","value":"ItemKind::Type(Type)","parent":{"krate":0,"index":4048},"children":[],"decl_id":null,"docs":" A type declared in any of the multiple ways it can be declared.\n","sig":null,"attributes":[{"value":"/ A type declared in any of the multiple ways it can be declared.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item_kind.rs","byte_start":713605,"byte_end":713672,"line_start":18,"line_end":18,"column_start":5,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4055},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item_kind.rs","byte_start":713736,"byte_end":713744,"line_start":22,"line_end":22,"column_start":5,"column_end":13},"name":"Function","qualname":"::ir::item_kind::ItemKind::Function","value":"ItemKind::Function(Function)","parent":{"krate":0,"index":4048},"children":[],"decl_id":null,"docs":" A function or method declaration.\n","sig":null,"attributes":[{"value":"/ A function or method declaration.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item_kind.rs","byte_start":713694,"byte_end":713731,"line_start":21,"line_end":21,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4058},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item_kind.rs","byte_start":713815,"byte_end":713818,"line_start":25,"line_end":25,"column_start":5,"column_end":8},"name":"Var","qualname":"::ir::item_kind::ItemKind::Var","value":"ItemKind::Var(Var)","parent":{"krate":0,"index":4048},"children":[],"decl_id":null,"docs":" A variable declaration, most likely a static.\n","sig":null,"attributes":[{"value":"/ A variable declaration, most likely a static.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item_kind.rs","byte_start":713761,"byte_end":713810,"line_start":24,"line_end":24,"column_start":5,"column_end":54}}]},{"kind":"Enum","id":{"krate":0,"index":4048},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item_kind.rs","byte_start":713477,"byte_end":713485,"line_start":13,"line_end":13,"column_start":10,"column_end":18},"name":"ItemKind","qualname":"::ir::item_kind::ItemKind","value":"pub enum ItemKind {\n\n    /// A module, created implicitly once (the root module), or via C++\n    /// namespaces.\n    Module(Module),\n\n    /// A type declared in any of the multiple ways it can be declared.\n    Type(Type),\n\n    /// A function or method declaration.\n    Function(Function),\n\n    /// A variable declaration, most likely a static.\n    Var(Var),\n}","parent":null,"children":[{"krate":0,"index":4049},{"krate":0,"index":4052},{"krate":0,"index":4055},{"krate":0,"index":4058}],"decl_id":null,"docs":" A item we parse and translate.\n","sig":null,"attributes":[{"value":"/ A item we parse and translate.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item_kind.rs","byte_start":713416,"byte_end":713450,"line_start":11,"line_end":11,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":2210},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item_kind.rs","byte_start":713964,"byte_end":713973,"line_start":31,"line_end":31,"column_start":12,"column_end":21},"name":"as_module","qualname":"<ItemKind>::as_module","value":"pub fn as_module(&Self) -> Option<&Module>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to this `ItemKind`'s underying `Module`, or `None` if it\n is some other kind.\n","sig":null,"attributes":[{"value":"/ Get a reference to this `ItemKind`'s underying `Module`, or `None` if it","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item_kind.rs","byte_start":713848,"byte_end":713924,"line_start":29,"line_end":29,"column_start":5,"column_end":81}},{"value":"/ is some other kind.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item_kind.rs","byte_start":713929,"byte_end":713952,"line_start":30,"line_end":30,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":2211},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item_kind.rs","byte_start":714181,"byte_end":714190,"line_start":39,"line_end":39,"column_start":12,"column_end":21},"name":"kind_name","qualname":"<ItemKind>::kind_name","value":"pub fn kind_name(&Self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":" Transform our `ItemKind` into a string.\n","sig":null,"attributes":[{"value":"/ Transform our `ItemKind` into a string.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item_kind.rs","byte_start":714126,"byte_end":714169,"line_start":38,"line_end":38,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2212},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item_kind.rs","byte_start":714470,"byte_end":714479,"line_start":49,"line_end":49,"column_start":12,"column_end":21},"name":"is_module","qualname":"<ItemKind>::is_module","value":"pub fn is_module(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a module?\n","sig":null,"attributes":[{"value":"/ Is this a module?","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item_kind.rs","byte_start":714437,"byte_end":714458,"line_start":48,"line_end":48,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":2213},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item_kind.rs","byte_start":714658,"byte_end":714671,"line_start":55,"line_end":55,"column_start":12,"column_end":25},"name":"expect_module","qualname":"<ItemKind>::expect_module","value":"pub fn expect_module(&Self) -> &Module","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to this `ItemKind`'s underying `Module`, or panic if it\n is some other kind.\n","sig":null,"attributes":[{"value":"/ Get a reference to this `ItemKind`'s underying `Module`, or panic if it","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item_kind.rs","byte_start":714543,"byte_end":714618,"line_start":53,"line_end":53,"column_start":5,"column_end":80}},{"value":"/ is some other kind.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item_kind.rs","byte_start":714623,"byte_end":714646,"line_start":54,"line_end":54,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":2214},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item_kind.rs","byte_start":714869,"byte_end":714880,"line_start":61,"line_end":61,"column_start":12,"column_end":23},"name":"as_function","qualname":"<ItemKind>::as_function","value":"pub fn as_function(&Self) -> Option<&Function>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to this `ItemKind`'s underying `Function`, or `None` if\n it is some other kind.\n","sig":null,"attributes":[{"value":"/ Get a reference to this `ItemKind`'s underying `Function`, or `None` if","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item_kind.rs","byte_start":714751,"byte_end":714826,"line_start":59,"line_end":59,"column_start":5,"column_end":80}},{"value":"/ it is some other kind.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item_kind.rs","byte_start":714831,"byte_end":714857,"line_start":60,"line_end":60,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2215},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item_kind.rs","byte_start":715068,"byte_end":715079,"line_start":69,"line_end":69,"column_start":12,"column_end":23},"name":"is_function","qualname":"<ItemKind>::is_function","value":"pub fn is_function(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a function?\n","sig":null,"attributes":[{"value":"/ Is this a function?","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item_kind.rs","byte_start":715033,"byte_end":715056,"line_start":68,"line_end":68,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":2216},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item_kind.rs","byte_start":715262,"byte_end":715277,"line_start":75,"line_end":75,"column_start":12,"column_end":27},"name":"expect_function","qualname":"<ItemKind>::expect_function","value":"pub fn expect_function(&Self) -> &Function","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to this `ItemKind`'s underying `Function`, or panic if\n it is some other kind.\n","sig":null,"attributes":[{"value":"/ Get a reference to this `ItemKind`'s underying `Function`, or panic if","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item_kind.rs","byte_start":715145,"byte_end":715219,"line_start":73,"line_end":73,"column_start":5,"column_end":79}},{"value":"/ it is some other kind.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item_kind.rs","byte_start":715224,"byte_end":715250,"line_start":74,"line_end":74,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2217},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item_kind.rs","byte_start":715477,"byte_end":715484,"line_start":81,"line_end":81,"column_start":12,"column_end":19},"name":"as_type","qualname":"<ItemKind>::as_type","value":"pub fn as_type(&Self) -> Option<&Type>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to this `ItemKind`'s underying `Type`, or `None` if\n it is some other kind.\n","sig":null,"attributes":[{"value":"/ Get a reference to this `ItemKind`'s underying `Type`, or `None` if","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item_kind.rs","byte_start":715363,"byte_end":715434,"line_start":79,"line_end":79,"column_start":5,"column_end":76}},{"value":"/ it is some other kind.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item_kind.rs","byte_start":715439,"byte_end":715465,"line_start":80,"line_end":80,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2218},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item_kind.rs","byte_start":715747,"byte_end":715758,"line_start":90,"line_end":90,"column_start":12,"column_end":23},"name":"as_type_mut","qualname":"<ItemKind>::as_type_mut","value":"pub fn as_type_mut(&mut Self) -> Option<&mut Type>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to this `ItemKind`'s underying `Type`, or `None`\n if it is some other kind.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to this `ItemKind`'s underying `Type`, or `None`","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item_kind.rs","byte_start":715625,"byte_end":715701,"line_start":88,"line_end":88,"column_start":5,"column_end":81}},{"value":"/ if it is some other kind.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item_kind.rs","byte_start":715706,"byte_end":715735,"line_start":89,"line_end":89,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":2219},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item_kind.rs","byte_start":715942,"byte_end":715949,"line_start":98,"line_end":98,"column_start":12,"column_end":19},"name":"is_type","qualname":"<ItemKind>::is_type","value":"pub fn is_type(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a type?\n","sig":null,"attributes":[{"value":"/ Is this a type?","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item_kind.rs","byte_start":715911,"byte_end":715930,"line_start":97,"line_end":97,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":2220},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item_kind.rs","byte_start":716124,"byte_end":716135,"line_start":104,"line_end":104,"column_start":12,"column_end":23},"name":"expect_type","qualname":"<ItemKind>::expect_type","value":"pub fn expect_type(&Self) -> &Type","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to this `ItemKind`'s underying `Type`, or panic if it is\n some other kind.\n","sig":null,"attributes":[{"value":"/ Get a reference to this `ItemKind`'s underying `Type`, or panic if it is","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item_kind.rs","byte_start":716011,"byte_end":716087,"line_start":102,"line_end":102,"column_start":5,"column_end":81}},{"value":"/ some other kind.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item_kind.rs","byte_start":716092,"byte_end":716112,"line_start":103,"line_end":103,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":2221},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item_kind.rs","byte_start":716322,"byte_end":716328,"line_start":110,"line_end":110,"column_start":12,"column_end":18},"name":"as_var","qualname":"<ItemKind>::as_var","value":"pub fn as_var(&Self) -> Option<&Var>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to this `ItemKind`'s underying `Var`, or `None` if it is\n some other kind.\n","sig":null,"attributes":[{"value":"/ Get a reference to this `ItemKind`'s underying `Var`, or `None` if it is","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item_kind.rs","byte_start":716209,"byte_end":716285,"line_start":108,"line_end":108,"column_start":5,"column_end":81}},{"value":"/ some other kind.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item_kind.rs","byte_start":716290,"byte_end":716310,"line_start":109,"line_end":109,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":2222},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item_kind.rs","byte_start":716500,"byte_end":716506,"line_start":118,"line_end":118,"column_start":12,"column_end":18},"name":"is_var","qualname":"<ItemKind>::is_var","value":"pub fn is_var(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a variable?\n","sig":null,"attributes":[{"value":"/ Is this a variable?","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item_kind.rs","byte_start":716465,"byte_end":716488,"line_start":117,"line_end":117,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":2223},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item_kind.rs","byte_start":716679,"byte_end":716689,"line_start":124,"line_end":124,"column_start":12,"column_end":22},"name":"expect_var","qualname":"<ItemKind>::expect_var","value":"pub fn expect_var(&Self) -> &Var","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to this `ItemKind`'s underying `Var`, or panic if it is\n some other kind.\n","sig":null,"attributes":[{"value":"/ Get a reference to this `ItemKind`'s underying `Var`, or panic if it is","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item_kind.rs","byte_start":716567,"byte_end":716642,"line_start":122,"line_end":122,"column_start":5,"column_end":80}},{"value":"/ some other kind.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item_kind.rs","byte_start":716647,"byte_end":716667,"line_start":123,"line_end":123,"column_start":5,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":4063},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\layout.rs","byte_start":717697,"byte_end":717703,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"Layout","qualname":"::ir::layout::Layout","value":"Layout { size, align, packed }","parent":null,"children":[{"krate":0,"index":4064},{"krate":0,"index":4065},{"krate":0,"index":4066}],"decl_id":null,"docs":" A type that represents the struct layout of a type.\n","sig":null,"attributes":[{"value":"/ A type that represents the struct layout of a type.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\layout.rs","byte_start":717589,"byte_end":717644,"line_start":9,"line_end":9,"column_start":1,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":4064},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\layout.rs","byte_start":717758,"byte_end":717762,"line_start":13,"line_end":13,"column_start":9,"column_end":13},"name":"size","qualname":"::ir::layout::Layout::size","value":"usize","parent":{"krate":0,"index":4063},"children":[],"decl_id":null,"docs":" The size (in bytes) of this layout.\n","sig":null,"attributes":[{"value":"/ The size (in bytes) of this layout.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\layout.rs","byte_start":717710,"byte_end":717749,"line_start":12,"line_end":12,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":4065},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\layout.rs","byte_start":717828,"byte_end":717833,"line_start":15,"line_end":15,"column_start":9,"column_end":14},"name":"align","qualname":"::ir::layout::Layout::align","value":"usize","parent":{"krate":0,"index":4063},"children":[],"decl_id":null,"docs":" The alignment (in bytes) of this layout.\n","sig":null,"attributes":[{"value":"/ The alignment (in bytes) of this layout.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\layout.rs","byte_start":717775,"byte_end":717819,"line_start":14,"line_end":14,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":4066},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\layout.rs","byte_start":717907,"byte_end":717913,"line_start":17,"line_end":17,"column_start":9,"column_end":15},"name":"packed","qualname":"::ir::layout::Layout::packed","value":"bool","parent":{"krate":0,"index":4063},"children":[],"decl_id":null,"docs":" Whether this layout's members are packed or not.\n","sig":null,"attributes":[{"value":"/ Whether this layout's members are packed or not.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\layout.rs","byte_start":717846,"byte_end":717898,"line_start":16,"line_end":16,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2237},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\layout.rs","byte_start":718356,"byte_end":718375,"line_start":37,"line_end":37,"column_start":12,"column_end":31},"name":"known_type_for_size","qualname":"<Layout>::known_type_for_size","value":"pub fn known_type_for_size(&BindgenContext, usize) -> Option<&'static str>","parent":null,"children":[],"decl_id":null,"docs":" Gets the integer type name for a given known size.\n","sig":null,"attributes":[{"value":"/ Gets the integer type name for a given known size.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\layout.rs","byte_start":718290,"byte_end":718344,"line_start":36,"line_end":36,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":2238},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\layout.rs","byte_start":718805,"byte_end":718808,"line_start":53,"line_end":53,"column_start":12,"column_end":15},"name":"new","qualname":"<Layout>::new","value":"pub fn new(usize, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Layout` with the given `size` and `align`. It is not\n packed.\n","sig":null,"attributes":[{"value":"/ Construct a new `Layout` with the given `size` and `align`. It is not","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\layout.rs","byte_start":718704,"byte_end":718777,"line_start":51,"line_end":51,"column_start":5,"column_end":78}},{"value":"/ packed.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\layout.rs","byte_start":718782,"byte_end":718793,"line_start":52,"line_end":52,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2240},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\layout.rs","byte_start":719384,"byte_end":719392,"line_start":75,"line_end":75,"column_start":12,"column_end":20},"name":"for_size","qualname":"<Layout>::for_size","value":"pub fn for_size(&BindgenContext, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a non-packed layout for a given size, trying to use the maximum\n alignment possible.\n","sig":null,"attributes":[{"value":"/ Creates a non-packed layout for a given size, trying to use the maximum","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\layout.rs","byte_start":719269,"byte_end":719344,"line_start":73,"line_end":73,"column_start":5,"column_end":80}},{"value":"/ alignment possible.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\layout.rs","byte_start":719349,"byte_end":719372,"line_start":74,"line_end":74,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":2241},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\layout.rs","byte_start":719558,"byte_end":719565,"line_start":80,"line_end":80,"column_start":12,"column_end":19},"name":"is_zero","qualname":"<Layout>::is_zero","value":"pub fn is_zero(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a zero-sized layout?\n","sig":null,"attributes":[{"value":"/ Is this a zero-sized layout?","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\layout.rs","byte_start":719514,"byte_end":719546,"line_start":79,"line_end":79,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":2242},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\layout.rs","byte_start":719682,"byte_end":719686,"line_start":85,"line_end":85,"column_start":12,"column_end":16},"name":"zero","qualname":"<Layout>::zero","value":"pub fn zero() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a zero-sized layout.\n","sig":null,"attributes":[{"value":"/ Construct a zero-sized layout.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\layout.rs","byte_start":719636,"byte_end":719670,"line_start":84,"line_end":84,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2243},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\layout.rs","byte_start":719784,"byte_end":719790,"line_start":90,"line_end":90,"column_start":12,"column_end":18},"name":"opaque","qualname":"<Layout>::opaque","value":"pub fn opaque(&Self) -> Opaque","parent":null,"children":[],"decl_id":null,"docs":" Get this layout as an opaque type.\n","sig":null,"attributes":[{"value":"/ Get this layout as an opaque type.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\layout.rs","byte_start":719734,"byte_end":719772,"line_start":89,"line_end":89,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":4076},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\layout.rs","byte_start":719965,"byte_end":719971,"line_start":97,"line_end":97,"column_start":12,"column_end":18},"name":"Opaque","qualname":"::ir::layout::Opaque","value":"","parent":null,"children":[],"decl_id":null,"docs":" When we are treating a type as opaque, it is just a blob with a `Layout`.\n","sig":null,"attributes":[{"value":"/ When we are treating a type as opaque, it is just a blob with a `Layout`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\layout.rs","byte_start":719841,"byte_end":719918,"line_start":95,"line_end":95,"column_start":1,"column_end":78}}]},{"kind":"Field","id":{"krate":0,"index":4078},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\layout.rs","byte_start":719972,"byte_end":719982,"line_start":97,"line_end":97,"column_start":19,"column_end":29},"name":"0","qualname":"::ir::layout::Opaque::0","value":"ir::layout::Layout","parent":{"krate":0,"index":4076},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2245},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\layout.rs","byte_start":720074,"byte_end":720087,"line_start":101,"line_end":101,"column_start":12,"column_end":25},"name":"from_clang_ty","qualname":"<Opaque>::from_clang_ty","value":"pub fn from_clang_ty(&clang::Type, &BindgenContext) -> Type","parent":null,"children":[],"decl_id":null,"docs":" Construct a new opaque type from the given clang type.\n","sig":null,"attributes":[{"value":"/ Construct a new opaque type from the given clang type.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\layout.rs","byte_start":720004,"byte_end":720062,"line_start":100,"line_end":100,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2246},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\layout.rs","byte_start":720465,"byte_end":720490,"line_start":110,"line_end":110,"column_start":12,"column_end":37},"name":"known_rust_type_for_array","qualname":"<Opaque>::known_rust_type_for_array","value":"pub fn known_rust_type_for_array(&Self, &BindgenContext)\n-> Option<&'static str>","parent":null,"children":[],"decl_id":null,"docs":" Return the known rust type we should use to create a correctly-aligned\n field with this layout.\n","sig":null,"attributes":[{"value":"/ Return the known rust type we should use to create a correctly-aligned","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\layout.rs","byte_start":720347,"byte_end":720421,"line_start":108,"line_end":108,"column_start":5,"column_end":79}},{"value":"/ field with this layout.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\layout.rs","byte_start":720426,"byte_end":720453,"line_start":109,"line_end":109,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":2247},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\layout.rs","byte_start":720785,"byte_end":720795,"line_start":119,"line_end":119,"column_start":12,"column_end":22},"name":"array_size","qualname":"<Opaque>::array_size","value":"pub fn array_size(&Self, &BindgenContext) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Return the array size that an opaque type for this layout should have if\n we know the correct type for it, or `None` otherwise.\n","sig":null,"attributes":[{"value":"/ Return the array size that an opaque type for this layout should have if","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\layout.rs","byte_start":720635,"byte_end":720711,"line_start":117,"line_end":117,"column_start":5,"column_end":81}},{"value":"/ we know the correct type for it, or `None` otherwise.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\layout.rs","byte_start":720716,"byte_end":720773,"line_start":118,"line_end":118,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2248},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\layout.rs","byte_start":721214,"byte_end":721244,"line_start":130,"line_end":130,"column_start":12,"column_end":42},"name":"array_size_within_derive_limit","qualname":"<Opaque>::array_size_within_derive_limit","value":"pub fn array_size_within_derive_limit(&Self, &BindgenContext) -> CanDerive","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if this opaque layout's array size will fit within the\n maximum number of array elements that Rust allows deriving traits\n with. Return `false` otherwise.\n","sig":null,"attributes":[{"value":"/ Return `true` if this opaque layout's array size will fit within the","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\layout.rs","byte_start":721016,"byte_end":721088,"line_start":127,"line_end":127,"column_start":5,"column_end":77}},{"value":"/ maximum number of array elements that Rust allows deriving traits","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\layout.rs","byte_start":721093,"byte_end":721162,"line_start":128,"line_end":128,"column_start":5,"column_end":74}},{"value":"/ with. Return `false` otherwise.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\layout.rs","byte_start":721167,"byte_end":721202,"line_start":129,"line_end":129,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4088},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\module.rs","byte_start":721959,"byte_end":721965,"line_start":15,"line_end":15,"column_start":5,"column_end":11},"name":"Normal","qualname":"::ir::module::ModuleKind::Normal","value":"ModuleKind::Normal","parent":{"krate":0,"index":4087},"children":[],"decl_id":null,"docs":" This module is not inline.\n","sig":null,"attributes":[{"value":"/ This module is not inline.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\module.rs","byte_start":721924,"byte_end":721954,"line_start":14,"line_end":14,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4090},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\module.rs","byte_start":722035,"byte_end":722041,"line_start":17,"line_end":17,"column_start":5,"column_end":11},"name":"Inline","qualname":"::ir::module::ModuleKind::Inline","value":"ModuleKind::Inline","parent":{"krate":0,"index":4087},"children":[],"decl_id":null,"docs":" This module is inline, as in `inline namespace foo {}`.\n","sig":null,"attributes":[{"value":"/ This module is inline, as in `inline namespace foo {}`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\module.rs","byte_start":721971,"byte_end":722030,"line_start":16,"line_end":16,"column_start":5,"column_end":64}}]},{"kind":"Enum","id":{"krate":0,"index":4087},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\module.rs","byte_start":721907,"byte_end":721917,"line_start":13,"line_end":13,"column_start":10,"column_end":20},"name":"ModuleKind","qualname":"::ir::module::ModuleKind","value":"pub enum ModuleKind {\n\n    /// This module is not inline.\n    Normal,\n\n    /// This module is inline, as in `inline namespace foo {}`.\n    Inline,\n}","parent":null,"children":[{"krate":0,"index":4088},{"krate":0,"index":4090}],"decl_id":null,"docs":" Whether this module is inline or not.\n","sig":null,"attributes":[{"value":"/ Whether this module is inline or not.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\module.rs","byte_start":721811,"byte_end":721852,"line_start":11,"line_end":11,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":4103},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\module.rs","byte_start":722119,"byte_end":722125,"line_start":22,"line_end":22,"column_start":12,"column_end":18},"name":"Module","qualname":"::ir::module::Module","value":"Module {  }","parent":null,"children":[{"krate":0,"index":4104},{"krate":0,"index":4105},{"krate":0,"index":4106}],"decl_id":null,"docs":" A module, as in, a C++ namespace.\n","sig":null,"attributes":[{"value":"/ A module, as in, a C++ namespace.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\module.rs","byte_start":722046,"byte_end":722083,"line_start":20,"line_end":20,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2262},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\module.rs","byte_start":722420,"byte_end":722423,"line_start":33,"line_end":33,"column_start":12,"column_end":15},"name":"new","qualname":"<Module>::new","value":"pub fn new(Option<String>, ModuleKind) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Module`.\n","sig":null,"attributes":[{"value":"/ Construct a new `Module`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\module.rs","byte_start":722379,"byte_end":722408,"line_start":32,"line_end":32,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":2263},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\module.rs","byte_start":722637,"byte_end":722641,"line_start":42,"line_end":42,"column_start":12,"column_end":16},"name":"name","qualname":"<Module>::name","value":"pub fn name(&Self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Get this module's name.\n","sig":null,"attributes":[{"value":"/ Get this module's name.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\module.rs","byte_start":722598,"byte_end":722625,"line_start":41,"line_end":41,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":2265},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\module.rs","byte_start":722785,"byte_end":722797,"line_start":47,"line_end":47,"column_start":12,"column_end":24},"name":"children_mut","qualname":"<Module>::children_mut","value":"pub fn children_mut(&mut Self) -> &mut ItemSet","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to this module's children.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to this module's children.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\module.rs","byte_start":722719,"byte_end":722773,"line_start":46,"line_end":46,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":2266},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\module.rs","byte_start":722908,"byte_end":722916,"line_start":52,"line_end":52,"column_start":12,"column_end":20},"name":"children","qualname":"<Module>::children","value":"pub fn children(&Self) -> &ItemSet","parent":null,"children":[],"decl_id":null,"docs":" Get this module's children.\n","sig":null,"attributes":[{"value":"/ Get this module's children.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\module.rs","byte_start":722865,"byte_end":722896,"line_start":51,"line_end":51,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2267},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\module.rs","byte_start":723021,"byte_end":723030,"line_start":57,"line_end":57,"column_start":12,"column_end":21},"name":"is_inline","qualname":"<Module>::is_inline","value":"pub fn is_inline(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether this namespace is inline.\n","sig":null,"attributes":[{"value":"/ Whether this namespace is inline.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\module.rs","byte_start":722972,"byte_end":723009,"line_start":56,"line_end":56,"column_start":5,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":4111},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\objc.rs","byte_start":724843,"byte_end":724856,"line_start":25,"line_end":25,"column_start":12,"column_end":25},"name":"ObjCInterface","qualname":"::ir::objc::ObjCInterface","value":"ObjCInterface { template_names, conforms_to, parent_class }","parent":null,"children":[{"krate":0,"index":4112},{"krate":0,"index":4113},{"krate":0,"index":4114},{"krate":0,"index":4115},{"krate":0,"index":4116},{"krate":0,"index":4117},{"krate":0,"index":4118},{"krate":0,"index":4119}],"decl_id":null,"docs":" Objective C interface as used in TypeKind","sig":null,"attributes":[{"value":"/ Objective C interface as used in TypeKind","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\objc.rs","byte_start":724707,"byte_end":724752,"line_start":21,"line_end":21,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\objc.rs","byte_start":724753,"byte_end":724756,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Also protocols and categories are parsed as this type","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\objc.rs","byte_start":724757,"byte_end":724814,"line_start":23,"line_end":23,"column_start":1,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":4115},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\objc.rs","byte_start":725053,"byte_end":725067,"line_start":35,"line_end":35,"column_start":9,"column_end":23},"name":"template_names","qualname":"::ir::objc::ObjCInterface::template_names","value":"std::vec::Vec<std::string::String>","parent":{"krate":0,"index":4111},"children":[],"decl_id":null,"docs":" The list of template names almost always, ObjectType or KeyType\n","sig":null,"attributes":[{"value":"/ The list of template names almost always, ObjectType or KeyType","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\objc.rs","byte_start":724977,"byte_end":725044,"line_start":34,"line_end":34,"column_start":5,"column_end":72}}]},{"kind":"Field","id":{"krate":0,"index":4116},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\objc.rs","byte_start":725154,"byte_end":725165,"line_start":38,"line_end":38,"column_start":9,"column_end":20},"name":"conforms_to","qualname":"::ir::objc::ObjCInterface::conforms_to","value":"std::vec::Vec<ir::context::ItemId>","parent":{"krate":0,"index":4111},"children":[],"decl_id":null,"docs":" The list of protocols that this interface conforms to.\n","sig":null,"attributes":[{"value":"/ The list of protocols that this interface conforms to.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\objc.rs","byte_start":725087,"byte_end":725145,"line_start":37,"line_end":37,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":4117},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\objc.rs","byte_start":725235,"byte_end":725247,"line_start":41,"line_end":41,"column_start":9,"column_end":21},"name":"parent_class","qualname":"::ir::objc::ObjCInterface::parent_class","value":"std::option::Option<ir::context::ItemId>","parent":{"krate":0,"index":4111},"children":[],"decl_id":null,"docs":" The direct parent for this interface.\n","sig":null,"attributes":[{"value":"/ The direct parent for this interface.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\objc.rs","byte_start":725185,"byte_end":725226,"line_start":40,"line_end":40,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":4122},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\objc.rs","byte_start":725445,"byte_end":725455,"line_start":51,"line_end":51,"column_start":12,"column_end":22},"name":"ObjCMethod","qualname":"::ir::objc::ObjCMethod","value":"ObjCMethod {  }","parent":null,"children":[{"krate":0,"index":4123},{"krate":0,"index":4124},{"krate":0,"index":4125},{"krate":0,"index":4126}],"decl_id":null,"docs":" The objective c methods\n","sig":null,"attributes":[{"value":"/ The objective c methods","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\objc.rs","byte_start":725389,"byte_end":725416,"line_start":49,"line_end":49,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":2303},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\objc.rs","byte_start":726171,"byte_end":726175,"line_start":82,"line_end":82,"column_start":12,"column_end":16},"name":"name","qualname":"<ObjCInterface>::name","value":"pub fn name(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" The name\n like, NSObject\n","sig":null,"attributes":[{"value":"/ The name","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\objc.rs","byte_start":726124,"byte_end":726136,"line_start":80,"line_end":80,"column_start":5,"column_end":17}},{"value":"/ like, NSObject","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\objc.rs","byte_start":726141,"byte_end":726159,"line_start":81,"line_end":81,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":2304},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\objc.rs","byte_start":726401,"byte_end":726410,"line_start":89,"line_end":89,"column_start":12,"column_end":21},"name":"rust_name","qualname":"<ObjCInterface>::rust_name","value":"pub fn rust_name(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Formats the name for rust\n Can be like NSObject, but with categories might be like NSObject_NSCoderMethods\n and protocols are like PNSObject\n","sig":null,"attributes":[{"value":"/ Formats the name for rust","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\objc.rs","byte_start":726231,"byte_end":726260,"line_start":86,"line_end":86,"column_start":5,"column_end":34}},{"value":"/ Can be like NSObject, but with categories might be like NSObject_NSCoderMethods","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\objc.rs","byte_start":726265,"byte_end":726348,"line_start":87,"line_end":87,"column_start":5,"column_end":88}},{"value":"/ and protocols are like PNSObject","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\objc.rs","byte_start":726353,"byte_end":726389,"line_start":88,"line_end":88,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":2305},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\objc.rs","byte_start":726775,"byte_end":726786,"line_start":102,"line_end":102,"column_start":12,"column_end":23},"name":"is_template","qualname":"<ObjCInterface>::is_template","value":"pub fn is_template(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a template interface?\n","sig":null,"attributes":[{"value":"/ Is this a template interface?","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\objc.rs","byte_start":726730,"byte_end":726763,"line_start":101,"line_end":101,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2306},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\objc.rs","byte_start":726916,"byte_end":726923,"line_start":107,"line_end":107,"column_start":12,"column_end":19},"name":"methods","qualname":"<ObjCInterface>::methods","value":"pub fn methods(&Self) -> &Vec<ObjCMethod>","parent":null,"children":[],"decl_id":null,"docs":" List of the methods defined in this interface\n","sig":null,"attributes":[{"value":"/ List of the methods defined in this interface","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\objc.rs","byte_start":726855,"byte_end":726904,"line_start":106,"line_end":106,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2307},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\objc.rs","byte_start":727021,"byte_end":727032,"line_start":112,"line_end":112,"column_start":12,"column_end":23},"name":"is_protocol","qualname":"<ObjCInterface>::is_protocol","value":"pub fn is_protocol(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a protocol?\n","sig":null,"attributes":[{"value":"/ Is this a protocol?","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\objc.rs","byte_start":726986,"byte_end":727009,"line_start":111,"line_end":111,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":2308},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\objc.rs","byte_start":727121,"byte_end":727132,"line_start":117,"line_end":117,"column_start":12,"column_end":23},"name":"is_category","qualname":"<ObjCInterface>::is_category","value":"pub fn is_category(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a category?\n","sig":null,"attributes":[{"value":"/ Is this a category?","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\objc.rs","byte_start":727086,"byte_end":727109,"line_start":116,"line_end":116,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":2309},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\objc.rs","byte_start":727260,"byte_end":727273,"line_start":122,"line_end":122,"column_start":12,"column_end":25},"name":"class_methods","qualname":"<ObjCInterface>::class_methods","value":"pub fn class_methods(&Self) -> &Vec<ObjCMethod>","parent":null,"children":[],"decl_id":null,"docs":" List of the class methods defined in this interface\n","sig":null,"attributes":[{"value":"/ List of the class methods defined in this interface","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\objc.rs","byte_start":727193,"byte_end":727248,"line_start":121,"line_end":121,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2310},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\objc.rs","byte_start":727406,"byte_end":727413,"line_start":127,"line_end":127,"column_start":12,"column_end":19},"name":"from_ty","qualname":"<ObjCInterface>::from_ty","value":"pub fn from_ty(&clang::Cursor, &mut BindgenContext) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Parses the Objective C interface from the cursor\n","sig":null,"attributes":[{"value":"/ Parses the Objective C interface from the cursor","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\objc.rs","byte_start":727342,"byte_end":727394,"line_start":126,"line_end":126,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2315},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\objc.rs","byte_start":731307,"byte_end":731311,"line_start":229,"line_end":229,"column_start":12,"column_end":16},"name":"name","qualname":"<ObjCMethod>::name","value":"pub fn name(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" The original method selector name\n like, dataWithBytes:length:\n","sig":null,"attributes":[{"value":"/ The original method selector name","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\objc.rs","byte_start":731222,"byte_end":731259,"line_start":227,"line_end":227,"column_start":5,"column_end":42}},{"value":"/ like, dataWithBytes:length:","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\objc.rs","byte_start":731264,"byte_end":731295,"line_start":228,"line_end":228,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2316},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\objc.rs","byte_start":731451,"byte_end":731460,"line_start":235,"line_end":235,"column_start":12,"column_end":21},"name":"rust_name","qualname":"<ObjCMethod>::rust_name","value":"pub fn rust_name(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Method name as converted to rust\n like, dataWithBytes_length_\n","sig":null,"attributes":[{"value":"/ Method name as converted to rust","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\objc.rs","byte_start":731367,"byte_end":731403,"line_start":233,"line_end":233,"column_start":5,"column_end":41}},{"value":"/ like, dataWithBytes_length_","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\objc.rs","byte_start":731408,"byte_end":731439,"line_start":234,"line_end":234,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2317},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\objc.rs","byte_start":731581,"byte_end":731590,"line_start":240,"line_end":240,"column_start":12,"column_end":21},"name":"signature","qualname":"<ObjCMethod>::signature","value":"pub fn signature(&Self) -> &FunctionSig","parent":null,"children":[],"decl_id":null,"docs":" Returns the methods signature as FunctionSig\n","sig":null,"attributes":[{"value":"/ Returns the methods signature as FunctionSig","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\objc.rs","byte_start":731521,"byte_end":731569,"line_start":239,"line_end":239,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2318},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\objc.rs","byte_start":731690,"byte_end":731705,"line_start":245,"line_end":245,"column_start":12,"column_end":27},"name":"is_class_method","qualname":"<ObjCMethod>::is_class_method","value":"pub fn is_class_method(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a class method?\n","sig":null,"attributes":[{"value":"/ Is this a class method?","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\objc.rs","byte_start":731651,"byte_end":731678,"line_start":244,"line_end":244,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":2319},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\objc.rs","byte_start":731802,"byte_end":731820,"line_start":250,"line_end":250,"column_start":12,"column_end":30},"name":"format_method_call","qualname":"<ObjCMethod>::format_method_call","value":"pub fn format_method_call(&Self, &[TokenStream]) -> TokenStream","parent":null,"children":[],"decl_id":null,"docs":" Formats the method call\n","sig":null,"attributes":[{"value":"/ Formats the method call","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\objc.rs","byte_start":731763,"byte_end":731790,"line_start":249,"line_end":249,"column_start":5,"column_end":32}}]},{"kind":"Type","id":{"krate":0,"index":2350},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\template.rs","byte_start":740200,"byte_end":740205,"line_start":169,"line_end":169,"column_start":10,"column_end":15},"name":"Extra","qualname":"::ir::template::AsTemplateParam::Extra","value":"type Extra;","parent":{"krate":0,"index":2349},"children":[],"decl_id":null,"docs":" Any extra information the implementor might need to make this decision.\n","sig":null,"attributes":[{"value":"/ Any extra information the implementor might need to make this decision.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\template.rs","byte_start":740115,"byte_end":740190,"line_start":168,"line_end":168,"column_start":5,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":4130},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\template.rs","byte_start":740726,"byte_end":740747,"line_start":190,"line_end":190,"column_start":12,"column_end":33},"name":"TemplateInstantiation","qualname":"::ir::template::TemplateInstantiation","value":"TemplateInstantiation {  }","parent":null,"children":[{"krate":0,"index":4131},{"krate":0,"index":4132}],"decl_id":null,"docs":" A concrete instantiation of a generic template.\n","sig":null,"attributes":[{"value":"/ A concrete instantiation of a generic template.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\template.rs","byte_start":740639,"byte_end":740690,"line_start":188,"line_end":188,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2354},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\template.rs","byte_start":741100,"byte_end":741103,"line_start":200,"line_end":200,"column_start":12,"column_end":15},"name":"new","qualname":"<TemplateInstantiation>::new","value":"pub fn new<I>(TypeId, I) -> TemplateInstantiation where I: IntoIterator<Item =\nTypeId>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new template instantiation from the given parts.\n","sig":null,"attributes":[{"value":"/ Construct a new template instantiation from the given parts.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\template.rs","byte_start":741024,"byte_end":741088,"line_start":199,"line_end":199,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2356},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\template.rs","byte_start":741407,"byte_end":741426,"line_start":211,"line_end":211,"column_start":12,"column_end":31},"name":"template_definition","qualname":"<TemplateInstantiation>::template_definition","value":"pub fn template_definition(&Self) -> TypeId","parent":null,"children":[],"decl_id":null,"docs":" Get the template definition for this instantiation.\n","sig":null,"attributes":[{"value":"/ Get the template definition for this instantiation.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\template.rs","byte_start":741340,"byte_end":741395,"line_start":210,"line_end":210,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2357},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\template.rs","byte_start":741560,"byte_end":741578,"line_start":216,"line_end":216,"column_start":12,"column_end":30},"name":"template_arguments","qualname":"<TemplateInstantiation>::template_arguments","value":"pub fn template_arguments(&Self) -> &[TypeId]","parent":null,"children":[],"decl_id":null,"docs":" Get the concrete template arguments used in this instantiation.\n","sig":null,"attributes":[{"value":"/ Get the concrete template arguments used in this instantiation.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\template.rs","byte_start":741481,"byte_end":741548,"line_start":215,"line_end":215,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":2358},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\template.rs","byte_start":741703,"byte_end":741710,"line_start":221,"line_end":221,"column_start":12,"column_end":19},"name":"from_ty","qualname":"<TemplateInstantiation>::from_ty","value":"pub fn from_ty(&clang::Type, &mut BindgenContext)\n-> Option<TemplateInstantiation>","parent":null,"children":[],"decl_id":null,"docs":" Parse a `TemplateInstantiation` from a clang `Type`.\n","sig":null,"attributes":[{"value":"/ Parse a `TemplateInstantiation` from a clang `Type`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\template.rs","byte_start":741635,"byte_end":741691,"line_start":220,"line_end":220,"column_start":5,"column_end":61}}]},{"kind":"Type","id":{"krate":0,"index":2424},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\traversal.rs","byte_start":756735,"byte_end":756740,"line_start":366,"line_end":366,"column_start":10,"column_end":15},"name":"Extra","qualname":"::ir::traversal::Trace::Extra","value":"type Extra;","parent":{"krate":0,"index":2423},"children":[],"decl_id":null,"docs":" If a particular type needs extra information beyond what it has in\n `self` and `context` to find its referenced items, its implementation\n can define this associated type, forcing callers to pass the needed\n information through.\n","sig":null,"attributes":[{"value":"/ If a particular type needs extra information beyond what it has in","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\traversal.rs","byte_start":756472,"byte_end":756542,"line_start":362,"line_end":362,"column_start":5,"column_end":75}},{"value":"/ `self` and `context` to find its referenced items, its implementation","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\traversal.rs","byte_start":756547,"byte_end":756620,"line_start":363,"line_end":363,"column_start":5,"column_end":78}},{"value":"/ can define this associated type, forcing callers to pass the needed","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\traversal.rs","byte_start":756625,"byte_end":756696,"line_start":364,"line_end":364,"column_start":5,"column_end":76}},{"value":"/ information through.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\traversal.rs","byte_start":756701,"byte_end":756725,"line_start":365,"line_end":365,"column_start":5,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":4224},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":761449,"byte_end":761453,"line_start":27,"line_end":27,"column_start":12,"column_end":16},"name":"Type","qualname":"::ir::ty::Type","value":"Type {  }","parent":null,"children":[{"krate":0,"index":4225},{"krate":0,"index":4226},{"krate":0,"index":4227},{"krate":0,"index":4228}],"decl_id":null,"docs":" The base representation of a type in bindgen.","sig":null,"attributes":[{"value":"/ The base representation of a type in bindgen.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":761154,"byte_end":761203,"line_start":21,"line_end":21,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":761204,"byte_end":761207,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ A type has an optional name, which if present cannot be empty, a `layout`","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":761208,"byte_end":761285,"line_start":23,"line_end":23,"column_start":1,"column_end":78}},{"value":"/ (size, alignment and packedness) if known, a `Kind`, which determines which","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":761286,"byte_end":761365,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/ kind of type it is, and whether the type is const.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":761366,"byte_end":761420,"line_start":25,"line_end":25,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2496},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":762208,"byte_end":762215,"line_start":48,"line_end":48,"column_start":12,"column_end":19},"name":"as_comp","qualname":"<Type>::as_comp","value":"pub fn as_comp(&Self) -> Option<&CompInfo>","parent":null,"children":[],"decl_id":null,"docs":" Get the underlying `CompInfo` for this type, or `None` if this is some\n other kind of type.\n","sig":null,"attributes":[{"value":"/ Get the underlying `CompInfo` for this type, or `None` if this is some","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":762094,"byte_end":762168,"line_start":46,"line_end":46,"column_start":5,"column_end":79}},{"value":"/ other kind of type.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":762173,"byte_end":762196,"line_start":47,"line_end":47,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":2497},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":762501,"byte_end":762512,"line_start":57,"line_end":57,"column_start":12,"column_end":23},"name":"as_comp_mut","qualname":"<Type>::as_comp_mut","value":"pub fn as_comp_mut(&mut Self) -> Option<&mut CompInfo>","parent":null,"children":[],"decl_id":null,"docs":" Get the underlying `CompInfo` for this type as a mutable reference, or\n `None` if this is some other kind of type.\n","sig":null,"attributes":[{"value":"/ Get the underlying `CompInfo` for this type as a mutable reference, or","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":762364,"byte_end":762438,"line_start":55,"line_end":55,"column_start":5,"column_end":79}},{"value":"/ `None` if this is some other kind of type.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":762443,"byte_end":762489,"line_start":56,"line_end":56,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2498},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":762712,"byte_end":762715,"line_start":65,"line_end":65,"column_start":12,"column_end":15},"name":"new","qualname":"<Type>::new","value":"pub fn new(Option<String>, Option<Layout>, TypeKind, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Type`.\n","sig":null,"attributes":[{"value":"/ Construct a new `Type`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":762673,"byte_end":762700,"line_start":64,"line_end":64,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":2499},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":763000,"byte_end":763004,"line_start":80,"line_end":80,"column_start":12,"column_end":16},"name":"kind","qualname":"<Type>::kind","value":"pub fn kind(&Self) -> &TypeKind","parent":null,"children":[],"decl_id":null,"docs":" Which kind of type is this?\n","sig":null,"attributes":[{"value":"/ Which kind of type is this?","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":762957,"byte_end":762988,"line_start":79,"line_end":79,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2500},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":763117,"byte_end":763125,"line_start":85,"line_end":85,"column_start":12,"column_end":20},"name":"kind_mut","qualname":"<Type>::kind_mut","value":"pub fn kind_mut(&mut Self) -> &mut TypeKind","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to this type's kind.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to this type's kind.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":763057,"byte_end":763105,"line_start":84,"line_end":84,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2501},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":763227,"byte_end":763231,"line_start":90,"line_end":90,"column_start":12,"column_end":16},"name":"name","qualname":"<Type>::name","value":"pub fn name(&Self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Get this type's name.\n","sig":null,"attributes":[{"value":"/ Get this type's name.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":763190,"byte_end":763215,"line_start":89,"line_end":89,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2503},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":763368,"byte_end":763384,"line_start":95,"line_end":95,"column_start":12,"column_end":28},"name":"is_block_pointer","qualname":"<Type>::is_block_pointer","value":"pub fn is_block_pointer(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether this is a block pointer type.\n","sig":null,"attributes":[{"value":"/ Whether this is a block pointer type.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":763315,"byte_end":763356,"line_start":94,"line_end":94,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":2504},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":763561,"byte_end":763568,"line_start":103,"line_end":103,"column_start":12,"column_end":19},"name":"is_comp","qualname":"<Type>::is_comp","value":"pub fn is_comp(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a compound type?\n","sig":null,"attributes":[{"value":"/ Is this a compound type?","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":763521,"byte_end":763549,"line_start":102,"line_end":102,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2505},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":763729,"byte_end":763737,"line_start":111,"line_end":111,"column_start":12,"column_end":20},"name":"is_union","qualname":"<Type>::is_union","value":"pub fn is_union(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a union?\n","sig":null,"attributes":[{"value":"/ Is this a union?","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":763697,"byte_end":763717,"line_start":110,"line_end":110,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":2506},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":763942,"byte_end":763955,"line_start":119,"line_end":119,"column_start":12,"column_end":25},"name":"is_type_param","qualname":"<Type>::is_type_param","value":"pub fn is_type_param(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this type of kind `TypeKind::TypeParam`?\n","sig":null,"attributes":[{"value":"/ Is this type of kind `TypeKind::TypeParam`?","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":763883,"byte_end":763930,"line_start":118,"line_end":118,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2507},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":764139,"byte_end":764164,"line_start":127,"line_end":127,"column_start":12,"column_end":37},"name":"is_template_instantiation","qualname":"<Type>::is_template_instantiation","value":"pub fn is_template_instantiation(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a template instantiation type?\n","sig":null,"attributes":[{"value":"/ Is this a template instantiation type?","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":764085,"byte_end":764127,"line_start":126,"line_end":126,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2508},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":764356,"byte_end":764373,"line_start":135,"line_end":135,"column_start":12,"column_end":29},"name":"is_template_alias","qualname":"<Type>::is_template_alias","value":"pub fn is_template_alias(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a template alias type?\n","sig":null,"attributes":[{"value":"/ Is this a template alias type?","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":764310,"byte_end":764344,"line_start":134,"line_end":134,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2509},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":764551,"byte_end":764562,"line_start":143,"line_end":143,"column_start":12,"column_end":23},"name":"is_function","qualname":"<Type>::is_function","value":"pub fn is_function(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a function type?\n","sig":null,"attributes":[{"value":"/ Is this a function type?","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":764511,"byte_end":764539,"line_start":142,"line_end":142,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2510},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":764732,"byte_end":764739,"line_start":151,"line_end":151,"column_start":12,"column_end":19},"name":"is_enum","qualname":"<Type>::is_enum","value":"pub fn is_enum(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this an enum type?\n","sig":null,"attributes":[{"value":"/ Is this an enum type?","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":764695,"byte_end":764720,"line_start":150,"line_end":150,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2511},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":764923,"byte_end":764947,"line_start":159,"line_end":159,"column_start":12,"column_end":36},"name":"is_builtin_or_type_param","qualname":"<Type>::is_builtin_or_type_param","value":"pub fn is_builtin_or_type_param(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this either a builtin or named type?\n","sig":null,"attributes":[{"value":"/ Is this either a builtin or named type?","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":764868,"byte_end":764911,"line_start":158,"line_end":158,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2512},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":765408,"byte_end":765413,"line_start":175,"line_end":175,"column_start":12,"column_end":17},"name":"named","qualname":"<Type>::named","value":"pub fn named(String) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new named type, with name `name`.\n","sig":null,"attributes":[{"value":"/ Creates a new named type, with name `name`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":765349,"byte_end":765396,"line_start":174,"line_end":174,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2513},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":765621,"byte_end":765629,"line_start":181,"line_end":181,"column_start":12,"column_end":20},"name":"is_float","qualname":"<Type>::is_float","value":"pub fn is_float(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a floating point type?\n","sig":null,"attributes":[{"value":"/ Is this a floating point type?","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":765575,"byte_end":765609,"line_start":180,"line_end":180,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2514},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":765798,"byte_end":765805,"line_start":189,"line_end":189,"column_start":12,"column_end":19},"name":"is_bool","qualname":"<Type>::is_bool","value":"pub fn is_bool(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a boolean type?\n","sig":null,"attributes":[{"value":"/ Is this a boolean type?","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":765759,"byte_end":765786,"line_start":188,"line_end":188,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":2515},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":765984,"byte_end":765994,"line_start":197,"line_end":197,"column_start":12,"column_end":22},"name":"is_integer","qualname":"<Type>::is_integer","value":"pub fn is_integer(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this an integer type?\n","sig":null,"attributes":[{"value":"/ Is this an integer type?","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":765944,"byte_end":765972,"line_start":196,"line_end":196,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2516},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":766220,"byte_end":766230,"line_start":206,"line_end":206,"column_start":12,"column_end":22},"name":"as_integer","qualname":"<Type>::as_integer","value":"pub fn as_integer(&Self) -> Option<IntKind>","parent":null,"children":[],"decl_id":null,"docs":" Cast this type to an integer kind, or `None` if it is not an integer\n type.\n","sig":null,"attributes":[{"value":"/ Cast this type to an integer kind, or `None` if it is not an integer","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":766122,"byte_end":766194,"line_start":204,"line_end":204,"column_start":5,"column_end":77}},{"value":"/ type.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":766199,"byte_end":766208,"line_start":205,"line_end":205,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2517},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":766433,"byte_end":766441,"line_start":214,"line_end":214,"column_start":12,"column_end":20},"name":"is_const","qualname":"<Type>::is_const","value":"pub fn is_const(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a `const` qualified type?\n","sig":null,"attributes":[{"value":"/ Is this a `const` qualified type?","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":766384,"byte_end":766421,"line_start":213,"line_end":213,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2518},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":766544,"byte_end":766555,"line_start":219,"line_end":219,"column_start":12,"column_end":23},"name":"is_type_ref","qualname":"<Type>::is_type_ref","value":"pub fn is_type_ref(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a reference to another type?\n","sig":null,"attributes":[{"value":"/ Is this a reference to another type?","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":766492,"byte_end":766532,"line_start":218,"line_end":218,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2519},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":766793,"byte_end":766810,"line_start":228,"line_end":228,"column_start":12,"column_end":29},"name":"is_unresolved_ref","qualname":"<Type>::is_unresolved_ref","value":"pub fn is_unresolved_ref(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this an unresolved reference?\n","sig":null,"attributes":[{"value":"/ Is this an unresolved reference?","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":766745,"byte_end":766781,"line_start":227,"line_end":227,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":2520},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":767005,"byte_end":767024,"line_start":236,"line_end":236,"column_start":12,"column_end":31},"name":"is_incomplete_array","qualname":"<Type>::is_incomplete_array","value":"pub fn is_incomplete_array(&Self, &BindgenContext) -> Option<ItemId>","parent":null,"children":[],"decl_id":null,"docs":" Is this a incomplete array type?\n","sig":null,"attributes":[{"value":"/ Is this a incomplete array type?","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":766957,"byte_end":766993,"line_start":235,"line_end":235,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":2521},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":767515,"byte_end":767521,"line_start":253,"line_end":253,"column_start":12,"column_end":18},"name":"layout","qualname":"<Type>::layout","value":"pub fn layout(&Self, &BindgenContext) -> Option<Layout>","parent":null,"children":[],"decl_id":null,"docs":" What is the layout of this type?\n","sig":null,"attributes":[{"value":"/ What is the layout of this type?","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":767467,"byte_end":767503,"line_start":252,"line_end":252,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":2523},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":768568,"byte_end":768589,"line_start":278,"line_end":278,"column_start":12,"column_end":33},"name":"is_invalid_type_param","qualname":"<Type>::is_invalid_type_param","value":"pub fn is_invalid_type_param(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether this named type is an invalid C++ identifier. This is done to\n avoid generating invalid code with some cases we can't handle, see:","sig":null,"attributes":[{"value":"/ Whether this named type is an invalid C++ identifier. This is done to","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":768354,"byte_end":768427,"line_start":274,"line_end":274,"column_start":5,"column_end":78}},{"value":"/ avoid generating invalid code with some cases we can't handle, see:","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":768432,"byte_end":768503,"line_start":275,"line_end":275,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":768508,"byte_end":768511,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ tests/headers/381-decltype-alias.hpp","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":768516,"byte_end":768556,"line_start":277,"line_end":277,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2527},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":769239,"byte_end":769253,"line_start":299,"line_end":299,"column_start":12,"column_end":26},"name":"sanitized_name","qualname":"<Type>::sanitized_name","value":"pub fn sanitized_name<'a>(&'a Self, &BindgenContext) -> Option<Cow>","parent":null,"children":[],"decl_id":null,"docs":" Get this type's santizied name.\n","sig":null,"attributes":[{"value":"/ Get this type's santizied name.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":769192,"byte_end":769227,"line_start":298,"line_end":298,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2530},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":770126,"byte_end":770140,"line_start":326,"line_end":326,"column_start":12,"column_end":26},"name":"canonical_type","qualname":"<Type>::canonical_type","value":"pub fn canonical_type<'tr>(&'tr Self, &'tr BindgenContext) -> &'tr Type","parent":null,"children":[],"decl_id":null,"docs":" See safe_canonical_type.\n","sig":null,"attributes":[{"value":"/ See safe_canonical_type.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":770086,"byte_end":770114,"line_start":325,"line_end":325,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2532},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":770649,"byte_end":770668,"line_start":339,"line_end":339,"column_start":12,"column_end":31},"name":"safe_canonical_type","qualname":"<Type>::safe_canonical_type","value":"pub fn safe_canonical_type<'tr>(&'tr Self, &'tr BindgenContext)\n-> Option<&'tr Type>","parent":null,"children":[],"decl_id":null,"docs":" Returns the canonical type of this type, that is, the \"inner type\".","sig":null,"attributes":[{"value":"/ Returns the canonical type of this type, that is, the \"inner type\".","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":770334,"byte_end":770405,"line_start":334,"line_end":334,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":770410,"byte_end":770413,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ For example, for a `typedef`, the canonical type would be the","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":770418,"byte_end":770483,"line_start":336,"line_end":336,"column_start":5,"column_end":70}},{"value":"/ `typedef`ed type, for a template instantiation, would be the template","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":770488,"byte_end":770561,"line_start":337,"line_end":337,"column_start":5,"column_end":78}},{"value":"/ its specializing, and so on. Return None if the type is unresolved.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":770566,"byte_end":770637,"line_start":338,"line_end":338,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":2534},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":772030,"byte_end":772062,"line_start":378,"line_end":378,"column_start":12,"column_end":44},"name":"should_be_traced_unconditionally","qualname":"<Type>::should_be_traced_unconditionally","value":"pub fn should_be_traced_unconditionally(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" There are some types we don't want to stop at when finding an opaque\n item, so we can arrive to the proper item that needs to be generated.\n","sig":null,"attributes":[{"value":"/ There are some types we don't want to stop at when finding an opaque","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":771868,"byte_end":771940,"line_start":376,"line_end":376,"column_start":5,"column_end":77}},{"value":"/ item, so we can arrive to the proper item that needs to be generated.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":771945,"byte_end":772018,"line_start":377,"line_end":377,"column_start":5,"column_end":78}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4232},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":778641,"byte_end":778646,"line_start":609,"line_end":609,"column_start":5,"column_end":10},"name":"Float","qualname":"::ir::ty::FloatKind::Float","value":"FloatKind::Float","parent":{"krate":0,"index":4231},"children":[],"decl_id":null,"docs":" A `float`.\n","sig":null,"attributes":[{"value":"/ A `float`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":778622,"byte_end":778636,"line_start":608,"line_end":608,"column_start":5,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4234},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":778672,"byte_end":778678,"line_start":611,"line_end":611,"column_start":5,"column_end":11},"name":"Double","qualname":"::ir::ty::FloatKind::Double","value":"FloatKind::Double","parent":{"krate":0,"index":4231},"children":[],"decl_id":null,"docs":" A `double`.\n","sig":null,"attributes":[{"value":"/ A `double`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":778652,"byte_end":778667,"line_start":610,"line_end":610,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4236},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":778709,"byte_end":778719,"line_start":613,"line_end":613,"column_start":5,"column_end":15},"name":"LongDouble","qualname":"::ir::ty::FloatKind::LongDouble","value":"FloatKind::LongDouble","parent":{"krate":0,"index":4231},"children":[],"decl_id":null,"docs":" A `long double`.\n","sig":null,"attributes":[{"value":"/ A `long double`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":778684,"byte_end":778704,"line_start":612,"line_end":612,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4238},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":778749,"byte_end":778757,"line_start":615,"line_end":615,"column_start":5,"column_end":13},"name":"Float128","qualname":"::ir::ty::FloatKind::Float128","value":"FloatKind::Float128","parent":{"krate":0,"index":4231},"children":[],"decl_id":null,"docs":" A `__float128`.\n","sig":null,"attributes":[{"value":"/ A `__float128`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":778725,"byte_end":778744,"line_start":614,"line_end":614,"column_start":5,"column_end":24}}]},{"kind":"Enum","id":{"krate":0,"index":4231},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":778606,"byte_end":778615,"line_start":607,"line_end":607,"column_start":10,"column_end":19},"name":"FloatKind","qualname":"::ir::ty::FloatKind","value":"pub enum FloatKind {\n\n    /// A `float`.\n    Float,\n\n    /// A `double`.\n    Double,\n\n    /// A `long double`.\n    LongDouble,\n\n    /// A `__float128`.\n    Float128,\n}","parent":null,"children":[{"krate":0,"index":4232},{"krate":0,"index":4234},{"krate":0,"index":4236},{"krate":0,"index":4238}],"decl_id":null,"docs":" The kind of float this type represents.\n","sig":null,"attributes":[{"value":"/ The kind of float this type represents.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":778512,"byte_end":778555,"line_start":605,"line_end":605,"column_start":1,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4249},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":778878,"byte_end":778882,"line_start":622,"line_end":622,"column_start":5,"column_end":9},"name":"Void","qualname":"::ir::ty::TypeKind::Void","value":"TypeKind::Void","parent":{"krate":0,"index":4248},"children":[],"decl_id":null,"docs":" The void type.\n","sig":null,"attributes":[{"value":"/ The void type.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":778855,"byte_end":778873,"line_start":621,"line_end":621,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4251},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":778919,"byte_end":778926,"line_start":625,"line_end":625,"column_start":5,"column_end":12},"name":"NullPtr","qualname":"::ir::ty::TypeKind::NullPtr","value":"TypeKind::NullPtr","parent":{"krate":0,"index":4248},"children":[],"decl_id":null,"docs":" The `nullptr_t` type.\n","sig":null,"attributes":[{"value":"/ The `nullptr_t` type.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":778889,"byte_end":778914,"line_start":624,"line_end":624,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4253},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":778994,"byte_end":778998,"line_start":628,"line_end":628,"column_start":5,"column_end":9},"name":"Comp","qualname":"::ir::ty::TypeKind::Comp","value":"TypeKind::Comp(CompInfo)","parent":{"krate":0,"index":4248},"children":[],"decl_id":null,"docs":" A compound type, that is, a class, struct, or union.\n","sig":null,"attributes":[{"value":"/ A compound type, that is, a class, struct, or union.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":778933,"byte_end":778989,"line_start":627,"line_end":627,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4256},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":779189,"byte_end":779195,"line_start":633,"line_end":633,"column_start":5,"column_end":11},"name":"Opaque","qualname":"::ir::ty::TypeKind::Opaque","value":"TypeKind::Opaque","parent":{"krate":0,"index":4248},"children":[],"decl_id":null,"docs":" An opaque type that we just don't understand. All usage of this shoulf\n result in an opaque blob of bytes generated from the containing type's\n layout.\n","sig":null,"attributes":[{"value":"/ An opaque type that we just don't understand. All usage of this shoulf","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":779015,"byte_end":779089,"line_start":630,"line_end":630,"column_start":5,"column_end":79}},{"value":"/ result in an opaque blob of bytes generated from the containing type's","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":779094,"byte_end":779168,"line_start":631,"line_end":631,"column_start":5,"column_end":79}},{"value":"/ layout.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":779173,"byte_end":779184,"line_start":632,"line_end":632,"column_start":5,"column_end":16}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4258},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":779300,"byte_end":779303,"line_start":637,"line_end":637,"column_start":5,"column_end":8},"name":"Int","qualname":"::ir::ty::TypeKind::Int","value":"TypeKind::Int(IntKind)","parent":{"krate":0,"index":4248},"children":[],"decl_id":null,"docs":" An integer type, of a given kind. `bool` and `char` are also considered\n integers.\n","sig":null,"attributes":[{"value":"/ An integer type, of a given kind. `bool` and `char` are also considered","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":779202,"byte_end":779277,"line_start":635,"line_end":635,"column_start":5,"column_end":80}},{"value":"/ integers.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":779282,"byte_end":779295,"line_start":636,"line_end":636,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4261},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":779350,"byte_end":779355,"line_start":640,"line_end":640,"column_start":5,"column_end":10},"name":"Float","qualname":"::ir::ty::TypeKind::Float","value":"TypeKind::Float(FloatKind)","parent":{"krate":0,"index":4248},"children":[],"decl_id":null,"docs":" A floating point type.\n","sig":null,"attributes":[{"value":"/ A floating point type.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":779319,"byte_end":779345,"line_start":639,"line_end":639,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4264},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":779412,"byte_end":779419,"line_start":643,"line_end":643,"column_start":5,"column_end":12},"name":"Complex","qualname":"::ir::ty::TypeKind::Complex","value":"TypeKind::Complex(FloatKind)","parent":{"krate":0,"index":4248},"children":[],"decl_id":null,"docs":" A complex floating point type.\n","sig":null,"attributes":[{"value":"/ A complex floating point type.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":779373,"byte_end":779407,"line_start":642,"line_end":642,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4267},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":779501,"byte_end":779506,"line_start":646,"line_end":646,"column_start":5,"column_end":10},"name":"Alias","qualname":"::ir::ty::TypeKind::Alias","value":"TypeKind::Alias(TypeId)","parent":{"krate":0,"index":4248},"children":[],"decl_id":null,"docs":" A type alias, with a name, that points to another type.\n","sig":null,"attributes":[{"value":"/ A type alias, with a name, that points to another type.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":779437,"byte_end":779496,"line_start":645,"line_end":645,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4270},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":779630,"byte_end":779643,"line_start":650,"line_end":650,"column_start":5,"column_end":18},"name":"TemplateAlias","qualname":"::ir::ty::TypeKind::TemplateAlias","value":"TypeKind::TemplateAlias(TypeId, Vec<TypeId>)","parent":{"krate":0,"index":4248},"children":[],"decl_id":null,"docs":" A templated alias, pointing to an inner type, just as `Alias`, but with\n template parameters.\n","sig":null,"attributes":[{"value":"/ A templated alias, pointing to an inner type, just as `Alias`, but with","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":779521,"byte_end":779596,"line_start":648,"line_end":648,"column_start":5,"column_end":80}},{"value":"/ template parameters.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":779601,"byte_end":779625,"line_start":649,"line_end":649,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4274},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":779734,"byte_end":779740,"line_start":653,"line_end":653,"column_start":5,"column_end":11},"name":"Vector","qualname":"::ir::ty::TypeKind::Vector","value":"TypeKind::Vector(TypeId, usize)","parent":{"krate":0,"index":4248},"children":[],"decl_id":null,"docs":" A packed vector type: element type, number of elements\n","sig":null,"attributes":[{"value":"/ A packed vector type: element type, number of elements","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":779671,"byte_end":779729,"line_start":652,"line_end":652,"column_start":5,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4278},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":779803,"byte_end":779808,"line_start":656,"line_end":656,"column_start":5,"column_end":10},"name":"Array","qualname":"::ir::ty::TypeKind::Array","value":"TypeKind::Array(TypeId, usize)","parent":{"krate":0,"index":4248},"children":[],"decl_id":null,"docs":" An array of a type and a length.\n","sig":null,"attributes":[{"value":"/ An array of a type and a length.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":779762,"byte_end":779798,"line_start":655,"line_end":655,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4282},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":779879,"byte_end":779887,"line_start":659,"line_end":659,"column_start":5,"column_end":13},"name":"Function","qualname":"::ir::ty::TypeKind::Function","value":"TypeKind::Function(FunctionSig)","parent":{"krate":0,"index":4248},"children":[],"decl_id":null,"docs":" A function type, with a given signature.\n","sig":null,"attributes":[{"value":"/ A function type, with a given signature.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":779830,"byte_end":779874,"line_start":658,"line_end":658,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4285},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":779931,"byte_end":779935,"line_start":662,"line_end":662,"column_start":5,"column_end":9},"name":"Enum","qualname":"::ir::ty::TypeKind::Enum","value":"TypeKind::Enum(Enum)","parent":{"krate":0,"index":4248},"children":[],"decl_id":null,"docs":" An `enum` type.\n","sig":null,"attributes":[{"value":"/ An `enum` type.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":779907,"byte_end":779926,"line_start":661,"line_end":661,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4288},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":780038,"byte_end":780045,"line_start":666,"line_end":666,"column_start":5,"column_end":12},"name":"Pointer","qualname":"::ir::ty::TypeKind::Pointer","value":"TypeKind::Pointer(TypeId)","parent":{"krate":0,"index":4248},"children":[],"decl_id":null,"docs":" A pointer to a type. The bool field represents whether it's const or\n not.\n","sig":null,"attributes":[{"value":"/ A pointer to a type. The bool field represents whether it's const or","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":779948,"byte_end":780020,"line_start":664,"line_end":664,"column_start":5,"column_end":77}},{"value":"/ not.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":780025,"byte_end":780033,"line_start":665,"line_end":665,"column_start":5,"column_end":13}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4291},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":780097,"byte_end":780109,"line_start":669,"line_end":669,"column_start":5,"column_end":17},"name":"BlockPointer","qualname":"::ir::ty::TypeKind::BlockPointer","value":"TypeKind::BlockPointer(TypeId)","parent":{"krate":0,"index":4248},"children":[],"decl_id":null,"docs":" A pointer to an Apple block.\n","sig":null,"attributes":[{"value":"/ A pointer to an Apple block.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":780060,"byte_end":780092,"line_start":668,"line_end":668,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4294},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":780174,"byte_end":780183,"line_start":672,"line_end":672,"column_start":5,"column_end":14},"name":"Reference","qualname":"::ir::ty::TypeKind::Reference","value":"TypeKind::Reference(TypeId)","parent":{"krate":0,"index":4248},"children":[],"decl_id":null,"docs":" A reference to a type, as in: int& foo().\n","sig":null,"attributes":[{"value":"/ A reference to a type, as in: int& foo().","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":780124,"byte_end":780169,"line_start":671,"line_end":671,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4297},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":780309,"byte_end":780330,"line_start":676,"line_end":676,"column_start":5,"column_end":26},"name":"TemplateInstantiation","qualname":"::ir::ty::TypeKind::TemplateInstantiation","value":"TypeKind::TemplateInstantiation(TemplateInstantiation)","parent":{"krate":0,"index":4248},"children":[],"decl_id":null,"docs":" An instantiation of an abstract template definition with a set of\n concrete template arguments.\n","sig":null,"attributes":[{"value":"/ An instantiation of an abstract template definition with a set of","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":780198,"byte_end":780267,"line_start":674,"line_end":674,"column_start":5,"column_end":74}},{"value":"/ concrete template arguments.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":780272,"byte_end":780304,"line_start":675,"line_end":675,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4300},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":780718,"byte_end":780735,"line_start":685,"line_end":685,"column_start":5,"column_end":22},"name":"UnresolvedTypeRef","qualname":"::ir::ty::TypeKind::UnresolvedTypeRef","value":"TypeKind::UnresolvedTypeRef(clang::Type, clang::Cursor, Option<ItemId>)","parent":{"krate":0,"index":4248},"children":[],"decl_id":null,"docs":" A reference to a yet-to-resolve type. This stores the clang cursor\n itself, and postpones its resolution.","sig":null,"attributes":[{"value":"/ A reference to a yet-to-resolve type. This stores the clang cursor","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":780360,"byte_end":780430,"line_start":678,"line_end":678,"column_start":5,"column_end":75}},{"value":"/ itself, and postpones its resolution.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":780435,"byte_end":780476,"line_start":679,"line_end":679,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":780481,"byte_end":780484,"line_start":680,"line_end":680,"column_start":5,"column_end":8}},{"value":"/ These are gone in a phase after parsing where these are mapped to","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":780489,"byte_end":780558,"line_start":681,"line_end":681,"column_start":5,"column_end":74}},{"value":"/ already known types, and are converted to ResolvedTypeRef.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":780563,"byte_end":780625,"line_start":682,"line_end":682,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":780630,"byte_end":780633,"line_start":683,"line_end":683,"column_start":5,"column_end":8}},{"value":"/ see tests/headers/typeref.hpp to see somewhere where this is a problem.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":780638,"byte_end":780713,"line_start":684,"line_end":684,"column_start":5,"column_end":80}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4305},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":781007,"byte_end":781022,"line_start":696,"line_end":696,"column_start":5,"column_end":20},"name":"ResolvedTypeRef","qualname":"::ir::ty::TypeKind::ResolvedTypeRef","value":"TypeKind::ResolvedTypeRef(TypeId)","parent":{"krate":0,"index":4248},"children":[],"decl_id":null,"docs":" An indirection to another type.","sig":null,"attributes":[{"value":"/ An indirection to another type.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":780841,"byte_end":780876,"line_start":692,"line_end":692,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":780881,"byte_end":780884,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ These are generated after we resolve a forward declaration, or when we","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":780889,"byte_end":780963,"line_start":694,"line_end":694,"column_start":5,"column_end":79}},{"value":"/ replace one type with another.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":780968,"byte_end":781002,"line_start":695,"line_end":695,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4308},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":781090,"byte_end":781099,"line_start":699,"line_end":699,"column_start":5,"column_end":14},"name":"TypeParam","qualname":"::ir::ty::TypeKind::TypeParam","value":"TypeKind::TypeParam","parent":{"krate":0,"index":4248},"children":[],"decl_id":null,"docs":" A named type, that is, a template parameter.\n","sig":null,"attributes":[{"value":"/ A named type, that is, a template parameter.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":781037,"byte_end":781085,"line_start":698,"line_end":698,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4310},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":781173,"byte_end":781186,"line_start":702,"line_end":702,"column_start":5,"column_end":18},"name":"ObjCInterface","qualname":"::ir::ty::TypeKind::ObjCInterface","value":"TypeKind::ObjCInterface(ObjCInterface)","parent":{"krate":0,"index":4248},"children":[],"decl_id":null,"docs":" Objective C interface. Always referenced through a pointer\n","sig":null,"attributes":[{"value":"/ Objective C interface. Always referenced through a pointer","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":781106,"byte_end":781168,"line_start":701,"line_end":701,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4313},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":781260,"byte_end":781266,"line_start":705,"line_end":705,"column_start":5,"column_end":11},"name":"ObjCId","qualname":"::ir::ty::TypeKind::ObjCId","value":"TypeKind::ObjCId","parent":{"krate":0,"index":4248},"children":[],"decl_id":null,"docs":" Objective C 'id' type, points to any object\n","sig":null,"attributes":[{"value":"/ Objective C 'id' type, points to any object","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":781208,"byte_end":781255,"line_start":704,"line_end":704,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4315},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":781307,"byte_end":781314,"line_start":708,"line_end":708,"column_start":5,"column_end":12},"name":"ObjCSel","qualname":"::ir::ty::TypeKind::ObjCSel","value":"TypeKind::ObjCSel","parent":{"krate":0,"index":4248},"children":[],"decl_id":null,"docs":" Objective C selector type\n","sig":null,"attributes":[{"value":"/ Objective C selector type","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":781273,"byte_end":781302,"line_start":707,"line_end":707,"column_start":5,"column_end":34}}]},{"kind":"Enum","id":{"krate":0,"index":4248},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":778840,"byte_end":778848,"line_start":620,"line_end":620,"column_start":10,"column_end":18},"name":"TypeKind","qualname":"::ir::ty::TypeKind","value":"pub enum TypeKind {\n\n    /// The void type.\n    Void,\n\n    /// The `nullptr_t` type.\n    NullPtr,\n\n    /// A compound type, that is, a class, struct, or union.\n    Comp(CompInfo),\n\n    /// An opaque type that we just don't understand. All usage of this shoulf\n    /// result in an opaque blob of bytes generated from the containing type's\n    /// layout.\n    Opaque,\n\n    /// An integer type, of a given kind. `bool` and `char` are also considered\n    /// integers.\n    Int(IntKind),\n\n    /// A floating point type.\n    Float(FloatKind),\n\n    /// A complex floating point type.\n    Complex(FloatKind),\n\n    /// A type alias, with a name, that points to another type.\n    Alias(TypeId),\n\n    /// A templated alias, pointing to an inner type, just as `Alias`, but with\n    /// template parameters.\n    TemplateAlias(TypeId, Vec<TypeId>),\n\n    /// A packed vector type: element type, number of elements\n    Vector(TypeId, usize),\n\n    /// An array of a type and a length.\n    Array(TypeId, usize),\n\n    /// A function type, with a given signature.\n    Function(FunctionSig),\n\n    /// An `enum` type.\n    Enum(Enum),\n\n    /// A pointer to a type. The bool field represents whether it's const or\n    /// not.\n    Pointer(TypeId),\n\n    /// A pointer to an Apple block.\n    BlockPointer(TypeId),\n\n    /// A reference to a type, as in: int& foo().\n    Reference(TypeId),\n\n    /// An instantiation of an abstract template definition with a set of\n    /// concrete template arguments.\n    TemplateInstantiation(TemplateInstantiation),\n\n    /// A reference to a yet-to-resolve type. This stores the clang cursor\n    /// itself, and postpones its resolution.\n    ///\n    /// These are gone in a phase after parsing where these are mapped to\n    /// already known types, and are converted to ResolvedTypeRef.\n    ///\n    /// see tests/headers/typeref.hpp to see somewhere where this is a problem.\n    UnresolvedTypeRef(clang::Type, clang::Cursor, Option<ItemId>),\n\n    /// An indirection to another type.\n    ///\n    /// These are generated after we resolve a forward declaration, or when we\n    /// replace one type with another.\n    ResolvedTypeRef(TypeId),\n\n    /// A named type, that is, a template parameter.\n    TypeParam,\n\n    /// Objective C interface. Always referenced through a pointer\n    ObjCInterface(ObjCInterface),\n\n    /// Objective C 'id' type, points to any object\n    ObjCId,\n\n    /// Objective C selector type\n    ObjCSel,\n}","parent":null,"children":[{"krate":0,"index":4249},{"krate":0,"index":4251},{"krate":0,"index":4253},{"krate":0,"index":4256},{"krate":0,"index":4258},{"krate":0,"index":4261},{"krate":0,"index":4264},{"krate":0,"index":4267},{"krate":0,"index":4270},{"krate":0,"index":4274},{"krate":0,"index":4278},{"krate":0,"index":4282},{"krate":0,"index":4285},{"krate":0,"index":4288},{"krate":0,"index":4291},{"krate":0,"index":4294},{"krate":0,"index":4297},{"krate":0,"index":4300},{"krate":0,"index":4305},{"krate":0,"index":4308},{"krate":0,"index":4310},{"krate":0,"index":4313},{"krate":0,"index":4315}],"decl_id":null,"docs":" The different kinds of types that we can parse.\n","sig":null,"attributes":[{"value":"/ The different kinds of types that we can parse.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":778762,"byte_end":778813,"line_start":618,"line_end":618,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2557},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":781637,"byte_end":781650,"line_start":717,"line_end":717,"column_start":12,"column_end":25},"name":"from_clang_ty","qualname":"<Type>::from_clang_ty","value":"pub fn from_clang_ty(ItemId, &clang::Type, Cursor, Option<ItemId>,\n                     &mut BindgenContext)\n-> Result<ParseResult<Self>, ParseError>","parent":null,"children":[],"decl_id":null,"docs":" This is another of the nasty methods. This one is the one that takes\n care of the core logic of converting a clang type to a `Type`.","sig":null,"attributes":[{"value":"/ This is another of the nasty methods. This one is the one that takes","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":781335,"byte_end":781407,"line_start":712,"line_end":712,"column_start":5,"column_end":77}},{"value":"/ care of the core logic of converting a clang type to a `Type`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":781412,"byte_end":781478,"line_start":713,"line_end":713,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":781483,"byte_end":781486,"line_start":714,"line_end":714,"column_start":5,"column_end":8}},{"value":"/ It's sort of nasty and full of special-casing, but hopefully the","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":781491,"byte_end":781559,"line_start":715,"line_end":715,"column_start":5,"column_end":73}},{"value":"/ comments in every special case justify why they're there.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":781564,"byte_end":781625,"line_start":716,"line_end":716,"column_start":5,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4320},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\var.rs","byte_start":807570,"byte_end":807574,"line_start":22,"line_end":22,"column_start":5,"column_end":9},"name":"Bool","qualname":"::ir::var::VarType::Bool","value":"VarType::Bool(bool)","parent":{"krate":0,"index":4319},"children":[],"decl_id":null,"docs":" A boolean.\n","sig":null,"attributes":[{"value":"/ A boolean.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\var.rs","byte_start":807551,"byte_end":807565,"line_start":21,"line_end":21,"column_start":5,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4323},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\var.rs","byte_start":807606,"byte_end":807609,"line_start":24,"line_end":24,"column_start":5,"column_end":8},"name":"Int","qualname":"::ir::var::VarType::Int","value":"VarType::Int(i64)","parent":{"krate":0,"index":4319},"children":[],"decl_id":null,"docs":" An integer.\n","sig":null,"attributes":[{"value":"/ An integer.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\var.rs","byte_start":807586,"byte_end":807601,"line_start":23,"line_end":23,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4326},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\var.rs","byte_start":807653,"byte_end":807658,"line_start":26,"line_end":26,"column_start":5,"column_end":10},"name":"Float","qualname":"::ir::var::VarType::Float","value":"VarType::Float(f64)","parent":{"krate":0,"index":4319},"children":[],"decl_id":null,"docs":" A floating point number.\n","sig":null,"attributes":[{"value":"/ A floating point number.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\var.rs","byte_start":807620,"byte_end":807648,"line_start":25,"line_end":25,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4329},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\var.rs","byte_start":807690,"byte_end":807694,"line_start":28,"line_end":28,"column_start":5,"column_end":9},"name":"Char","qualname":"::ir::var::VarType::Char","value":"VarType::Char(u8)","parent":{"krate":0,"index":4319},"children":[],"decl_id":null,"docs":" A character.\n","sig":null,"attributes":[{"value":"/ A character.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\var.rs","byte_start":807669,"byte_end":807685,"line_start":27,"line_end":27,"column_start":5,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4332},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\var.rs","byte_start":807757,"byte_end":807763,"line_start":30,"line_end":30,"column_start":5,"column_end":11},"name":"String","qualname":"::ir::var::VarType::String","value":"VarType::String(Vec<u8>)","parent":{"krate":0,"index":4319},"children":[],"decl_id":null,"docs":" A string, not necessarily well-formed utf-8.\n","sig":null,"attributes":[{"value":"/ A string, not necessarily well-formed utf-8.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\var.rs","byte_start":807704,"byte_end":807752,"line_start":29,"line_end":29,"column_start":5,"column_end":53}}]},{"kind":"Enum","id":{"krate":0,"index":4319},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\var.rs","byte_start":807537,"byte_end":807544,"line_start":20,"line_end":20,"column_start":10,"column_end":17},"name":"VarType","qualname":"::ir::var::VarType","value":"pub enum VarType {\n\n    /// A boolean.\n    Bool(bool),\n\n    /// An integer.\n    Int(i64),\n\n    /// A floating point number.\n    Float(f64),\n\n    /// A character.\n    Char(u8),\n\n    /// A string, not necessarily well-formed utf-8.\n    String(Vec<u8>),\n}","parent":null,"children":[{"krate":0,"index":4320},{"krate":0,"index":4323},{"krate":0,"index":4326},{"krate":0,"index":4329},{"krate":0,"index":4332}],"decl_id":null,"docs":" The type for a constant variable.\n","sig":null,"attributes":[{"value":"/ The type for a constant variable.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\var.rs","byte_start":807473,"byte_end":807510,"line_start":18,"line_end":18,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":4337},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\var.rs","byte_start":807867,"byte_end":807870,"line_start":35,"line_end":35,"column_start":12,"column_end":15},"name":"Var","qualname":"::ir::var::Var","value":"Var {  }","parent":null,"children":[{"krate":0,"index":4338},{"krate":0,"index":4339},{"krate":0,"index":4340},{"krate":0,"index":4341},{"krate":0,"index":4342}],"decl_id":null,"docs":" A `Var` is our intermediate representation of a variable.\n","sig":null,"attributes":[{"value":"/ A `Var` is our intermediate representation of a variable.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\var.rs","byte_start":807777,"byte_end":807838,"line_start":33,"line_end":33,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2587},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\var.rs","byte_start":808264,"byte_end":808267,"line_start":50,"line_end":50,"column_start":12,"column_end":15},"name":"new","qualname":"<Var>::new","value":"pub fn new(String, Option<String>, TypeId, Option<VarType>, bool) -> Var","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Var`.\n","sig":null,"attributes":[{"value":"/ Construct a new `Var`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\var.rs","byte_start":808226,"byte_end":808252,"line_start":49,"line_end":49,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2588},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\var.rs","byte_start":808638,"byte_end":808646,"line_start":68,"line_end":68,"column_start":12,"column_end":20},"name":"is_const","qualname":"<Var>::is_const","value":"pub fn is_const(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this variable `const` qualified?\n","sig":null,"attributes":[{"value":"/ Is this variable `const` qualified?","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\var.rs","byte_start":808587,"byte_end":808626,"line_start":67,"line_end":67,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2589},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\var.rs","byte_start":808757,"byte_end":808760,"line_start":73,"line_end":73,"column_start":12,"column_end":15},"name":"val","qualname":"<Var>::val","value":"pub fn val(&Self) -> Option<&VarType>","parent":null,"children":[],"decl_id":null,"docs":" The value of this constant variable, if any.\n","sig":null,"attributes":[{"value":"/ The value of this constant variable, if any.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\var.rs","byte_start":808697,"byte_end":808745,"line_start":72,"line_end":72,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2590},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\var.rs","byte_start":808868,"byte_end":808870,"line_start":78,"line_end":78,"column_start":12,"column_end":14},"name":"ty","qualname":"<Var>::ty","value":"pub fn ty(&Self) -> TypeId","parent":null,"children":[],"decl_id":null,"docs":" Get this variable's type.\n","sig":null,"attributes":[{"value":"/ Get this variable's type.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\var.rs","byte_start":808827,"byte_end":808856,"line_start":77,"line_end":77,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":2591},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\var.rs","byte_start":808958,"byte_end":808962,"line_start":83,"line_end":83,"column_start":12,"column_end":16},"name":"name","qualname":"<Var>::name","value":"pub fn name(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Get this variable's name.\n","sig":null,"attributes":[{"value":"/ Get this variable's name.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\var.rs","byte_start":808917,"byte_end":808946,"line_start":82,"line_end":82,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":2592},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\var.rs","byte_start":809059,"byte_end":809071,"line_start":88,"line_end":88,"column_start":12,"column_end":24},"name":"mangled_name","qualname":"<Var>::mangled_name","value":"pub fn mangled_name(&Self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Get this variable's mangled name.\n","sig":null,"attributes":[{"value":"/ Get this variable's mangled name.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\var.rs","byte_start":809010,"byte_end":809047,"line_start":87,"line_end":87,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4346},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\parse.rs","byte_start":819748,"byte_end":819755,"line_start":12,"line_end":12,"column_start":5,"column_end":12},"name":"Recurse","qualname":"::parse::ParseError::Recurse","value":"ParseError::Recurse","parent":{"krate":0,"index":4345},"children":[],"decl_id":null,"docs":" Recurse down the current AST node's children.\n","sig":null,"attributes":[{"value":"/ Recurse down the current AST node's children.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\parse.rs","byte_start":819694,"byte_end":819743,"line_start":11,"line_end":11,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4348},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\parse.rs","byte_start":819915,"byte_end":819923,"line_start":15,"line_end":15,"column_start":5,"column_end":13},"name":"Continue","qualname":"::parse::ParseError::Continue","value":"ParseError::Continue","parent":{"krate":0,"index":4345},"children":[],"decl_id":null,"docs":" Continue on to the next sibling AST node, or back up to the parent's\n siblings if we've exhausted all of this node's siblings (and so on).\n","sig":null,"attributes":[{"value":"/ Continue on to the next sibling AST node, or back up to the parent's","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\parse.rs","byte_start":819761,"byte_end":819833,"line_start":13,"line_end":13,"column_start":5,"column_end":77}},{"value":"/ siblings if we've exhausted all of this node's siblings (and so on).","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\parse.rs","byte_start":819838,"byte_end":819910,"line_start":14,"line_end":14,"column_start":5,"column_end":77}}]},{"kind":"Enum","id":{"krate":0,"index":4345},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\parse.rs","byte_start":819677,"byte_end":819687,"line_start":10,"line_end":10,"column_start":10,"column_end":20},"name":"ParseError","qualname":"::parse::ParseError","value":"pub enum ParseError {\n\n    /// Recurse down the current AST node's children.\n    Recurse,\n\n    /// Continue on to the next sibling AST node, or back up to the parent's\n    /// siblings if we've exhausted all of this node's siblings (and so on).\n    Continue,\n}","parent":null,"children":[{"krate":0,"index":4346},{"krate":0,"index":4348}],"decl_id":null,"docs":" Not so much an error in the traditional sense, but a control flow message\n when walking over Clang's AST with a cursor.\n","sig":null,"attributes":[{"value":"/ Not so much an error in the traditional sense, but a control flow message","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\parse.rs","byte_start":819524,"byte_end":819601,"line_start":7,"line_end":7,"column_start":1,"column_end":78}},{"value":"/ when walking over Clang's AST with a cursor.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\parse.rs","byte_start":819602,"byte_end":819650,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4354},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\parse.rs","byte_start":820112,"byte_end":820127,"line_start":23,"line_end":23,"column_start":5,"column_end":20},"name":"AlreadyResolved","qualname":"::parse::ParseResult::AlreadyResolved","value":"ParseResult::AlreadyResolved(ItemId)","parent":{"krate":0,"index":4352},"children":[],"decl_id":null,"docs":" We've already resolved this item before, here is the extant `ItemId` for\n it.\n","sig":null,"attributes":[{"value":"/ We've already resolved this item before, here is the extant `ItemId` for","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\parse.rs","byte_start":820019,"byte_end":820095,"line_start":21,"line_end":21,"column_start":5,"column_end":81}},{"value":"/ it.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\parse.rs","byte_start":820100,"byte_end":820107,"line_start":22,"line_end":22,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4357},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\parse.rs","byte_start":820270,"byte_end":820273,"line_start":27,"line_end":27,"column_start":5,"column_end":8},"name":"New","qualname":"::parse::ParseResult::New","value":"ParseResult::New(T, Option<clang::Cursor>)","parent":{"krate":0,"index":4352},"children":[],"decl_id":null,"docs":" This is a newly parsed item. If the cursor is `Some`, it points to the\n AST node where the new `T` was declared.\n","sig":null,"attributes":[{"value":"/ This is a newly parsed item. If the cursor is `Some`, it points to the","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\parse.rs","byte_start":820142,"byte_end":820216,"line_start":25,"line_end":25,"column_start":5,"column_end":79}},{"value":"/ AST node where the new `T` was declared.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\parse.rs","byte_start":820221,"byte_end":820265,"line_start":26,"line_end":26,"column_start":5,"column_end":49}}]},{"kind":"Enum","id":{"krate":0,"index":4352},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\parse.rs","byte_start":819998,"byte_end":820009,"line_start":20,"line_end":20,"column_start":10,"column_end":21},"name":"ParseResult","qualname":"::parse::ParseResult","value":"pub enum ParseResult<T> {\n\n    /// We've already resolved this item before, here is the extant `ItemId` for\n    /// it.\n    AlreadyResolved(ItemId),\n\n    /// This is a newly parsed item. If the cursor is `Some`, it points to the\n    /// AST node where the new `T` was declared.\n    New(T, Option<clang::Cursor>),\n}","parent":null,"children":[{"krate":0,"index":4354},{"krate":0,"index":4357}],"decl_id":null,"docs":" The result of parsing a Clang AST node.\n","sig":null,"attributes":[{"value":"/ The result of parsing a Clang AST node.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\parse.rs","byte_start":819928,"byte_end":819971,"line_start":18,"line_end":18,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":4373},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\time.rs","byte_start":825399,"byte_end":825404,"line_start":6,"line_end":6,"column_start":12,"column_end":17},"name":"Timer","qualname":"::time::Timer","value":"Timer {  }","parent":null,"children":[{"krate":0,"index":4375},{"krate":0,"index":4376},{"krate":0,"index":4377}],"decl_id":null,"docs":" RAII timer to measure how long phases take.\n","sig":null,"attributes":[{"value":"/ RAII timer to measure how long phases take.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\time.rs","byte_start":825323,"byte_end":825370,"line_start":4,"line_end":4,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2662},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\time.rs","byte_start":825624,"byte_end":825627,"line_start":15,"line_end":15,"column_start":12,"column_end":15},"name":"new","qualname":"<Timer>::new","value":"pub fn new(&'a str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a Timer with the given name, and starts it. By default,\n will print to stderr when it is `drop`'d\n","sig":null,"attributes":[{"value":"/ Creates a Timer with the given name, and starts it. By default,","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\time.rs","byte_start":825496,"byte_end":825563,"line_start":13,"line_end":13,"column_start":5,"column_end":72}},{"value":"/ will print to stderr when it is `drop`'d","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\time.rs","byte_start":825568,"byte_end":825612,"line_start":14,"line_end":14,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2663},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\time.rs","byte_start":825863,"byte_end":825874,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"name":"with_output","qualname":"<Timer>::with_output","value":"pub fn with_output(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets whether or not the Timer will print a message\n when it is dropped.\n","sig":null,"attributes":[{"value":"/ Sets whether or not the Timer will print a message","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\time.rs","byte_start":825769,"byte_end":825823,"line_start":23,"line_end":23,"column_start":5,"column_end":59}},{"value":"/ when it is dropped.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\time.rs","byte_start":825828,"byte_end":825851,"line_start":24,"line_end":24,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":2664},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\time.rs","byte_start":826030,"byte_end":826037,"line_start":31,"line_end":31,"column_start":12,"column_end":19},"name":"elapsed","qualname":"<Timer>::elapsed","value":"pub fn elapsed(&Self) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the time elapsed since the timer's creation\n","sig":null,"attributes":[{"value":"/ Returns the time elapsed since the timer's creation","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\time.rs","byte_start":825963,"byte_end":826018,"line_start":30,"line_end":30,"column_start":5,"column_end":60}}]},{"kind":"Mod","id":{"krate":0,"index":2669},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\callbacks.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"callbacks","qualname":"::callbacks","value":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\callbacks.rs","parent":null,"children":[{"krate":0,"index":2670},{"krate":0,"index":2671},{"krate":0,"index":2672},{"krate":0,"index":2673},{"krate":0,"index":2674},{"krate":0,"index":2675},{"krate":0,"index":4381},{"krate":0,"index":4396},{"krate":0,"index":4394},{"krate":0,"index":4392},{"krate":0,"index":4389},{"krate":0,"index":4390},{"krate":0,"index":4386},{"krate":0,"index":4387},{"krate":0,"index":2676},{"krate":0,"index":2678}],"decl_id":null,"docs":" A public API for more fine-grained customization of bindgen behavior.\n","sig":null,"attributes":[{"value":"/ A public API for more fine-grained customization of bindgen behavior.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\callbacks.rs","byte_start":826663,"byte_end":826736,"line_start":1,"line_end":1,"column_start":1,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4382},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\callbacks.rs","byte_start":827112,"byte_end":827118,"line_start":13,"line_end":13,"column_start":5,"column_end":11},"name":"Ignore","qualname":"::callbacks::MacroParsingBehavior::Ignore","value":"MacroParsingBehavior::Ignore","parent":{"krate":0,"index":4381},"children":[],"decl_id":null,"docs":" Ignore the macro, generating no code for it, or anything that depends on\n it.\n","sig":null,"attributes":[{"value":"/ Ignore the macro, generating no code for it, or anything that depends on","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\callbacks.rs","byte_start":827019,"byte_end":827095,"line_start":11,"line_end":11,"column_start":5,"column_end":81}},{"value":"/ it.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\callbacks.rs","byte_start":827100,"byte_end":827107,"line_start":12,"line_end":12,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4384},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\callbacks.rs","byte_start":827183,"byte_end":827190,"line_start":15,"line_end":15,"column_start":5,"column_end":12},"name":"Default","qualname":"::callbacks::MacroParsingBehavior::Default","value":"MacroParsingBehavior::Default","parent":{"krate":0,"index":4381},"children":[],"decl_id":null,"docs":" The default behavior bindgen would have otherwise.\n","sig":null,"attributes":[{"value":"/ The default behavior bindgen would have otherwise.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\callbacks.rs","byte_start":827124,"byte_end":827178,"line_start":14,"line_end":14,"column_start":5,"column_end":59}}]},{"kind":"Enum","id":{"krate":0,"index":4381},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\callbacks.rs","byte_start":826992,"byte_end":827012,"line_start":10,"line_end":10,"column_start":10,"column_end":30},"name":"MacroParsingBehavior","qualname":"::callbacks::MacroParsingBehavior","value":"pub enum MacroParsingBehavior {\n\n    /// Ignore the macro, generating no code for it, or anything that depends on\n    /// it.\n    Ignore,\n\n    /// The default behavior bindgen would have otherwise.\n    Default,\n}","parent":null,"children":[{"krate":0,"index":4382},{"krate":0,"index":4384}],"decl_id":null,"docs":" An enum to allow ignoring parsing of macros.\n","sig":null,"attributes":[{"value":"/ An enum to allow ignoring parsing of macros.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\callbacks.rs","byte_start":826889,"byte_end":826937,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":2678},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\callbacks.rs","byte_start":827406,"byte_end":827420,"line_start":26,"line_end":26,"column_start":11,"column_end":25},"name":"ParseCallbacks","qualname":"::callbacks::ParseCallbacks","value":"ParseCallbacks: fmt::Debug + UnwindSafe","parent":null,"children":[{"krate":0,"index":2679},{"krate":0,"index":2680},{"krate":0,"index":2681},{"krate":0,"index":2682},{"krate":0,"index":2683},{"krate":0,"index":2684},{"krate":0,"index":2685}],"decl_id":null,"docs":" A trait to allow configuring different kinds of types in different\n situations.\n","sig":null,"attributes":[{"value":"/ A trait to allow configuring different kinds of types in different","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\callbacks.rs","byte_start":827309,"byte_end":827379,"line_start":24,"line_end":24,"column_start":1,"column_end":71}},{"value":"/ situations.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\callbacks.rs","byte_start":827380,"byte_end":827395,"line_start":25,"line_end":25,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2679},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\callbacks.rs","byte_start":827524,"byte_end":827540,"line_start":28,"line_end":28,"column_start":8,"column_end":24},"name":"will_parse_macro","qualname":"::callbacks::ParseCallbacks::will_parse_macro","value":"pub fn will_parse_macro(&Self, &str) -> MacroParsingBehavior","parent":{"krate":0,"index":2678},"children":[],"decl_id":null,"docs":" This function will be run on every macro that is identified.\n","sig":null,"attributes":[{"value":"/ This function will be run on every macro that is identified.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\callbacks.rs","byte_start":827452,"byte_end":827516,"line_start":27,"line_end":27,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2680},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\callbacks.rs","byte_start":827792,"byte_end":827801,"line_start":34,"line_end":34,"column_start":8,"column_end":17},"name":"int_macro","qualname":"::callbacks::ParseCallbacks::int_macro","value":"pub fn int_macro(&Self, &str, i64) -> Option<IntKind>","parent":{"krate":0,"index":2678},"children":[],"decl_id":null,"docs":" The integer kind an integer macro should have, given a name and the\n value of that macro, or `None` if you want the default to be chosen.\n","sig":null,"attributes":[{"value":"/ The integer kind an integer macro should have, given a name and the","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\callbacks.rs","byte_start":827636,"byte_end":827707,"line_start":32,"line_end":32,"column_start":5,"column_end":76}},{"value":"/ value of that macro, or `None` if you want the default to be chosen.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\callbacks.rs","byte_start":827712,"byte_end":827784,"line_start":33,"line_end":33,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2681},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\callbacks.rs","byte_start":828074,"byte_end":828083,"line_start":40,"line_end":40,"column_start":8,"column_end":17},"name":"str_macro","qualname":"::callbacks::ParseCallbacks::str_macro","value":"pub fn str_macro(&Self, &str, &[u8])","parent":{"krate":0,"index":2678},"children":[],"decl_id":null,"docs":" This will be run on every string macro. The callback can not influence the further\n treatment of the macro, but may use the value to generate additional code or configuration.\n","sig":null,"attributes":[{"value":"/ This will be run on every string macro. The callback can not influence the further","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\callbacks.rs","byte_start":827880,"byte_end":827966,"line_start":38,"line_end":38,"column_start":5,"column_end":91}},{"value":"/ treatment of the macro, but may use the value to generate additional code or configuration.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\callbacks.rs","byte_start":827971,"byte_end":828066,"line_start":39,"line_end":39,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":2682},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\callbacks.rs","byte_start":828269,"byte_end":828290,"line_start":44,"line_end":44,"column_start":8,"column_end":29},"name":"enum_variant_behavior","qualname":"::callbacks::ParseCallbacks::enum_variant_behavior","value":"pub fn enum_variant_behavior(&Self, Option<&str>, &str, EnumVariantValue)\n-> Option<EnumVariantCustomBehavior>","parent":{"krate":0,"index":2678},"children":[],"decl_id":null,"docs":" This function should return whether, given an enum variant\n name, and value, this enum variant will forcibly be a constant.\n","sig":null,"attributes":[{"value":"/ This function should return whether, given an enum variant","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\callbacks.rs","byte_start":828127,"byte_end":828189,"line_start":42,"line_end":42,"column_start":5,"column_end":67}},{"value":"/ name, and value, this enum variant will forcibly be a constant.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\callbacks.rs","byte_start":828194,"byte_end":828261,"line_start":43,"line_end":43,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":2683},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\callbacks.rs","byte_start":828571,"byte_end":828588,"line_start":54,"line_end":54,"column_start":8,"column_end":25},"name":"enum_variant_name","qualname":"::callbacks::ParseCallbacks::enum_variant_name","value":"pub fn enum_variant_name(&Self, Option<&str>, &str, EnumVariantValue)\n-> Option<String>","parent":{"krate":0,"index":2678},"children":[],"decl_id":null,"docs":" Allows to rename an enum variant, replacing `_original_variant_name`.\n","sig":null,"attributes":[{"value":"/ Allows to rename an enum variant, replacing `_original_variant_name`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\callbacks.rs","byte_start":828490,"byte_end":828563,"line_start":53,"line_end":53,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":2684},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\callbacks.rs","byte_start":828839,"byte_end":828848,"line_start":64,"line_end":64,"column_start":8,"column_end":17},"name":"item_name","qualname":"::callbacks::ParseCallbacks::item_name","value":"pub fn item_name(&Self, &str) -> Option<String>","parent":{"krate":0,"index":2678},"children":[],"decl_id":null,"docs":" Allows to rename an item, replacing `_original_item_name`.\n","sig":null,"attributes":[{"value":"/ Allows to rename an item, replacing `_original_item_name`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\callbacks.rs","byte_start":828769,"byte_end":828831,"line_start":63,"line_end":63,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2685},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\callbacks.rs","byte_start":829024,"byte_end":829036,"line_start":69,"line_end":69,"column_start":8,"column_end":20},"name":"include_file","qualname":"::callbacks::ParseCallbacks::include_file","value":"pub fn include_file(&Self, &str)","parent":{"krate":0,"index":2678},"children":[],"decl_id":null,"docs":" This will be called on every file inclusion, with the full path of the included file.\n","sig":null,"attributes":[{"value":"/ This will be called on every file inclusion, with the full path of the included file.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\callbacks.rs","byte_start":828927,"byte_end":829016,"line_start":68,"line_end":68,"column_start":5,"column_end":94}}]},{"kind":"Struct","id":{"krate":0,"index":4397},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":2966,"byte_end":2979,"line_start":105,"line_end":105,"column_start":16,"column_end":29},"name":"CodegenConfig","qualname":"::CodegenConfig","value":"CodegenConfig {  }","parent":null,"children":[{"krate":0,"index":4398}],"decl_id":null,"docs":" A type used to indicate which kind of items we have to generate.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4439},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":3044,"byte_end":3053,"line_start":107,"line_end":107,"column_start":15,"column_end":24},"name":"FUNCTIONS","qualname":"::CodegenConfig::FUNCTIONS","value":"CodegenConfig","parent":{"krate":0,"index":4438},"children":[],"decl_id":null,"docs":" Whether to generate functions.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4440},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":3117,"byte_end":3122,"line_start":109,"line_end":109,"column_start":15,"column_end":20},"name":"TYPES","qualname":"::CodegenConfig::TYPES","value":"CodegenConfig","parent":{"krate":0,"index":4438},"children":[],"decl_id":null,"docs":" Whether to generate types.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4441},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":3190,"byte_end":3194,"line_start":111,"line_end":111,"column_start":15,"column_end":19},"name":"VARS","qualname":"::CodegenConfig::VARS","value":"CodegenConfig","parent":{"krate":0,"index":4438},"children":[],"decl_id":null,"docs":" Whether to generate constants.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4442},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":3260,"byte_end":3267,"line_start":113,"line_end":113,"column_start":15,"column_end":22},"name":"METHODS","qualname":"::CodegenConfig::METHODS","value":"CodegenConfig","parent":{"krate":0,"index":4438},"children":[],"decl_id":null,"docs":" Whether to generate methods.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4443},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":3337,"byte_end":3349,"line_start":115,"line_end":115,"column_start":15,"column_end":27},"name":"CONSTRUCTORS","qualname":"::CodegenConfig::CONSTRUCTORS","value":"CodegenConfig","parent":{"krate":0,"index":4438},"children":[],"decl_id":null,"docs":" Whether to generate constructors\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4444},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":3419,"byte_end":3430,"line_start":117,"line_end":117,"column_start":15,"column_end":26},"name":"DESTRUCTORS","qualname":"::CodegenConfig::DESTRUCTORS","value":"CodegenConfig","parent":{"krate":0,"index":4438},"children":[],"decl_id":null,"docs":" Whether to generate destructors.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2727},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":3537,"byte_end":3546,"line_start":123,"line_end":123,"column_start":12,"column_end":21},"name":"functions","qualname":"<CodegenConfig>::functions","value":"pub fn functions(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if functions should be generated.\n","sig":null,"attributes":[{"value":"/ Returns true if functions should be generated.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":3475,"byte_end":3525,"line_start":122,"line_end":122,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2728},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":3680,"byte_end":3685,"line_start":128,"line_end":128,"column_start":12,"column_end":17},"name":"types","qualname":"<CodegenConfig>::types","value":"pub fn types(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if types should be generated.\n","sig":null,"attributes":[{"value":"/ Returns true if types should be generated.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":3622,"byte_end":3668,"line_start":127,"line_end":127,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2729},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":3819,"byte_end":3823,"line_start":133,"line_end":133,"column_start":12,"column_end":16},"name":"vars","qualname":"<CodegenConfig>::vars","value":"pub fn vars(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if constants should be generated.\n","sig":null,"attributes":[{"value":"/ Returns true if constants should be generated.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":3757,"byte_end":3807,"line_start":132,"line_end":132,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2730},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":3953,"byte_end":3960,"line_start":138,"line_end":138,"column_start":12,"column_end":19},"name":"methods","qualname":"<CodegenConfig>::methods","value":"pub fn methods(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if methds should be generated.\n","sig":null,"attributes":[{"value":"/ Returns true if methds should be generated.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":3894,"byte_end":3941,"line_start":137,"line_end":137,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2731},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":4099,"byte_end":4111,"line_start":143,"line_end":143,"column_start":12,"column_end":24},"name":"constructors","qualname":"<CodegenConfig>::constructors","value":"pub fn constructors(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if constructors should be generated.\n","sig":null,"attributes":[{"value":"/ Returns true if constructors should be generated.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":4034,"byte_end":4087,"line_start":142,"line_end":142,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2732},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":4254,"byte_end":4265,"line_start":148,"line_end":148,"column_start":12,"column_end":23},"name":"destructors","qualname":"<CodegenConfig>::destructors","value":"pub fn destructors(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if destructors should be generated.\n","sig":null,"attributes":[{"value":"/ Returns true if destructors should be generated.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":4190,"byte_end":4242,"line_start":147,"line_end":147,"column_start":5,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":4508},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":5630,"byte_end":5637,"line_start":195,"line_end":195,"column_start":12,"column_end":19},"name":"Builder","qualname":"::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":4509},{"krate":0,"index":4510},{"krate":0,"index":4511}],"decl_id":null,"docs":" Configure and generate Rust bindings for a C/C++ header.","sig":null,"attributes":[{"value":"/ Configure and generate Rust bindings for a C/C++ header.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":4439,"byte_end":4499,"line_start":159,"line_end":159,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":4500,"byte_end":4503,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ This is the main entry point to the library.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":4504,"byte_end":4552,"line_start":161,"line_end":161,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":4553,"byte_end":4556,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":4557,"byte_end":4570,"line_start":163,"line_end":163,"column_start":1,"column_end":14}},{"value":"/ use bindgen::builder;","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":4571,"byte_end":4596,"line_start":164,"line_end":164,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":4597,"byte_end":4600,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ // Configure and generate bindings.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":4601,"byte_end":4640,"line_start":166,"line_end":166,"column_start":1,"column_end":40}},{"value":"/ let bindings = builder().header(\"path/to/input/header\")","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":4641,"byte_end":4700,"line_start":167,"line_end":167,"column_start":1,"column_end":60}},{"value":"/     .whitelist_type(\"SomeCoolClass\")","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":4701,"byte_end":4741,"line_start":168,"line_end":168,"column_start":1,"column_end":41}},{"value":"/     .whitelist_function(\"do_some_cool_thing\")","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":4742,"byte_end":4791,"line_start":169,"line_end":169,"column_start":1,"column_end":50}},{"value":"/     .generate()?;","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":4792,"byte_end":4813,"line_start":170,"line_end":170,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":4814,"byte_end":4817,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ // Write the generated bindings to an output file.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":4818,"byte_end":4872,"line_start":172,"line_end":172,"column_start":1,"column_end":55}},{"value":"/ bindings.write_to_file(\"path/to/output.rs\")?;","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":4873,"byte_end":4922,"line_start":173,"line_end":173,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":4923,"byte_end":4930,"line_start":174,"line_end":174,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":4931,"byte_end":4934,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ # Enums","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":4935,"byte_end":4946,"line_start":176,"line_end":176,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":4947,"byte_end":4950,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ Bindgen can map C/C++ enums into Rust in different ways. The way bindgen maps enums depends on","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":4951,"byte_end":5049,"line_start":178,"line_end":178,"column_start":1,"column_end":99}},{"value":"/ the pattern passed to several methods:","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":5050,"byte_end":5092,"line_start":179,"line_end":179,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":5093,"byte_end":5096,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ 1. [`constified_enum_module()`](#method.constified_enum_module)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":5097,"byte_end":5164,"line_start":181,"line_end":181,"column_start":1,"column_end":68}},{"value":"/ 2. [`bitfield_enum()`](#method.bitfield_enum)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":5165,"byte_end":5214,"line_start":182,"line_end":182,"column_start":1,"column_end":50}},{"value":"/ 3. [`newtype_enum()`](#method.newtype_enum)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":5215,"byte_end":5262,"line_start":183,"line_end":183,"column_start":1,"column_end":48}},{"value":"/ 4. [`rustified_enum()`](#method.rustified_enum)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":5263,"byte_end":5314,"line_start":184,"line_end":184,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":5315,"byte_end":5318,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ For each C enum, bindgen tries to match the pattern in the following order:","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":5319,"byte_end":5398,"line_start":186,"line_end":186,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":5399,"byte_end":5402,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ 1. Constified enum module","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":5403,"byte_end":5432,"line_start":188,"line_end":188,"column_start":1,"column_end":30}},{"value":"/ 2. Bitfield enum","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":5433,"byte_end":5453,"line_start":189,"line_end":189,"column_start":1,"column_end":21}},{"value":"/ 3. Newtype enum","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":5454,"byte_end":5473,"line_start":190,"line_end":190,"column_start":1,"column_end":20}},{"value":"/ 4. Rustified enum","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":5474,"byte_end":5495,"line_start":191,"line_end":191,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":5496,"byte_end":5499,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ If none of the above patterns match, then bindgen will generate a set of Rust constants.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":5500,"byte_end":5592,"line_start":193,"line_end":193,"column_start":1,"column_end":93}}]},{"kind":"Function","id":{"krate":0,"index":2735},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":5886,"byte_end":5893,"line_start":203,"line_end":203,"column_start":8,"column_end":15},"name":"builder","qualname":"::builder","value":"pub fn builder() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Construct a new [`Builder`](./struct.Builder.html).\n","sig":null,"attributes":[{"value":"/ Construct a new [`Builder`](./struct.Builder.html).","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":5823,"byte_end":5878,"line_start":202,"line_end":202,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2737},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":6030,"byte_end":6048,"line_start":209,"line_end":209,"column_start":12,"column_end":30},"name":"command_line_flags","qualname":"<Builder>::command_line_flags","value":"pub fn command_line_flags(&Self) -> Vec<String>","parent":null,"children":[],"decl_id":null,"docs":" Generates the command line flags use for creating `Builder`.\n","sig":null,"attributes":[{"value":"/ Generates the command line flags use for creating `Builder`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":5954,"byte_end":6018,"line_start":208,"line_end":208,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2759},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":20024,"byte_end":20030,"line_start":672,"line_end":672,"column_start":12,"column_end":18},"name":"header","qualname":"<Builder>::header","value":"pub fn header<T: Into<String>>(Self, T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Add an input C/C++ header to generate bindings for.","sig":null,"attributes":[{"value":"/ Add an input C/C++ header to generate bindings for.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":19384,"byte_end":19439,"line_start":650,"line_end":650,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":19444,"byte_end":19447,"line_start":651,"line_end":651,"column_start":5,"column_end":8}},{"value":"/ This can be used to generate bindings to a single header:","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":19452,"byte_end":19513,"line_start":652,"line_end":652,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":19518,"byte_end":19521,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":19526,"byte_end":19539,"line_start":654,"line_end":654,"column_start":5,"column_end":18}},{"value":"/ let bindings = bindgen::Builder::default()","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":19544,"byte_end":19590,"line_start":655,"line_end":655,"column_start":5,"column_end":51}},{"value":"/     .header(\"input.h\")","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":19595,"byte_end":19621,"line_start":656,"line_end":656,"column_start":5,"column_end":31}},{"value":"/     .generate()","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":19626,"byte_end":19645,"line_start":657,"line_end":657,"column_start":5,"column_end":24}},{"value":"/     .unwrap();","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":19650,"byte_end":19668,"line_start":658,"line_end":658,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":19673,"byte_end":19680,"line_start":659,"line_end":659,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":19685,"byte_end":19688,"line_start":660,"line_end":660,"column_start":5,"column_end":8}},{"value":"/ Or you can invoke it multiple times to generate bindings to multiple","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":19693,"byte_end":19765,"line_start":661,"line_end":661,"column_start":5,"column_end":77}},{"value":"/ headers:","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":19770,"byte_end":19782,"line_start":662,"line_end":662,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":19787,"byte_end":19790,"line_start":663,"line_end":663,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":19795,"byte_end":19808,"line_start":664,"line_end":664,"column_start":5,"column_end":18}},{"value":"/ let bindings = bindgen::Builder::default()","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":19813,"byte_end":19859,"line_start":665,"line_end":665,"column_start":5,"column_end":51}},{"value":"/     .header(\"first.h\")","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":19864,"byte_end":19890,"line_start":666,"line_end":666,"column_start":5,"column_end":31}},{"value":"/     .header(\"second.h\")","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":19895,"byte_end":19922,"line_start":667,"line_end":667,"column_start":5,"column_end":32}},{"value":"/     .header(\"third.h\")","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":19927,"byte_end":19953,"line_start":668,"line_end":668,"column_start":5,"column_end":31}},{"value":"/     .generate()","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":19958,"byte_end":19977,"line_start":669,"line_end":669,"column_start":5,"column_end":24}},{"value":"/     .unwrap();","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":19982,"byte_end":20000,"line_start":670,"line_end":670,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":20005,"byte_end":20012,"line_start":671,"line_end":671,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2761},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":20293,"byte_end":20308,"line_start":680,"line_end":680,"column_start":12,"column_end":27},"name":"header_contents","qualname":"<Builder>::header_contents","value":"pub fn header_contents(Self, &str, &str) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Add `contents` as an input C/C++ header named `name`.","sig":null,"attributes":[{"value":"/ Add `contents` as an input C/C++ header named `name`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":20154,"byte_end":20211,"line_start":677,"line_end":677,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":20216,"byte_end":20219,"line_start":678,"line_end":678,"column_start":5,"column_end":8}},{"value":"/ The file `name` will be added to the clang arguments.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":20224,"byte_end":20281,"line_start":679,"line_end":679,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2762},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":20571,"byte_end":20582,"line_start":689,"line_end":689,"column_start":12,"column_end":23},"name":"rust_target","qualname":"<Builder>::rust_target","value":"pub fn rust_target(Self, RustTarget) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the rust target","sig":null,"attributes":[{"value":"/ Specify the rust target","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":20470,"byte_end":20497,"line_start":686,"line_end":686,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":20502,"byte_end":20505,"line_start":687,"line_end":687,"column_start":5,"column_end":8}},{"value":"/ The default is the latest stable Rust version","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":20510,"byte_end":20559,"line_start":688,"line_end":688,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2763},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":20772,"byte_end":20794,"line_start":695,"line_end":695,"column_start":12,"column_end":34},"name":"disable_untagged_union","qualname":"<Builder>::disable_untagged_union","value":"pub fn disable_untagged_union(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Disable support for native Rust unions, if supported.\n","sig":null,"attributes":[{"value":"/ Disable support for native Rust unions, if supported.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":20703,"byte_end":20760,"line_start":694,"line_end":694,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2764},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":20943,"byte_end":20959,"line_start":701,"line_end":701,"column_start":12,"column_end":28},"name":"emit_ir_graphviz","qualname":"<Builder>::emit_ir_graphviz","value":"pub fn emit_ir_graphviz<T: Into<String>>(Self, T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Set the output graphviz file.\n","sig":null,"attributes":[{"value":"/ Set the output graphviz file.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":20898,"byte_end":20931,"line_start":700,"line_end":700,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2766},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":21969,"byte_end":21986,"line_start":722,"line_end":722,"column_start":12,"column_end":29},"name":"generate_comments","qualname":"<Builder>::generate_comments","value":"pub fn generate_comments(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Whether the generated bindings should contain documentation comments\n (docstrings) or not.","sig":null,"attributes":[{"value":"/ Whether the generated bindings should contain documentation comments","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":21117,"byte_end":21189,"line_start":707,"line_end":707,"column_start":5,"column_end":77}},{"value":"/ (docstrings) or not.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":21194,"byte_end":21218,"line_start":708,"line_end":708,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":21223,"byte_end":21226,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ This ideally will always be true, but it may need to be false until we","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":21231,"byte_end":21305,"line_start":710,"line_end":710,"column_start":5,"column_end":79}},{"value":"/ implement some processing on comments to work around issues as described","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":21310,"byte_end":21386,"line_start":711,"line_end":711,"column_start":5,"column_end":81}},{"value":"/ in [rust-bindgen issue","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":21391,"byte_end":21417,"line_start":712,"line_end":712,"column_start":5,"column_end":31}},{"value":"/ #426](https://github.com/rust-lang/rust-bindgen/issues/426).","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":21422,"byte_end":21486,"line_start":713,"line_end":713,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":21491,"byte_end":21494,"line_start":714,"line_end":714,"column_start":5,"column_end":8}},{"value":"/ Note that clang by default excludes comments from system headers, pass","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":21499,"byte_end":21573,"line_start":715,"line_end":715,"column_start":5,"column_end":79}},{"value":"/ `-fretain-comments-from-system-headers` as","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":21578,"byte_end":21624,"line_start":716,"line_end":716,"column_start":5,"column_end":51}},{"value":"/ [`clang_arg`][Builder::clang_arg] to include them. It can also be told","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":21629,"byte_end":21703,"line_start":717,"line_end":717,"column_start":5,"column_end":79}},{"value":"/ to process all comments (not just documentation ones) using the","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":21708,"byte_end":21775,"line_start":718,"line_end":718,"column_start":5,"column_end":72}},{"value":"/ `-fparse-all-comments` flag. See [slides on clang comment parsing](","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":21780,"byte_end":21851,"line_start":719,"line_end":719,"column_start":5,"column_end":76}},{"value":"/ https://llvm.org/devmtg/2012-11/Gribenko_CommentParsing.pdf) for","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":21856,"byte_end":21924,"line_start":720,"line_end":720,"column_start":5,"column_end":73}},{"value":"/ background and examples.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":21929,"byte_end":21957,"line_start":721,"line_end":721,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2767},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":23470,"byte_end":23491,"line_start":754,"line_end":754,"column_start":12,"column_end":33},"name":"whitelist_recursively","qualname":"<Builder>::whitelist_recursively","value":"pub fn whitelist_recursively(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Whether to whitelist recursively or not. Defaults to true.","sig":null,"attributes":[{"value":"/ Whether to whitelist recursively or not. Defaults to true.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":22090,"byte_end":22152,"line_start":727,"line_end":727,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":22157,"byte_end":22160,"line_start":728,"line_end":728,"column_start":5,"column_end":8}},{"value":"/ Given that we have explicitly whitelisted the \"initiate_dance_party\"","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":22165,"byte_end":22237,"line_start":729,"line_end":729,"column_start":5,"column_end":77}},{"value":"/ function in this C header:","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":22242,"byte_end":22272,"line_start":730,"line_end":730,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":22277,"byte_end":22280,"line_start":731,"line_end":731,"column_start":5,"column_end":8}},{"value":"/ ```c","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":22285,"byte_end":22293,"line_start":732,"line_end":732,"column_start":5,"column_end":13}},{"value":"/ typedef struct MoonBoots {","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":22298,"byte_end":22328,"line_start":733,"line_end":733,"column_start":5,"column_end":35}},{"value":"/     int bouncy_level;","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":22333,"byte_end":22358,"line_start":734,"line_end":734,"column_start":5,"column_end":30}},{"value":"/ } MoonBoots;","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":22363,"byte_end":22379,"line_start":735,"line_end":735,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":22384,"byte_end":22387,"line_start":736,"line_end":736,"column_start":5,"column_end":8}},{"value":"/ void initiate_dance_party(MoonBoots* boots);","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":22392,"byte_end":22440,"line_start":737,"line_end":737,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":22445,"byte_end":22452,"line_start":738,"line_end":738,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":22457,"byte_end":22460,"line_start":739,"line_end":739,"column_start":5,"column_end":8}},{"value":"/ We would normally generate bindings to both the `initiate_dance_party`","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":22465,"byte_end":22539,"line_start":740,"line_end":740,"column_start":5,"column_end":79}},{"value":"/ function and the `MoonBoots` struct that it transitively references. By","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":22544,"byte_end":22619,"line_start":741,"line_end":741,"column_start":5,"column_end":80}},{"value":"/ configuring with `whitelist_recursively(false)`, `bindgen` will not emit","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":22624,"byte_end":22700,"line_start":742,"line_end":742,"column_start":5,"column_end":81}},{"value":"/ bindings for anything except the explicitly whitelisted items, and there","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":22705,"byte_end":22781,"line_start":743,"line_end":743,"column_start":5,"column_end":81}},{"value":"/ would be no emitted struct definition for `MoonBoots`. However, the","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":22786,"byte_end":22857,"line_start":744,"line_end":744,"column_start":5,"column_end":76}},{"value":"/ `initiate_dance_party` function would still reference `MoonBoots`!","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":22862,"byte_end":22932,"line_start":745,"line_end":745,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":22937,"byte_end":22940,"line_start":746,"line_end":746,"column_start":5,"column_end":8}},{"value":"/ **Disabling this feature will almost certainly cause `bindgen` to emit","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":22945,"byte_end":23019,"line_start":747,"line_end":747,"column_start":5,"column_end":79}},{"value":"/ bindings that will not compile!** If you disable this feature, then it","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":23024,"byte_end":23098,"line_start":748,"line_end":748,"column_start":5,"column_end":79}},{"value":"/ is *your* responsibility to provide definitions for every type that is","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":23103,"byte_end":23177,"line_start":749,"line_end":749,"column_start":5,"column_end":79}},{"value":"/ referenced from an explicitly whitelisted item. One way to provide the","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":23182,"byte_end":23256,"line_start":750,"line_end":750,"column_start":5,"column_end":79}},{"value":"/ definitions is by using the [`Builder::raw_line`](#method.raw_line)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":23261,"byte_end":23332,"line_start":751,"line_end":751,"column_start":5,"column_end":76}},{"value":"/ method, another would be to define them in Rust and then `include!(...)`","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":23337,"byte_end":23413,"line_start":752,"line_end":752,"column_start":5,"column_end":81}},{"value":"/ the bindings immediately afterwards.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":23418,"byte_end":23458,"line_start":753,"line_end":753,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2768},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":23750,"byte_end":23767,"line_start":761,"line_end":761,"column_start":12,"column_end":29},"name":"objc_extern_crate","qualname":"<Builder>::objc_extern_crate","value":"pub fn objc_extern_crate(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Generate `#[macro_use] extern crate objc;` instead of `use objc;`\n in the prologue of the files generated from objective-c files\n","sig":null,"attributes":[{"value":"/ Generate `#[macro_use] extern crate objc;` instead of `use objc;`","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":23599,"byte_end":23668,"line_start":759,"line_end":759,"column_start":5,"column_end":74}},{"value":"/ in the prologue of the files generated from objective-c files","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":23673,"byte_end":23738,"line_start":760,"line_end":760,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2769},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":23945,"byte_end":23959,"line_start":767,"line_end":767,"column_start":12,"column_end":26},"name":"generate_block","qualname":"<Builder>::generate_block","value":"pub fn generate_block(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Generate proper block signatures instead of void pointers.\n","sig":null,"attributes":[{"value":"/ Generate proper block signatures instead of void pointers.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":23871,"byte_end":23933,"line_start":766,"line_end":766,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2770},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":24213,"byte_end":24231,"line_start":774,"line_end":774,"column_start":12,"column_end":30},"name":"block_extern_crate","qualname":"<Builder>::block_extern_crate","value":"pub fn block_extern_crate(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Generate `#[macro_use] extern crate block;` instead of `use block;`\n in the prologue of the files generated from apple block files\n","sig":null,"attributes":[{"value":"/ Generate `#[macro_use] extern crate block;` instead of `use block;`","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":24060,"byte_end":24131,"line_start":772,"line_end":772,"column_start":5,"column_end":76}},{"value":"/ in the prologue of the files generated from apple block files","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":24136,"byte_end":24201,"line_start":773,"line_end":773,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2771},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":24713,"byte_end":24733,"line_start":786,"line_end":786,"column_start":12,"column_end":32},"name":"trust_clang_mangling","qualname":"<Builder>::trust_clang_mangling","value":"pub fn trust_clang_mangling(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Whether to use the clang-provided name mangling. This is true by default\n and probably needed for C++ features.","sig":null,"attributes":[{"value":"/ Whether to use the clang-provided name mangling. This is true by default","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":24336,"byte_end":24412,"line_start":779,"line_end":779,"column_start":5,"column_end":81}},{"value":"/ and probably needed for C++ features.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":24417,"byte_end":24458,"line_start":780,"line_end":780,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":24463,"byte_end":24466,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ However, some old libclang versions seem to return incorrect results in","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":24471,"byte_end":24546,"line_start":782,"line_end":782,"column_start":5,"column_end":80}},{"value":"/ some cases for non-mangled functions, see [1], so we allow disabling it.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":24551,"byte_end":24627,"line_start":783,"line_end":783,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":24632,"byte_end":24635,"line_start":784,"line_end":784,"column_start":5,"column_end":8}},{"value":"/ [1]: https://github.com/rust-lang/rust-bindgen/issues/528","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":24640,"byte_end":24701,"line_start":785,"line_end":785,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2772},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":24997,"byte_end":25006,"line_start":794,"line_end":794,"column_start":12,"column_end":21},"name":"hide_type","qualname":"<Builder>::hide_type","value":"pub fn hide_type<T: AsRef<str>>(Self, T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Hide the given type from the generated bindings. Regular expressions are\n supported.\n","sig":null,"attributes":[{"value":"/ Hide the given type from the generated bindings. Regular expressions are","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":24835,"byte_end":24911,"line_start":791,"line_end":791,"column_start":5,"column_end":81}},{"value":"/ supported.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":24916,"byte_end":24930,"line_start":792,"line_end":792,"column_start":5,"column_end":19}},{"value":"deprecated(note = \"Use blacklist_type instead\")","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":24935,"byte_end":24985,"line_start":793,"line_end":793,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2774},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":25375,"byte_end":25389,"line_start":804,"line_end":804,"column_start":12,"column_end":26},"name":"blacklist_type","qualname":"<Builder>::blacklist_type","value":"pub fn blacklist_type<T: AsRef<str>>(Self, T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Hide the given type from the generated bindings. Regular expressions are\n supported.","sig":null,"attributes":[{"value":"/ Hide the given type from the generated bindings. Regular expressions are","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":25093,"byte_end":25169,"line_start":798,"line_end":798,"column_start":5,"column_end":81}},{"value":"/ supported.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":25174,"byte_end":25188,"line_start":799,"line_end":799,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":25193,"byte_end":25196,"line_start":800,"line_end":800,"column_start":5,"column_end":8}},{"value":"/ To blacklist types prefixed with \"mylib\" use `\"mylib_.*\"`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":25201,"byte_end":25263,"line_start":801,"line_end":801,"column_start":5,"column_end":67}},{"value":"/ For more complicated expressions check","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":25268,"byte_end":25310,"line_start":802,"line_end":802,"column_start":5,"column_end":47}},{"value":"/ [regex](https://docs.rs/regex/*/regex/) docs","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":25315,"byte_end":25363,"line_start":803,"line_end":803,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2776},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":25802,"byte_end":25820,"line_start":815,"line_end":815,"column_start":12,"column_end":30},"name":"blacklist_function","qualname":"<Builder>::blacklist_function","value":"pub fn blacklist_function<T: AsRef<str>>(Self, T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Hide the given function from the generated bindings. Regular expressions\n are supported.","sig":null,"attributes":[{"value":"/ Hide the given function from the generated bindings. Regular expressions","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":25512,"byte_end":25588,"line_start":809,"line_end":809,"column_start":5,"column_end":81}},{"value":"/ are supported.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":25593,"byte_end":25611,"line_start":810,"line_end":810,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":25616,"byte_end":25619,"line_start":811,"line_end":811,"column_start":5,"column_end":8}},{"value":"/ To blacklist functions prefixed with \"mylib\" use `\"mylib_.*\"`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":25624,"byte_end":25690,"line_start":812,"line_end":812,"column_start":5,"column_end":71}},{"value":"/ For more complicated expressions check","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":25695,"byte_end":25737,"line_start":813,"line_end":813,"column_start":5,"column_end":47}},{"value":"/ [regex](https://docs.rs/regex/*/regex/) docs","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":25742,"byte_end":25790,"line_start":814,"line_end":814,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2778},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":26295,"byte_end":26309,"line_start":827,"line_end":827,"column_start":12,"column_end":26},"name":"blacklist_item","qualname":"<Builder>::blacklist_item","value":"pub fn blacklist_item<T: AsRef<str>>(Self, T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Hide the given item from the generated bindings, regardless of\n whether it's a type, function, module, etc. Regular\n expressions are supported.","sig":null,"attributes":[{"value":"/ Hide the given item from the generated bindings, regardless of","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":25947,"byte_end":26013,"line_start":820,"line_end":820,"column_start":5,"column_end":71}},{"value":"/ whether it's a type, function, module, etc. Regular","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":26018,"byte_end":26073,"line_start":821,"line_end":821,"column_start":5,"column_end":60}},{"value":"/ expressions are supported.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":26078,"byte_end":26108,"line_start":822,"line_end":822,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":26113,"byte_end":26116,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/ To blacklist items prefixed with \"mylib\" use `\"mylib_.*\"`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":26121,"byte_end":26183,"line_start":824,"line_end":824,"column_start":5,"column_end":67}},{"value":"/ For more complicated expressions check","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":26188,"byte_end":26230,"line_start":825,"line_end":825,"column_start":5,"column_end":47}},{"value":"/ [regex](https://docs.rs/regex/*/regex/) docs","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":26235,"byte_end":26283,"line_start":826,"line_end":826,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2780},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":26733,"byte_end":26744,"line_start":838,"line_end":838,"column_start":12,"column_end":23},"name":"opaque_type","qualname":"<Builder>::opaque_type","value":"pub fn opaque_type<T: AsRef<str>>(Self, T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Treat the given type as opaque in the generated bindings. Regular\n expressions are supported.","sig":null,"attributes":[{"value":"/ Treat the given type as opaque in the generated bindings. Regular","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":26432,"byte_end":26501,"line_start":832,"line_end":832,"column_start":5,"column_end":74}},{"value":"/ expressions are supported.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":26506,"byte_end":26536,"line_start":833,"line_end":833,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":26541,"byte_end":26544,"line_start":834,"line_end":834,"column_start":5,"column_end":8}},{"value":"/ To change types prefixed with \"mylib\" into opaque, use `\"mylib_.*\"`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":26549,"byte_end":26621,"line_start":835,"line_end":835,"column_start":5,"column_end":77}},{"value":"/ For more complicated expressions check","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":26626,"byte_end":26668,"line_start":836,"line_end":836,"column_start":5,"column_end":47}},{"value":"/ [regex](https://docs.rs/regex/*/regex/) docs","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":26673,"byte_end":26721,"line_start":837,"line_end":837,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2782},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":27101,"byte_end":27117,"line_start":847,"line_end":847,"column_start":12,"column_end":28},"name":"whitelisted_type","qualname":"<Builder>::whitelisted_type","value":"pub fn whitelisted_type<T: AsRef<str>>(Self, T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Whitelist the given type so that it (and all types that it transitively\n refers to) appears in the generated bindings. Regular expressions are\n supported.\n","sig":null,"attributes":[{"value":"/ Whitelist the given type so that it (and all types that it transitively","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":26862,"byte_end":26937,"line_start":843,"line_end":843,"column_start":5,"column_end":80}},{"value":"/ refers to) appears in the generated bindings. Regular expressions are","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":26942,"byte_end":27015,"line_start":844,"line_end":844,"column_start":5,"column_end":78}},{"value":"/ supported.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":27020,"byte_end":27034,"line_start":845,"line_end":845,"column_start":5,"column_end":19}},{"value":"deprecated(note = \"use whitelist_type instead\")","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":27039,"byte_end":27089,"line_start":846,"line_end":846,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2784},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":27563,"byte_end":27577,"line_start":858,"line_end":858,"column_start":12,"column_end":26},"name":"whitelist_type","qualname":"<Builder>::whitelist_type","value":"pub fn whitelist_type<T: AsRef<str>>(Self, T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Whitelist the given type so that it (and all types that it transitively\n refers to) appears in the generated bindings. Regular expressions are\n supported.","sig":null,"attributes":[{"value":"/ Whitelist the given type so that it (and all types that it transitively","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":27204,"byte_end":27279,"line_start":851,"line_end":851,"column_start":5,"column_end":80}},{"value":"/ refers to) appears in the generated bindings. Regular expressions are","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":27284,"byte_end":27357,"line_start":852,"line_end":852,"column_start":5,"column_end":78}},{"value":"/ supported.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":27362,"byte_end":27376,"line_start":853,"line_end":853,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":27381,"byte_end":27384,"line_start":854,"line_end":854,"column_start":5,"column_end":8}},{"value":"/ To whitelist types prefixed with \"mylib\" use `\"mylib_.*\"`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":27389,"byte_end":27451,"line_start":855,"line_end":855,"column_start":5,"column_end":67}},{"value":"/ For more complicated expressions check","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":27456,"byte_end":27498,"line_start":856,"line_end":856,"column_start":5,"column_end":47}},{"value":"/ [regex](https://docs.rs/regex/*/regex/) docs","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":27503,"byte_end":27551,"line_start":857,"line_end":857,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2786},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":28067,"byte_end":28085,"line_start":870,"line_end":870,"column_start":12,"column_end":30},"name":"whitelist_function","qualname":"<Builder>::whitelist_function","value":"pub fn whitelist_function<T: AsRef<str>>(Self, T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Whitelist the given function so that it (and all types that it\n transitively refers to) appears in the generated bindings. Regular\n expressions are supported.","sig":null,"attributes":[{"value":"/ Whitelist the given function so that it (and all types that it","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":27700,"byte_end":27766,"line_start":863,"line_end":863,"column_start":5,"column_end":71}},{"value":"/ transitively refers to) appears in the generated bindings. Regular","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":27771,"byte_end":27841,"line_start":864,"line_end":864,"column_start":5,"column_end":75}},{"value":"/ expressions are supported.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":27846,"byte_end":27876,"line_start":865,"line_end":865,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":27881,"byte_end":27884,"line_start":866,"line_end":866,"column_start":5,"column_end":8}},{"value":"/ To whitelist functions prefixed with \"mylib\" use `\"mylib_.*\"`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":27889,"byte_end":27955,"line_start":867,"line_end":867,"column_start":5,"column_end":71}},{"value":"/ For more complicated expressions check","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":27960,"byte_end":28002,"line_start":868,"line_end":868,"column_start":5,"column_end":47}},{"value":"/ [regex](https://docs.rs/regex/*/regex/) docs","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":28007,"byte_end":28055,"line_start":869,"line_end":869,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2788},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":28376,"byte_end":28396,"line_start":879,"line_end":879,"column_start":12,"column_end":32},"name":"whitelisted_function","qualname":"<Builder>::whitelisted_function","value":"pub fn whitelisted_function<T: AsRef<str>>(Self, T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Whitelist the given function.","sig":null,"attributes":[{"value":"/ Whitelist the given function.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":28212,"byte_end":28245,"line_start":875,"line_end":875,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":28250,"byte_end":28253,"line_start":876,"line_end":876,"column_start":5,"column_end":8}},{"value":"/ Deprecated: use whitelist_function instead.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":28258,"byte_end":28305,"line_start":877,"line_end":877,"column_start":5,"column_end":52}},{"value":"deprecated(note = \"use whitelist_function instead\")","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":28310,"byte_end":28364,"line_start":878,"line_end":878,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":2790},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":28854,"byte_end":28867,"line_start":890,"line_end":890,"column_start":12,"column_end":25},"name":"whitelist_var","qualname":"<Builder>::whitelist_var","value":"pub fn whitelist_var<T: AsRef<str>>(Self, T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Whitelist the given variable so that it (and all types that it\n transitively refers to) appears in the generated bindings. Regular\n expressions are supported.","sig":null,"attributes":[{"value":"/ Whitelist the given variable so that it (and all types that it","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":28487,"byte_end":28553,"line_start":883,"line_end":883,"column_start":5,"column_end":71}},{"value":"/ transitively refers to) appears in the generated bindings. Regular","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":28558,"byte_end":28628,"line_start":884,"line_end":884,"column_start":5,"column_end":75}},{"value":"/ expressions are supported.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":28633,"byte_end":28663,"line_start":885,"line_end":885,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":28668,"byte_end":28671,"line_start":886,"line_end":886,"column_start":5,"column_end":8}},{"value":"/ To whitelist variables prefixed with \"mylib\" use `\"mylib_.*\"`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":28676,"byte_end":28742,"line_start":887,"line_end":887,"column_start":5,"column_end":71}},{"value":"/ For more complicated expressions check","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":28747,"byte_end":28789,"line_start":888,"line_end":888,"column_start":5,"column_end":47}},{"value":"/ [regex](https://docs.rs/regex/*/regex/) docs","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":28794,"byte_end":28842,"line_start":889,"line_end":889,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2792},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":29143,"byte_end":29158,"line_start":899,"line_end":899,"column_start":12,"column_end":27},"name":"whitelisted_var","qualname":"<Builder>::whitelisted_var","value":"pub fn whitelisted_var<T: AsRef<str>>(Self, T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Whitelist the given variable.","sig":null,"attributes":[{"value":"/ Whitelist the given variable.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":28989,"byte_end":29022,"line_start":895,"line_end":895,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":29027,"byte_end":29030,"line_start":896,"line_end":896,"column_start":5,"column_end":8}},{"value":"/ Deprecated: use whitelist_var instead.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":29035,"byte_end":29077,"line_start":897,"line_end":897,"column_start":5,"column_end":47}},{"value":"deprecated(note = \"use whitelist_var instead\")","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":29082,"byte_end":29131,"line_start":898,"line_end":898,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2794},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":29311,"byte_end":29329,"line_start":904,"line_end":904,"column_start":12,"column_end":30},"name":"default_enum_style","qualname":"<Builder>::default_enum_style","value":"pub fn default_enum_style(Self, codegen::EnumVariation) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Set the default style of code to generate for enums\n","sig":null,"attributes":[{"value":"/ Set the default style of code to generate for enums","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":29244,"byte_end":29299,"line_start":903,"line_end":903,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2795},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":29847,"byte_end":29860,"line_start":920,"line_end":920,"column_start":12,"column_end":25},"name":"bitfield_enum","qualname":"<Builder>::bitfield_enum","value":"pub fn bitfield_enum<T: AsRef<str>>(Self, T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Mark the given enum (or set of enums, if using a pattern) as being\n bitfield-like. Regular expressions are supported.","sig":null,"attributes":[{"value":"/ Mark the given enum (or set of enums, if using a pattern) as being","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":29476,"byte_end":29546,"line_start":912,"line_end":912,"column_start":5,"column_end":75}},{"value":"/ bitfield-like. Regular expressions are supported.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":29551,"byte_end":29604,"line_start":913,"line_end":913,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":29609,"byte_end":29612,"line_start":914,"line_end":914,"column_start":5,"column_end":8}},{"value":"/ This makes bindgen generate a type that isn't a rust `enum`. Regular","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":29617,"byte_end":29689,"line_start":915,"line_end":915,"column_start":5,"column_end":77}},{"value":"/ expressions are supported.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":29694,"byte_end":29724,"line_start":916,"line_end":916,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":29729,"byte_end":29732,"line_start":917,"line_end":917,"column_start":5,"column_end":8}},{"value":"/ This is similar to the newtype enum style, but with the bitwise","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":29737,"byte_end":29804,"line_start":918,"line_end":918,"column_start":5,"column_end":72}},{"value":"/ operators implemented.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":29809,"byte_end":29835,"line_start":919,"line_end":919,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2797},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":30230,"byte_end":30242,"line_start":930,"line_end":930,"column_start":12,"column_end":24},"name":"newtype_enum","qualname":"<Builder>::newtype_enum","value":"pub fn newtype_enum<T: AsRef<str>>(Self, T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Mark the given enum (or set of enums, if using a pattern) as a newtype.\n Regular expressions are supported.","sig":null,"attributes":[{"value":"/ Mark the given enum (or set of enums, if using a pattern) as a newtype.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":29980,"byte_end":30055,"line_start":925,"line_end":925,"column_start":5,"column_end":80}},{"value":"/ Regular expressions are supported.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":30060,"byte_end":30098,"line_start":926,"line_end":926,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":30103,"byte_end":30106,"line_start":927,"line_end":927,"column_start":5,"column_end":8}},{"value":"/ This makes bindgen generate a type that isn't a Rust `enum`. Regular","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":30111,"byte_end":30183,"line_start":928,"line_end":928,"column_start":5,"column_end":77}},{"value":"/ expressions are supported.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":30188,"byte_end":30218,"line_start":929,"line_end":929,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":2799},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":30784,"byte_end":30798,"line_start":944,"line_end":944,"column_start":12,"column_end":26},"name":"rustified_enum","qualname":"<Builder>::rustified_enum","value":"pub fn rustified_enum<T: AsRef<str>>(Self, T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Mark the given enum (or set of enums, if using a pattern) as a Rust\n enum.","sig":null,"attributes":[{"value":"/ Mark the given enum (or set of enums, if using a pattern) as a Rust","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":30361,"byte_end":30432,"line_start":935,"line_end":935,"column_start":5,"column_end":76}},{"value":"/ enum.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":30437,"byte_end":30446,"line_start":936,"line_end":936,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":30451,"byte_end":30454,"line_start":937,"line_end":937,"column_start":5,"column_end":8}},{"value":"/ This makes bindgen generate enums instead of constants. Regular","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":30459,"byte_end":30526,"line_start":938,"line_end":938,"column_start":5,"column_end":72}},{"value":"/ expressions are supported.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":30531,"byte_end":30561,"line_start":939,"line_end":939,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":30566,"byte_end":30569,"line_start":940,"line_end":940,"column_start":5,"column_end":8}},{"value":"/ **Use this with caution**, creating this in unsafe code","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":30574,"byte_end":30633,"line_start":941,"line_end":941,"column_start":5,"column_end":64}},{"value":"/ (including FFI) with an invalid value will invoke undefined behaviour.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":30638,"byte_end":30712,"line_start":942,"line_end":942,"column_start":5,"column_end":79}},{"value":"/ You may want to use the newtype enum style instead.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":30717,"byte_end":30772,"line_start":943,"line_end":943,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2801},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":31381,"byte_end":31410,"line_start":958,"line_end":958,"column_start":12,"column_end":41},"name":"rustified_non_exhaustive_enum","qualname":"<Builder>::rustified_non_exhaustive_enum","value":"pub fn rustified_non_exhaustive_enum<T: AsRef<str>>(Self, T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Mark the given enum (or set of enums, if using a pattern) as a Rust\n enum with the `#[non_exhaustive]` attribute.","sig":null,"attributes":[{"value":"/ Mark the given enum (or set of enums, if using a pattern) as a Rust","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":30919,"byte_end":30990,"line_start":949,"line_end":949,"column_start":5,"column_end":76}},{"value":"/ enum with the `#[non_exhaustive]` attribute.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":30995,"byte_end":31043,"line_start":950,"line_end":950,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":31048,"byte_end":31051,"line_start":951,"line_end":951,"column_start":5,"column_end":8}},{"value":"/ This makes bindgen generate enums instead of constants. Regular","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":31056,"byte_end":31123,"line_start":952,"line_end":952,"column_start":5,"column_end":72}},{"value":"/ expressions are supported.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":31128,"byte_end":31158,"line_start":953,"line_end":953,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":31163,"byte_end":31166,"line_start":954,"line_end":954,"column_start":5,"column_end":8}},{"value":"/ **Use this with caution**, creating this in unsafe code","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":31171,"byte_end":31230,"line_start":955,"line_end":955,"column_start":5,"column_end":64}},{"value":"/ (including FFI) with an invalid value will invoke undefined behaviour.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":31235,"byte_end":31309,"line_start":956,"line_end":956,"column_start":5,"column_end":79}},{"value":"/ You may want to use the newtype enum style instead.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":31314,"byte_end":31369,"line_start":957,"line_end":957,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2803},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":31710,"byte_end":31725,"line_start":968,"line_end":968,"column_start":12,"column_end":27},"name":"constified_enum","qualname":"<Builder>::constified_enum","value":"pub fn constified_enum<T: AsRef<str>>(Self, T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Mark the given enum (or set of enums, if using a pattern) as a set of\n constants that are not to be put into a module.\n","sig":null,"attributes":[{"value":"/ Mark the given enum (or set of enums, if using a pattern) as a set of","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":31569,"byte_end":31642,"line_start":966,"line_end":966,"column_start":5,"column_end":78}},{"value":"/ constants that are not to be put into a module.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":31647,"byte_end":31698,"line_start":967,"line_end":967,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2805},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":32127,"byte_end":32149,"line_start":978,"line_end":978,"column_start":12,"column_end":34},"name":"constified_enum_module","qualname":"<Builder>::constified_enum_module","value":"pub fn constified_enum_module<T: AsRef<str>>(Self, T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Mark the given enum (or set of enums, if using a pattern) as a set of\n constants that should be put into a module.","sig":null,"attributes":[{"value":"/ Mark the given enum (or set of enums, if using a pattern) as a set of","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":31847,"byte_end":31920,"line_start":973,"line_end":973,"column_start":5,"column_end":78}},{"value":"/ constants that should be put into a module.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":31925,"byte_end":31972,"line_start":974,"line_end":974,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":31977,"byte_end":31980,"line_start":975,"line_end":975,"column_start":5,"column_end":8}},{"value":"/ This makes bindgen generate modules containing constants instead of","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":31985,"byte_end":32056,"line_start":976,"line_end":976,"column_start":5,"column_end":76}},{"value":"/ just constants. Regular expressions are supported.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":32061,"byte_end":32115,"line_start":977,"line_end":977,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":2807},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":32348,"byte_end":32367,"line_start":984,"line_end":984,"column_start":12,"column_end":31},"name":"default_alias_style","qualname":"<Builder>::default_alias_style","value":"pub fn default_alias_style(Self, codegen::AliasVariation) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Set the default style of code to generate for typedefs\n","sig":null,"attributes":[{"value":"/ Set the default style of code to generate for typedefs","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":32278,"byte_end":32336,"line_start":983,"line_end":983,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2808},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":32834,"byte_end":32844,"line_start":998,"line_end":998,"column_start":12,"column_end":22},"name":"type_alias","qualname":"<Builder>::type_alias","value":"pub fn type_alias<T: AsRef<str>>(Self, T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Mark the given typedef alias (or set of aliases, if using a pattern) to\n use regular Rust type aliasing.","sig":null,"attributes":[{"value":"/ Mark the given typedef alias (or set of aliases, if using a pattern) to","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":32516,"byte_end":32591,"line_start":992,"line_end":992,"column_start":5,"column_end":80}},{"value":"/ use regular Rust type aliasing.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":32596,"byte_end":32631,"line_start":993,"line_end":993,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":32636,"byte_end":32639,"line_start":994,"line_end":994,"column_start":5,"column_end":8}},{"value":"/ This is the default behavior and should be used if `default_alias_style`","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":32644,"byte_end":32720,"line_start":995,"line_end":995,"column_start":5,"column_end":81}},{"value":"/ was set to NewType or NewTypeDeref and you want to override it for a","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":32725,"byte_end":32797,"line_start":996,"line_end":996,"column_start":5,"column_end":77}},{"value":"/ set of typedefs.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":32802,"byte_end":32822,"line_start":997,"line_end":997,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":2810},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":33218,"byte_end":33232,"line_start":1008,"line_end":1008,"column_start":12,"column_end":26},"name":"new_type_alias","qualname":"<Builder>::new_type_alias","value":"pub fn new_type_alias<T: AsRef<str>>(Self, T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Mark the given typedef alias (or set of aliases, if using a pattern) to\n be generated as a new type by having the aliased type be wrapped in a\n #[repr(transparent)] struct.","sig":null,"attributes":[{"value":"/ Mark the given typedef alias (or set of aliases, if using a pattern) to","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":32960,"byte_end":33035,"line_start":1003,"line_end":1003,"column_start":5,"column_end":80}},{"value":"/ be generated as a new type by having the aliased type be wrapped in a","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":33040,"byte_end":33113,"line_start":1004,"line_end":1004,"column_start":5,"column_end":78}},{"value":"/ #[repr(transparent)] struct.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":33118,"byte_end":33150,"line_start":1005,"line_end":1005,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":33155,"byte_end":33158,"line_start":1006,"line_end":1006,"column_start":5,"column_end":8}},{"value":"/ Used to enforce stricter type checking.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":33163,"byte_end":33206,"line_start":1007,"line_end":1007,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2812},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":33658,"byte_end":33678,"line_start":1017,"line_end":1017,"column_start":12,"column_end":32},"name":"new_type_alias_deref","qualname":"<Builder>::new_type_alias_deref","value":"pub fn new_type_alias_deref<T: AsRef<str>>(Self, T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Mark the given typedef alias (or set of aliases, if using a pattern) to\n be generated as a new type by having the aliased type be wrapped in a\n #[repr(transparent)] struct and also have an automatically generated\n impl's of `Deref` and `DerefMut` to their aliased type.\n","sig":null,"attributes":[{"value":"/ Mark the given typedef alias (or set of aliases, if using a pattern) to","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":33352,"byte_end":33427,"line_start":1013,"line_end":1013,"column_start":5,"column_end":80}},{"value":"/ be generated as a new type by having the aliased type be wrapped in a","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":33432,"byte_end":33505,"line_start":1014,"line_end":1014,"column_start":5,"column_end":78}},{"value":"/ #[repr(transparent)] struct and also have an automatically generated","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":33510,"byte_end":33582,"line_start":1015,"line_end":1015,"column_start":5,"column_end":77}},{"value":"/ impl's of `Deref` and `DerefMut` to their aliased type.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":33587,"byte_end":33646,"line_start":1016,"line_end":1016,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":2814},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":33933,"byte_end":33941,"line_start":1024,"line_end":1024,"column_start":12,"column_end":20},"name":"raw_line","qualname":"<Builder>::raw_line","value":"pub fn raw_line<T: Into<String>>(Self, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Add a string to prepend to the generated bindings. The string is passed\n through without any modification.\n","sig":null,"attributes":[{"value":"/ Add a string to prepend to the generated bindings. The string is passed","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":33804,"byte_end":33879,"line_start":1022,"line_end":1022,"column_start":5,"column_end":80}},{"value":"/ through without any modification.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":33884,"byte_end":33921,"line_start":1023,"line_end":1023,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2816},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":34126,"byte_end":34141,"line_start":1030,"line_end":1030,"column_start":12,"column_end":27},"name":"module_raw_line","qualname":"<Builder>::module_raw_line","value":"pub fn module_raw_line<T, U>(Self, T, U) -> Self where T: Into<String>,\nU: Into<String>","parent":null,"children":[],"decl_id":null,"docs":" Add a given line to the beginning of module `mod`.\n","sig":null,"attributes":[{"value":"/ Add a given line to the beginning of module `mod`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":34060,"byte_end":34114,"line_start":1029,"line_end":1029,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":2819},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":34497,"byte_end":34513,"line_start":1044,"line_end":1044,"column_start":12,"column_end":28},"name":"module_raw_lines","qualname":"<Builder>::module_raw_lines","value":"pub fn module_raw_lines<T, I>(Self, T, I) -> Self where T: Into<String>,\nI: IntoIterator, I::Item: Into<String>","parent":null,"children":[],"decl_id":null,"docs":" Add a given set of lines to the beginning of module `mod`.\n","sig":null,"attributes":[{"value":"/ Add a given set of lines to the beginning of module `mod`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":34423,"byte_end":34485,"line_start":1043,"line_end":1043,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2822},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":34922,"byte_end":34931,"line_start":1059,"line_end":1059,"column_start":12,"column_end":21},"name":"clang_arg","qualname":"<Builder>::clang_arg","value":"pub fn clang_arg<T: Into<String>>(Self, T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Add an argument to be passed straight through to clang.\n","sig":null,"attributes":[{"value":"/ Add an argument to be passed straight through to clang.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":34851,"byte_end":34910,"line_start":1058,"line_end":1058,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":2824},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":35123,"byte_end":35133,"line_start":1065,"line_end":1065,"column_start":12,"column_end":22},"name":"clang_args","qualname":"<Builder>::clang_args","value":"pub fn clang_args<I>(Self, I) -> Builder where I: IntoIterator,\nI::Item: AsRef<str>","parent":null,"children":[],"decl_id":null,"docs":" Add arguments to be passed straight through to clang.\n","sig":null,"attributes":[{"value":"/ Add arguments to be passed straight through to clang.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":35054,"byte_end":35111,"line_start":1064,"line_end":1064,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2826},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":35463,"byte_end":35476,"line_start":1078,"line_end":1078,"column_start":12,"column_end":25},"name":"emit_builtins","qualname":"<Builder>::emit_builtins","value":"pub fn emit_builtins(Self) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Emit bindings for builtin definitions (for example `__builtin_va_list`)\n in the generated Rust.\n","sig":null,"attributes":[{"value":"/ Emit bindings for builtin definitions (for example `__builtin_va_list`)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":35345,"byte_end":35420,"line_start":1076,"line_end":1076,"column_start":5,"column_end":80}},{"value":"/ in the generated Rust.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":35425,"byte_end":35451,"line_start":1077,"line_end":1077,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2827},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":35628,"byte_end":35645,"line_start":1084,"line_end":1084,"column_start":12,"column_end":29},"name":"no_convert_floats","qualname":"<Builder>::no_convert_floats","value":"pub fn no_convert_floats(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Avoid converting floats to `f32`/`f64` by default.\n","sig":null,"attributes":[{"value":"/ Avoid converting floats to `f32`/`f64` by default.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":35562,"byte_end":35616,"line_start":1083,"line_end":1083,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":2828},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":35796,"byte_end":35808,"line_start":1090,"line_end":1090,"column_start":12,"column_end":24},"name":"layout_tests","qualname":"<Builder>::layout_tests","value":"pub fn layout_tests(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether layout tests should be generated.\n","sig":null,"attributes":[{"value":"/ Set whether layout tests should be generated.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":35735,"byte_end":35784,"line_start":1089,"line_end":1089,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2829},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":36005,"byte_end":36015,"line_start":1096,"line_end":1096,"column_start":12,"column_end":22},"name":"impl_debug","qualname":"<Builder>::impl_debug","value":"pub fn impl_debug(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether `Debug` should be implemented, if it can not be derived automatically.\n","sig":null,"attributes":[{"value":"/ Set whether `Debug` should be implemented, if it can not be derived automatically.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":35907,"byte_end":35993,"line_start":1095,"line_end":1095,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":2830},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":36214,"byte_end":36228,"line_start":1102,"line_end":1102,"column_start":12,"column_end":26},"name":"impl_partialeq","qualname":"<Builder>::impl_partialeq","value":"pub fn impl_partialeq(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether `PartialEq` should be implemented, if it can not be derived automatically.\n","sig":null,"attributes":[{"value":"/ Set whether `PartialEq` should be implemented, if it can not be derived automatically.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":36112,"byte_end":36202,"line_start":1101,"line_end":1101,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":2831},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":36393,"byte_end":36404,"line_start":1108,"line_end":1108,"column_start":12,"column_end":23},"name":"derive_copy","qualname":"<Builder>::derive_copy","value":"pub fn derive_copy(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether `Copy` should be derived by default.\n","sig":null,"attributes":[{"value":"/ Set whether `Copy` should be derived by default.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":36329,"byte_end":36381,"line_start":1107,"line_end":1107,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2832},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":36567,"byte_end":36579,"line_start":1114,"line_end":1114,"column_start":12,"column_end":24},"name":"derive_debug","qualname":"<Builder>::derive_debug","value":"pub fn derive_debug(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether `Debug` should be derived by default.\n","sig":null,"attributes":[{"value":"/ Set whether `Debug` should be derived by default.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":36502,"byte_end":36555,"line_start":1113,"line_end":1113,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2833},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":36745,"byte_end":36759,"line_start":1120,"line_end":1120,"column_start":12,"column_end":26},"name":"derive_default","qualname":"<Builder>::derive_default","value":"pub fn derive_default(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether `Default` should be derived by default.\n","sig":null,"attributes":[{"value":"/ Set whether `Default` should be derived by default.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":36678,"byte_end":36733,"line_start":1119,"line_end":1119,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2834},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":36924,"byte_end":36935,"line_start":1126,"line_end":1126,"column_start":12,"column_end":23},"name":"derive_hash","qualname":"<Builder>::derive_hash","value":"pub fn derive_hash(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether `Hash` should be derived by default.\n","sig":null,"attributes":[{"value":"/ Set whether `Hash` should be derived by default.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":36860,"byte_end":36912,"line_start":1125,"line_end":1125,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2835},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":37231,"byte_end":37248,"line_start":1134,"line_end":1134,"column_start":12,"column_end":29},"name":"derive_partialord","qualname":"<Builder>::derive_partialord","value":"pub fn derive_partialord(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether `PartialOrd` should be derived by default.\n If we don't compute partialord, we also cannot compute\n ord. Set the derive_ord to `false` when doit is `false`.\n","sig":null,"attributes":[{"value":"/ Set whether `PartialOrd` should be derived by default.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":37033,"byte_end":37091,"line_start":1131,"line_end":1131,"column_start":5,"column_end":63}},{"value":"/ If we don't compute partialord, we also cannot compute","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":37096,"byte_end":37154,"line_start":1132,"line_end":1132,"column_start":5,"column_end":63}},{"value":"/ ord. Set the derive_ord to `false` when doit is `false`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":37159,"byte_end":37219,"line_start":1133,"line_end":1133,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":2836},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":37608,"byte_end":37618,"line_start":1145,"line_end":1145,"column_start":12,"column_end":22},"name":"derive_ord","qualname":"<Builder>::derive_ord","value":"pub fn derive_ord(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether `Ord` should be derived by default.\n We can't compute `Ord` without computing `PartialOrd`,\n so we set the same option to derive_partialord.\n","sig":null,"attributes":[{"value":"/ Set whether `Ord` should be derived by default.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":37426,"byte_end":37477,"line_start":1142,"line_end":1142,"column_start":5,"column_end":56}},{"value":"/ We can't compute `Ord` without computing `PartialOrd`,","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":37482,"byte_end":37540,"line_start":1143,"line_end":1143,"column_start":5,"column_end":63}},{"value":"/ so we set the same option to derive_partialord.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":37545,"byte_end":37596,"line_start":1144,"line_end":1144,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2837},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":37973,"byte_end":37989,"line_start":1155,"line_end":1155,"column_start":12,"column_end":28},"name":"derive_partialeq","qualname":"<Builder>::derive_partialeq","value":"pub fn derive_partialeq(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether `PartialEq` should be derived by default.","sig":null,"attributes":[{"value":"/ Set whether `PartialEq` should be derived by default.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":37762,"byte_end":37819,"line_start":1151,"line_end":1151,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":37824,"byte_end":37827,"line_start":1152,"line_end":1152,"column_start":5,"column_end":8}},{"value":"/ If we don't derive `PartialEq`, we also cannot derive `Eq`, so deriving","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":37832,"byte_end":37907,"line_start":1153,"line_end":1153,"column_start":5,"column_end":80}},{"value":"/ `Eq` is also disabled when `doit` is `false`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":37912,"byte_end":37961,"line_start":1154,"line_end":1154,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2838},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":38369,"byte_end":38378,"line_start":1167,"line_end":1167,"column_start":12,"column_end":21},"name":"derive_eq","qualname":"<Builder>::derive_eq","value":"pub fn derive_eq(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether `Eq` should be derived by default.","sig":null,"attributes":[{"value":"/ Set whether `Eq` should be derived by default.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":38165,"byte_end":38215,"line_start":1163,"line_end":1163,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":38220,"byte_end":38223,"line_start":1164,"line_end":1164,"column_start":5,"column_end":8}},{"value":"/ We can't derive `Eq` without also deriving `PartialEq`, so we also","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":38228,"byte_end":38298,"line_start":1165,"line_end":1165,"column_start":5,"column_end":75}},{"value":"/ enable deriving `PartialEq` when `doit` is `true`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":38303,"byte_end":38357,"line_start":1166,"line_end":1166,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":2839},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":38651,"byte_end":38662,"line_start":1177,"line_end":1177,"column_start":12,"column_end":23},"name":"time_phases","qualname":"<Builder>::time_phases","value":"pub fn time_phases(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether or not to time bindgen phases, and print information to\n stderr.\n","sig":null,"attributes":[{"value":"/ Set whether or not to time bindgen phases, and print information to","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":38552,"byte_end":38623,"line_start":1175,"line_end":1175,"column_start":5,"column_end":76}},{"value":"/ stderr.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":38628,"byte_end":38639,"line_start":1176,"line_end":1176,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2840},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":38791,"byte_end":38805,"line_start":1183,"line_end":1183,"column_start":12,"column_end":26},"name":"emit_clang_ast","qualname":"<Builder>::emit_clang_ast","value":"pub fn emit_clang_ast(Self) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Emit Clang AST.\n","sig":null,"attributes":[{"value":"/ Emit Clang AST.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":38760,"byte_end":38779,"line_start":1182,"line_end":1182,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":2841},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":38915,"byte_end":38922,"line_start":1189,"line_end":1189,"column_start":12,"column_end":19},"name":"emit_ir","qualname":"<Builder>::emit_ir","value":"pub fn emit_ir(Self) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Emit IR.\n","sig":null,"attributes":[{"value":"/ Emit IR.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":38891,"byte_end":38903,"line_start":1188,"line_end":1188,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":2842},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":39045,"byte_end":39066,"line_start":1195,"line_end":1195,"column_start":12,"column_end":33},"name":"enable_cxx_namespaces","qualname":"<Builder>::enable_cxx_namespaces","value":"pub fn enable_cxx_namespaces(Self) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Enable C++ namespaces.\n","sig":null,"attributes":[{"value":"/ Enable C++ namespaces.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":39007,"byte_end":39033,"line_start":1194,"line_end":1194,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2843},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":39483,"byte_end":39518,"line_start":1207,"line_end":1207,"column_start":12,"column_end":47},"name":"enable_function_attribute_detection","qualname":"<Builder>::enable_function_attribute_detection","value":"pub fn enable_function_attribute_detection(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Enable detecting must_use attributes on C functions.","sig":null,"attributes":[{"value":"/ Enable detecting must_use attributes on C functions.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":39165,"byte_end":39221,"line_start":1200,"line_end":1200,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":39226,"byte_end":39229,"line_start":1201,"line_end":1201,"column_start":5,"column_end":8}},{"value":"/ This is quite slow in some cases (see #1465), so it's disabled by","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":39234,"byte_end":39303,"line_start":1202,"line_end":1202,"column_start":5,"column_end":74}},{"value":"/ default.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":39308,"byte_end":39320,"line_start":1203,"line_end":1203,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":39325,"byte_end":39328,"line_start":1204,"line_end":1204,"column_start":5,"column_end":8}},{"value":"/ Note that for this to do something meaningful for now at least, the rust","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":39333,"byte_end":39409,"line_start":1205,"line_end":1205,"column_start":5,"column_end":81}},{"value":"/ target version has to have support for `#[must_use]`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":39414,"byte_end":39471,"line_start":1206,"line_end":1206,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2844},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":40133,"byte_end":40157,"line_start":1225,"line_end":1225,"column_start":12,"column_end":36},"name":"disable_name_namespacing","qualname":"<Builder>::disable_name_namespacing","value":"pub fn disable_name_namespacing(Self) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Disable name auto-namespacing.","sig":null,"attributes":[{"value":"/ Disable name auto-namespacing.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":39628,"byte_end":39662,"line_start":1212,"line_end":1212,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":39667,"byte_end":39670,"line_start":1213,"line_end":1213,"column_start":5,"column_end":8}},{"value":"/ By default, bindgen mangles names like `foo::bar::Baz` to look like","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":39675,"byte_end":39746,"line_start":1214,"line_end":1214,"column_start":5,"column_end":76}},{"value":"/ `foo_bar_Baz` instead of just `Baz`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":39751,"byte_end":39791,"line_start":1215,"line_end":1215,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":39796,"byte_end":39799,"line_start":1216,"line_end":1216,"column_start":5,"column_end":8}},{"value":"/ This method disables that behavior.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":39804,"byte_end":39843,"line_start":1217,"line_end":1217,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":39848,"byte_end":39851,"line_start":1218,"line_end":1218,"column_start":5,"column_end":8}},{"value":"/ Note that this intentionally does not change the names used for","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":39856,"byte_end":39923,"line_start":1219,"line_end":1219,"column_start":5,"column_end":72}},{"value":"/ whitelisting and blacklisting, which should still be mangled with the","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":39928,"byte_end":40001,"line_start":1220,"line_end":1220,"column_start":5,"column_end":78}},{"value":"/ namespaces.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":40006,"byte_end":40021,"line_start":1221,"line_end":1221,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":40026,"byte_end":40029,"line_start":1222,"line_end":1222,"column_start":5,"column_end":8}},{"value":"/ Note, also, that this option may cause bindgen to generate duplicate","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":40034,"byte_end":40106,"line_start":1223,"line_end":1223,"column_start":5,"column_end":77}},{"value":"/ names.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":40111,"byte_end":40121,"line_start":1224,"line_end":1224,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":2845},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":40900,"byte_end":40928,"line_start":1248,"line_end":1248,"column_start":12,"column_end":40},"name":"disable_nested_struct_naming","qualname":"<Builder>::disable_nested_struct_naming","value":"pub fn disable_nested_struct_naming(Self) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Disable nested struct naming.","sig":null,"attributes":[{"value":"/ Disable nested struct naming.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":40259,"byte_end":40292,"line_start":1230,"line_end":1230,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":40297,"byte_end":40300,"line_start":1231,"line_end":1231,"column_start":5,"column_end":8}},{"value":"/ The following structs have different names for C and C++. In case of C","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":40305,"byte_end":40379,"line_start":1232,"line_end":1232,"column_start":5,"column_end":79}},{"value":"/ they are visible as `foo` and `bar`. In case of C++ they are visible as","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":40384,"byte_end":40459,"line_start":1233,"line_end":1233,"column_start":5,"column_end":80}},{"value":"/ `foo` and `foo::bar`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":40464,"byte_end":40489,"line_start":1234,"line_end":1234,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":40494,"byte_end":40497,"line_start":1235,"line_end":1235,"column_start":5,"column_end":8}},{"value":"/ ```c","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":40502,"byte_end":40510,"line_start":1236,"line_end":1236,"column_start":5,"column_end":13}},{"value":"/ struct foo {","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":40515,"byte_end":40531,"line_start":1237,"line_end":1237,"column_start":5,"column_end":21}},{"value":"/     struct bar {","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":40536,"byte_end":40556,"line_start":1238,"line_end":1238,"column_start":5,"column_end":25}},{"value":"/     } b;","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":40561,"byte_end":40573,"line_start":1239,"line_end":1239,"column_start":5,"column_end":17}},{"value":"/ };","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":40578,"byte_end":40584,"line_start":1240,"line_end":1240,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":40589,"byte_end":40596,"line_start":1241,"line_end":1241,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":40601,"byte_end":40604,"line_start":1242,"line_end":1242,"column_start":5,"column_end":8}},{"value":"/ Bindgen wants to avoid duplicate names by default so it follows C++ naming","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":40609,"byte_end":40687,"line_start":1243,"line_end":1243,"column_start":5,"column_end":83}},{"value":"/ and it generates `foo`/`foo_bar` instead of just `foo`/`bar`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":40692,"byte_end":40757,"line_start":1244,"line_end":1244,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":40762,"byte_end":40765,"line_start":1245,"line_end":1245,"column_start":5,"column_end":8}},{"value":"/ This method disables this behavior and it is indented to be used only","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":40770,"byte_end":40843,"line_start":1246,"line_end":1246,"column_start":5,"column_end":78}},{"value":"/ for headers that were written for C.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":40848,"byte_end":40888,"line_start":1247,"line_end":1247,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2846},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":42205,"byte_end":42235,"line_start":1281,"line_end":1281,"column_start":12,"column_end":42},"name":"conservative_inline_namespaces","qualname":"<Builder>::conservative_inline_namespaces","value":"pub fn conservative_inline_namespaces(Self) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Treat inline namespaces conservatively.","sig":null,"attributes":[{"value":"/ Treat inline namespaces conservatively.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":41034,"byte_end":41077,"line_start":1253,"line_end":1253,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":41082,"byte_end":41085,"line_start":1254,"line_end":1254,"column_start":5,"column_end":8}},{"value":"/ This is tricky, because in C++ is technically legal to override an item","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":41090,"byte_end":41165,"line_start":1255,"line_end":1255,"column_start":5,"column_end":80}},{"value":"/ defined in an inline namespace:","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":41170,"byte_end":41205,"line_start":1256,"line_end":1256,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":41210,"byte_end":41213,"line_start":1257,"line_end":1257,"column_start":5,"column_end":8}},{"value":"/ ```cpp","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":41218,"byte_end":41228,"line_start":1258,"line_end":1258,"column_start":5,"column_end":15}},{"value":"/ inline namespace foo {","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":41233,"byte_end":41259,"line_start":1259,"line_end":1259,"column_start":5,"column_end":31}},{"value":"/     using Bar = int;","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":41264,"byte_end":41288,"line_start":1260,"line_end":1260,"column_start":5,"column_end":29}},{"value":"/ }","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":41293,"byte_end":41298,"line_start":1261,"line_end":1261,"column_start":5,"column_end":10}},{"value":"/ using Bar = long;","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":41303,"byte_end":41324,"line_start":1262,"line_end":1262,"column_start":5,"column_end":26}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":41329,"byte_end":41336,"line_start":1263,"line_end":1263,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":41341,"byte_end":41344,"line_start":1264,"line_end":1264,"column_start":5,"column_end":8}},{"value":"/ Even though referencing `Bar` is a compiler error.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":41349,"byte_end":41403,"line_start":1265,"line_end":1265,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":41408,"byte_end":41411,"line_start":1266,"line_end":1266,"column_start":5,"column_end":8}},{"value":"/ We want to support this (arguably esoteric) use case, but we don't want","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":41416,"byte_end":41491,"line_start":1267,"line_end":1267,"column_start":5,"column_end":80}},{"value":"/ to make the rest of bindgen users pay an usability penalty for that.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":41496,"byte_end":41568,"line_start":1268,"line_end":1268,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":41573,"byte_end":41576,"line_start":1269,"line_end":1269,"column_start":5,"column_end":8}},{"value":"/ To support this, we need to keep all the inline namespaces around, but","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":41581,"byte_end":41655,"line_start":1270,"line_end":1270,"column_start":5,"column_end":79}},{"value":"/ then bindgen usage is a bit more difficult, because you cannot","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":41660,"byte_end":41726,"line_start":1271,"line_end":1271,"column_start":5,"column_end":71}},{"value":"/ reference, e.g., `std::string` (you'd need to use the proper inline","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":41731,"byte_end":41802,"line_start":1272,"line_end":1272,"column_start":5,"column_end":76}},{"value":"/ namespace).","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":41807,"byte_end":41822,"line_start":1273,"line_end":1273,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":41827,"byte_end":41830,"line_start":1274,"line_end":1274,"column_start":5,"column_end":8}},{"value":"/ We could complicate a lot of the logic to detect name collisions, and if","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":41835,"byte_end":41911,"line_start":1275,"line_end":1275,"column_start":5,"column_end":81}},{"value":"/ not detected generate a `pub use inline_ns::*` or something like that.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":41916,"byte_end":41990,"line_start":1276,"line_end":1276,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":41995,"byte_end":41998,"line_start":1277,"line_end":1277,"column_start":5,"column_end":8}},{"value":"/ That's probably something we can do if we see this option is needed in a","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":42003,"byte_end":42079,"line_start":1278,"line_end":1278,"column_start":5,"column_end":81}},{"value":"/ lot of cases, to improve it's usability, but my guess is that this is","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":42084,"byte_end":42157,"line_start":1279,"line_end":1279,"column_start":5,"column_end":78}},{"value":"/ not going to be too useful.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":42162,"byte_end":42193,"line_start":1280,"line_end":1280,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2847},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":42625,"byte_end":42650,"line_start":1291,"line_end":1291,"column_start":12,"column_end":37},"name":"generate_inline_functions","qualname":"<Builder>::generate_inline_functions","value":"pub fn generate_inline_functions(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Whether inline functions should be generated or not.","sig":null,"attributes":[{"value":"/ Whether inline functions should be generated or not.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":42343,"byte_end":42399,"line_start":1286,"line_end":1286,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":42404,"byte_end":42407,"line_start":1287,"line_end":1287,"column_start":5,"column_end":8}},{"value":"/ Note that they will usually not work. However you can use","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":42412,"byte_end":42473,"line_start":1288,"line_end":1288,"column_start":5,"column_end":66}},{"value":"/ `-fkeep-inline-functions` or `-fno-inline-functions` if you are","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":42478,"byte_end":42545,"line_start":1289,"line_end":1289,"column_start":5,"column_end":72}},{"value":"/ responsible of compiling the library to make them callable.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":42550,"byte_end":42613,"line_start":1290,"line_end":1290,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2848},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":42795,"byte_end":42811,"line_start":1297,"line_end":1297,"column_start":12,"column_end":28},"name":"ignore_functions","qualname":"<Builder>::ignore_functions","value":"pub fn ignore_functions(Self) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Ignore functions.\n","sig":null,"attributes":[{"value":"/ Ignore functions.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":42762,"byte_end":42783,"line_start":1296,"line_end":1296,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":2849},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":42960,"byte_end":42974,"line_start":1303,"line_end":1303,"column_start":12,"column_end":26},"name":"ignore_methods","qualname":"<Builder>::ignore_methods","value":"pub fn ignore_methods(Self) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Ignore methods.\n","sig":null,"attributes":[{"value":"/ Ignore methods.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":42929,"byte_end":42948,"line_start":1302,"line_end":1302,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":2850},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":43250,"byte_end":43263,"line_start":1310,"line_end":1310,"column_start":12,"column_end":25},"name":"unstable_rust","qualname":"<Builder>::unstable_rust","value":"pub fn unstable_rust(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Avoid generating any unstable Rust, such as Rust unions, in the generated bindings.\n","sig":null,"attributes":[{"value":"/ Avoid generating any unstable Rust, such as Rust unions, in the generated bindings.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":43090,"byte_end":43177,"line_start":1308,"line_end":1308,"column_start":5,"column_end":92}},{"value":"deprecated(note = \"please use `rust_target` instead\")","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":43182,"byte_end":43238,"line_start":1309,"line_end":1309,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2851},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":43537,"byte_end":43545,"line_start":1320,"line_end":1320,"column_start":12,"column_end":20},"name":"use_core","qualname":"<Builder>::use_core","value":"pub fn use_core(Self) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Use core instead of libstd in the generated bindings.\n","sig":null,"attributes":[{"value":"/ Use core instead of libstd in the generated bindings.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":43468,"byte_end":43525,"line_start":1319,"line_end":1319,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2852},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":43714,"byte_end":43727,"line_start":1326,"line_end":1326,"column_start":12,"column_end":25},"name":"ctypes_prefix","qualname":"<Builder>::ctypes_prefix","value":"pub fn ctypes_prefix<T: Into<String>>(Self, T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Use the given prefix for the raw types instead of `::std::os::raw`.\n","sig":null,"attributes":[{"value":"/ Use the given prefix for the raw types instead of `::std::os::raw`.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":43631,"byte_end":43702,"line_start":1325,"line_end":1325,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":2854},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":44015,"byte_end":44030,"line_start":1333,"line_end":1333,"column_start":12,"column_end":27},"name":"parse_callbacks","qualname":"<Builder>::parse_callbacks","value":"pub fn parse_callbacks(Self, Box<callbacks::ParseCallbacks>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Allows configuring types in different situations, see the\n [`ParseCallbacks`](./callbacks/trait.ParseCallbacks.html) documentation.\n","sig":null,"attributes":[{"value":"/ Allows configuring types in different situations, see the","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":43861,"byte_end":43922,"line_start":1331,"line_end":1331,"column_start":5,"column_end":66}},{"value":"/ [`ParseCallbacks`](./callbacks/trait.ParseCallbacks.html) documentation.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":43927,"byte_end":44003,"line_start":1332,"line_end":1332,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":2855},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":44290,"byte_end":44309,"line_start":1343,"line_end":1343,"column_start":12,"column_end":31},"name":"with_codegen_config","qualname":"<Builder>::with_codegen_config","value":"pub fn with_codegen_config(Self, CodegenConfig) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Choose what to generate using a\n [`CodegenConfig`](./struct.CodegenConfig.html).\n","sig":null,"attributes":[{"value":"/ Choose what to generate using a","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":44187,"byte_end":44222,"line_start":1341,"line_end":1341,"column_start":5,"column_end":40}},{"value":"/ [`CodegenConfig`](./struct.CodegenConfig.html).","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":44227,"byte_end":44278,"line_start":1342,"line_end":1342,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2856},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":44487,"byte_end":44507,"line_start":1349,"line_end":1349,"column_start":12,"column_end":32},"name":"detect_include_paths","qualname":"<Builder>::detect_include_paths","value":"pub fn detect_include_paths(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Whether to detect include paths using clang_sys.\n","sig":null,"attributes":[{"value":"/ Whether to detect include paths using clang_sys.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":44423,"byte_end":44475,"line_start":1348,"line_end":1348,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2857},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":44684,"byte_end":44701,"line_start":1355,"line_end":1355,"column_start":12,"column_end":29},"name":"prepend_enum_name","qualname":"<Builder>::prepend_enum_name","value":"pub fn prepend_enum_name(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Prepend the enum name to constant or newtype variants.\n","sig":null,"attributes":[{"value":"/ Prepend the enum name to constant or newtype variants.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":44614,"byte_end":44672,"line_start":1354,"line_end":1354,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2858},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":44888,"byte_end":44903,"line_start":1361,"line_end":1361,"column_start":12,"column_end":27},"name":"size_t_is_usize","qualname":"<Builder>::size_t_is_usize","value":"pub fn size_t_is_usize(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether `size_t` should be translated to `usize` automatically.\n","sig":null,"attributes":[{"value":"/ Set whether `size_t` should be translated to `usize` automatically.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":44805,"byte_end":44876,"line_start":1360,"line_end":1360,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":2859},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":45074,"byte_end":45090,"line_start":1367,"line_end":1367,"column_start":12,"column_end":28},"name":"rustfmt_bindings","qualname":"<Builder>::rustfmt_bindings","value":"pub fn rustfmt_bindings(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether rustfmt should format the generated bindings.\n","sig":null,"attributes":[{"value":"/ Set whether rustfmt should format the generated bindings.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":45001,"byte_end":45062,"line_start":1366,"line_end":1366,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2860},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":45270,"byte_end":45284,"line_start":1373,"line_end":1373,"column_start":12,"column_end":26},"name":"record_matches","qualname":"<Builder>::record_matches","value":"pub fn record_matches(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether we should record matched items in our regex sets.\n","sig":null,"attributes":[{"value":"/ Set whether we should record matched items in our regex sets.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":45193,"byte_end":45258,"line_start":1372,"line_end":1372,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2861},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":45513,"byte_end":45539,"line_start":1380,"line_end":1380,"column_start":12,"column_end":38},"name":"rustfmt_configuration_file","qualname":"<Builder>::rustfmt_configuration_file","value":"pub fn rustfmt_configuration_file(Self, Option<PathBuf>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the absolute path to the rustfmt configuration file, if None, the standard rustfmt\n options are used.\n","sig":null,"attributes":[{"value":"/ Set the absolute path to the rustfmt configuration file, if None, the standard rustfmt","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":45385,"byte_end":45475,"line_start":1378,"line_end":1378,"column_start":5,"column_end":95}},{"value":"/ options are used.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":45480,"byte_end":45501,"line_start":1379,"line_end":1379,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":2862},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":45792,"byte_end":45804,"line_start":1387,"line_end":1387,"column_start":12,"column_end":24},"name":"with_rustfmt","qualname":"<Builder>::with_rustfmt","value":"pub fn with_rustfmt<P: Into<PathBuf>>(Self, P) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets an explicit path to rustfmt, to be used when rustfmt is enabled.\n","sig":null,"attributes":[{"value":"/ Sets an explicit path to rustfmt, to be used when rustfmt is enabled.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":45707,"byte_end":45780,"line_start":1386,"line_end":1386,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":2864},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":46010,"byte_end":46018,"line_start":1393,"line_end":1393,"column_start":12,"column_end":20},"name":"generate","qualname":"<Builder>::generate","value":"pub fn generate(Self) -> Result<Bindings, ()>","parent":null,"children":[],"decl_id":null,"docs":" Generate the Rust bindings using the options built up thus far.\n","sig":null,"attributes":[{"value":"/ Generate the Rust bindings using the options built up thus far.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":45931,"byte_end":45998,"line_start":1392,"line_end":1392,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":2867},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":47476,"byte_end":47499,"line_start":1430,"line_end":1430,"column_start":12,"column_end":35},"name":"dump_preprocessed_input","qualname":"<Builder>::dump_preprocessed_input","value":"pub fn dump_preprocessed_input(&Self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Preprocess and dump the input header files to disk.","sig":null,"attributes":[{"value":"/ Preprocess and dump the input header files to disk.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":47219,"byte_end":47274,"line_start":1425,"line_end":1425,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":47279,"byte_end":47282,"line_start":1426,"line_end":1426,"column_start":5,"column_end":8}},{"value":"/ This is useful when debugging bindgen, using C-Reduce, or when filing","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":47287,"byte_end":47360,"line_start":1427,"line_end":1427,"column_start":5,"column_end":78}},{"value":"/ issues. The resulting file will be named something like `__bindgen.i` or","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":47365,"byte_end":47441,"line_start":1428,"line_end":1428,"column_start":5,"column_end":81}},{"value":"/ `__bindgen.ii`","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":47446,"byte_end":47464,"line_start":1429,"line_end":1429,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":2870},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":50232,"byte_end":50244,"line_start":1518,"line_end":1518,"column_start":12,"column_end":24},"name":"no_partialeq","qualname":"<Builder>::no_partialeq","value":"pub fn no_partialeq<T: Into<String>>(Self, T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Don't derive `PartialEq` for a given type. Regular\n expressions are supported.\n","sig":null,"attributes":[{"value":"/ Don't derive `PartialEq` for a given type. Regular","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":50131,"byte_end":50185,"line_start":1516,"line_end":1516,"column_start":5,"column_end":59}},{"value":"/ expressions are supported.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":50190,"byte_end":50220,"line_start":1517,"line_end":1517,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":2872},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":50473,"byte_end":50480,"line_start":1525,"line_end":1525,"column_start":12,"column_end":19},"name":"no_copy","qualname":"<Builder>::no_copy","value":"pub fn no_copy<T: Into<String>>(Self, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Don't derive `Copy` for a given type. Regular\n expressions are supported.\n","sig":null,"attributes":[{"value":"/ Don't derive `Copy` for a given type. Regular","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":50377,"byte_end":50426,"line_start":1523,"line_end":1523,"column_start":5,"column_end":54}},{"value":"/ expressions are supported.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":50431,"byte_end":50461,"line_start":1524,"line_end":1524,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":2874},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":50701,"byte_end":50708,"line_start":1532,"line_end":1532,"column_start":12,"column_end":19},"name":"no_hash","qualname":"<Builder>::no_hash","value":"pub fn no_hash<T: Into<String>>(Self, T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Don't derive `Hash` for a given type. Regular\n expressions are supported.\n","sig":null,"attributes":[{"value":"/ Don't derive `Hash` for a given type. Regular","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":50605,"byte_end":50654,"line_start":1530,"line_end":1530,"column_start":5,"column_end":54}},{"value":"/ expressions are supported.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":50659,"byte_end":50689,"line_start":1531,"line_end":1531,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":2876},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":50940,"byte_end":50967,"line_start":1538,"line_end":1538,"column_start":12,"column_end":39},"name":"array_pointers_in_arguments","qualname":"<Builder>::array_pointers_in_arguments","value":"pub fn array_pointers_in_arguments(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether `arr[size]` should be treated as `*mut T` or `*mut [T; size]` (same for mut)\n","sig":null,"attributes":[{"value":"/ Set whether `arr[size]` should be treated as `*mut T` or `*mut [T; size]` (same for mut)","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":50836,"byte_end":50928,"line_start":1537,"line_end":1537,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":2877},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":51128,"byte_end":51151,"line_start":1544,"line_end":1544,"column_start":12,"column_end":35},"name":"wasm_import_module_name","qualname":"<Builder>::wasm_import_module_name","value":"pub fn wasm_import_module_name<T: Into<String>>(Self, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the wasm import module name\n","sig":null,"attributes":[{"value":"/ Set the wasm import module name","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":51081,"byte_end":51116,"line_start":1543,"line_end":1543,"column_start":5,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":4602},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":66020,"byte_end":66028,"line_start":1975,"line_end":1975,"column_start":12,"column_end":20},"name":"Bindings","qualname":"::Bindings","value":"Bindings {  }","parent":null,"children":[{"krate":0,"index":4603},{"krate":0,"index":4604}],"decl_id":null,"docs":" Generated Rust bindings.\n","sig":null,"attributes":[{"value":"/ Generated Rust bindings.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":65963,"byte_end":65991,"line_start":1973,"line_end":1973,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2892},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":70859,"byte_end":70868,"line_start":2127,"line_end":2127,"column_start":12,"column_end":21},"name":"to_string","qualname":"<Bindings>::to_string","value":"pub fn to_string(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Convert these bindings into source text (with raw lines prepended).\n","sig":null,"attributes":[{"value":"/ Convert these bindings into source text (with raw lines prepended).","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":70776,"byte_end":70847,"line_start":2126,"line_end":2126,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":2893},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":71212,"byte_end":71225,"line_start":2136,"line_end":2136,"column_start":12,"column_end":25},"name":"write_to_file","qualname":"<Bindings>::write_to_file","value":"pub fn write_to_file<P: AsRef<Path>>(&Self, P) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Write these bindings as source text to a file.\n","sig":null,"attributes":[{"value":"/ Write these bindings as source text to a file.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":71150,"byte_end":71200,"line_start":2135,"line_end":2135,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2895},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":71570,"byte_end":71575,"line_start":2147,"line_end":2147,"column_start":12,"column_end":17},"name":"write","qualname":"<Bindings>::write","value":"pub fn write<'a>(&Self, Box<Write + 'a>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Write these bindings as source text to the given `Write`able.\n","sig":null,"attributes":[{"value":"/ Write these bindings as source text to the given `Write`able.","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":71493,"byte_end":71558,"line_start":2146,"line_end":2146,"column_start":5,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":4608},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":77680,"byte_end":77692,"line_start":2340,"line_end":2340,"column_start":12,"column_end":24},"name":"ClangVersion","qualname":"::ClangVersion","value":"ClangVersion { parsed, full }","parent":null,"children":[{"krate":0,"index":4609},{"krate":0,"index":4610}],"decl_id":null,"docs":" Extracted Clang version data\n","sig":null,"attributes":[{"value":"/ Extracted Clang version data","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":77619,"byte_end":77651,"line_start":2338,"line_end":2338,"column_start":1,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":4609},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":77761,"byte_end":77767,"line_start":2342,"line_end":2342,"column_start":9,"column_end":15},"name":"parsed","qualname":"::ClangVersion::parsed","value":"std::option::Option<(u32, u32)>","parent":{"krate":0,"index":4608},"children":[],"decl_id":null,"docs":" Major and minor semver, if parsing was successful\n","sig":null,"attributes":[{"value":"/ Major and minor semver, if parsing was successful","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":77699,"byte_end":77752,"line_start":2341,"line_end":2341,"column_start":5,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":4610},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":77825,"byte_end":77829,"line_start":2344,"line_end":2344,"column_start":9,"column_end":13},"name":"full","qualname":"::ClangVersion::full","value":"std::string::String","parent":{"krate":0,"index":4608},"children":[],"decl_id":null,"docs":" full version string\n","sig":null,"attributes":[{"value":"/ full version string","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":77793,"byte_end":77816,"line_start":2343,"line_end":2343,"column_start":5,"column_end":28}}]},{"kind":"Function","id":{"krate":0,"index":2913},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":77915,"byte_end":77928,"line_start":2348,"line_end":2348,"column_start":8,"column_end":21},"name":"clang_version","qualname":"::clang_version","value":"pub fn clang_version() -> ClangVersion","parent":null,"children":[],"decl_id":null,"docs":" Get the major and the minor semver numbers of Clang's version\n","sig":null,"attributes":[{"value":"/ Get the major and the minor semver numbers of Clang's version","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":77842,"byte_end":77907,"line_start":2347,"line_end":2347,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":4613},"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":79328,"byte_end":79342,"line_start":2393,"line_end":2393,"column_start":12,"column_end":26},"name":"CargoCallbacks","qualname":"::CargoCallbacks","value":"","parent":null,"children":[],"decl_id":null,"docs":" A ParseCallbacks implementation that will act on file includes by echoing a rerun-if-changed\n line","sig":null,"attributes":[{"value":"/ A ParseCallbacks implementation that will act on file includes by echoing a rerun-if-changed","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":78824,"byte_end":78920,"line_start":2380,"line_end":2380,"column_start":1,"column_end":97}},{"value":"/ line","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":78921,"byte_end":78929,"line_start":2381,"line_end":2381,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":78930,"byte_end":78933,"line_start":2382,"line_end":2382,"column_start":1,"column_end":4}},{"value":"/ When running in side a `build.rs` script, this can be used to make cargo invalidate the","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":78934,"byte_end":79025,"line_start":2383,"line_end":2383,"column_start":1,"column_end":92}},{"value":"/ generated bindings whenever any of the files included from the header change:","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":79026,"byte_end":79107,"line_start":2384,"line_end":2384,"column_start":1,"column_end":82}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":79108,"byte_end":79115,"line_start":2385,"line_end":2385,"column_start":1,"column_end":8}},{"value":"/ use bindgen::builder;","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":79116,"byte_end":79141,"line_start":2386,"line_end":2386,"column_start":1,"column_end":26}},{"value":"/ let bindings = builder()","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":79142,"byte_end":79170,"line_start":2387,"line_end":2387,"column_start":1,"column_end":29}},{"value":"/     .header(\"path/to/input/header\")","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":79171,"byte_end":79210,"line_start":2388,"line_end":2388,"column_start":1,"column_end":40}},{"value":"/     .parse_callbacks(Box::new(bindgen::CargoCallbacks))","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":79211,"byte_end":79270,"line_start":2389,"line_end":2389,"column_start":1,"column_end":60}},{"value":"/     .generate();","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":79271,"byte_end":79291,"line_start":2390,"line_end":2390,"column_start":1,"column_end":21}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":79292,"byte_end":79299,"line_start":2391,"line_end":2391,"column_start":1,"column_end":8}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":82480,"byte_end":82486,"line_start":26,"line_end":26,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":35}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":82781,"byte_end":82787,"line_start":39,"line_end":39,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":72},{"krate":0,"index":74},{"krate":0,"index":76},{"krate":0,"index":78},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":87},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":105511,"byte_end":105520,"line_start":751,"line_end":751,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":106359,"byte_end":106368,"line_start":782,"line_end":782,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":126}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":107007,"byte_end":107017,"line_start":807,"line_end":807,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":107284,"byte_end":107294,"line_start":817,"line_end":817,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":130}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":107546,"byte_end":107564,"line_start":829,"line_end":829,"column_start":23,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":137},{"krate":0,"index":138}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":108608,"byte_end":108614,"line_start":868,"line_end":868,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":145}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":108741,"byte_end":108747,"line_start":874,"line_end":874,"column_start":13,"column_end":19},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":108766,"byte_end":108772,"line_start":876,"line_end":876,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":109004,"byte_end":109008,"line_start":888,"line_end":888,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":151}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":109131,"byte_end":109135,"line_start":894,"line_end":894,"column_start":13,"column_end":17},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":109160,"byte_end":109164,"line_start":896,"line_end":896,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":154}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":110141,"byte_end":110152,"line_start":928,"line_end":928,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":110586,"byte_end":110590,"line_start":943,"line_end":943,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":177},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":193}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":122266,"byte_end":122290,"line_start":1304,"line_end":1304,"column_start":6,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":197},{"krate":0,"index":198}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":122641,"byte_end":122664,"line_start":1323,"line_end":1323,"column_start":19,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":204},{"krate":0,"index":205}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":123041,"byte_end":123064,"line_start":1338,"line_end":1338,"column_start":28,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":207}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":123353,"byte_end":123367,"line_start":1351,"line_end":1351,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":211}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":123902,"byte_end":123916,"line_start":1368,"line_end":1368,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":213}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":124354,"byte_end":124361,"line_start":1386,"line_end":1386,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":220}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":125468,"byte_end":125491,"line_start":1424,"line_end":1424,"column_start":19,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":226},{"krate":0,"index":227}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":126186,"byte_end":126211,"line_start":1454,"line_end":1454,"column_start":19,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":236},{"krate":0,"index":237}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":126934,"byte_end":126938,"line_start":1483,"line_end":1483,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":241}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":127725,"byte_end":127730,"line_start":1513,"line_end":1513,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":247}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":128220,"byte_end":128225,"line_start":1529,"line_end":1529,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":249}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":128347,"byte_end":128352,"line_start":1535,"line_end":1535,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":251}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":128786,"byte_end":128801,"line_start":1557,"line_end":1557,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":255}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":128924,"byte_end":128939,"line_start":1563,"line_end":1563,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":257},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":263}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":130847,"byte_end":130862,"line_start":1629,"line_end":1629,"column_start":15,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":265}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":131098,"byte_end":131108,"line_start":1642,"line_end":1642,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":269},{"krate":0,"index":270}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":131599,"byte_end":131609,"line_start":1658,"line_end":1658,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":272}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":132016,"byte_end":132027,"line_start":1676,"line_end":1676,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":278}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":132583,"byte_end":132594,"line_start":1694,"line_end":1694,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":280}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":140223,"byte_end":140233,"line_start":1955,"line_end":1955,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":293},{"krate":0,"index":295},{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":298}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":143070,"byte_end":143080,"line_start":2047,"line_end":2047,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":300}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":143391,"byte_end":143401,"line_start":2062,"line_end":2062,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\error.rs","byte_start":291370,"byte_end":291375,"line_start":16,"line_end":16,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":308}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\error.rs","byte_start":291817,"byte_end":291822,"line_start":30,"line_end":30,"column_start":23,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\impl_debug.rs","byte_start":303336,"byte_end":303345,"line_start":68,"line_end":68,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":383},{"krate":0,"index":384}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\impl_debug.rs","byte_start":303701,"byte_end":303713,"line_start":84,"line_end":84,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":387},{"krate":0,"index":388}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\impl_debug.rs","byte_start":304575,"byte_end":304579,"line_start":113,"line_end":113,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":391},{"krate":0,"index":392}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\struct_layout.rs","byte_start":315632,"byte_end":315651,"line_start":82,"line_end":82,"column_start":10,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":429},{"krate":0,"index":430},{"krate":0,"index":431},{"krate":0,"index":432},{"krate":0,"index":433},{"krate":0,"index":434},{"krate":0,"index":436},{"krate":0,"index":437},{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":440}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":148194,"byte_end":148207,"line_start":146,"line_end":146,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":539},{"krate":0,"index":540},{"krate":0,"index":541},{"krate":0,"index":542},{"krate":0,"index":543},{"krate":0,"index":544},{"krate":0,"index":545},{"krate":0,"index":547},{"krate":0,"index":549},{"krate":0,"index":550},{"krate":0,"index":551},{"krate":0,"index":552},{"krate":0,"index":553},{"krate":0,"index":554}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":150637,"byte_end":150650,"line_start":235,"line_end":235,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":558},{"krate":0,"index":559}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":150802,"byte_end":150815,"line_start":243,"line_end":243,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":562}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":151107,"byte_end":151118,"line_start":255,"line_end":255,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":566}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":151674,"byte_end":151685,"line_start":275,"line_end":275,"column_start":52,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":570}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":153488,"byte_end":153492,"line_start":338,"line_end":338,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":577},{"krate":0,"index":578}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":154928,"byte_end":154934,"line_start":387,"line_end":387,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":581},{"krate":0,"index":582}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":157870,"byte_end":157873,"line_start":478,"line_end":478,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":587},{"krate":0,"index":588}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":162333,"byte_end":162337,"line_start":604,"line_end":604,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":592},{"krate":0,"index":593}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":173526,"byte_end":173532,"line_start":887,"line_end":887,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":607}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":173820,"byte_end":173826,"line_start":901,"line_end":901,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":610},{"krate":0,"index":611}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":174462,"byte_end":174468,"line_start":924,"line_end":924,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":615}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":174644,"byte_end":174650,"line_start":930,"line_end":930,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":618},{"krate":0,"index":619}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":174956,"byte_end":174977,"line_start":945,"line_end":945,"column_start":24,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":621},{"krate":0,"index":622}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":178075,"byte_end":178080,"line_start":1036,"line_end":1036,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":632},{"krate":0,"index":633}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":179480,"byte_end":179489,"line_start":1088,"line_end":1088,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":638},{"krate":0,"index":639}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":184299,"byte_end":184311,"line_start":1240,"line_end":1240,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":644}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":184620,"byte_end":184628,"line_start":1253,"line_end":1253,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":646}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":185999,"byte_end":186011,"line_start":1294,"line_end":1294,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":649},{"krate":0,"index":650}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":190124,"byte_end":190132,"line_start":1428,"line_end":1428,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":658},{"krate":0,"index":659}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":193609,"byte_end":193617,"line_start":1529,"line_end":1529,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":663},{"krate":0,"index":664}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":214717,"byte_end":214723,"line_start":2121,"line_end":2121,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":678}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":220739,"byte_end":220752,"line_start":2310,"line_end":2310,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":681},{"krate":0,"index":682}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":221179,"byte_end":221192,"line_start":2328,"line_end":2328,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":684}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":221297,"byte_end":221310,"line_start":2334,"line_end":2334,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":686},{"krate":0,"index":687}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":223001,"byte_end":223012,"line_start":2388,"line_end":2388,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":710},{"krate":0,"index":711},{"krate":0,"index":712},{"krate":0,"index":714}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":232224,"byte_end":232228,"line_start":2669,"line_end":2669,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":717},{"krate":0,"index":718}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":242909,"byte_end":242923,"line_start":2967,"line_end":2967,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":728}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":243249,"byte_end":243263,"line_start":2978,"line_end":2978,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":730}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":243373,"byte_end":243387,"line_start":2984,"line_end":2984,"column_start":28,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":732},{"krate":0,"index":733}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":245846,"byte_end":245847,"line_start":3056,"line_end":3056,"column_start":22,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":247047,"byte_end":247048,"line_start":3090,"line_end":3090,"column_start":36,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":754},{"krate":0,"index":755}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":248792,"byte_end":248793,"line_start":3138,"line_end":3138,"column_start":33,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":763},{"krate":0,"index":764}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":249138,"byte_end":249139,"line_start":3154,"line_end":3154,"column_start":25,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":768},{"krate":0,"index":769}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":249414,"byte_end":249415,"line_start":3169,"line_end":3169,"column_start":25,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":772},{"krate":0,"index":773}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":249705,"byte_end":249709,"line_start":3184,"line_end":3184,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":775},{"krate":0,"index":776}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":249941,"byte_end":249945,"line_start":3196,"line_end":3196,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":778},{"krate":0,"index":779}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":250195,"byte_end":250199,"line_start":3208,"line_end":3208,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":781},{"krate":0,"index":782}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":250443,"byte_end":250447,"line_start":3220,"line_end":3220,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":784},{"krate":0,"index":785}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":258618,"byte_end":258639,"line_start":3416,"line_end":3416,"column_start":22,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":790},{"krate":0,"index":791}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":258926,"byte_end":258947,"line_start":3430,"line_end":3430,"column_start":22,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":793},{"krate":0,"index":794}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":261273,"byte_end":261284,"line_start":3497,"line_end":3497,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":799},{"krate":0,"index":800}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":262098,"byte_end":262106,"line_start":3522,"line_end":3522,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":802},{"krate":0,"index":803}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":267946,"byte_end":267959,"line_start":3701,"line_end":3701,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":808},{"krate":0,"index":809}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\features.rs","byte_start":333105,"byte_end":333117,"line_start":230,"line_end":230,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":858}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\template_params.rs","byte_start":355894,"byte_end":355916,"line_start":164,"line_end":164,"column_start":12,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":883},{"krate":0,"index":884},{"krate":0,"index":886},{"krate":0,"index":890},{"krate":0,"index":891}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\template_params.rs","byte_start":363913,"byte_end":363935,"line_start":374,"line_end":374,"column_start":34,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":895},{"krate":0,"index":896},{"krate":0,"index":897},{"krate":0,"index":898},{"krate":0,"index":904},{"krate":0,"index":907},{"krate":0,"index":909}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\template_params.rs","byte_start":372255,"byte_end":372262,"line_start":596,"line_end":596,"column_start":51,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":913}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\derive.rs","byte_start":376291,"byte_end":376303,"line_start":106,"line_end":106,"column_start":12,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":948},{"krate":0,"index":950},{"krate":0,"index":953}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\derive.rs","byte_start":388948,"byte_end":388959,"line_start":444,"line_end":444,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":956},{"krate":0,"index":957},{"krate":0,"index":959},{"krate":0,"index":961},{"krate":0,"index":963},{"krate":0,"index":964},{"krate":0,"index":965},{"krate":0,"index":966},{"krate":0,"index":967},{"krate":0,"index":968},{"krate":0,"index":969},{"krate":0,"index":970},{"krate":0,"index":971},{"krate":0,"index":972}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\derive.rs","byte_start":394209,"byte_end":394220,"line_start":609,"line_end":609,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":974}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\derive.rs","byte_start":394627,"byte_end":394639,"line_start":622,"line_end":622,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":977},{"krate":0,"index":978},{"krate":0,"index":979},{"krate":0,"index":980},{"krate":0,"index":981},{"krate":0,"index":984},{"krate":0,"index":986}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\derive.rs","byte_start":397554,"byte_end":397561,"line_start":709,"line_end":709,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":990}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\has_vtable.rs","byte_start":398949,"byte_end":398964,"line_start":25,"line_end":25,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1013}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\has_vtable.rs","byte_start":399036,"byte_end":399051,"line_start":31,"line_end":31,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1015}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\has_vtable.rs","byte_start":399210,"byte_end":399225,"line_start":38,"line_end":38,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1017},{"krate":0,"index":1018}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\has_vtable.rs","byte_start":399370,"byte_end":399385,"line_start":46,"line_end":46,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1020}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\has_vtable.rs","byte_start":400733,"byte_end":400750,"line_start":80,"line_end":80,"column_start":12,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1023},{"krate":0,"index":1024},{"krate":0,"index":1026}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\has_vtable.rs","byte_start":402215,"byte_end":402232,"line_start":133,"line_end":133,"column_start":34,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1031},{"krate":0,"index":1032},{"krate":0,"index":1033},{"krate":0,"index":1034},{"krate":0,"index":1035},{"krate":0,"index":1036},{"krate":0,"index":1038}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\has_vtable.rs","byte_start":404831,"byte_end":404838,"line_start":215,"line_end":215,"column_start":46,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1042}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\has_destructor.rs","byte_start":407639,"byte_end":407660,"line_start":42,"line_end":42,"column_start":12,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1069},{"krate":0,"index":1070}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\has_destructor.rs","byte_start":408553,"byte_end":408574,"line_start":69,"line_end":69,"column_start":34,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1074},{"krate":0,"index":1075},{"krate":0,"index":1076},{"krate":0,"index":1077},{"krate":0,"index":1078},{"krate":0,"index":1079},{"krate":0,"index":1083}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\has_destructor.rs","byte_start":412069,"byte_end":412076,"line_start":172,"line_end":172,"column_start":50,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1087}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\has_type_param_in_array.rs","byte_start":413894,"byte_end":413917,"line_start":42,"line_end":42,"column_start":12,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1106},{"krate":0,"index":1107}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\has_type_param_in_array.rs","byte_start":415319,"byte_end":415342,"line_start":86,"line_end":86,"column_start":34,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1111},{"krate":0,"index":1112},{"krate":0,"index":1113},{"krate":0,"index":1114},{"krate":0,"index":1115},{"krate":0,"index":1116},{"krate":0,"index":1120}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\has_type_param_in_array.rs","byte_start":421045,"byte_end":421052,"line_start":248,"line_end":248,"column_start":52,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1124}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\has_float.rs","byte_start":422728,"byte_end":422736,"line_start":42,"line_end":42,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1143},{"krate":0,"index":1144}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\has_float.rs","byte_start":423934,"byte_end":423942,"line_start":80,"line_end":80,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1148},{"krate":0,"index":1149},{"krate":0,"index":1150},{"krate":0,"index":1151},{"krate":0,"index":1152},{"krate":0,"index":1153},{"krate":0,"index":1158}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\has_float.rs","byte_start":429735,"byte_end":429742,"line_start":248,"line_end":248,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1162}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\sizedness.rs","byte_start":431973,"byte_end":431988,"line_start":65,"line_end":65,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1183}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\sizedness.rs","byte_start":432067,"byte_end":432082,"line_start":71,"line_end":71,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1185}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\sizedness.rs","byte_start":432241,"byte_end":432256,"line_start":78,"line_end":78,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1187},{"krate":0,"index":1188}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\sizedness.rs","byte_start":432401,"byte_end":432416,"line_start":86,"line_end":86,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1190}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\sizedness.rs","byte_start":433258,"byte_end":433275,"line_start":113,"line_end":113,"column_start":12,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1193},{"krate":0,"index":1194},{"krate":0,"index":1195}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\sizedness.rs","byte_start":434878,"byte_end":434895,"line_start":165,"line_end":165,"column_start":34,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1198},{"krate":0,"index":1199},{"krate":0,"index":1200},{"krate":0,"index":1201},{"krate":0,"index":1205},{"krate":0,"index":1207},{"krate":0,"index":1211}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\sizedness.rs","byte_start":440608,"byte_end":440615,"line_start":337,"line_end":337,"column_start":46,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1215}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\mod.rs","byte_start":341115,"byte_end":341130,"line_start":133,"line_end":133,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1242}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\mod.rs","byte_start":341219,"byte_end":341234,"line_start":139,"line_end":139,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1244},{"krate":0,"index":1245}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\mod.rs","byte_start":341535,"byte_end":341550,"line_start":151,"line_end":151,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1247}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\annotations.rs","byte_start":443923,"byte_end":443934,"line_start":74,"line_end":74,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1258}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\annotations.rs","byte_start":444268,"byte_end":444279,"line_start":89,"line_end":89,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1260},{"krate":0,"index":1261},{"krate":0,"index":1262},{"krate":0,"index":1263},{"krate":0,"index":1265},{"krate":0,"index":1266},{"krate":0,"index":1267},{"krate":0,"index":1268},{"krate":0,"index":1269},{"krate":0,"index":1272}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":452744,"byte_end":452754,"line_start":55,"line_end":55,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1321},{"krate":0,"index":1322}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":453663,"byte_end":453669,"line_start":88,"line_end":88,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1324},{"krate":0,"index":1325},{"krate":0,"index":1326},{"krate":0,"index":1327},{"krate":0,"index":1328},{"krate":0,"index":1329},{"krate":0,"index":1330}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":455769,"byte_end":455781,"line_start":172,"line_end":172,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1340},{"krate":0,"index":1341},{"krate":0,"index":1342}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":456500,"byte_end":456505,"line_start":201,"line_end":201,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1344}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":456852,"byte_end":456857,"line_start":213,"line_end":213,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1346},{"krate":0,"index":1347}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":457387,"byte_end":457392,"line_start":233,"line_end":233,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1350}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":458601,"byte_end":458610,"line_start":273,"line_end":273,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1353}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":458966,"byte_end":458974,"line_start":291,"line_end":291,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1356}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":459946,"byte_end":459954,"line_start":331,"line_end":331,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1359},{"krate":0,"index":1360},{"krate":0,"index":1361},{"krate":0,"index":1363},{"krate":0,"index":1364},{"krate":0,"index":1365}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":462081,"byte_end":462089,"line_start":401,"line_end":401,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1367},{"krate":0,"index":1368},{"krate":0,"index":1369},{"krate":0,"index":1370},{"krate":0,"index":1371},{"krate":0,"index":1372},{"krate":0,"index":1373}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":462913,"byte_end":462921,"line_start":438,"line_end":438,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1375}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":463461,"byte_end":463469,"line_start":461,"line_end":461,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1377},{"krate":0,"index":1378},{"krate":0,"index":1379},{"krate":0,"index":1380},{"krate":0,"index":1381},{"krate":0,"index":1382},{"krate":0,"index":1383}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":472013,"byte_end":472023,"line_start":717,"line_end":717,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1396}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":472130,"byte_end":472140,"line_start":723,"line_end":723,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1398},{"krate":0,"index":1399},{"krate":0,"index":1400}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":476702,"byte_end":476712,"line_start":854,"line_end":854,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1410},{"krate":0,"index":1411}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":478019,"byte_end":478028,"line_start":902,"line_end":902,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1414},{"krate":0,"index":1416},{"krate":0,"index":1417},{"krate":0,"index":1419},{"krate":0,"index":1420},{"krate":0,"index":1421},{"krate":0,"index":1422}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":479180,"byte_end":479184,"line_start":960,"line_end":960,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":1424},{"krate":0,"index":1425}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":482645,"byte_end":482653,"line_start":1066,"line_end":1066,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1427},{"krate":0,"index":1428},{"krate":0,"index":1429},{"krate":0,"index":1430},{"krate":0,"index":1431},{"krate":0,"index":1433},{"krate":0,"index":1434},{"krate":0,"index":1435},{"krate":0,"index":1436},{"krate":0,"index":1437},{"krate":0,"index":1438},{"krate":0,"index":1439},{"krate":0,"index":1440},{"krate":0,"index":1441},{"krate":0,"index":1442},{"krate":0,"index":1448},{"krate":0,"index":1450},{"krate":0,"index":1451},{"krate":0,"index":1452},{"krate":0,"index":1453},{"krate":0,"index":1456},{"krate":0,"index":1457},{"krate":0,"index":1458},{"krate":0,"index":1459}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":504605,"byte_end":504613,"line_start":1652,"line_end":1652,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1462}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":506037,"byte_end":506045,"line_start":1705,"line_end":1705,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1465},{"krate":0,"index":1466}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":508235,"byte_end":508243,"line_start":1758,"line_end":1758,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1471}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":508382,"byte_end":508390,"line_start":1764,"line_end":1764,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1473},{"krate":0,"index":1474}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":515926,"byte_end":515932,"line_start":195,"line_end":195,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1547}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":516091,"byte_end":516097,"line_start":202,"line_end":202,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1550}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":516271,"byte_end":516272,"line_start":212,"line_end":212,"column_start":28,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1553}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":516483,"byte_end":516484,"line_start":221,"line_end":221,"column_start":30,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1556}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":516698,"byte_end":516699,"line_start":230,"line_end":230,"column_start":27,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1559}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":516904,"byte_end":516905,"line_start":239,"line_end":239,"column_start":27,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1562}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":517116,"byte_end":517117,"line_start":248,"line_end":248,"column_start":33,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1565}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":517404,"byte_end":517405,"line_start":259,"line_end":259,"column_start":32,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1568}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":517683,"byte_end":517684,"line_start":270,"line_end":270,"column_start":25,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1571}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":517993,"byte_end":517994,"line_start":282,"line_end":282,"column_start":26,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1574}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":525409,"byte_end":525434,"line_start":477,"line_end":477,"column_start":25,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1582},{"krate":0,"index":1583}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":525740,"byte_end":525765,"line_start":493,"line_end":493,"column_start":12,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1586}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":527067,"byte_end":527081,"line_start":541,"line_end":541,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1593},{"krate":0,"index":1594},{"krate":0,"index":1596},{"krate":0,"index":1597},{"krate":0,"index":1598},{"krate":0,"index":1599},{"krate":0,"index":1600},{"krate":0,"index":1602},{"krate":0,"index":1603},{"krate":0,"index":1604},{"krate":0,"index":1605},{"krate":0,"index":1606},{"krate":0,"index":1608},{"krate":0,"index":1610},{"krate":0,"index":1612},{"krate":0,"index":1615},{"krate":0,"index":1616},{"krate":0,"index":1617},{"krate":0,"index":1619},{"krate":0,"index":1622},{"krate":0,"index":1624},{"krate":0,"index":1627},{"krate":0,"index":1631},{"krate":0,"index":1634},{"krate":0,"index":1635},{"krate":0,"index":1637},{"krate":0,"index":1638},{"krate":0,"index":1639},{"krate":0,"index":1640},{"krate":0,"index":1641},{"krate":0,"index":1642},{"krate":0,"index":1643},{"krate":0,"index":1644},{"krate":0,"index":1646},{"krate":0,"index":1648},{"krate":0,"index":1650},{"krate":0,"index":1651},{"krate":0,"index":1652},{"krate":0,"index":1653},{"krate":0,"index":1654},{"krate":0,"index":1655},{"krate":0,"index":1657},{"krate":0,"index":1659},{"krate":0,"index":1661},{"krate":0,"index":1662},{"krate":0,"index":1663},{"krate":0,"index":1664},{"krate":0,"index":1671},{"krate":0,"index":1675},{"krate":0,"index":1678},{"krate":0,"index":1683},{"krate":0,"index":1684},{"krate":0,"index":1685},{"krate":0,"index":1686},{"krate":0,"index":1687},{"krate":0,"index":1689},{"krate":0,"index":1690},{"krate":0,"index":1691},{"krate":0,"index":1692},{"krate":0,"index":1693},{"krate":0,"index":1694},{"krate":0,"index":1695},{"krate":0,"index":1697},{"krate":0,"index":1698},{"krate":0,"index":1699},{"krate":0,"index":1700},{"krate":0,"index":1702},{"krate":0,"index":1704},{"krate":0,"index":1705},{"krate":0,"index":1706},{"krate":0,"index":1711},{"krate":0,"index":1712},{"krate":0,"index":1713},{"krate":0,"index":1714},{"krate":0,"index":1715},{"krate":0,"index":1717},{"krate":0,"index":1718},{"krate":0,"index":1720},{"krate":0,"index":1721},{"krate":0,"index":1722},{"krate":0,"index":1724},{"krate":0,"index":1725},{"krate":0,"index":1727},{"krate":0,"index":1729},{"krate":0,"index":1730},{"krate":0,"index":1732},{"krate":0,"index":1733},{"krate":0,"index":1735},{"krate":0,"index":1736},{"krate":0,"index":1737}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":606224,"byte_end":606230,"line_start":2651,"line_end":2651,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1739}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":606383,"byte_end":606395,"line_start":2658,"line_end":2658,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1742}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":606506,"byte_end":606518,"line_start":2667,"line_end":2667,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1744},{"krate":0,"index":1746},{"krate":0,"index":1747},{"krate":0,"index":1748}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":608408,"byte_end":608419,"line_start":2727,"line_end":2727,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1751},{"krate":0,"index":1752},{"krate":0,"index":1753}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":608953,"byte_end":608964,"line_start":2746,"line_end":2746,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1755},{"krate":0,"index":1756}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\derive.rs","byte_start":613770,"byte_end":613779,"line_start":110,"line_end":110,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1779}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\derive.rs","byte_start":613851,"byte_end":613860,"line_start":116,"line_end":116,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1781}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\derive.rs","byte_start":614019,"byte_end":614028,"line_start":123,"line_end":123,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1783},{"krate":0,"index":1784}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\derive.rs","byte_start":614162,"byte_end":614171,"line_start":131,"line_end":131,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1786}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\enum_ty.rs","byte_start":617911,"byte_end":617915,"line_start":38,"line_end":38,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":1818},{"krate":0,"index":1819},{"krate":0,"index":1820},{"krate":0,"index":1821},{"krate":0,"index":1831},{"krate":0,"index":1833}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\enum_ty.rs","byte_start":624573,"byte_end":624584,"line_start":244,"line_end":244,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1835},{"krate":0,"index":1836},{"krate":0,"index":1837},{"krate":0,"index":1838},{"krate":0,"index":1840},{"krate":0,"index":1842}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\function.rs","byte_start":626546,"byte_end":626558,"line_start":30,"line_end":30,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1871}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\function.rs","byte_start":628704,"byte_end":628712,"line_start":97,"line_end":97,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1873},{"krate":0,"index":1874},{"krate":0,"index":1875},{"krate":0,"index":1877},{"krate":0,"index":1878},{"krate":0,"index":1879}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\function.rs","byte_start":629693,"byte_end":629701,"line_start":143,"line_end":143,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1881}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\function.rs","byte_start":630591,"byte_end":630594,"line_start":185,"line_end":185,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":1885}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\function.rs","byte_start":630810,"byte_end":630813,"line_start":195,"line_end":195,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1887}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\function.rs","byte_start":636011,"byte_end":636022,"line_start":347,"line_end":347,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1897},{"krate":0,"index":1898},{"krate":0,"index":1902},{"krate":0,"index":1903},{"krate":0,"index":1904},{"krate":0,"index":1905},{"krate":0,"index":1906},{"krate":0,"index":1907}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\function.rs","byte_start":643786,"byte_end":643794,"line_start":562,"line_end":562,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1909}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\function.rs","byte_start":645987,"byte_end":645998,"line_start":627,"line_end":627,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1912},{"krate":0,"index":1913}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\int.rs","byte_start":647863,"byte_end":647870,"line_start":88,"line_end":88,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1917},{"krate":0,"index":1919},{"krate":0,"index":1921}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":652956,"byte_end":652972,"line_start":110,"line_end":110,"column_start":14,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4000},{"krate":0,"index":4001},{"krate":0,"index":4002}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":653384,"byte_end":653401,"line_start":131,"line_end":131,"column_start":10,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2001}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":653643,"byte_end":653660,"line_start":141,"line_end":141,"column_start":23,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2005},{"krate":0,"index":2006}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":654090,"byte_end":654091,"line_start":160,"line_end":160,"column_start":29,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2009},{"krate":0,"index":2010}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":654366,"byte_end":654370,"line_start":175,"line_end":175,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2012},{"krate":0,"index":2013}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":654589,"byte_end":654597,"line_start":187,"line_end":187,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2015},{"krate":0,"index":2016}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":654995,"byte_end":654996,"line_start":204,"line_end":204,"column_start":31,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2019}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":655308,"byte_end":655309,"line_start":217,"line_end":217,"column_start":31,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2022},{"krate":0,"index":2023}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":655925,"byte_end":655926,"line_start":241,"line_end":241,"column_start":27,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2026}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":656118,"byte_end":656122,"line_start":250,"line_end":250,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2029}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":656266,"byte_end":656268,"line_start":256,"line_end":256,"column_start":20,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2033},{"krate":0,"index":2034}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":656519,"byte_end":656523,"line_start":270,"line_end":270,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2037},{"krate":0,"index":2038}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":658425,"byte_end":658429,"line_start":316,"line_end":316,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2041}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":658570,"byte_end":658574,"line_start":322,"line_end":322,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2043}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":658716,"byte_end":658720,"line_start":328,"line_end":328,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2045}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":658856,"byte_end":658860,"line_start":334,"line_end":334,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2047}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":659002,"byte_end":659006,"line_start":340,"line_end":340,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2049}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":659159,"byte_end":659163,"line_start":346,"line_end":346,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2051}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":659307,"byte_end":659311,"line_start":352,"line_end":352,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2053}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":659442,"byte_end":659446,"line_start":358,"line_end":358,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2055}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":661823,"byte_end":661827,"line_start":423,"line_end":423,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2057}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":661895,"byte_end":661899,"line_start":429,"line_end":429,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":2059},{"krate":0,"index":2060},{"krate":0,"index":2061},{"krate":0,"index":2062},{"krate":0,"index":2063},{"krate":0,"index":2065},{"krate":0,"index":2068},{"krate":0,"index":2070},{"krate":0,"index":2071},{"krate":0,"index":2072},{"krate":0,"index":2074},{"krate":0,"index":2075},{"krate":0,"index":2076},{"krate":0,"index":2077},{"krate":0,"index":2078},{"krate":0,"index":2079},{"krate":0,"index":2080},{"krate":0,"index":2081},{"krate":0,"index":2082},{"krate":0,"index":2084},{"krate":0,"index":2085},{"krate":0,"index":2087},{"krate":0,"index":2088},{"krate":0,"index":2089},{"krate":0,"index":2090},{"krate":0,"index":2091},{"krate":0,"index":2097},{"krate":0,"index":2100},{"krate":0,"index":2101},{"krate":0,"index":2108},{"krate":0,"index":2110},{"krate":0,"index":2111},{"krate":0,"index":2112},{"krate":0,"index":2113},{"krate":0,"index":2114},{"krate":0,"index":2116}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":683507,"byte_end":683508,"line_start":1060,"line_end":1060,"column_start":22,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2123},{"krate":0,"index":2124}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":683840,"byte_end":683844,"line_start":1075,"line_end":1075,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2126},{"krate":0,"index":2127}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":684261,"byte_end":684262,"line_start":1089,"line_end":1089,"column_start":23,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2131},{"krate":0,"index":2133}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":684907,"byte_end":684911,"line_start":1112,"line_end":1112,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2136},{"krate":0,"index":2137}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":685142,"byte_end":685143,"line_start":1122,"line_end":1122,"column_start":23,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2140}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":685422,"byte_end":685426,"line_start":1133,"line_end":1133,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2143}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":685570,"byte_end":685571,"line_start":1139,"line_end":1139,"column_start":33,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2146}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":685887,"byte_end":685891,"line_start":1152,"line_end":1152,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2148}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":686169,"byte_end":686170,"line_start":1162,"line_end":1162,"column_start":22,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2151}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":686447,"byte_end":686451,"line_start":1175,"line_end":1175,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2153}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":686761,"byte_end":686765,"line_start":1188,"line_end":1188,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2156}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":687320,"byte_end":687321,"line_start":1213,"line_end":1213,"column_start":32,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2160}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":687577,"byte_end":687581,"line_start":1223,"line_end":1223,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2163}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":687739,"byte_end":687747,"line_start":1229,"line_end":1229,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2165}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":688977,"byte_end":688981,"line_start":1269,"line_end":1269,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2170},{"krate":0,"index":2171},{"krate":0,"index":2175},{"krate":0,"index":2176},{"krate":0,"index":2178},{"krate":0,"index":2179},{"krate":0,"index":2185}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":710227,"byte_end":710231,"line_start":1868,"line_end":1868,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2190}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":710862,"byte_end":710866,"line_start":1889,"line_end":1889,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2193},{"krate":0,"index":2194}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":712335,"byte_end":712346,"line_start":1941,"line_end":1941,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2197},{"krate":0,"index":2198},{"krate":0,"index":2199},{"krate":0,"index":2200}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item_kind.rs","byte_start":713833,"byte_end":713841,"line_start":28,"line_end":28,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2210},{"krate":0,"index":2211},{"krate":0,"index":2212},{"krate":0,"index":2213},{"krate":0,"index":2214},{"krate":0,"index":2215},{"krate":0,"index":2216},{"krate":0,"index":2217},{"krate":0,"index":2218},{"krate":0,"index":2219},{"krate":0,"index":2220},{"krate":0,"index":2221},{"krate":0,"index":2222},{"krate":0,"index":2223}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item_kind.rs","byte_start":716781,"byte_end":716789,"line_start":129,"line_end":129,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2225}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\layout.rs","byte_start":718277,"byte_end":718283,"line_start":35,"line_end":35,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2237},{"krate":0,"index":2238},{"krate":0,"index":2239},{"krate":0,"index":2240},{"krate":0,"index":2241},{"krate":0,"index":2242},{"krate":0,"index":2243}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\layout.rs","byte_start":719991,"byte_end":719997,"line_start":99,"line_end":99,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2245},{"krate":0,"index":2246},{"krate":0,"index":2247},{"krate":0,"index":2248}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\module.rs","byte_start":722366,"byte_end":722372,"line_start":31,"line_end":31,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2262},{"krate":0,"index":2263},{"krate":0,"index":2265},{"krate":0,"index":2266},{"krate":0,"index":2267}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\module.rs","byte_start":723120,"byte_end":723126,"line_start":62,"line_end":62,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2269}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\module.rs","byte_start":723399,"byte_end":723405,"line_start":75,"line_end":75,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2272}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\objc.rs","byte_start":725745,"byte_end":725758,"line_start":66,"line_end":66,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2302},{"krate":0,"index":2303},{"krate":0,"index":2304},{"krate":0,"index":2305},{"krate":0,"index":2306},{"krate":0,"index":2307},{"krate":0,"index":2308},{"krate":0,"index":2309},{"krate":0,"index":2310},{"krate":0,"index":2312}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\objc.rs","byte_start":730807,"byte_end":730817,"line_start":209,"line_end":209,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2314},{"krate":0,"index":2315},{"krate":0,"index":2316},{"krate":0,"index":2317},{"krate":0,"index":2318},{"krate":0,"index":2319}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\objc.rs","byte_start":733421,"byte_end":733434,"line_start":305,"line_end":305,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2323},{"krate":0,"index":2324}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\template.rs","byte_start":740996,"byte_end":741017,"line_start":198,"line_end":198,"column_start":6,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2354},{"krate":0,"index":2356},{"krate":0,"index":2357},{"krate":0,"index":2358}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\template.rs","byte_start":744132,"byte_end":744153,"line_start":293,"line_end":293,"column_start":19,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2369},{"krate":0,"index":2370}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\template.rs","byte_start":745344,"byte_end":745365,"line_start":329,"line_end":329,"column_start":16,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2373},{"krate":0,"index":2374}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\traversal.rs","byte_start":746249,"byte_end":746253,"line_start":20,"line_end":20,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":2385}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\traversal.rs","byte_start":746446,"byte_end":746450,"line_start":27,"line_end":27,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2387}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\traversal.rs","byte_start":753364,"byte_end":753371,"line_start":255,"line_end":255,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2402},{"krate":0,"index":2403}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\traversal.rs","byte_start":753882,"byte_end":753887,"line_start":271,"line_end":271,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2406},{"krate":0,"index":2407}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\traversal.rs","byte_start":755344,"byte_end":755347,"line_start":318,"line_end":318,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2412},{"krate":0,"index":2413}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\traversal.rs","byte_start":755524,"byte_end":755532,"line_start":328,"line_end":328,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2415},{"krate":0,"index":2416}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\traversal.rs","byte_start":756111,"byte_end":756112,"line_start":349,"line_end":349,"column_start":20,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2422}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\traversal.rs","byte_start":757718,"byte_end":757731,"line_start":403,"line_end":403,"column_start":5,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2442}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\traversal.rs","byte_start":758572,"byte_end":758585,"line_start":437,"line_end":437,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2449}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\traversal.rs","byte_start":759154,"byte_end":759167,"line_start":458,"line_end":458,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2455},{"krate":0,"index":2456}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":762083,"byte_end":762087,"line_start":45,"line_end":45,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":2496},{"krate":0,"index":2497},{"krate":0,"index":2498},{"krate":0,"index":2499},{"krate":0,"index":2500},{"krate":0,"index":2501},{"krate":0,"index":2503},{"krate":0,"index":2504},{"krate":0,"index":2505},{"krate":0,"index":2506},{"krate":0,"index":2507},{"krate":0,"index":2508},{"krate":0,"index":2509},{"krate":0,"index":2510},{"krate":0,"index":2511},{"krate":0,"index":2512},{"krate":0,"index":2513},{"krate":0,"index":2514},{"krate":0,"index":2515},{"krate":0,"index":2516},{"krate":0,"index":2517},{"krate":0,"index":2518},{"krate":0,"index":2519},{"krate":0,"index":2520},{"krate":0,"index":2521},{"krate":0,"index":2523},{"krate":0,"index":2524},{"krate":0,"index":2527},{"krate":0,"index":2530},{"krate":0,"index":2532},{"krate":0,"index":2534}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":772446,"byte_end":772450,"line_start":392,"line_end":392,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2536},{"krate":0,"index":2537}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":772937,"byte_end":772941,"line_start":408,"line_end":408,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2539},{"krate":0,"index":2540}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":773167,"byte_end":773175,"line_start":420,"line_end":420,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2542},{"krate":0,"index":2543}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":773556,"byte_end":773560,"line_start":436,"line_end":436,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2545}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":774291,"byte_end":774299,"line_start":465,"line_end":465,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2548}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":774721,"byte_end":774729,"line_start":488,"line_end":488,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2551}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":777245,"byte_end":777249,"line_start":566,"line_end":566,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2553}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":777407,"byte_end":777415,"line_start":572,"line_end":572,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2555}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":781324,"byte_end":781328,"line_start":711,"line_end":711,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":2557}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":804974,"byte_end":804978,"line_start":1220,"line_end":1220,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2562},{"krate":0,"index":2563}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\var.rs","byte_start":808216,"byte_end":808219,"line_start":48,"line_end":48,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":2587},{"krate":0,"index":2588},{"krate":0,"index":2589},{"krate":0,"index":2590},{"krate":0,"index":2591},{"krate":0,"index":2592}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\var.rs","byte_start":809178,"byte_end":809181,"line_start":93,"line_end":93,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2595}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\var.rs","byte_start":810086,"byte_end":810089,"line_start":133,"line_end":133,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2599}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\regex_set.rs","byte_start":823217,"byte_end":823225,"line_start":18,"line_end":18,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2642},{"krate":0,"index":2643},{"krate":0,"index":2645},{"krate":0,"index":2646},{"krate":0,"index":2649},{"krate":0,"index":2651}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\time.rs","byte_start":825480,"byte_end":825485,"line_start":12,"line_end":12,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2662},{"krate":0,"index":2663},{"krate":0,"index":2664},{"krate":0,"index":2665}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\time.rs","byte_start":826587,"byte_end":826592,"line_start":48,"line_end":48,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2668}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\callbacks.rs","byte_start":827212,"byte_end":827232,"line_start":18,"line_end":18,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2677}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":3455,"byte_end":3468,"line_start":121,"line_end":121,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2727},{"krate":0,"index":2728},{"krate":0,"index":2729},{"krate":0,"index":2730},{"krate":0,"index":2731},{"krate":0,"index":2732}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":4358,"byte_end":4371,"line_start":153,"line_end":153,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2734}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":5940,"byte_end":5947,"line_start":207,"line_end":207,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":2737},{"krate":0,"index":2759},{"krate":0,"index":2761},{"krate":0,"index":2762},{"krate":0,"index":2763},{"krate":0,"index":2764},{"krate":0,"index":2766},{"krate":0,"index":2767},{"krate":0,"index":2768},{"krate":0,"index":2769},{"krate":0,"index":2770},{"krate":0,"index":2771},{"krate":0,"index":2772},{"krate":0,"index":2774},{"krate":0,"index":2776},{"krate":0,"index":2778},{"krate":0,"index":2780},{"krate":0,"index":2782},{"krate":0,"index":2784},{"krate":0,"index":2786},{"krate":0,"index":2788},{"krate":0,"index":2790},{"krate":0,"index":2792},{"krate":0,"index":2794},{"krate":0,"index":2795},{"krate":0,"index":2797},{"krate":0,"index":2799},{"krate":0,"index":2801},{"krate":0,"index":2803},{"krate":0,"index":2805},{"krate":0,"index":2807},{"krate":0,"index":2808},{"krate":0,"index":2810},{"krate":0,"index":2812},{"krate":0,"index":2814},{"krate":0,"index":2816},{"krate":0,"index":2819},{"krate":0,"index":2822},{"krate":0,"index":2824},{"krate":0,"index":2826},{"krate":0,"index":2827},{"krate":0,"index":2828},{"krate":0,"index":2829},{"krate":0,"index":2830},{"krate":0,"index":2831},{"krate":0,"index":2832},{"krate":0,"index":2833},{"krate":0,"index":2834},{"krate":0,"index":2835},{"krate":0,"index":2836},{"krate":0,"index":2837},{"krate":0,"index":2838},{"krate":0,"index":2839},{"krate":0,"index":2840},{"krate":0,"index":2841},{"krate":0,"index":2842},{"krate":0,"index":2843},{"krate":0,"index":2844},{"krate":0,"index":2845},{"krate":0,"index":2846},{"krate":0,"index":2847},{"krate":0,"index":2848},{"krate":0,"index":2849},{"krate":0,"index":2850},{"krate":0,"index":2851},{"krate":0,"index":2852},{"krate":0,"index":2854},{"krate":0,"index":2855},{"krate":0,"index":2856},{"krate":0,"index":2857},{"krate":0,"index":2858},{"krate":0,"index":2859},{"krate":0,"index":2860},{"krate":0,"index":2861},{"krate":0,"index":2862},{"krate":0,"index":2864},{"krate":0,"index":2867},{"krate":0,"index":2870},{"krate":0,"index":2872},{"krate":0,"index":2874},{"krate":0,"index":2876},{"krate":0,"index":2877}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":60646,"byte_end":60660,"line_start":1821,"line_end":1821,"column_start":35,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":60670,"byte_end":60684,"line_start":1823,"line_end":1823,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2881},{"krate":0,"index":2882},{"krate":0,"index":2883}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":62094,"byte_end":62108,"line_start":1866,"line_end":1866,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2885}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Inherent","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":66106,"byte_end":66114,"line_start":1980,"line_end":1980,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2888},{"krate":0,"index":2892},{"krate":0,"index":2893},{"krate":0,"index":2895},{"krate":0,"index":2897},{"krate":0,"index":2899}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":79380,"byte_end":79394,"line_start":2395,"line_end":2395,"column_start":36,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2916}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":1805,"byte_end":1814,"line_start":67,"line_end":67,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":2669}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":82480,"byte_end":82486,"line_start":26,"line_end":26,"column_start":21,"column_end":27},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":2917},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":82781,"byte_end":82787,"line_start":39,"line_end":39,"column_start":6,"column_end":12},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":2917},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":105511,"byte_end":105520,"line_start":751,"line_end":751,"column_start":10,"column_end":19},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":113},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":106359,"byte_end":106368,"line_start":782,"line_end":782,"column_start":19,"column_end":28},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":113},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":107007,"byte_end":107017,"line_start":807,"line_end":807,"column_start":6,"column_end":16},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":2922},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":107284,"byte_end":107294,"line_start":817,"line_end":817,"column_start":15,"column_end":25},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":2922},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":107546,"byte_end":107564,"line_start":829,"line_end":829,"column_start":23,"column_end":41},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":131},"to":{"krate":2,"index":5311}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":108608,"byte_end":108614,"line_start":868,"line_end":868,"column_start":20,"column_end":26},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":2917},"to":{"krate":2,"index":1770}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":108741,"byte_end":108747,"line_start":874,"line_end":874,"column_start":13,"column_end":19},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":2917},"to":{"krate":2,"index":1775}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":108766,"byte_end":108772,"line_start":876,"line_end":876,"column_start":15,"column_end":21},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":2917},"to":{"krate":2,"index":6794}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":109004,"byte_end":109008,"line_start":888,"line_end":888,"column_start":20,"column_end":24},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":2927},"to":{"krate":2,"index":1770}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":109131,"byte_end":109135,"line_start":894,"line_end":894,"column_start":13,"column_end":17},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":2927},"to":{"krate":2,"index":1775}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":109160,"byte_end":109164,"line_start":896,"line_end":896,"column_start":21,"column_end":25},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":2927},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":110141,"byte_end":110152,"line_start":928,"line_end":928,"column_start":36,"column_end":47},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":2932},"to":{"krate":2,"index":1963}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":110586,"byte_end":110590,"line_start":943,"line_end":943,"column_start":6,"column_end":10},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":2927},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":122266,"byte_end":122290,"line_start":1304,"line_end":1304,"column_start":6,"column_end":30},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":2970},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":122641,"byte_end":122664,"line_start":1323,"line_end":1323,"column_start":19,"column_end":42},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":199},"to":{"krate":2,"index":5311}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":123041,"byte_end":123064,"line_start":1338,"line_end":1338,"column_start":28,"column_end":51},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":199},"to":{"krate":2,"index":5265}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":123353,"byte_end":123367,"line_start":1351,"line_end":1351,"column_start":6,"column_end":20},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":208},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":123902,"byte_end":123916,"line_start":1368,"line_end":1368,"column_start":23,"column_end":37},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":208},"to":{"krate":2,"index":6611}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":124354,"byte_end":124361,"line_start":1386,"line_end":1386,"column_start":6,"column_end":13},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":214},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":125468,"byte_end":125491,"line_start":1424,"line_end":1424,"column_start":19,"column_end":42},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":221},"to":{"krate":2,"index":5311}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":126186,"byte_end":126211,"line_start":1454,"line_end":1454,"column_start":19,"column_end":44},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":231},"to":{"krate":2,"index":5311}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":126934,"byte_end":126938,"line_start":1483,"line_end":1483,"column_start":6,"column_end":10},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":238},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":127725,"byte_end":127730,"line_start":1513,"line_end":1513,"column_start":6,"column_end":11},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":244},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":128220,"byte_end":128225,"line_start":1529,"line_end":1529,"column_start":21,"column_end":26},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":244},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":128347,"byte_end":128352,"line_start":1535,"line_end":1535,"column_start":15,"column_end":20},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":244},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":128786,"byte_end":128801,"line_start":1557,"line_end":1557,"column_start":21,"column_end":36},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":252},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":128924,"byte_end":128939,"line_start":1563,"line_end":1563,"column_start":6,"column_end":21},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":252},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":130847,"byte_end":130862,"line_start":1629,"line_end":1629,"column_start":15,"column_end":30},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":252},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":131098,"byte_end":131108,"line_start":1642,"line_end":1642,"column_start":6,"column_end":16},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":266},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":131599,"byte_end":131609,"line_start":1658,"line_end":1658,"column_start":15,"column_end":25},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":266},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":132016,"byte_end":132027,"line_start":1676,"line_end":1676,"column_start":6,"column_end":17},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":273},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":132583,"byte_end":132594,"line_start":1694,"line_end":1694,"column_start":21,"column_end":32},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":273},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":140223,"byte_end":140233,"line_start":1955,"line_end":1955,"column_start":6,"column_end":16},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":2991},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":143070,"byte_end":143080,"line_start":2047,"line_end":2047,"column_start":15,"column_end":25},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":2991},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\clang.rs","byte_start":143391,"byte_end":143401,"line_start":2062,"line_end":2062,"column_start":6,"column_end":16},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":2995},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\error.rs","byte_start":291370,"byte_end":291375,"line_start":16,"line_end":16,"column_start":23,"column_end":28},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":3000},"to":{"krate":2,"index":6611}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\error.rs","byte_start":291817,"byte_end":291822,"line_start":30,"line_end":30,"column_start":23,"column_end":28},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":3000},"to":{"krate":1,"index":1725}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\impl_debug.rs","byte_start":303336,"byte_end":303345,"line_start":68,"line_end":68,"column_start":28,"column_end":37},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":3475},"to":{"krate":0,"index":377}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\impl_debug.rs","byte_start":303701,"byte_end":303713,"line_start":84,"line_end":84,"column_start":28,"column_end":40},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":3437},"to":{"krate":0,"index":377}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\impl_debug.rs","byte_start":304575,"byte_end":304579,"line_start":113,"line_end":113,"column_start":28,"column_end":32},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":4003},"to":{"krate":0,"index":377}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\struct_layout.rs","byte_start":315632,"byte_end":315651,"line_start":82,"line_end":82,"column_start":10,"column_end":29},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":3022},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":148194,"byte_end":148207,"line_start":146,"line_end":146,"column_start":10,"column_end":23},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":524},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":150637,"byte_end":150650,"line_start":235,"line_end":235,"column_start":25,"column_end":38},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":524},"to":{"krate":2,"index":2242}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":150802,"byte_end":150815,"line_start":243,"line_end":243,"column_start":28,"column_end":41},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":524},"to":{"krate":2,"index":2255}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":151107,"byte_end":151118,"line_start":255,"line_end":255,"column_start":29,"column_end":40},"kind":{"Impl":{"id":46}},"from":{"krate":18,"index":755},"to":{"krate":0,"index":563}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":151674,"byte_end":151685,"line_start":275,"line_end":275,"column_start":52,"column_end":63},"kind":{"Impl":{"id":47}},"from":{"krate":18,"index":755},"to":{"krate":0,"index":567}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":153488,"byte_end":153492,"line_start":338,"line_end":338,"column_start":24,"column_end":28},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":4003},"to":{"krate":0,"index":572}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":154928,"byte_end":154934,"line_start":387,"line_end":387,"column_start":24,"column_end":30},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":4103},"to":{"krate":0,"index":572}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":157870,"byte_end":157873,"line_start":478,"line_end":478,"column_start":24,"column_end":27},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":4337},"to":{"krate":0,"index":572}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":162333,"byte_end":162337,"line_start":604,"line_end":604,"column_start":24,"column_end":28},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":4224},"to":{"krate":0,"index":572}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":173526,"byte_end":173532,"line_start":887,"line_end":887,"column_start":10,"column_end":16},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":600},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":173820,"byte_end":173826,"line_start":901,"line_end":901,"column_start":28,"column_end":34},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":600},"to":{"krate":0,"index":572}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":174462,"byte_end":174468,"line_start":924,"line_end":924,"column_start":32,"column_end":38},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":600},"to":{"krate":0,"index":1979}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":174644,"byte_end":174650,"line_start":930,"line_end":930,"column_start":26,"column_end":32},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":600},"to":{"krate":0,"index":745}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":174956,"byte_end":174977,"line_start":945,"line_end":945,"column_start":24,"column_end":45},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":4130},"to":{"krate":0,"index":572}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":178075,"byte_end":178080,"line_start":1036,"line_end":1036,"column_start":31,"column_end":36},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":3443},"to":{"krate":0,"index":624}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":179480,"byte_end":179489,"line_start":1088,"line_end":1088,"column_start":31,"column_end":40},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":3475},"to":{"krate":0,"index":624}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":184299,"byte_end":184311,"line_start":1240,"line_end":1240,"column_start":6,"column_end":18},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":3437},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":184620,"byte_end":184628,"line_start":1253,"line_end":1253,"column_start":6,"column_end":14},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":3452},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":185999,"byte_end":186011,"line_start":1294,"line_end":1294,"column_start":31,"column_end":43},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":3437},"to":{"krate":0,"index":624}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":190124,"byte_end":190132,"line_start":1428,"line_end":1428,"column_start":31,"column_end":39},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":3452},"to":{"krate":0,"index":624}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":193609,"byte_end":193617,"line_start":1529,"line_end":1529,"column_start":24,"column_end":32},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":3510},"to":{"krate":0,"index":572}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":214717,"byte_end":214723,"line_start":2121,"line_end":2121,"column_start":24,"column_end":30},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":3431},"to":{"krate":0,"index":674}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":220739,"byte_end":220752,"line_start":2310,"line_end":2310,"column_start":6,"column_end":19},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":3053},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":221179,"byte_end":221192,"line_start":2328,"line_end":2328,"column_start":18,"column_end":31},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":3053},"to":{"krate":2,"index":2033}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":221297,"byte_end":221310,"line_start":2334,"line_end":2334,"column_start":28,"column_end":41},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":3053},"to":{"krate":2,"index":8578}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":223001,"byte_end":223012,"line_start":2388,"line_end":2388,"column_start":10,"column_end":21},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":688},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":232224,"byte_end":232228,"line_start":2669,"line_end":2669,"column_start":24,"column_end":28},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":3815},"to":{"krate":0,"index":572}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":242909,"byte_end":242923,"line_start":2967,"line_end":2967,"column_start":6,"column_end":20},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":3077},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":243249,"byte_end":243263,"line_start":2978,"line_end":2978,"column_start":18,"column_end":32},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":3077},"to":{"krate":2,"index":2033}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":243373,"byte_end":243387,"line_start":2984,"line_end":2984,"column_start":28,"column_end":42},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":3077},"to":{"krate":2,"index":8578}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":245404,"byte_end":245415,"line_start":3040,"line_end":3040,"column_start":17,"column_end":28},"kind":"SuperTrait","from":{"krate":0,"index":734},"to":{"krate":0,"index":739}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":245846,"byte_end":245847,"line_start":3056,"line_end":3056,"column_start":22,"column_end":23},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":744},"to":{"krate":0,"index":739}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":246782,"byte_end":246793,"line_start":3080,"line_end":3080,"column_start":28,"column_end":39},"kind":"SuperTrait","from":{"krate":0,"index":745},"to":{"krate":0,"index":748}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":246796,"byte_end":246807,"line_start":3080,"line_end":3080,"column_start":42,"column_end":53},"kind":"SuperTrait","from":{"krate":0,"index":734},"to":{"krate":0,"index":748}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":247047,"byte_end":247048,"line_start":3090,"line_end":3090,"column_start":36,"column_end":37},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":753},"to":{"krate":0,"index":748}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":248555,"byte_end":248566,"line_start":3128,"line_end":3128,"column_start":25,"column_end":36},"kind":"SuperTrait","from":{"krate":0,"index":745},"to":{"krate":0,"index":757}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":248569,"byte_end":248577,"line_start":3128,"line_end":3128,"column_start":39,"column_end":47},"kind":"SuperTrait","from":{"krate":0,"index":739},"to":{"krate":0,"index":757}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":248792,"byte_end":248793,"line_start":3138,"line_end":3138,"column_start":33,"column_end":34},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":762},"to":{"krate":0,"index":757}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":249138,"byte_end":249139,"line_start":3154,"line_end":3154,"column_start":25,"column_end":26},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":767},"to":{"krate":0,"index":734}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":249414,"byte_end":249415,"line_start":3169,"line_end":3169,"column_start":25,"column_end":26},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":771},"to":{"krate":0,"index":745}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":249705,"byte_end":249709,"line_start":3184,"line_end":3184,"column_start":22,"column_end":26},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":4003},"to":{"krate":0,"index":734}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":249941,"byte_end":249945,"line_start":3196,"line_end":3196,"column_start":22,"column_end":26},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":4003},"to":{"krate":0,"index":745}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":250195,"byte_end":250199,"line_start":3208,"line_end":3208,"column_start":22,"column_end":26},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":4224},"to":{"krate":0,"index":734}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":250443,"byte_end":250447,"line_start":3220,"line_end":3220,"column_start":22,"column_end":26},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":4224},"to":{"krate":0,"index":745}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":258618,"byte_end":258639,"line_start":3416,"line_end":3416,"column_start":22,"column_end":43},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":4130},"to":{"krate":0,"index":734}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":258926,"byte_end":258947,"line_start":3430,"line_end":3430,"column_start":22,"column_end":43},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":4130},"to":{"krate":0,"index":745}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":261273,"byte_end":261284,"line_start":3497,"line_end":3497,"column_start":22,"column_end":33},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":3912},"to":{"krate":0,"index":745}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":262098,"byte_end":262106,"line_start":3522,"line_end":3522,"column_start":24,"column_end":32},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":3882},"to":{"krate":0,"index":572}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\codegen\\mod.rs","byte_start":267946,"byte_end":267959,"line_start":3701,"line_end":3701,"column_start":24,"column_end":37},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":4111},"to":{"krate":0,"index":572}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\features.rs","byte_start":333105,"byte_end":333117,"line_start":230,"line_end":230,"column_start":18,"column_end":30},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":3163},"to":{"krate":2,"index":2033}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\template_params.rs","byte_start":355894,"byte_end":355916,"line_start":164,"line_end":164,"column_start":12,"column_end":34},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":3192},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\template_params.rs","byte_start":363913,"byte_end":363935,"line_start":374,"line_end":374,"column_start":34,"column_end":56},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":3192},"to":{"krate":0,"index":1232}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\template_params.rs","byte_start":372255,"byte_end":372262,"line_start":596,"line_end":596,"column_start":51,"column_end":58},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":2718},"to":{"krate":2,"index":1963}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\derive.rs","byte_start":376291,"byte_end":376303,"line_start":106,"line_end":106,"column_start":12,"column_end":24},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":3222},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\derive.rs","byte_start":388948,"byte_end":388959,"line_start":444,"line_end":444,"column_start":6,"column_end":17},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":3206},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\derive.rs","byte_start":394209,"byte_end":394220,"line_start":609,"line_end":609,"column_start":23,"column_end":34},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":3206},"to":{"krate":2,"index":6611}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\derive.rs","byte_start":394627,"byte_end":394639,"line_start":622,"line_end":622,"column_start":34,"column_end":46},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":3222},"to":{"krate":0,"index":1232}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\derive.rs","byte_start":397554,"byte_end":397561,"line_start":709,"line_end":709,"column_start":41,"column_end":48},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":2718},"to":{"krate":2,"index":1963}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\has_vtable.rs","byte_start":398949,"byte_end":398964,"line_start":25,"line_end":25,"column_start":18,"column_end":33},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":3235},"to":{"krate":2,"index":2033}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\has_vtable.rs","byte_start":399036,"byte_end":399051,"line_start":31,"line_end":31,"column_start":6,"column_end":21},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":3235},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\has_vtable.rs","byte_start":399210,"byte_end":399225,"line_start":38,"line_end":38,"column_start":21,"column_end":36},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":3235},"to":{"krate":2,"index":2171}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\has_vtable.rs","byte_start":399370,"byte_end":399385,"line_start":46,"line_end":46,"column_start":27,"column_end":42},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":3235},"to":{"krate":2,"index":2197}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\has_vtable.rs","byte_start":400733,"byte_end":400750,"line_start":80,"line_end":80,"column_start":12,"column_end":29},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":3257},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\has_vtable.rs","byte_start":402215,"byte_end":402232,"line_start":133,"line_end":133,"column_start":34,"column_end":51},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":3257},"to":{"krate":0,"index":1232}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\has_vtable.rs","byte_start":404831,"byte_end":404838,"line_start":215,"line_end":215,"column_start":46,"column_end":53},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":2718},"to":{"krate":2,"index":1963}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\has_destructor.rs","byte_start":407639,"byte_end":407660,"line_start":42,"line_end":42,"column_start":12,"column_end":33},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":3269},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\has_destructor.rs","byte_start":408553,"byte_end":408574,"line_start":69,"line_end":69,"column_start":34,"column_end":55},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":3269},"to":{"krate":0,"index":1232}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\has_destructor.rs","byte_start":412069,"byte_end":412076,"line_start":172,"line_end":172,"column_start":50,"column_end":57},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":2721},"to":{"krate":2,"index":1963}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\has_type_param_in_array.rs","byte_start":413894,"byte_end":413917,"line_start":42,"line_end":42,"column_start":12,"column_end":35},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":3280},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\has_type_param_in_array.rs","byte_start":415319,"byte_end":415342,"line_start":86,"line_end":86,"column_start":34,"column_end":57},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":3280},"to":{"krate":0,"index":1232}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\has_type_param_in_array.rs","byte_start":421045,"byte_end":421052,"line_start":248,"line_end":248,"column_start":52,"column_end":59},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":2721},"to":{"krate":2,"index":1963}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\has_float.rs","byte_start":422728,"byte_end":422736,"line_start":42,"line_end":42,"column_start":12,"column_end":20},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":3291},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\has_float.rs","byte_start":423934,"byte_end":423942,"line_start":80,"line_end":80,"column_start":34,"column_end":42},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":3291},"to":{"krate":0,"index":1232}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\has_float.rs","byte_start":429735,"byte_end":429742,"line_start":248,"line_end":248,"column_start":37,"column_end":44},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":2721},"to":{"krate":2,"index":1963}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\sizedness.rs","byte_start":431973,"byte_end":431988,"line_start":65,"line_end":65,"column_start":18,"column_end":33},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":3302},"to":{"krate":2,"index":2033}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\sizedness.rs","byte_start":432067,"byte_end":432082,"line_start":71,"line_end":71,"column_start":6,"column_end":21},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":3302},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\sizedness.rs","byte_start":432241,"byte_end":432256,"line_start":78,"line_end":78,"column_start":21,"column_end":36},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":3302},"to":{"krate":2,"index":2171}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\sizedness.rs","byte_start":432401,"byte_end":432416,"line_start":86,"line_end":86,"column_start":27,"column_end":42},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":3302},"to":{"krate":2,"index":2197}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\sizedness.rs","byte_start":433258,"byte_end":433275,"line_start":113,"line_end":113,"column_start":12,"column_end":29},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":3324},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\sizedness.rs","byte_start":434878,"byte_end":434895,"line_start":165,"line_end":165,"column_start":34,"column_end":51},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":3324},"to":{"krate":0,"index":1232}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\sizedness.rs","byte_start":440608,"byte_end":440615,"line_start":337,"line_end":337,"column_start":46,"column_end":53},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":2718},"to":{"krate":2,"index":1963}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\mod.rs","byte_start":338811,"byte_end":338816,"line_start":76,"line_end":76,"column_start":30,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":2050},"to":{"krate":0,"index":1232}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\mod.rs","byte_start":338824,"byte_end":338829,"line_start":76,"line_end":76,"column_start":43,"column_end":48},"kind":"SuperTrait","from":{"krate":2,"index":6606},"to":{"krate":0,"index":1232}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\mod.rs","byte_start":341115,"byte_end":341130,"line_start":133,"line_end":133,"column_start":18,"column_end":33},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":3333},"to":{"krate":2,"index":2033}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\mod.rs","byte_start":341219,"byte_end":341234,"line_start":139,"line_end":139,"column_start":21,"column_end":36},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":3333},"to":{"krate":2,"index":2171}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\analysis\\mod.rs","byte_start":341535,"byte_end":341550,"line_start":151,"line_end":151,"column_start":27,"column_end":42},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":3333},"to":{"krate":2,"index":2197}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\annotations.rs","byte_start":443923,"byte_end":443934,"line_start":74,"line_end":74,"column_start":18,"column_end":29},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":3366},"to":{"krate":2,"index":2033}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\annotations.rs","byte_start":444268,"byte_end":444279,"line_start":89,"line_end":89,"column_start":6,"column_end":17},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":3366},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":452744,"byte_end":452754,"line_start":55,"line_end":55,"column_start":6,"column_end":16},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":3409},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":453663,"byte_end":453669,"line_start":88,"line_end":88,"column_start":6,"column_end":12},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":3431},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":455769,"byte_end":455781,"line_start":172,"line_end":172,"column_start":6,"column_end":18},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":3437},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":456500,"byte_end":456505,"line_start":201,"line_end":201,"column_start":6,"column_end":11},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":3443},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":456852,"byte_end":456857,"line_start":213,"line_end":213,"column_start":16,"column_end":21},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":3443},"to":{"krate":0,"index":2423}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":457387,"byte_end":457392,"line_start":233,"line_end":233,"column_start":24,"column_end":29},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":3443},"to":{"krate":0,"index":1797}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":458601,"byte_end":458610,"line_start":273,"line_end":273,"column_start":24,"column_end":33},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":3475},"to":{"krate":0,"index":1797}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":458966,"byte_end":458974,"line_start":291,"line_end":291,"column_start":24,"column_end":32},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":3452},"to":{"krate":0,"index":1797}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":459946,"byte_end":459954,"line_start":331,"line_end":331,"column_start":6,"column_end":14},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":3452},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":462081,"byte_end":462089,"line_start":401,"line_end":401,"column_start":23,"column_end":31},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":3452},"to":{"krate":0,"index":1331}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":462913,"byte_end":462921,"line_start":438,"line_end":438,"column_start":6,"column_end":14},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":3459},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":463461,"byte_end":463469,"line_start":461,"line_end":461,"column_start":23,"column_end":31},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":3459},"to":{"krate":0,"index":1331}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":472013,"byte_end":472023,"line_start":717,"line_end":717,"column_start":18,"column_end":28},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":3464},"to":{"krate":2,"index":2033}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":472130,"byte_end":472140,"line_start":723,"line_end":723,"column_start":6,"column_end":16},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":3464},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":476702,"byte_end":476712,"line_start":854,"line_end":854,"column_start":16,"column_end":26},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":3464},"to":{"krate":0,"index":2423}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":478019,"byte_end":478028,"line_start":902,"line_end":902,"column_start":23,"column_end":32},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":3475},"to":{"krate":0,"index":1331}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":479180,"byte_end":479184,"line_start":960,"line_end":960,"column_start":6,"column_end":10},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":3502},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":482645,"byte_end":482653,"line_start":1066,"line_end":1066,"column_start":6,"column_end":14},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":3510},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":504605,"byte_end":504613,"line_start":1652,"line_end":1652,"column_start":24,"column_end":32},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":3510},"to":{"krate":0,"index":1797}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":506037,"byte_end":506045,"line_start":1705,"line_end":1705,"column_start":19,"column_end":27},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":3510},"to":{"krate":0,"index":1984}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":508235,"byte_end":508243,"line_start":1758,"line_end":1758,"column_start":29,"column_end":37},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":3510},"to":{"krate":0,"index":2342}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\comp.rs","byte_start":508382,"byte_end":508390,"line_start":1764,"line_end":1764,"column_start":16,"column_end":24},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":3510},"to":{"krate":0,"index":2423}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":515926,"byte_end":515932,"line_start":195,"line_end":195,"column_start":6,"column_end":12},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":3529},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":516091,"byte_end":516097,"line_start":202,"line_end":202,"column_start":38,"column_end":44},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":3529},"to":{"krate":2,"index":1770}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":516271,"byte_end":516272,"line_start":212,"line_end":212,"column_start":28,"column_end":29},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":1552},"to":{"krate":0,"index":1762}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":516483,"byte_end":516484,"line_start":221,"line_end":221,"column_start":30,"column_end":31},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":1555},"to":{"krate":0,"index":1766}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":516698,"byte_end":516699,"line_start":230,"line_end":230,"column_start":27,"column_end":28},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":1558},"to":{"krate":0,"index":1764}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":516904,"byte_end":516905,"line_start":239,"line_end":239,"column_start":27,"column_end":28},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":1561},"to":{"krate":0,"index":1768}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":517116,"byte_end":517117,"line_start":248,"line_end":248,"column_start":33,"column_end":34},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":1564},"to":{"krate":0,"index":1772}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":517404,"byte_end":517405,"line_start":259,"line_end":259,"column_start":32,"column_end":33},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":1567},"to":{"krate":0,"index":1770}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":517683,"byte_end":517684,"line_start":270,"line_end":270,"column_start":25,"column_end":26},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":1570},"to":{"krate":0,"index":1774}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":517993,"byte_end":517994,"line_start":282,"line_end":282,"column_start":26,"column_end":27},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":1573},"to":{"krate":0,"index":1776}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":525409,"byte_end":525434,"line_start":477,"line_end":477,"column_start":25,"column_end":50},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":1575},"to":{"krate":2,"index":5311}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":525740,"byte_end":525765,"line_start":493,"line_end":493,"column_start":12,"column_end":37},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":1575},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":527067,"byte_end":527081,"line_start":541,"line_end":541,"column_start":6,"column_end":20},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":3714},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":606224,"byte_end":606230,"line_start":2651,"line_end":2651,"column_start":6,"column_end":12},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":3529},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":606383,"byte_end":606395,"line_start":2658,"line_end":2658,"column_start":21,"column_end":33},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":3751},"to":{"krate":2,"index":1963}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":606506,"byte_end":606518,"line_start":2667,"line_end":2667,"column_start":6,"column_end":18},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":3751},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":608408,"byte_end":608419,"line_start":2727,"line_end":2727,"column_start":6,"column_end":17},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":3760},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\context.rs","byte_start":608953,"byte_end":608964,"line_start":2746,"line_end":2746,"column_start":29,"column_end":40},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":3760},"to":{"krate":0,"index":2342}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\derive.rs","byte_start":613770,"byte_end":613779,"line_start":110,"line_end":110,"column_start":18,"column_end":27},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":3775},"to":{"krate":2,"index":2033}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\derive.rs","byte_start":613851,"byte_end":613860,"line_start":116,"line_end":116,"column_start":6,"column_end":15},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":3775},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\derive.rs","byte_start":614019,"byte_end":614028,"line_start":123,"line_end":123,"column_start":21,"column_end":30},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":3775},"to":{"krate":2,"index":2171}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\derive.rs","byte_start":614162,"byte_end":614171,"line_start":131,"line_end":131,"column_start":27,"column_end":36},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":3775},"to":{"krate":2,"index":2197}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\enum_ty.rs","byte_start":617911,"byte_end":617915,"line_start":38,"line_end":38,"column_start":6,"column_end":10},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":3815},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\enum_ty.rs","byte_start":624573,"byte_end":624584,"line_start":244,"line_end":244,"column_start":6,"column_end":17},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":3820},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\function.rs","byte_start":626546,"byte_end":626558,"line_start":30,"line_end":30,"column_start":6,"column_end":18},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":3857},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\function.rs","byte_start":628704,"byte_end":628712,"line_start":97,"line_end":97,"column_start":6,"column_end":14},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":3882},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\function.rs","byte_start":629693,"byte_end":629701,"line_start":143,"line_end":143,"column_start":24,"column_end":32},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":3882},"to":{"krate":0,"index":1797}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\function.rs","byte_start":630591,"byte_end":630594,"line_start":185,"line_end":185,"column_start":6,"column_end":9},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":3891},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\function.rs","byte_start":630810,"byte_end":630813,"line_start":195,"line_end":195,"column_start":26,"column_end":29},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":3891},"to":{"krate":16,"index":77}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\function.rs","byte_start":636011,"byte_end":636022,"line_start":347,"line_end":347,"column_start":6,"column_end":17},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":3912},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\function.rs","byte_start":643786,"byte_end":643794,"line_start":562,"line_end":562,"column_start":29,"column_end":37},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":3882},"to":{"krate":0,"index":2628}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\function.rs","byte_start":645987,"byte_end":645998,"line_start":627,"line_end":627,"column_start":16,"column_end":27},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":3912},"to":{"krate":0,"index":2423}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\int.rs","byte_start":647863,"byte_end":647870,"line_start":88,"line_end":88,"column_start":6,"column_end":13},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":3920},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":652956,"byte_end":652972,"line_start":110,"line_end":110,"column_start":14,"column_end":30},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":3997},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":653384,"byte_end":653401,"line_start":131,"line_end":131,"column_start":10,"column_end":27},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":1994},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":653643,"byte_end":653660,"line_start":141,"line_end":141,"column_start":23,"column_end":40},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":1994},"to":{"krate":2,"index":5311}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":654090,"byte_end":654091,"line_start":160,"line_end":160,"column_start":29,"column_end":30},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":2008},"to":{"krate":0,"index":2349}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":654366,"byte_end":654370,"line_start":175,"line_end":175,"column_start":26,"column_end":30},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":4003},"to":{"krate":0,"index":2349}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":654589,"byte_end":654597,"line_start":187,"line_end":187,"column_start":26,"column_end":34},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":4048},"to":{"krate":0,"index":2349}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":654995,"byte_end":654996,"line_start":204,"line_end":204,"column_start":31,"column_end":32},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":2018},"to":{"krate":0,"index":1979}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":655308,"byte_end":655309,"line_start":217,"line_end":217,"column_start":31,"column_end":32},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":2021},"to":{"krate":0,"index":1981}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":655925,"byte_end":655926,"line_start":241,"line_end":241,"column_start":27,"column_end":28},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":2025},"to":{"krate":0,"index":1991}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":656118,"byte_end":656122,"line_start":250,"line_end":250,"column_start":24,"column_end":28},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":4003},"to":{"krate":0,"index":1991}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":656266,"byte_end":656268,"line_start":256,"line_end":256,"column_start":20,"column_end":22},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":2032},"to":{"krate":0,"index":2423}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":656519,"byte_end":656523,"line_start":270,"line_end":270,"column_start":16,"column_end":20},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":4003},"to":{"krate":0,"index":2423}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":658425,"byte_end":658429,"line_start":316,"line_end":316,"column_start":25,"column_end":29},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":4003},"to":{"krate":0,"index":1762}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":658570,"byte_end":658574,"line_start":322,"line_end":322,"column_start":27,"column_end":31},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":4003},"to":{"krate":0,"index":1766}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":658716,"byte_end":658720,"line_start":328,"line_end":328,"column_start":24,"column_end":28},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":4003},"to":{"krate":0,"index":1764}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":658856,"byte_end":658860,"line_start":334,"line_end":334,"column_start":24,"column_end":28},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":4003},"to":{"krate":0,"index":1768}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":659002,"byte_end":659006,"line_start":340,"line_end":340,"column_start":30,"column_end":34},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":4003},"to":{"krate":0,"index":1772}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":659159,"byte_end":659163,"line_start":346,"line_end":346,"column_start":29,"column_end":33},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":4003},"to":{"krate":0,"index":1770}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":659307,"byte_end":659311,"line_start":352,"line_end":352,"column_start":22,"column_end":26},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":4003},"to":{"krate":0,"index":1774}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":659442,"byte_end":659446,"line_start":358,"line_end":358,"column_start":23,"column_end":27},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":4003},"to":{"krate":0,"index":1776}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":661823,"byte_end":661827,"line_start":423,"line_end":423,"column_start":24,"column_end":28},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":4003},"to":{"krate":2,"index":1954}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":661895,"byte_end":661899,"line_start":429,"line_end":429,"column_start":6,"column_end":10},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":4003},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":683507,"byte_end":683508,"line_start":1060,"line_end":1060,"column_start":22,"column_end":23},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":2122},"to":{"krate":0,"index":1984}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":683840,"byte_end":683844,"line_start":1075,"line_end":1075,"column_start":19,"column_end":23},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":4003},"to":{"krate":0,"index":1984}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":684261,"byte_end":684262,"line_start":1089,"line_end":1089,"column_start":23,"column_end":24},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":2130},"to":{"krate":0,"index":1043}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":684907,"byte_end":684911,"line_start":1112,"line_end":1112,"column_start":20,"column_end":24},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":4003},"to":{"krate":0,"index":1043}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":685142,"byte_end":685143,"line_start":1122,"line_end":1122,"column_start":23,"column_end":24},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":2139},"to":{"krate":0,"index":1216}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":685422,"byte_end":685426,"line_start":1133,"line_end":1133,"column_start":20,"column_end":24},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":4003},"to":{"krate":0,"index":1216}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":685570,"byte_end":685571,"line_start":1139,"line_end":1139,"column_start":33,"column_end":34},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":2145},"to":{"krate":0,"index":1987}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":685887,"byte_end":685891,"line_start":1152,"line_end":1152,"column_start":30,"column_end":34},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":4003},"to":{"krate":0,"index":1987}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":686169,"byte_end":686170,"line_start":1162,"line_end":1162,"column_start":22,"column_end":23},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":2150},"to":{"krate":0,"index":1989}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":686447,"byte_end":686451,"line_start":1175,"line_end":1175,"column_start":19,"column_end":23},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":4003},"to":{"krate":0,"index":1989}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":686761,"byte_end":686765,"line_start":1188,"line_end":1188,"column_start":24,"column_end":28},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":4003},"to":{"krate":0,"index":1797}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":687320,"byte_end":687321,"line_start":1213,"line_end":1213,"column_start":32,"column_end":33},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":2159},"to":{"krate":0,"index":2342}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":687577,"byte_end":687581,"line_start":1223,"line_end":1223,"column_start":29,"column_end":33},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":4003},"to":{"krate":0,"index":2342}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":687739,"byte_end":687747,"line_start":1229,"line_end":1229,"column_start":29,"column_end":37},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":4048},"to":{"krate":0,"index":2342}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":688977,"byte_end":688981,"line_start":1269,"line_end":1269,"column_start":26,"column_end":30},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":4003},"to":{"krate":0,"index":2630}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":710227,"byte_end":710231,"line_start":1868,"line_end":1868,"column_start":28,"column_end":32},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":4003},"to":{"krate":0,"index":1979}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":710862,"byte_end":710866,"line_start":1889,"line_end":1889,"column_start":28,"column_end":32},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":4003},"to":{"krate":0,"index":1981}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item.rs","byte_start":712335,"byte_end":712346,"line_start":1941,"line_end":1941,"column_start":10,"column_end":21},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":4039},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item_kind.rs","byte_start":713833,"byte_end":713841,"line_start":28,"line_end":28,"column_start":6,"column_end":14},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":4048},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\item_kind.rs","byte_start":716781,"byte_end":716789,"line_start":129,"line_end":129,"column_start":24,"column_end":32},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":4048},"to":{"krate":0,"index":1797}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\layout.rs","byte_start":718277,"byte_end":718283,"line_start":35,"line_end":35,"column_start":6,"column_end":12},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":4063},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\layout.rs","byte_start":719991,"byte_end":719997,"line_start":99,"line_end":99,"column_start":6,"column_end":12},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":4076},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\module.rs","byte_start":722366,"byte_end":722372,"line_start":31,"line_end":31,"column_start":6,"column_end":12},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":4103},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\module.rs","byte_start":723120,"byte_end":723126,"line_start":62,"line_end":62,"column_start":24,"column_end":30},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":4103},"to":{"krate":0,"index":1797}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\module.rs","byte_start":723399,"byte_end":723405,"line_start":75,"line_end":75,"column_start":29,"column_end":35},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":4103},"to":{"krate":0,"index":2628}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\objc.rs","byte_start":725745,"byte_end":725758,"line_start":66,"line_end":66,"column_start":6,"column_end":19},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":4111},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\objc.rs","byte_start":730807,"byte_end":730817,"line_start":209,"line_end":209,"column_start":6,"column_end":16},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":4122},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\objc.rs","byte_start":733421,"byte_end":733434,"line_start":305,"line_end":305,"column_start":16,"column_end":29},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":4111},"to":{"krate":0,"index":2423}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\template.rs","byte_start":737439,"byte_end":737444,"line_start":102,"line_end":102,"column_start":31,"column_end":36},"kind":"SuperTrait","from":{"krate":2,"index":2050},"to":{"krate":0,"index":2342}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\template.rs","byte_start":740996,"byte_end":741017,"line_start":198,"line_end":198,"column_start":6,"column_end":27},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":4130},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\template.rs","byte_start":744132,"byte_end":744153,"line_start":293,"line_end":293,"column_start":19,"column_end":40},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":4130},"to":{"krate":0,"index":1984}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\template.rs","byte_start":745344,"byte_end":745365,"line_start":329,"line_end":329,"column_start":16,"column_end":37},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":4130},"to":{"krate":0,"index":2423}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\traversal.rs","byte_start":746249,"byte_end":746253,"line_start":20,"line_end":20,"column_start":6,"column_end":10},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":4137},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\traversal.rs","byte_start":746446,"byte_end":746450,"line_start":27,"line_end":27,"column_start":23,"column_end":27},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":4137},"to":{"krate":2,"index":1960}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\traversal.rs","byte_start":753364,"byte_end":753371,"line_start":255,"line_end":255,"column_start":39,"column_end":46},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":2154},"to":{"krate":0,"index":2396}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\traversal.rs","byte_start":753882,"byte_end":753887,"line_start":271,"line_end":271,"column_start":39,"column_end":44},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":4216},"to":{"krate":0,"index":2396}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\traversal.rs","byte_start":755129,"byte_end":755136,"line_start":310,"line_end":310,"column_start":27,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":2033},"to":{"krate":0,"index":2408}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\traversal.rs","byte_start":755344,"byte_end":755347,"line_start":318,"line_end":318,"column_start":25,"column_end":28},"kind":{"Impl":{"id":237}},"from":{"krate":5,"index":4754},"to":{"krate":0,"index":2408}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\traversal.rs","byte_start":755524,"byte_end":755532,"line_start":328,"line_end":328,"column_start":25,"column_end":33},"kind":{"Impl":{"id":238}},"from":{"krate":5,"index":3002},"to":{"krate":0,"index":2408}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\traversal.rs","byte_start":756111,"byte_end":756112,"line_start":349,"line_end":349,"column_start":20,"column_end":21},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":2421},"to":{"krate":0,"index":2417}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\traversal.rs","byte_start":757718,"byte_end":757731,"line_start":403,"line_end":403,"column_start":5,"column_end":18},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":2427},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\traversal.rs","byte_start":758572,"byte_end":758585,"line_start":437,"line_end":437,"column_start":9,"column_end":22},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":2427},"to":{"krate":0,"index":2417}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\traversal.rs","byte_start":759154,"byte_end":759167,"line_start":458,"line_end":458,"column_start":9,"column_end":22},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":2427},"to":{"krate":2,"index":5311}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":762083,"byte_end":762087,"line_start":45,"line_end":45,"column_start":6,"column_end":10},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":4224},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":772446,"byte_end":772450,"line_start":392,"line_end":392,"column_start":19,"column_end":23},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":4224},"to":{"krate":0,"index":1984}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":772937,"byte_end":772941,"line_start":408,"line_end":408,"column_start":26,"column_end":30},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":4224},"to":{"krate":0,"index":2349}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":773167,"byte_end":773175,"line_start":420,"line_end":420,"column_start":26,"column_end":34},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":4248},"to":{"krate":0,"index":2349}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":773556,"byte_end":773560,"line_start":436,"line_end":436,"column_start":24,"column_end":28},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":4224},"to":{"krate":0,"index":1797}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":774291,"byte_end":774299,"line_start":465,"line_end":465,"column_start":24,"column_end":32},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":4248},"to":{"krate":0,"index":1797}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":774721,"byte_end":774729,"line_start":488,"line_end":488,"column_start":6,"column_end":14},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":4248},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":777245,"byte_end":777249,"line_start":566,"line_end":566,"column_start":29,"column_end":33},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":4224},"to":{"krate":0,"index":2342}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":777407,"byte_end":777415,"line_start":572,"line_end":572,"column_start":29,"column_end":37},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":4248},"to":{"krate":0,"index":2342}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":781324,"byte_end":781328,"line_start":711,"line_end":711,"column_start":6,"column_end":10},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":4224},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\ty.rs","byte_start":804974,"byte_end":804978,"line_start":1220,"line_end":1220,"column_start":16,"column_end":20},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":4224},"to":{"krate":0,"index":2423}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\var.rs","byte_start":808216,"byte_end":808219,"line_start":48,"line_end":48,"column_start":6,"column_end":9},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":4337},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\var.rs","byte_start":809178,"byte_end":809181,"line_start":93,"line_end":93,"column_start":24,"column_end":27},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":4337},"to":{"krate":0,"index":1797}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\ir\\var.rs","byte_start":810086,"byte_end":810089,"line_start":133,"line_end":133,"column_start":29,"column_end":32},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":4337},"to":{"krate":0,"index":2628}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\parse.rs","byte_start":820487,"byte_end":820492,"line_start":32,"line_end":32,"column_start":31,"column_end":36},"kind":"SuperTrait","from":{"krate":2,"index":2050},"to":{"krate":0,"index":2628}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\parse.rs","byte_start":820928,"byte_end":820933,"line_start":44,"line_end":44,"column_start":28,"column_end":33},"kind":"SuperTrait","from":{"krate":2,"index":2050},"to":{"krate":0,"index":2630}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\regex_set.rs","byte_start":823217,"byte_end":823225,"line_start":18,"line_end":18,"column_start":6,"column_end":14},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":4364},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\time.rs","byte_start":825480,"byte_end":825485,"line_start":12,"line_end":12,"column_start":10,"column_end":15},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":4373},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\time.rs","byte_start":826587,"byte_end":826592,"line_start":48,"line_end":48,"column_start":19,"column_end":24},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":4373},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\callbacks.rs","byte_start":827212,"byte_end":827232,"line_start":18,"line_end":18,"column_start":18,"column_end":38},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":4381},"to":{"krate":2,"index":2033}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\callbacks.rs","byte_start":827427,"byte_end":827432,"line_start":26,"line_end":26,"column_start":32,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":6606},"to":{"krate":0,"index":2678}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src\\callbacks.rs","byte_start":827435,"byte_end":827445,"line_start":26,"line_end":26,"column_start":40,"column_end":50},"kind":"SuperTrait","from":{"krate":1,"index":3931},"to":{"krate":0,"index":2678}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":3455,"byte_end":3468,"line_start":121,"line_end":121,"column_start":6,"column_end":19},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":4397},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":4358,"byte_end":4371,"line_start":153,"line_end":153,"column_start":18,"column_end":31},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":4397},"to":{"krate":2,"index":2033}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":5940,"byte_end":5947,"line_start":207,"line_end":207,"column_start":6,"column_end":13},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":4508},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":60646,"byte_end":60660,"line_start":1821,"line_end":1821,"column_start":35,"column_end":49},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":4516},"to":{"krate":1,"index":3931}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":60670,"byte_end":60684,"line_start":1823,"line_end":1823,"column_start":6,"column_end":20},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":4516},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":62094,"byte_end":62108,"line_start":1866,"line_end":1866,"column_start":18,"column_end":32},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":4516},"to":{"krate":2,"index":2033}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":66106,"byte_end":66114,"line_start":1980,"line_end":1980,"column_start":6,"column_end":14},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":4602},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Simon Palmer\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bindgen-0.54.0\\src/lib.rs","byte_start":79380,"byte_end":79394,"line_start":2395,"line_end":2395,"column_start":36,"column_end":50},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":4613},"to":{"krate":0,"index":2678}}]}